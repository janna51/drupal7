%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: New Mexico Club logo 2011 v1.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Cicia Lee
%%CreationDate: 3/16/11
%%BoundingBox: 0 0 171 132
%%HiResBoundingBox: 0 0 170.0278 131.0811
%%CropBox: 0 0 170.0278 131.0811
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 100 8%%BeginData: 12500 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45542F532F542FA92F542F532F8459532F542F842F542F537E542F53%2F542F532F542F5AFFFF2F532F542F5353FD06FF5A2F542F532F54FD06FF%7E542F532F542F532F542F5AFD04FF7E2F070D072F2FFFA8542F532F542F%5AFD06FF59532F542F532F542F532F847E532F542F532FFFFFFF2F542F53%2F7E2F060D067EA984060D062FA8A9070D2F84A82F062F7EA97E2F060D06%53535A2F0D06FFFFA82F0D060D53A8FD06FF7E53060D062F7EFD06FFA97E%0D060D065A535A290D2FFFFFFF530D067E7E7E060D7EFF7E2F060D065AA8%FD06FFA9530D060D075A535A070D53AF530D060D0684A8FFFF84060D2F84%FFA80D070D7EFFFF7E070D07FFA80D2FFFFFFF2F0D7EFFFFFF2F0D072FFD%04FF530DFFFFFFA8070D07FD09FFA80D070D7EFD09FF2F0D0753FD04FF2F%2FFFFF7E0D075AFFFFFF84077EFFFF590D070DFD0AFF070D07A8FD04FF07%5AFFFF530D070D7EFFFFFFA90D07FD04FF2F0D062FFFFFA80D060D595A06%A8FFFF7E0D2FFD04FF5A060D2FFD04FFA906FFFFFF7E0D0607FD0AFF0607%06A8FD09FF2F060D2FFD04FF7E06FFFF5A060D53FD04FF5359FFFF5A060D%06FD0AFF0D06077EFD04FF5A2FFFFFFF0607062FFFFFFF5306A8FD04FFA9%070D07A9FFFF530D072F0754FFFFFF5A0784FD04FF590D0753FD09FFA907%0D07FD0AFF0D070D84FD09FF2F0D0753FD08FF590D072FA8FD07FF590D07%0DFD0AFF070D07A9FD09FF7E070D07FFFFA9075AFD06FF53060D2FFFFFA9%060D060D7EFFFFFF062FFD05FF5A060D2FFFFFFF2F5AFD04FF7E0D060DFD%0AFF060D06A8FD09FF2F060D2FFFFFFF07A8FFFFFF7E060D060D53FD06FF%5A060D06FD0AFF0D060D7EFFFFA906FD05FFA90D060D53FF2F0DA8FD06FF%7E0D070D7EFFFF5A070D2FFFFFFF7E0D59FD05FF5A0D070D7EA95A0D5AFD%04FFA9070D07FD0AFF0D070D7EFD09FF2F0D072F7EA9530D84FD04FF2F07%0D070D077EFD04FF5A0D070DFD0AFF070D072F7EA82F0DFD06FF530D070D%7E0D53FD08FF060D0653FFFF7E07060D7EFFFF2F06FD06FF7E0607060D06%07067EFD04FF7E07060DFD0AFF060D06A8FD09FF2F0607060D060706A8FD%04FF842F060D0607065AFFFFFF7E060706FD0AFF07060D0607060D06FD06%FFA90607060D06FD09FF84070D07FFFF7E070D0753FFA9075AFD06FF5A0D%072FA9FFA82F5AFD04FFA9070D07FD0AFF0D070D84FD09FF2F0D072FFFFF%840D84FD05FFA97E0D0D070D077EFFFF5A0D070DFD0AFF070D075AFFFF5A%0DFD07FF5A070D075AFD09FFA82F060D53FF070D060D06A92F0DA8FD06FF%7E060D2FFFFFFF537EFD04FF7E0D060DFD0AFF060D06A8FD09FF53060D2F%FFFFFF2FA9FD08FF2F0D060D07FFFF7E060D06FD0AFF0D060D7EFFFFFF2F%FD07FF7E0D060D7EFD0AFF590D072F5A0D7E2F070D2F2F2FFD07FF590D07%53FD09FFA9070D07FD0AFF0D070D84FD09FF2F0D0753FD08FF7EFD05FF2F%0D070DFFFF590D070DFD0AFF070D07A9FD0BFFA9070D07A9FD0BFF060D06%0706FF5907060D067EFD07FF5A060D2FFD05FFA82F84FF7E0D0607FD06FF%2F7EFFFF060706A8FD05FF7E53FFFF2F060D2FFD05FF7E2F7E077EFD04FF%84060706FFFF5A060D06FD06FF5A7EFFFF0D06077EFD05FF595AFD04FF7E%0D06077EFD0BFF5A070D077EFFFF070D072FFD08FF530D072FFD05FF5A07%FFFFA9070D07A9FD04FF7E0D7EFFA90D070D7EFD04FFA9075AFFFF2F0D07%53FD05FF542FA9072FFD04FF7E0D0754FFFF590D070DA8FD04FF7E07A8FF%FF070D077EFD04FFA92F53FD04FFA9070D07A9FD0BFFA80D060DA8FFFF5A%060D53FD07FFA92F060D065A7EA87E53062FFFFF2F0D060D2FA87EA8532F%06A9FF7E060D062F7EA87E7E070D7EFFA80D060D067E7EA87E53065AFF0D%062FA8FFA82F060D84FFFF53060D06537EA87E5A060DA8FF7E0D060D0784%7EA87E2F067EFD04FF590D060D59FD0CFF2F0D53FFFFFFA90D07FD07FF2F%0D070D070D070D070D070D59A9070D070D070D070D070D072FFF0D070D07%0D070D070D070D07FF070D070D070D070D070D070D7EFF5A0D070D2F0D07%53A8FF7E0D070D070D070D070D070D2FA9070D070D070D070D070D070DFD%04FF070D070D070D07A9FD0AFFA853FD05FF7EA8FD07FFA9FD0AFFA8FFA8%FD0BFFA8FFA8FD0AFFA9FFA9FD0AFFA8FFFFFFA8A8597E7EA8FD04FFA8FD%0AFFA9A8FD0BFFA8FD04FFA9FD06FFA8FDFCFFFDFCFFFDFCFFFD11FFAF53%FD042FFF530D077EFFFF590D075AFFFF2F0D537E0D2F0D2F84FD05FFA85A%2F532F5AA9FF590D07532F0D7EFFFF5A072FA8FFA953075A530D07542F5A%2F0D2F7E070D592F0D7E075AFFFFFF5A077EFD04FF070D595A070D2F2F53%A92F0D07847E0D2FA9530D07A9FFFF53FD042FFFFFFF532F2F54A8FFFFFF%A9062FA8FFA82FA8FF062FFD04FF060DFD04FF06FFFF0D2FFF062FFD04FF%A80D2FFFFFFF292F84FF060DFFFF537EFFFFFF2F062FA8FFA80DFFFF062F%FFFF2FFF062FFF5A067E06A97E2FFD05FF0729FFFFFF530D2FFFFF0D07FF%A853FFFF060D848406FFFFFF062FFFA9062FA8FFA82FA8A9065AFFFF2F2F%84FFFF530D7EFFFFFFA8FFFF0D2FFD04FF2F07FD04FF2FFFFF0753FF2F07%FD04FF5A07A9FFFFFFA90753FF2F07FFFFA9A9FFFFFF2F5A075AFFFF2FFF%FF0D2FFF59FFFF7E077EA90D077EFF5A7EFD05FF070D7EFFFF2F0753FFFF%072FFF7EFFFFFFA907532FA9FFFFFF0D2FFF2F0D84FFFFFFA8FF2F0DA9FF%FFA90753FFFF2F06FD07FF062FFD04FF070DFD04FF07FFFF0D2FA90653FD%04FF070DFD05FF0D07FF070DFFFF2FFD04FF2FFF2F0653FF2FFFFF060D07%0DFFFFA80D07FF2F0D7EFF06FD05FFA92F0653FF7E530D2FFFFF0D062F06%FD04FF530653FD04FF062FFF0D06FD06FF0D06FD04FF0D07FFFF070DFD07%FF0D2FFD04FF2F07FD04FF2FFFFF072F2F0D2FA9FFFFFF2F07FD05FF072F%FF2F072F0D53FD04FF0DFFAF2F077E2FFFFF0D2FFF2FFFFFFF530D845A07%5A7E5AFD06FF2F5A07A92FFF0754FFFF072FFF2FFD04FF7E0D0DFD04FF0D%0DFF070DFD06FF070DFD04FF072FFFFF2F06A8FFFFFFA984FF062FFD04FF%2F07A8FFFFA929FFFF072FFFA80706FFFFFF2F0D7EFFFFFF84072FFF0707%FFFF59FD04FF2FFFFFA80D062FFFFF062FFFFFA8FFFFA9062F072F062FA8%FD05FFA853A807065AFF072FFFFF0706FFA8FFA8FFA82F530D2FFFFFFF06%2FFF530684FFFFFFA87E530684FFFFA8072FFFFFA82F2FFFFFFF2FA9FF0D%2FFFFFA9597E077EFFFF537EFFFF0730FFFF072FFFFFFFA90D2FA9FFFF5A%07A9FF2F07FD07FF07FFFFFF7E2F2FFFFF0D0DFFFF5A84FFFF5A077E7E0D%2FFD06FFA92FFF2F0DA9FF072FFFFF072FFFFF2FA9FF537EFF2F0D7EFFFF%0D2FFFA82F2FFFFFFF2FA9A80D2FFFFF7E07A9FFFFFF8453072F2953FF59%060D2F2F0684A959062F2F5AA8FF530D062F072FA8FD04FFA92F2F2F532F%A9FF5A060D2FFD05FF530D2FA9FFFF7E53A853060D2F2F06FFFFFF7E2FFF%FF0784FD06FF292F847E2FFF530D067E2F0D062F2F0D7E2F067EA82F060D%535A060D84FF845307532F53FFFF842F29532FA8FD49FFA9FDFCFFFDFCFF%FDFCFFFD50FFA82F2F532F2F2F532F2F2F532F2F2F532F2F2F532F2F2F5A%FFFFFF7E2F2F2F532F2F2F532F2F2F532F2F2F532F2F2F532F2F2F532F2F%2F532F2F2F532F2F2F532F2F2F532F2F2F532F2F2F5353FFFFFF7E2F2F53%2F2F2F532F2F2F532F2F2F532F2F2F532F2F53FD19FFA9070D070D070D07%0D070D070D070D070D070D070D070D2FFFFFFF590D070D070D070D070D07%0D070D070D070D070D070D070D070D070D070D070D070D070D070D070D07%0D070D070D070D0753FFFFFF7E070D070D070D070D070D070D070D070D07%0D070D0753FD19FF7E0D0607060D0607060D0607060D0607060D0607060D%062FFFFFFF5A060D0607060D0607060D0607060D0607060D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D06072FFFFFFF530D%0607060D0607060D0607060D0607060D0607060D2FFD19FFA92F532F2F07%0D070D070D070D070D070D070D07542F5353FFFFFF7E542F53070D070D07%0D070D070D070D070D070D070D070D070D070D070D070D070D070D070D07%0D070D070D070D2F532F7EFFFFFF842F532F2F070D070D070D070D070D07%0D070D0D542F5AFD1FFFA87E070D060D060D060D060D07A8FD0CFF7E2F06%0D060D060D060D060D077EA9FD0BFF7E2F060D060D060D060D060D077EA8%FD0BFFA82F060D060D060D060D062F59A9FD27FF530D070D070D070D0753%FD0EFFA92F070D070D070D070D07AFFD0FFF2F070D070D070D070D07A9FD%0EFF590D070D070D070D075AFD2BFF2F0D0607060D060707FD0FFFA80D06%07060D0607062FFD10FF5307060D0607060D067EFD0FFF53060D0607060D%062FFD2DFF2F0D070D070D070DA9FD0FFF5A0D070D070D070D2FFD10FF7E%070D070D070D0753FD10FF070D070D070D070DA8FD2DFF84060D060D060D%065AFD10FF070D060D060D062FFD10FF2F0D060D060D060DA8FD0FFF7E0D%060D060D060D53FD2FFF53070D070D070D07FD10FF84070D070D070D07A9%FD0EFFA92F070D070D070D53FD10FF53070D070D070D07FD30FF7E0D0607%060D060753FD10FF2F0607060D06072FFD0EFF5A060D0607060D06A9FD0F%FFA8060D0607060D065AFD31FF2F0D070D070D072FFD10FF7E0D070D070D%070DA9FD0DFF070D070D070D075AFD10FF2F0D070D070D072FA9FD31FFA8%060D060D060D067EFD10FF070D060D060D065AFD0CFF530D060D060D062F%A9FD0FFF7E0D060D060D060D53FD33FF53070D070D070D07FD10FF84070D%070D070D07FD0BFFA92F070D070D070D59FD10FF53070D070D070D07FD34%FF7E0D0607060D060753FD10FF2F0607060D06072FFD0AFF5A060D060706%0D06FD10FF7E060D0607060D065AFD35FF2F0D070D070D072FFD10FF7E0D%070D070D070D84FD09FF070D070D070D077EFD10FF0D0D070D070D072FA9%FD35FFA8060D060D060D067EFD10FF070D060D060D0653FD08FF530D060D%060D062FA9FD0FFF7E0D060D060D060D53FD37FF53070D070D070D07FD10%FFA9070D070D070D07A9FD06FFA92F070D070D070D59FD10FF2F070D070D%070D07FD38FF7E0D0607060D060753FD10FF2F0607060D06072FFD06FF5A%060D0607060D06FD10FF7E060D0607060D065AFD39FF2F0D070D070D072F%FD10FF840D070D070D070D84FD05FF070D070D070D077EFD10FF0D0D070D%070D072FFD3AFFA8060D060D060D067EFD10FF2F0D060D060D0653FD04FF%530D060D060D062FA9FD0FFF7E0D060D060D060D7EFD3BFF53070D070D07%0D07FD10FFA9070D070D070D07A9FFFFA92F070D070D070D59FD10FF2F07%0D070D070D07FD3CFF7E0D0607060D060753FD10FF2F0607060D06072FFF%FF5A060D0607060D06FD10FF7E060D0607060D067EFD3DFF2F0D070D070D%070DA9FD0FFF840D070D070D070D84FF070D070D070D077EFD10FF0D0D07%0D070D072FFD3EFFAF060D060D060D065AFD10FF2F0D060D060D0653530D%060D060D062FA9FD0FFF7E0D060D060D060D7EFD3FFF5A070D070D070D07%FD10FFA9070D070D070D072F070D070D070D59FD10FF2F070D070D070D07%FD40FFA80D0607060D06072FFD10FF2F0607060D0607060D0607060D06FD%10FF7E060D0607060D067EFD41FF530D070D070D070DA9FD0FFF840D070D%070D070D070D070D077EFD10FF0D0D070D070D072FFD42FFAF060D060D06%0D065AFD10FF2F0D060D060D060D060D062FA9FD0FFF7E0D060D060D060D%7EFD43FF5A070D070D070D07FD10FFA9070D070D070D070D070D59FD10FF%2F070D070D070D07FD44FFA80D0607060D06072FFD10FF2F0607060D0607%060D06FD10FF7E060D0607060D067EFD45FF530D070D070D070DA9FD0FFF%840D070D070D070D077EFD10FF0D0D070D070D072FFD46FFAF060D060D06%0D065AFD10FF2F0D060D060D062FFD10FF7E0D060D060D060D7EFD47FF5A%070D070D070D07FD0FFFA82F070D070D070D07A9FD0FFF2F070D070D070D%07FD48FFA80D0607060D06072FFD0EFF53060D0607060D06072FFD0EFF7E%060D0607060D067EFD49FF530D070D070D070DA9FD0DFF070D070D070D07%0D070D84FD0DFF0D0D070D070D072FFD4AFFAF060D060D060D065AFD0CFF%530D060D060D060D060D0653FD0CFF7E0D060D060D060D7EFD4BFF5A070D%070D070D07FD0BFFA80D070D070D070D070D070D07A9FD0BFF2F070D070D%070D2FFD4CFFA80D0607060D06072FFD0AFF53060D0607060D0607060D06%072FFD0AFF7E060D0607060D06A8FD4DFF530D070D070D070DA9FD09FF07%0D070D070D070D070D070D070D7EFD09FF0D0D070D070D0753FD4EFFAF06%0D060D060D065AFD08FF530D060D060D062F530D060D060D062FFD08FF7E%0D060D060D060D7EFD4FFF5A070D070D070D07FD07FFA80D070D070D070D%7EFF070D070D070D0784FD07FF2F070D070D070D2FFD50FFA80D0607060D%06072FFD06FF53060D0607060D07FFFF5A0607060D060706FD06FF7E060D%0607060D06A8FD51FF5A0D070D070D070DA9FD05FF070D070D070D0784FF%FFA90D070D070D070D7EFD05FF0D0D070D070D0753FD53FF070D060D060D%065AFD04FF530D060D060D062FFD04FF530D060D060D062FFD04FF530D06%0D060D060D7EFD53FF7E070D070D070D07FFFFFFA80D070D070D070D7EFD%05FF070D070D070D0784FFFFA92F070D070D070D2FFD54FFA80D0607060D%06072FFFFF53060D0607060D07FD06FF5A0607060D060706FFFF5A060D06%07060D06A8FD55FF5A0D070D070D070DA9FF070D070D070D0784FD06FFA9%0D070D070D070D7EFF070D070D070D0753FD57FF070D060D060D065A530D%060D060D062FFD08FF530D060D060D062F530D060D060D060D7EFD57FF7E%070D070D070D070D070D070D070D7EFD09FF070D070D070D070D070D070D%070D2FFD58FFA80D0607060D0607060D0607060D07FD0AFF5A0607060D06%07060D0607060D06A8FD59FF5A0D070D070D070D070D070D07A9FD0AFFA9%0D070D070D070D070D070D0753FD5BFF070D060D060D060D060D0653FD0C%FF530D060D060D060D060D060D7EFD5BFF7E070D070D070D070D070D7EFD%0DFF070D070D070D070D070D2FFD5CFFA80D0607060D0607060D2FFD0EFF%5A0607060D0607060D06A8FD5DFF5A0D070D070D070D07A9FD0EFFA90D07%0D070D070D0753FD5FFF070D060D060D0653FD10FF530D060D060D060D7E%FD5FFF7E070D070D070D7EFD11FF070D070D070D53FD60FFA80D0607060D%2FFD12FF7E0607060D06A9FD61FF5A0D070D07A9FD13FF2F070D075AFD63%FF070D0653FD14FF530D060DA8FD63FF7E2F537EFD15FF2F5359FDB1FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: 
%%DocumentCustomColors: (PANTONE 280 C)
%%CMYKCustomColor: 1 0.7200 0 0.1800 (PANTONE 280 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic CMYK</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2011-03-16T10:47:49-04:00</xmp:CreateDate>
         <xmp:ModifyDate>2011-03-16T10:47:49-04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2011-03-16T10:47:49-04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>200</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAyAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AE/nn5EvfJ1xZalo+oXza&#xA;Tflo5VlnkcxXA+IDlt8Lr9kHf4TnQaDUDKCJAWHSa/FLHUok0fNln5GaToPmv8vNU068ur038lyi&#xA;6my3MgcBCXt3iP7C0JBG9Spr2zG185Y8oIAqttvm5GhAyYiCTfXd475stNa8q+crvRNRvryW3s7g&#xA;AsJnV5bZiGVlNSAXjP0HNnhMcmMSAG/3utzGePJwkmr7+j0j83NKtL7X/KOkeUL28l1PVrSBUP1i&#xA;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&#xA;VdirsVdir//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:3127A3220B20681188C6AF33B70074B5</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:3127A3220B20681188C6AF33B70074B5</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:3027A3220B20681188C6AF33B70074B5</stRef:instanceID>
            <stRef:documentID>xmp.did:3027A3220B20681188C6AF33B70074B5</stRef:documentID>
            <stRef:originalDocumentID>uuid:E3B705F59336E0118987E9F32614B546</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:20:43-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:20:57-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:10-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:28-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:53-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:25:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:17-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:45-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:008011740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EC80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:14-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ED80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:22-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EE80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EF80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F080265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:30-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F180265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:41-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F280265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F380265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:10-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F480265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F580265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F680265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:30:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1405FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1505FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:26-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1605FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:34-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1705FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1805FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:11-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1905FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:33-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1A05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1B05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:58-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1C05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1D05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:24-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1E05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:30-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C62CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:45-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C72CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:51-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C82CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:15-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C92CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:23-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CA2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:41-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CB2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:46-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CC2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:03-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CD2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:08-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CE2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CF2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D02CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B44FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:36:05-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B54FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:36:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B64FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:36:39-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B74FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:01-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B84FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:06-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B94FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:30-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BA4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:40-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BB4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BC4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:38:09-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BD4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:38:28-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BE4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:38:38-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:929C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:39-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:939C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:39:09-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:949C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:39:25-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:959C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:39:32-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:969C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:40:15-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:979C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:40:23-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:989C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:41:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:999C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:41:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9A9C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:41:49-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9B9C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:42:12-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9C9C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:42:44-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7C65C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:42:53-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7D65C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:43:08-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7E65C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:43:13-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7F65C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:43:29-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8065C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:43:34-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8165C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:43:52-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8265C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:43:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8365C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:44:14-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8465C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:44:18-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8565C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:44:36-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8665C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:44:41-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:889836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:45-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:899836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:45:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8A9836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:45:20-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8B9836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:45:24-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8C9836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:45:49-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8D9836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:45:55-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8E9836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:46:14-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8F9836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:46:19-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:909836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:46:38-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:919836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:46:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:929836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:46:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2E27A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:47:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2F27A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:47:23-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3027A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:47:32-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3127A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:47:49-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>uuid:E3B705F59336E0118987E9F32614B546</xmpMM:OriginalDocumentID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>8.500000</stDim:w>
            <stDim:h>11.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>AGaramondPro-Bold</stFnt:fontName>
                  <stFnt:fontFamily>Adobe Garamond Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>OTF 1.007;PS 001.000;Core 1.0.30;makeotf.lib1.4.1030</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>AGaramondPro-Bold.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>PANTONE 280 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Red</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Yellow</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Green</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Cyan</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Blue</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Magenta</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=90 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>14.999998</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=90 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=80 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>80.000000</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=35 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>35.000004</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=5 M=0 Y=90 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>5.000001</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>19.999998</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=90 M=30 Y=95 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>90.000000</xmpG:cyan>
                           <xmpG:magenta>30.000002</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>30.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=75 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=10 Y=45 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>80.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>45.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=70 M=15 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>70.000000</xmpG:cyan>
                           <xmpG:magenta>14.999998</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=95 Y=5 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>5.000001</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=25 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>25.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=100 Y=35 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>35.000004</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=100 Y=50 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=95 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>19.999998</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=25 Y=40 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>25.000000</xmpG:magenta>
                           <xmpG:yellow>39.999996</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=45 Y=50 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>45.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>5.000001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=50 Y=60 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>60.000004</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=55 M=60 Y=65 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>55.000000</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>39.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=40 Y=65 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>39.999996</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=30 M=50 Y=75 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>30.000002</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=60 Y=80 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=65 Y=90 K=35</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>65.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>35.000004</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=70 Y=80 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>70.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 282 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>68.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>53.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 280 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>72.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>18.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grayscale</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=100</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>255</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=90</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>229</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=80</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>203</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=70</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>178</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=60</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>152</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=50</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>127</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=40</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>101</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=30</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>76</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=20</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>50</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=10</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>25</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=5</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>12</xmpG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -131.081 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 131.081 li
170.028 131.081 li
170.028 0 li
cp
clp
[1 0 0 1 0 0 ]ct
29.8101 1.61475 mo
29.1353 1.76172 28.811 1.99658 28.6055 2.26074 cv
28.2832 2.73047 27.7842 3.66943 26.9912 5.51953 cv
25.5532 8.95508 22.2349 16.2661 20.7959 20.0835 cv
20.6191 20.23 20.2085 20.3184 19.8271 20.3184 cv
19.5044 20.3184 19.2402 20.23 19.0342 20.0835 cv
18.7114 19.3779 18.2705 18.3218 17.9185 17.4995 cv
16.6851 14.7104 li
16.2749 13.7705 15.8921 12.8892 15.6284 12.4487 cv
15.3643 12.9482 15.0112 13.6538 14.6299 14.4756 cv
13.2505 17.4697 li
12.8096 18.4097 12.4863 19.2612 12.0166 20.23 cv
11.8701 20.3765 11.4888 20.4648 11.0479 20.4648 cv
10.7251 20.4648 10.5488 20.3765 10.2837 20.23 cv
9.81396 18.9966 8.64014 16.354 7.64209 14.1523 cv
2.82617 3.64014 li
2.0332 1.90869 1.85742 1.76172 .888184 1.55615 cv
.153809 1.40967 li
-.0805664 1.11523 -.0507813 .528809 .272461 .380859 cv
1.3584 .44043 2.59131 .470215 4.08936 .470215 cv
5.38135 .470215 6.52637 .44043 7.64209 .380859 cv
7.87646 .499512 7.99414 1.23291 7.70117 1.40967 cv
7.17188 1.49707 li
6.64355 1.58545 6.4375 1.73193 6.4375 1.9375 cv
6.4375 2.14355 7.0542 3.52344 7.96484 5.57861 cv
10.8721 12.0679 li
11.6938 13.8882 11.9868 14.5044 12.3398 15.2095 cv
12.6919 14.5635 13.1626 13.6826 13.749 12.3613 cv
14.1309 11.5098 li
14.3364 11.0396 14.5127 10.3945 14.5127 10.2178 cv
14.5127 10.041 14.4536 9.71826 14.3364 9.4248 cv
11.5181 3.22998 li
10.8423 1.76172 10.6367 1.55615 9.52051 1.43848 cv
9.22705 1.40967 li
8.93408 1.17432 8.99219 .499512 9.31543 .380859 cv
10.5776 .44043 11.7231 .470215 13.0151 .470215 cv
14.5127 .470215 15.6284 .44043 16.3911 .380859 cv
16.7437 .470215 16.7144 1.2627 16.5088 1.40967 cv
16.0103 1.52686 li
15.6572 1.61475 15.2168 1.73193 15.2168 1.9375 cv
15.2168 2.17285 15.335 2.49561 15.4814 2.81836 cv
16.3618 4.84521 li
16.6265 5.46143 16.9204 6.10693 17.1841 6.63574 cv
17.4775 6.01904 17.7715 5.43213 18.0649 4.78564 cv
18.3296 4.19873 li
18.8286 3.08252 19.1221 2.20215 19.1221 2.02588 cv
19.1221 1.8208 19.0049 1.73193 18.5352 1.61475 cv
17.6543 1.40967 li
17.4482 1.20313 17.4775 .528809 17.7427 .380859 cv
18.5938 .44043 19.6504 .470215 20.6191 .470215 cv
21.7646 .470215 22.8516 .44043 23.6147 .380859 cv
23.8491 .528809 23.9082 1.23291 23.6436 1.43848 cv
22.8218 1.61475 li
21.8232 1.8208 21.6182 1.9375 20.5903 3.69971 cv
19.8853 4.90283 19.1509 6.25391 18.77 7.0166 cv
18.5059 7.54541 18.1245 8.39697 18.1245 8.54395 cv
18.1245 8.63184 18.1533 8.80811 18.3589 9.27832 cv
19.7388 12.2432 li
20.502 13.8584 20.8545 14.7104 21.0303 15.1216 cv
22.4399 11.7153 23.8203 8.07471 25.2295 4.49219 cv
25.4346 3.99316 26.022 2.31885 26.022 1.99658 cv
26.022 1.79102 25.8462 1.70264 25.4639 1.58545 cv
24.8184 1.40967 li
24.5835 1.14453 24.6426 .528809 24.9067 .380859 cv
25.8462 .44043 27.021 .470215 27.9014 .470215 cv
28.9292 .470215 29.7803 .44043 30.6025 .380859 cv
30.8672 .528809 30.896 1.17432 30.6909 1.40967 cv
29.8101 1.61475 li
cp
false sop
/0 
<<
/Name (PANTONE 280 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 1 .72 0 .18 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
38.0898 8.10352 mo
38.0898 8.92627 38.1187 8.98438 38.9121 8.98438 cv
40.9375 8.98438 li
42.4644 8.98438 42.8169 8.77881 43.1104 7.37012 cv
43.2573 6.63574 li
43.4629 6.40088 44.1963 6.40088 44.3442 6.66455 cv
44.2852 7.60498 44.2559 8.66162 44.2559 9.77783 cv
44.2559 10.8936 44.2852 11.9502 44.3442 12.8892 cv
44.1963 13.1543 43.4629 13.1831 43.2573 12.9189 cv
43.1104 12.1851 li
42.8169 10.7754 42.4644 10.5405 40.9375 10.5405 cv
38.9121 10.5405 li
38.1187 10.5405 38.0898 10.5698 38.0898 11.4512 cv
38.0898 14.9448 li
38.0898 16.2959 38.208 17.2354 38.5591 17.7344 cv
38.9414 18.2622 39.4985 18.4971 41.6426 18.4971 cv
44.1963 18.4971 45.1953 18.4097 46.8101 15.0918 cv
47.0449 14.769 47.7788 14.8862 47.897 15.2378 cv
47.7788 16.7651 47.0742 19.1436 46.6636 19.9365 cv
45.1074 19.8774 42.2886 19.8486 39.8809 19.8486 cv
36.064 19.8486 li
34.6543 19.8486 33.2153 19.8774 31.0132 19.9365 cv
30.7783 19.7603 30.7783 19.0552 31.0132 18.9087 cv
32.3936 18.7036 li
33.7153 18.4971 33.8911 18.3218 33.8911 15.6206 cv
33.8911 4.66846 li
33.8911 1.99658 33.7153 1.8208 32.3936 1.55615 cv
31.6597 1.40967 li
31.395 1.23291 31.4248 .557617 31.7178 .380859 cv
33.0986 .44043 34.5366 .470215 35.9458 .470215 cv
42.1714 .470215 li
44.0503 .470215 45.7236 .44043 46.105 .380859 cv
46.1343 .851563 46.3398 2.96533 46.4873 4.93262 cv
46.3696 5.25586 45.6943 5.31396 45.4009 5.05029 cv
45.0781 4.02246 44.6665 3.1416 44.2852 2.73047 cv
43.7271 2.17285 42.8462 1.8208 41.4072 1.8208 cv
39.0586 1.8208 li
38.0898 1.8208 38.0898 1.87939 38.0898 2.96533 cv
38.0898 8.10352 li
cp
f
55.7358 14.9746 mo
55.7358 16.354 55.8535 17.2939 56.2349 17.7637 cv
56.6172 18.2622 57.1445 18.4971 59.2881 18.4971 cv
61.9609 18.4971 62.7822 18.4097 64.5142 15.0039 cv
64.7495 14.7104 65.4248 14.8276 65.6304 15.1797 cv
65.4839 16.707 64.7793 19.1436 64.3682 19.9365 cv
62.8115 19.8774 59.9932 19.8486 57.5854 19.8486 cv
53.6509 19.8486 li
52.3003 19.8486 50.832 19.8774 49.0117 19.9365 cv
48.7476 19.7603 48.6885 19.0854 48.9233 18.9087 cv
50.04 18.7617 li
51.3608 18.5864 51.5366 18.3516 51.5366 15.6206 cv
51.5366 4.69775 li
51.5366 1.9668 51.3608 1.70264 50.04 1.52686 cv
49.188 1.40967 li
48.894 1.23291 48.894 .557617 49.2471 .380859 cv
50.7739 .44043 52.2422 .470215 53.6509 .470215 cv
55.0601 .470215 56.5278 .44043 57.9961 .380859 cv
58.231 .557617 58.231 1.23291 57.9961 1.40967 cv
57.2334 1.52686 li
55.9121 1.73193 55.7358 1.9668 55.7358 4.69775 cv
55.7358 14.9746 li
cp
f
73.2935 14.9746 mo
73.2935 16.354 73.4116 17.2939 73.793 17.7637 cv
74.1748 18.2622 74.7026 18.4971 76.8467 18.4971 cv
79.5186 18.4971 80.3408 18.4097 82.0723 15.0039 cv
82.3081 14.7104 82.9829 14.8276 83.189 15.1797 cv
83.0415 16.707 82.3384 19.1436 81.9263 19.9365 cv
80.3696 19.8774 77.5518 19.8486 75.144 19.8486 cv
71.2095 19.8486 li
69.8579 19.8486 68.3901 19.8774 66.5698 19.9365 cv
66.3057 19.7603 66.2476 19.0854 66.4819 18.9087 cv
67.5977 18.7617 li
68.9189 18.5864 69.0952 18.3516 69.0952 15.6206 cv
69.0952 4.69775 li
69.0952 1.9668 68.9189 1.70264 67.5977 1.52686 cv
66.7461 1.40967 li
66.4521 1.23291 66.4521 .557617 66.8052 .380859 cv
68.3315 .44043 69.7998 .470215 71.2095 .470215 cv
72.6187 .470215 74.0859 .44043 75.5552 .380859 cv
75.7896 .557617 75.7896 1.23291 75.5552 1.40967 cv
74.7915 1.52686 li
73.4697 1.73193 73.2935 1.9668 73.2935 4.69775 cv
73.2935 14.9746 li
cp
f
90.9985 8.10352 mo
90.9985 8.92627 91.0288 8.98438 91.8208 8.98438 cv
93.8462 8.98438 li
95.3735 8.98438 95.7261 8.77881 96.019 7.37012 cv
96.1675 6.63574 li
96.3726 6.40088 97.106 6.40088 97.2524 6.66455 cv
97.1938 7.60498 97.1646 8.66162 97.1646 9.77783 cv
97.1646 10.8936 97.1938 11.9502 97.2524 12.8892 cv
97.106 13.1543 96.3726 13.1831 96.1675 12.9189 cv
96.019 12.1851 li
95.7261 10.7754 95.3735 10.5405 93.8462 10.5405 cv
91.8208 10.5405 li
91.0288 10.5405 90.9985 10.5698 90.9985 11.4512 cv
90.9985 14.9448 li
90.9985 16.2959 91.1157 17.2354 91.4683 17.7344 cv
91.8501 18.2622 92.4087 18.4971 94.5513 18.4971 cv
97.106 18.4971 98.104 18.4097 99.7192 15.0918 cv
99.9536 14.769 100.688 14.8862 100.806 15.2378 cv
100.688 16.7651 99.9839 19.1436 99.5728 19.9365 cv
98.0171 19.8774 95.1978 19.8486 92.7896 19.8486 cv
88.9722 19.8486 li
87.563 19.8486 86.1245 19.8774 83.9229 19.9365 cv
83.688 19.7603 83.688 19.0552 83.9229 18.9087 cv
85.3032 18.7036 li
86.6235 18.4971 86.8003 18.3218 86.8003 15.6206 cv
86.8003 4.66846 li
86.8003 1.99658 86.6235 1.8208 85.3032 1.55615 cv
84.5684 1.40967 li
84.3042 1.23291 84.3335 .557617 84.6274 .380859 cv
86.0073 .44043 87.4458 .470215 88.855 .470215 cv
95.0806 .470215 li
96.9585 .470215 98.6333 .44043 99.0161 .380859 cv
99.0435 .851563 99.2495 2.96533 99.396 4.93262 cv
99.2788 5.25586 98.604 5.31396 98.3101 5.05029 cv
97.9878 4.02246 97.5757 3.1416 97.1938 2.73047 cv
96.6362 2.17285 95.7554 1.8208 94.3169 1.8208 cv
91.9683 1.8208 li
90.9985 1.8208 90.9985 1.87939 90.9985 2.96533 cv
90.9985 8.10352 li
cp
f
108.058 20.3184 mo
105.357 20.3184 103.682 19.5547 103.066 19.2026 cv
102.508 18.5562 102.126 16.4429 102.126 14.4453 cv
102.333 14.064 103.007 14.0347 103.242 14.3579 cv
103.83 16.2661 105.796 18.9673 108.293 18.9673 cv
110.465 18.9673 111.463 17.4697 111.463 16.002 cv
111.463 13.624 109.232 12.2139 107.47 11.3335 cv
105.357 10.2759 103.037 8.51514 103.037 5.60742 cv
103.007 2.28955 105.59 0 109.849 0 cv
110.817 0 112.021 .117188 113.196 .470215 cv
113.578 .586914 113.841 .64502 114.194 .70459 cv
114.43 1.35059 114.722 2.93555 114.722 4.90283 cv
114.576 5.25586 113.841 5.28516 113.578 4.99121 cv
113.079 3.49365 111.817 1.35059 109.702 1.35059 cv
107.764 1.35059 106.708 2.61328 106.708 4.08154 cv
106.708 5.43213 107.912 6.66455 109.379 7.42822 cv
111.317 8.45654 li
113.137 9.4248 115.458 11.1279 115.458 14.3579 cv
115.458 17.9692 112.492 20.3184 108.058 20.3184 cv
cp
f
123.415 14.9746 mo
123.415 16.354 123.532 17.2939 123.914 17.7637 cv
124.295 18.2622 124.824 18.4971 126.967 18.4971 cv
129.638 18.4971 130.46 18.4097 132.193 15.0039 cv
132.427 14.7104 133.103 14.8276 133.307 15.1797 cv
133.162 16.707 132.458 19.1436 132.047 19.9365 cv
130.491 19.8774 127.671 19.8486 125.263 19.8486 cv
121.33 19.8486 li
119.978 19.8486 118.509 19.8774 116.691 19.9365 cv
116.425 19.7603 116.368 19.0854 116.601 18.9087 cv
117.717 18.7617 li
119.039 18.5864 119.214 18.3516 119.214 15.6206 cv
119.214 4.69775 li
119.214 1.9668 119.039 1.70264 117.717 1.52686 cv
116.865 1.40967 li
116.572 1.23291 116.572 .557617 116.924 .380859 cv
118.452 .44043 119.92 .470215 121.33 .470215 cv
122.739 .470215 124.207 .44043 125.674 .380859 cv
125.91 .557617 125.91 1.23291 125.674 1.40967 cv
124.912 1.52686 li
123.589 1.73193 123.415 1.9668 123.415 4.69775 cv
123.415 14.9746 li
cp
f
141.119 8.10352 mo
141.119 8.92627 141.148 8.98438 141.941 8.98438 cv
143.966 8.98438 li
145.493 8.98438 145.846 8.77881 146.139 7.37012 cv
146.288 6.63574 li
146.492 6.40088 147.226 6.40088 147.373 6.66455 cv
147.314 7.60498 147.285 8.66162 147.285 9.77783 cv
147.285 10.8936 147.314 11.9502 147.373 12.8892 cv
147.226 13.1543 146.492 13.1831 146.288 12.9189 cv
146.139 12.1851 li
145.846 10.7754 145.493 10.5405 143.966 10.5405 cv
141.941 10.5405 li
141.148 10.5405 141.119 10.5698 141.119 11.4512 cv
141.119 14.9448 li
141.119 16.2959 141.236 17.2354 141.589 17.7344 cv
141.971 18.2622 142.53 18.4971 144.671 18.4971 cv
147.226 18.4971 148.225 18.4097 149.839 15.0918 cv
150.075 14.769 150.809 14.8862 150.924 15.2378 cv
150.809 16.7651 150.104 19.1436 149.693 19.9365 cv
148.135 19.8774 145.318 19.8486 142.91 19.8486 cv
139.093 19.8486 li
137.684 19.8486 136.244 19.8774 134.042 19.9365 cv
133.808 19.7603 133.808 19.0552 134.042 18.9087 cv
135.422 18.7036 li
136.744 18.4971 136.92 18.3218 136.92 15.6206 cv
136.92 4.66846 li
136.92 1.99658 136.744 1.8208 135.422 1.55615 cv
134.69 1.40967 li
134.424 1.23291 134.454 .557617 134.747 .380859 cv
136.127 .44043 137.567 .470215 138.975 .470215 cv
145.201 .470215 li
147.08 .470215 148.752 .44043 149.134 .380859 cv
149.165 .851563 149.37 2.96533 149.516 4.93262 cv
149.399 5.25586 148.724 5.31396 148.43 5.05029 cv
148.107 4.02246 147.696 3.1416 147.314 2.73047 cv
146.757 2.17285 145.875 1.8208 144.437 1.8208 cv
142.087 1.8208 li
141.119 1.8208 141.119 1.87939 141.119 2.96533 cv
141.119 8.10352 li
cp
f
162.2 15.6206 mo
162.2 18.3516 162.376 18.5864 163.698 18.7617 cv
164.872 18.9087 li
165.079 19.0854 165.079 19.7603 164.872 19.9365 cv
162.964 19.8774 161.524 19.8486 160.117 19.8486 cv
158.705 19.8486 157.238 19.8774 155.505 19.9365 cv
155.27 19.7603 155.27 19.0854 155.505 18.9087 cv
156.503 18.7617 li
157.826 18.5562 158.002 18.3516 158.002 15.6206 cv
158.002 14.1523 li
158.002 12.6841 157.971 12.2139 157.208 10.6582 cv
153.713 3.43506 li
153.128 2.23145 152.864 1.76172 151.834 1.58545 cv
150.837 1.40967 li
150.573 1.17432 150.602 .470215 150.955 .380859 cv
152.275 .44043 153.362 .470215 155.094 .470215 cv
156.885 .470215 158.383 .44043 159.38 .380859 cv
159.646 .499512 159.705 1.17432 159.44 1.40967 cv
158.442 1.64404 li
157.913 1.76172 157.737 1.87939 157.737 1.90869 cv
157.737 2.14355 157.883 2.58301 158.501 3.96387 cv
159.879 7.10547 li
160.321 8.07471 160.878 9.24902 161.231 9.98291 cv
162.082 8.54395 162.905 6.84131 163.698 5.34326 cv
164.813 3.25879 165.224 2.28955 165.224 1.9375 cv
165.224 1.76172 164.931 1.64404 164.226 1.52686 cv
163.549 1.40967 li
163.317 1.2627 163.286 .528809 163.58 .380859 cv
164.753 .44043 165.811 .470215 166.869 .470215 cv
167.983 .470215 168.894 .44043 169.745 .380859 cv
170.099 .499512 170.099 1.20313 169.864 1.40967 cv
169.101 1.55615 li
168.572 1.64404 168.014 1.84912 167.691 2.26074 cv
167.251 2.81836 166.515 3.87549 165.106 6.42969 cv
163.257 9.77783 li
162.494 11.1567 162.2 11.8911 162.2 13.5649 cv
162.2 15.6206 li
cp
f
91.0972 54.2432 mo
96.2847 54.2432 98.0737 57.6206 95.188 63.3003 cv
85.1567 83.1738 li
75.1265 63.3003 li
72.2397 57.6206 74.0142 54.2432 79.2007 54.2432 cv
91.0972 54.2432 li
cp
101.226 114.964 mo
89.8804 92.5225 li
104.926 62.8135 li
109.309 54.3403 110.379 53.8535 117.782 53.8535 cv
117.782 49.5688 li
52.5327 49.5688 li
52.5327 53.8535 li
59.9341 53.8535 61.1021 54.3403 65.3872 62.8135 cv
80.4341 92.5225 li
69.0884 114.964 li
42.502 62.2285 li
39.3853 55.9966 40.1646 53.8535 44.498 53.8535 cv
47.2739 53.8535 li
47.2739 49.5688 li
17.0845 49.5688 li
17.0845 53.8213 li
18.6421 53.9185 li
28.3809 54.5029 29.063 55.0229 33.5425 63.9819 cv
67.5308 131.081 li
70.354 131.081 li
85.1567 101.857 li
99.9604 131.081 li
102.785 131.081 li
136.772 63.9819 li
141.252 55.0229 141.933 54.438 151.672 53.8535 cv
152.316 53.813 li
152.316 49.5688 li
123.041 49.5688 li
123.041 53.8535 li
125.816 53.8535 li
130.15 53.8535 130.928 55.9966 127.812 62.2285 cv
101.226 114.964 li
cp
f
%ADOBeginSubsetFont: AGaramondPro-Bold Initial
%ADOt1write: (1.0.24)13 dict dup begin/FontType 1 def/FontName /AGaramondPro-Bold def/FontInfo 7 dict dup begin/Notice (Copyright (c) 2000, 2001 Adobe Systems Incorporated. All Rights Reserved. U.S.Patent Des. 318,290.Adobe Garamond is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Bold) def/ItalicAngle 0 def/FSType 12 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 66 /B putdup 67 /C putdup 69 /E putdup 70 /F putdup 73 /I putdup 76 /L putdup 77 /M putdup 78 /N putdup 79 /O putdup 85 /U putdup 87 /W putdup 88 /X putdef/UniqueID 44449 def/FontBBox {-158 -302 1147 899} defendsystemdict begindup /Private15 dict dup begin/|- {def} def/| {put} def/BlueValues [-16 -0 660 676 400 414 626 644 715 715 428 445] def/OtherBlues [313 320 -269 -255 -172 -165 -65 -56] def/FamilyBlues [-16 -0 660 676 394 408 626 640 715 715 434 448] def/FamilyOtherBlues [308 315 -269 -255 -171 -164 -68 -56] def/BlueScale 0.0479582 def/StdHW [53] def/StdVW [130] def/StemSnapV [130 143] def/ForceBold true def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings14 dict dup begin/space <1C60D8A8C9B87A8F8B> |-/B <1C60D8A8C9B66EAD78FFCEA87FA9F1BD5CFA207E3D59E14D09B4D1B55D739E055AD1A6390A43B3891C3DF5DFBEF6A83C88C20069750F780F5ED5ABC96E5A1D7903DE369EAF57EBC2E108E11367A5A7DD3CE9CB48512D672E6CA0A0FD5DEEFE1B7BCC81D1E3E8A14D35B0615F995F40C029377688D0BBE74E7C9E65C36F25F986E6B1514F194906FEB4F58858EFD89333E215F84D7E3F9338B9FC60086266BA069DDD7A25181AD2AD214C7123F729F48246A8C12519A37D618B1DB1888EFEE917D419559A2362FA319567E0E87419DBD4602B7B0B66CE4BE8F1BB6775E1DC1631A8A02EB3A91412F67486FBAA282A3469D565E42B76686D3F43D5BC58D76F3D0DF925DDF90EE87490E2006F004663E30BC2290A33D40D29F75FAB3D8321CDFAC1CD43C16F23315CB9244E798E06DCF15B993217A7161630DFE1E6> |-/C <1C60D8A8C9B624F9DE68DFF19DEB1685874FFF7FF1838E3944FC689DDF541929FDCECEAA4D4062CE7AA19C9CC853595D9B9D77776D6887B0866CDD3CE972F39FE25227D1218184E73CD20D229663B5171611B85E3C01B0FDE36837D4D459CF2CBF12F9510A46E1FD8C46A7CF34CE3F09F8467C7F34A74539F34868D7F0721C6A9E> |-/E <1C60D8A8C9B7CA64569D6A554FC57A2252A212C54D2F4CFD4AC48B54D8E197DEAC114F9009EDB7565F93927D30B6FE19F6F7110CEE0766730915973BB40C77AE01767B3857FBAE74F43C9EB5ABC370AE3D9BAAE7B754866D650A5E2EABBF52E5564BE021ECD842F3F8AA8A668879737073E7E4AE609904CDE52278D0F09FE0E1FA9B98CD7045D0B2DF4C2F40D21B83F632792B86F3FD8B74797BA247966614E3851D7CA7975AA6044DD8E50887A93DC208E42A561BB017BF220C8B677DBCA493268C464114A8CF129F89CF49FC0D9AE589DBC1A487BA33A8C26122429C67A072745A2A516678BB6681567CB2F8086DEF1D89030331081137C4E20E065AA0AB22DC5A1A189ED8EF71CFC6D72A7878E059F439809DF4A52FC29854F7335B02F8BF74D0142663D47225D9EBAD3C09E866BA42587C9129C3A84378D4DC28DAFCF121BDD1EA968B65AB00921F31E55F0A7E5C77E741970CBE063B1623B0DD0078442C4E34CEDA3EBBFBBEA42B834703C1B84CCD24264443EE487406DF3E3ACC18DD244E5C1153265E463472D94323446F7B1E0A3B6B217EDA607FE96E564ECB2F7F2F2270A0A4AD3FF0A3F79C01DB1DEFA7EE9B815418ACA7326B3E7A0FD52F5B84C5DA4F57CB74D25334BC65875CD22993300BE0B277C81A79> |-/F <1C60D8A8C9B797473FFA53E477313E10F50BF5C3C4C3ABECFC255EC1EAD1BF4089DFE127B7C8C62AC537A44340B2A538E739F75F6DA8EF07859AC50FF78EEB1D593ADA7284CA5F97194288C98295F0FC46B2B2A1A1900B69C3527BAC804AF570AD656A5F783A7B9DA0D46F28D9A2F134DD4E7D96ED9A36C0366A9A04C7BC7C0FF6F46A6EF63B5B7908A4DC7AADFF879E19D9CD9383DB89D6EF51C8203B190FC9B72E1E69DB4A1DDAA2D87104F7AF08E5020FD76FF55FA49D121F89F70C799BF56DECFE3581C022128AF5DC0514596AF66A7FF7AA5158B58C60CE9C9EDE7F2CA4891C8F3A4F884A737F324C00B7C6D196E40A6BA007EC0B79162B58817A127C109BC953A73490A23C45D349A162F51E651E4FBC366F95464AAAF9F0FA49D20FF59DBB7D6FB3E3844B15470A2233D274AC2EEEA3D440F588941DBA7B3CF70C2714AC69CC6401DFBDC206875C6F388C01FF7FC377DF2DDC13222B809449B0233C1B901AB9EE981D30165162A2BB02D4340F95D92ED27EB45534CD18B574BD9590CC4CEE072943114A403D3155F6E2EBEE67D2B4CB95E92B309D274CAEF41A8A8E77AC0EEFE8C756> |-/I <1C60D8A8C9B728C5D55B6FFDBCC2E6B2198C1471705833A75888335DD446C4BCFF66C5B7C5DB707A2B39BB0B5B166A879EE13D89F159B4611BF1F793B9E2CA19C98A31C458DB9E8D560579A9909877D1F4D09A5F244077341D67B8BDD93F01598FCD6812E88F9547359C60CCCF3D9A6DEF25B97E3D88630FD27239431825CF6B71DDF1B6749613D878EF2DE1902A1AE0AD48FD11253F58880C27CEFCE29CBF28731894F783EB09555F082C3CD9FF1B0372374326628228A053A17CFA1D6CEBA091F16A7AB880> |-/L <1C60D8A8C9B7F2A78FB91FEC0AB1E70F60008564059437FB5A80C4C3A1A672D1EF844C46014BF29A542E76DED2CBFC03808617DEB25ACE263E511B108648742439020E19912501DCF76BFC308B0F8C3D7D42F706D945DFC7FB767819238C2436C70ED8242C6B9C1C072ACA04BA6D9E654A1A56D186E9E5BAECFD8047C260EABDE213DAE3D0D0BC2382567C40AB57B41EDBEB9D601216D10654FA14AB7F84C11A19223FB063297B77294D4CBB7AC7CBEFE40B910DA0D46039A7F5C06BAB487537EC3CAA859952FDCFD1E5DA37A2F39FFA8EAA682DDCC8713025CFB130234E4ABD0F49AFD81A6AA7AFC3BF2555FD> |-/M <1C60D8A8C9B5B2D72C441C47625DD9489BCE8C3AF83923E9405F62D93769ECD093B12C0592942BE8572D61834D00346AD898E5906FAFD439AABB6EFE52E1A31972CE3CD9FB661B3EF5E300AD04D551A4332729BC8C3145F9A2BCD4452EADA7D340DA18B56A73F0E8BB2D84A788AE6DE4DAFC0B57020B49F3106A9AD31D25A30FB0D5AD28EF061910F30F0045D1ED97640359D7071C6A7EE8A0D14888B21247BB7C311DEC5EF03BF3D52041E021B01507CAC32D02D773B8D60BC632E1BA1136ED6863C7B99F5A9C67C4DEF4D09FC0BD7E746E229BBDAD36E65E189AFD489B8736A38B4DA995328A0DD32550DC8F13CF0E3B667D429CFD7970EB6EC01033FDA3FCFECB9766F74A2750ADDB7569CD5C4CB74E2E8FC0FDE6C7F912098CD25FE712886EA00FFE499C749376838ED0C1B6CAE518F7DF88A6D45E6D9A06E45F3AC1FE921BED9BBBF11A575C9A007EA161367C8FC3219BF57F42C0AC45655B4E282744ACC24E752CB7B568C60C337FAA733717B67FF77312A99E2E25888B544275FED86692658E0A49C2DDB31E4CF1DCB1D3AA5E38FADCAF1582251E43183F67222F69166ABAD6FE6375936DFA1E655E3893EFB42CFF8704255592687C7165141AE6FCBDC96560FC84C69B2BFD5AB2F43AA6488C9CE86D23D0160D03525E4EA69CF78B97D9DE19B725EE9021F421> |-/N <1C60D8A8C9B6E156BD054BEDB72B25CBAB8B3A139F9DC8E8BA6E7F17A66D25DF09582406D5CB59E222BE6C0DA49E99121E12B4D367CE48E8A4BF992D8FA412C1B036D3C994E2FF7AF2D1303301F44D1378707730B7E7426F54BE13A5364C8B17ACCE78465FB040794D2E1A566BADE96F765AC67680825813F382C3652387C52B76CBE55321213188D549D6B7D601C1BCCF32122FF9E22CADAF1B0141802AF4962E3EFD6C83EBE6B89BF57FD785C21C11E8729E3174FCCAD7A4AFF239C9DFCCC2E440D8C76C9BFF79FDF37B30C8DE12E2E5691C857C4D3B1ACE08DBA2E79D1FF327FC072416AAF52D57998816084D9B23631742A55469D336F1A99061CE023BD9553F07FF7966393A92893F74826CCEBA1EC3837A4E4310E37BDFE0839EFDD79B371F3A779A24CF26806D6F17D7C41F20DEB61D4C32A2FBD99A48DB50CFA935DB7DEC1455F35B529995634BBF2DA693B717F7722E6D862506C01AB8E6CFE827A9BF736361AA9CE0EA96150C> |-/O <1C60D8A8C9B6C90DA51B5411A577BA3AB144CCDD168F0D06A0A6584C2CFD7B02F7E8A03148FB8A09EBE8A2A99A9F1597931FA0456FB9E35E935ED6455D3984A21BC28F84806639EA6C8631CED924B11A9AC73294B6C9487EC00743E62BAB10221C7A5ADA6FD7DB3948> |-/U <1C60D8A8C9B61918EEA78141166AE1BEC82543149EF9B923932F4737C07EBF8060A154DD879992322707EFDAD2F22521BFB1CAE97E0774CCEE0BD089359CBEC18A45E9CC999E20E215F21E5CD90DF38F40D239ADACD06F7E3DB7C60F064B6E785A4DAA6F134A8470B4AC9BC72800D7DC0AAB6778842C9369459AEEE8B62A4CC859B0338A8F9726BCB235823F8B28626FADFB733745D8253F84C4C3BD5EBFB5C33DF470174B26E337D05A3CE6EC28BEA49D4724D5178790A7FED808A2FA717254B8A21EC2A8A00D03FB50E06E927DD09CCD06FC66970E42C5115E5E196D0C12309794FA97FCE06286ED3B6DB1FF9C1CA2BCFDCB4C0A30EB0B77D6F875181A2EB8A3E41AC0> |-/W <1C60D8A8C9B5C6F62C13E0C249B19D43ACC15EDEEB27646BA7B868331A2AFE4FE15433D21E98CBE964E485C1C0B683EF3C9DF5A35CFE5C4D940E388DCF70519D505AC0DC217BF546BB0A47DB4B291B4B0225DBC87295BC9D6F336C06804BD5BAF5AC1112BEBE54FAD3CD2A18B6FB54B287E48DE623BF3DBBAE78C254B72A5F3E5A40B5C730ED74D16026E4A13203A9FCCE47AC21A8A4FBC858B4B6BD8C61F8563F47DA4F0A92392CC04532AE02C433832378E6C1BD5B874B7C467280C9F0899239B12656513AF247DE7A1E6434597204A1D5276899FA1D5798D6F07587FFA6AD643A764864BA4FB4ED8B7120172C2E90A3456534BCCF64F987BD10DFB9FB81DE88A0441AF87031BE4AC6788C26FC8E380DBD2CD6FD3118359EC5E70C7E33A439521C3F1A28481B2094E26579C5108DB8E8D075C8EE83DE8B7516A63F46BE97CCB39CCC9B5F24AE82A9529206BE85CAA2E476E7FC0C3C1D6275CD79838E44C162FE40872E7B806D31F5012E8567691E4E4F6BDD80DFA05BB1DE8EDA0EBFDE8BE6A8D346FFECD6985E6BC4015101360EE80EF98EAC3BEDF9575D276710D07E318391D6D720F2A41949D56FA8AA5EAFABCC4BB387EC21CCB8912726417BFAFF64101329DB3E82055C84C41E47F5E639FC9D38E949C423F6E227D8AF6FCA6A3CF60F772CCF6ECB93D7D4F1BF24F9C3305EBF6A0A7860920902B34058F6A84339ED0E557F11F16096E5152289A5C1024B8BDC41458E20B7839BD8BBC6EAD6E631BF55EA3C3751018110291F3006FA08B1C4BA9AD58B243831F6ECE65644AAFB7757ED7513A84ED050FFCADFBFFCC2A067F657844E3305076E35FB1BE9F6B0DB0E4AE3BF948F94634083AEBEA2445ABF7DEB48198A2847FFE09F6630BF8C658D3CF7B363BB9FF232F1F50169B9E96AEADB4BD9629EAC66F0EAC255671834579E631893406D56> |-/X <1C60D8A8C9B64C38AD99E8223C0B9A9254F0E4579B1B3BFD30725E12228C5C34DEB993D0C77D6FF27D5E352A3813C70EB42A8B3D2B52A525075B092D6E6E6E4E97BFE0E5DD5437CC560D7D106A678EE3AADF83BBA717530E338518A61769EE05F78F54246B9CE75B9302C39B8F8C1542124648895599D8EF396E710CD73E67006E545441859C8C4827857C6A9776A2CCC5D6F394F78BDD7C523947A7A1D5FCA483209A7E34ACE988B041E0A8F20FB5F7C967238AD9F1181A118BAA5734DB94D0F8E2CE278250E39834086E84E941EBB3D28E531FD1DE1A909AE186D4C711DA933B91BE399E32B77B92FC3CBEB48FBB158F249AFC2B2D22AD6F79A8A2A6F15211304E085A5FAFBAF4D6335112A5E9596DD4E333DCE673000561ADB8A8D4BD3254711610C464D82697D33A879BE916D90D9183DE78069F093B112F1DA59B20524A0FA7098B23024D8B48FBAA8563F7E90BE62C385A040DB0BE9E9407F31B75675AC332D1C4B4ED8AF40272AFFD7263CBD16FD6BC8C77A641446A2DE2E0FD89EF037F4C81F92EC838D4A7EC7AF9BA46D5B734DEA8E23485809758A9E46E4C604AF58A39685FD1F7C1F85701FD9B3B1681D6B9BA4BDE7666783926749ACDA0CF7F56> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/QFULFD+AGaramondPro-Bold /AGaramondPro-Bold findfont ct_VMDictPut/QFULFD+AGaramondPro-Bold*1 [32{/.notdef}rp /space 33{/.notdef}rp /B /C /.notdef /E /F 2{/.notdef}rp /I 2{/.notdef}rp /L /M /N /O 5{/.notdef}rp /U /.notdef /W /X 167{/.notdef}rp]QFULFD+AGaramondPro-Bold nfQFULFD+AGaramondPro-Bold*1 [15 0 0 -15 0 0 ]msf1.10889 39.5181 mo(CLUB OF NEW MEXICO)[10.5601 8.45996 11.3247 9.75 3.82471 12.0449 8.44482 3.82471 11.4448 8.93994 14.625 3.82471 13.8452 9.11963 10.1997 5.79004 10.3799 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
/QFULFD+AGaramondPro-Bold*1 uf/QFULFD+AGaramondPro-Bold uf/AGaramondPro-Bold ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Cicia Lee) ()%%Title: (New Mexico Club logo 2011 v1.eps)%%CreationDate: 3/16/11 10:47 AM%%Canvassize: 16383%AI9_DataStream%Gb",KM..,gdd[8<H3]S6',+i#Nh-W!Ho_Rj_-UqK#b/&.Bl#<@P+mS=TDl%ZlKXrYN@mnf!JD+.218G(fA58X]tMF!54%rtQ]9C^%]2cnVWZhkPDIcgsa/\LnrQp%a9_3+9^)mYt=EA:K5\km<JQqg7W9-LN#Q7i$mef*`c;#^]DDIb@7t]3"H8kMi1E+Q9GH:E6nKbgi%%=?IkTJ7AW;GBpLj7/e7oThG<5O`!$qLbS"RU!n>Wbp?="PV.Z`k4P"4do`M-^2/m@"_q^KgatC1qlZO<orcQIPC*uk.Thd&9j>p%K55]o`<X3eq>4k]RfW&0JXo-13M4Sdf8?`rr^m(9g$th\eHr?mo/<sk5(*'&WXX'Q>.)/F>4BE>$Td(*/c8GRn3jjA@tm\K'??oP%rTB6*bPlTAM.ce7n@./0g<"#U*D]uCIP<+MN`-B2LRt%_fAf.Z9B;8IQ='669-/O@^T3[9?eGdj(08t<Pn*p^ccdjdYPQB,]@A!d%\<fm&@Hs'0C&`[uBj1kdU@7a8nU-ElSdbM+WY-#naug[:Oo\+@mb\o#QO8'Ifu)^H_-&n29P,E>UVRr7^0;%l#$C\rph_d[7DfFl%a3!geoMf9K$2$F^hjnL1S>m[`803eN.U]kTbt7N[oUU`VJT)GI5Cf"Z!AQU+oIp*Z]*c1.`ViBCB1)u*5,<+[J6J?:5N;\L;]pBE%983dpOQGUl1QH%s*hLd_B3-54_mg3sZQ0l!GT6c;%?Q6O/"X]cp&OkTntt,c4%#FEi1K>pGMgI0;2!hr9np53rcDFnlFQc?Fm3V<%K>"7Nmpdm*a1oD&7/.d,q0o6Z@n%'=M'?aL7At_2'3dm;[_gqk418l^YuS,e4e#/ndVNB^:'[D73kgZg3ur_*ktiJ=R.)DLBL[<*%4o)YS<qc#E[R-GP417JEQr86b']F7PK,!9gUmjA1I?>lSNdi3@p`2jK51.GB&Um6]nL$Yc-Cg:08b6FBU^OqIRna2s]KV-3nX-gW%>f,sZP:.gF$$X7GAk1'jNOT/j_cB;MI`IRa"c6u?7Os3XYnb^-.nj3A^.9>pa1m]s>(?HFQm2aK@k4>c^XFZqPRq29I[lO3!&8-^%iADkXM!N]Npr7\)apEF5SFE7uBk1O'C;KqS%8t60M:>sPU7.YtIJ=geOaJC%`"VEohm!Vg=4q**B&+WUd0q;V/Aj"h/8^2'8IEQ@%lNOI@nXZm/Y1(&%2oM4fKP;[dYnbS[UJlYg:B(T@dS,g9>'&[4NR3gf8:HQ,;kM2RCTGi6k*(pUP&?S4,CeA#a:N-u=_6a$=U2m$%3JkEY2],W9Qfk2bWMaT;nfRiVX(\P`@/f7Po990Io>6">-iL+4Gof8q:\kk1oXFWfs2'ls%RZgL<<)6+H=D?O^IEkT2F$G5AZsW.%M"sXBg26]@r1nh.r^ZZ%f+,RE]$fL6(]=L5*75Il-_-4[_Z0,3*mmd]3tu#>n5(f$B[b;MSnTX'eoAp`hlc-c=r+3!=&6:N=CmQ6%=W!uHM,#F33uoiU>#sRsR%6u89Xb)IlY>d"@0DEIN1Tm8rpem%\K'L^nbo+dO$Z.I"8uXk_Kg-[HAHFBD*9ZA@;__HBsJugL`?;1%[61o>&mdO^Nu>;2L82Q,Zj?*MjX:_d7K9$9`!=&]%J3<Pl.,)2!q8b1(AU>X+O2Zf8&Kbn+%IX2O<2oJHAHu_C`K!j9Q7lsISRZ<%)K]/5\KDmV$1sn)/M"u&/,uJq;?@"#KfiEm8t9T(^b)4I]SQDOH[&")93qu'9<L3p-ns<(,DC\F1\qUA7dCWeB4/]7'0%pK,3c$>%=6M:Sa6slCHoWP5iT&^Z0/4WM;S@%7,Z]%kHSr+p70\X_eQ?isaWEf0TsPE)N45V0B=dCG=V3#*6Ts]<BMh:E&VNK1(ho"#P+k4a%>+fM`O_!55l@dq+A\TI$Jc<[GRFR+lYE9]k7;JWuGgfNWqm6R?<g(Igje[4J>,cY9H:V0`m^EOJ:SS*#VR-]3I;E,$L(*5[*ce)'%(/f=SQfJBe/m>-ZP`]kR]_K^/1``T%*TaAVFHDfM%E\0)Wu5GJE(,'NS.;_>rbpk.;(lHeBlc,oAK/LV=&iB4=6mEZ!HO@*'M0D"%2>iHsjW7S9nggD[iD5+?h<6-nS@+l"d5:&&C5mUTRA(*@,4!%-`_qTaA>H@\FUY**,"p/.<3uj4q0/&>KR)d<7lD9WR8rGbYCWuL%FepAbbDF)0iPP.3T+DO."^1HG*[&H%eh[62VBOQ)4f*%NC]dTu>G;:3OU5rt8^:R"ec;[]08r(sC2_6UUb0i'G"0d8dG0VSb:Gm+%dkG;'he>ZI4TkE:H4ALjHaEjJaOkUVF6Sgpjcs*DaCDQ"Qna[).!rTZ;HcV[[>eg9o'0spA*H,oTkO>#]K\Pp(n"8"!qs%M._GO1%Z8DZbGD7K&3p^47;KbNC/^ZaeXVd'Ej#f3-cotU.=+bo4dZ0V/kK[6X)(E."?.8,:r%H`:W?lAQ"7!u_%9bNEQ(3lS<Uq6j&G<S3%>5W\WjI,A,N09Ejk4pEOiXn=&O4[\52Q`+8?r'E2;Y?tE`iKd9>>[cX.JD7LR6:dQgE`:\G#AoDOI#M9s'EV`bQ%$Q=GP>]JH+di%=Ss8O^iml%\#-$qLXTC\KCZf%5FYp6\r=U6edd]XbVT0(g6MsCV4L*.<YVIJ=:q['P,+2QIm&t!L)N@VhELno_$i$hh6u:!N:*sY%UZ81mHti3R=.M;sD1o22.&e\[W$B"r;jiFYoh\3nH>a[LPP-sVlA[$OA9nj\1\!*kAgsGi**lBI6J_b)Nj)H%^5i5\1AXZ;'$O#8%SX/noW+.GGQBQeC)s)1icS7ma`FKQ`:>(R(''lHeK:_&ZA=<(GdOq9&;Vjgs"hmEa3R:)KNH:<_OER@PV3WrAShBr1=433HR7GeQ%6)\MIYnd:.Q<$G&!D*[$9KgfbXImu!r'Yj"/Odf38m3Y*-Vm#dJ2EG&J;GWo27q)\V7rk5)(B>`)i]dh&ILmlN#s74Rk`GJ?'&4\%5d,IKj%8+<C&M*-C$VL,e(hg&M&X)o.Q?R1en6a-'3fN2Bo1)LqZte9G6o(K8nIg_03,an`_>D2BV$k[=f::.9!uSA=op#%*;Q)G%fT;E1KM#rQESecP.*)MNMK8(J.&h2WU'/e\pd_S7cU(l8FSOP^dGE4$[P8+X-_mAqc?`mDaNPteEF2YF[/f6"_Mr%101thn]I'g4%_`Cu],aY=haV?$.l-aCr[g(&tAX0Z`RPjQToiBYr2f_S5Rf:;=H$2]!SQ6<4`]5>k$>n*pNgX.qE'iNd='nE<;Ql?""KVtFfkIuB%.p#f<6s=;04#sdM\?ISXX9'V`#$8[`X8oE4;a?VQZnf4MGdYnj5g'H+``!b^P\.#Y!;3i;dPGlbW7K&b7uGbEAs+!BiaH#U]!>;F%P+5*'*E3!bG)[sZ5'mBX_DNgG[Lfh\*H?HQ.qEd_["p@!;dH,]BI(6EM@,:i7p2V%4H"JT^2ARqFj>hWFgpT!3iYf[Gn5r2BJ-;8%Y4%3Ja%k_jbG2au]LMo\6Jns?lMhZI)qqabc*VK1Q-JrZIo:ZsBWH(",Q1QmR5XJq[d(0m7QjV(B[q>JfC<+t^_IsUn%WVV#V0E\%%@/Mk\%(R</#t4pIdV]c`&>.ED/._f2Al0b]P_K8"`7/J5uB/J#,A;d':?@3=t4+P[YcaSkc1DS,<NU6/<Wk+]1@R9"&;3rT4[0e%)NR!,eK)/RPR+<WCRUA&)=quEL7+1qQIFiPh#&fcf.e.J9'>:UZ>u&Y:\c83-a"0/^cNJ,5L(i^R<tb)9i,+U;ZFoT-iItO=tXIX%aqJ=JVK'+XB=PZl`L)7rEEp[h&>S.<5$NH"^9,(^3JaGFa!:0Yq;C!&2)(OY:u]#*WKlX'F#-#f[`6]lcEi[n;R+;m)+um@YF8IR%r`cQkT)Z=h\VgE$C#MZfNr.4%m`U$Q]EMZYrHae,A0!Kc(O>JOidFkQ\W3&r;00$Sj`lilk'F!a?d3rSs)<s`&GK8s4t,PVk@8e,%_pMs+pC3AOL@N0`\F5p`RX%rXIH5u!/TMrDVIZU4^jU,ApDJ%j`iUoWIFc8SmY.oT<q;UI?=MgU'_kKC^OZ'LeXXt^:`-mV"m;_!%a]k;NI*YsoP\oY!Edf=d%H`i>BO,\n1h3.U>h;j!B)M(a)R\OL0u)=3\EPRr?*VYqnfj^tgo]opj0,['j+TU>o0.8]/V+M)/6Brr%(%ZQ22mJAOA%ITr/EUQ1Mj4*OHO6r+(O<]\9;h9FF-$%82WgIC3S-#M2^`kpi9WU"[AEHY!^""*pL.tW.4jVFN#GsE07G)iY!kNC%9DGk*+0^Jl)qle&<4uCLXlc?X2#>C8GQGkWIStak%i8e-`OX!_-^#<)QZ0*6`&YNf\kQMZAA6r)_SN1W-DTT!o.28O,=:(uCgJ<2%)(nBZq7h2n18!)fSefsC[GR,,W7::+%*5genl"`9b(ejaje:D#B6bH[bW*RWC.TC?B<fNfcX+g@l;<Zs%u%/20CmgIicTE'gLM(I%2CQW!2:+2+EDEMNkP.bO]l4QNkZpa,U=Y_o(JB"eOK%bFnH.$8'ag-48re7P*&!H[?_*5!;j5N\OOq<X[]nu12j&."h4Q0[>bYe&%Sf@"R("h%?0%R@6b\#4jHdO&3EYbZ]`3gSo)L647Y">ZCj0_4SWjpM[<p`ej[UA,oZ;k9]nL&YsFX!f@p/VdmP%MD*T;>c?g*t0U%<'HYD$mRBCTopcd\=KH%a7'lrPP!9up8ehbk@^k)6>Y9+3j]4-X%s09IOT&_[/2K+MWiQJmEt/qN-Q="e^+!D_]E-.T\l35CV5`a%jbjZtPL3c[8^I%to#YT$Ru])G.rKJ(kBo*ZVZ#K8+K7j0iT2>6Q/J3j_g8MY9]4%bYWdWYLWs_blOO3i@6<o&B?B,-=b"dk%Ze/'%jm\,p&Q=lqNcl7`qigIGqI5Q!3K-ZOl6"3c]0(<^HWCUilC+N[-G!ubL@8'1I]?+L[i*?I.u,?a4/00Y<83OQ4!IYde9"G[kGDtT%E3@shilfMUEnCHsPN8qUr'$XrP0!^'QmQ+OMfX,,*t4=ciAdDO#KBi#d,R/.p<EoYV2;je"JbW"];+oN8cS?rFuYu0]`ddS*>/j.%]%V*[lQm@&p%IA7F:_6O.N1,bbbs(kiS69LT5TqPiUo;DXt6s?T;,!H,(ZHa_ZYJ(Ni1_/!<:s]0u2?+J'O6,'%n5;*ZcYH\qBc]%rX.*(n&>InTR0rQ7^0C\BO&hkWKZYqClhoGb[8;FA2*5.On.`rmO!^3>)^$*2YEhn3'nK#p&Lr,jBDPEJda2rKCU*@VYnWQ$/"RY%lD&lCVJ2Vde%]0^@Tq1QHnpkP8km]XbJ3+WQ,AMD&?NePAj.3P4JNr)Lg4_jBBSeAd0RlZT]tfX1nTAU<"A4C&T+FpYENM(20*PC%bl`P^8;ld9h<4ks3i5BeWUZAD@qtOe>!,@eo7S1XE2BG\raDfc/];eeSY3Vk&o&2+V*^89P=AU`YNEaGGV[#T`:Fl1iFnUk4RC)7%YB&3[f?1`J?^sjRf?)k6,Bubgl_Kq`&%a(!H[3*s@c7B!_3N+)LPsCe(H^'i[^0=T,-[%h9srgsSL8&ga%>C'mFt7RX*3DB!j@bO%kOAQOn.5E6$db0lgQVmdIq/X8TLk(mNdk$pcpgG,6SRiHK3nT;iXcC/Q8]Nha-0A=h?>^_LCn04n6l#F3]t,O0&p]cNk@``$E-p(%3slJX0m%Z8Y_^06<\g&]<Q>kIP!K3MQOGO2WZs'2494&`EVfD*Ho-(f83bY44sJf-*kq]HT>6';*P9Ih0g5nNS.+QLkl,*L+$UTK%N%4^f1Y"9X#NXA(q&a#/DHHQI_#/@:n'@/#g`PE[3Da?":Qd1jK[0-arjfae/%HKkY"a+l[YM&L_.]>W<^T-UW^"OfnbSqT#4XC=%<$be1I+/CfGS1+>bh*-._4\n\3_%`jMNQ(VYbFGKd0:9'Z`@hN!-W@^a/2)-L_FV'Gc+i[NB*sr-M-J%okZH'k[CfYo]QW5U"I(!%F.C;]_rDmpBQ5BL+?reQ1+V03d!GKrn?C-32e-gp1*Z"-M^BisY%OJAgBa*%H2[!8Of&oS"ANo\OIX%==R:@aBZLXepH9'UC#'3+%U['YK*2%V('os"gk3T)m>Ft*\4`iAl)gcP._YB"'A!hRi+729Pe@VZf_aGCiJlM-lPl_fZiN>)S'3;iH5_@@K-UerEH7/!2SY5"e%]T23cO@IkC8>"W'G,sG82qmqJe.15!gM_FUd<=8>gMZ'!X*1PoC:5%_H7N`aPuc9&+Wh@L\)ju5XKse=buV1(Cc(J&W#7LGVVh$7%U?OS,VVSTtSOU6=C,?lh7_KBk_FDoA)dYlggkO:^)ciflWOM2qHF)J,fC@?d4fJ7#Y:f*Xh5T.O8@,(7e;B\l,H=72'LkCL7p[Gb%2f^*(K![^XLTRcu2SsbWKjc8969k*/&\=YLg*("Z5s&``c(GZuK.%"X+RfId&:kc[JW1BP^[8N.VVgn/IcQ95i;:7O$fCUthtF10%fC@Q9A?T=WX*]sFH@b7+SgPWgF$/3`6q=UQ9/K()e3tWL&I;`g63pXP_A8HlESGBSD7U1cmRD(rE<Fg:4]f.rlaXB=3?>$b[%+#B%E9^3ZKMLJ#Nop\gFWAGF/A#E$m?ZS8)g:%t+Ii][0_&sf]=)5([T0S?+X(=uDHjn19:e;Q!&4l$[d]%7G870ipS'ACR@q@9YBlMI%0FuOZb2/$rZn\]8#,5=5@*kdudaHD2\!c/8"bQ'5i!((8D+ihVnO3IJ&Omp50h+Gu;+=t`ECPM&jnU&=`>ZL%pU1cS&FbRAnV39L%P]W/_YYE^TI4=b9og287b!&E^IT]PR3`6LBnnMl;IPiUJ&uZMC(AJ%g#eCU=rU?YDTU#k_.B_/97qrH]=]00!;KphmJ)I@OeYjos%W?Kfk/ldeC6MV@p040-Ql:\'/=+*+(<KTN4e<cI"C38YIK]AOoBS!16jFP_b:`^^C-j4CeK2sj\Z?FlW/C69[Zqc/Fq4NEbBO`'i%Z75$V8"I3pqW`UfMRlji,nBG&3iI-@<4`HqC=bNVOAO;M#IIig'`aL$HOtd7W6>(N9jh\Id?44WJ@c17+aJMmW(?b0i(-6+W!-u>%"p-;la]K>rN@ag4!H9J3\MOc;fbUY/X<=SjY,ERH=B&\-4h:39'Eo2-\eG]\P*V?&%TXS.$Y9ZV$Y9`X%:p#\%qQ;`&S3_t8F[ss%dd!"R[+1N>LUmau2X-tG]Z84ITVjF+X!ar<+m<kc37S-lBuB:^2qn@E(SLCa.";LlTFSsAf<b],FW:e5KEL@'JD'EB?p?u^,B^4<%:#J_b&;SZLdPtWS"BZ]e/5QVLW"(-\jeW,#km.ZUPljKKJFN^4#A,LiF&j*:$A__U.S%Oc^u@@^q4J2L5TafNM!+BgWrXa$!]<=$%=C=*/0VCCc#NdiCZPnF8XlG<9bmGji>;FP,$Ol6N/V`N*.f4<T*:.bMef'3/b'QeH.5KZ#Z;1f[MCo8iMD#;jMD,BW+RbRc;Nt%G%)cD`#;P`&fkq":9.,$*)D?])?,ogJ9V&\SZPcm]X95/<8FX2f^j19lmUYMX*U[4cJ$Y0Jj!3/:\;-FOY9m3KDW"#[9D(.38';uYE%(T84M)lt'Y+/g?],>q/adQFn4WjJV,Oh01Ch-I!:X>[f"(8NsQZmQ<b5:pSq5YN\AO/-&*7<56T,%^>A73dLqQ"$S)8Wu]&`Mt5L%X!6r0Vq!<"?tgA1=NN$rb?2_c]p)ttWRsX$]4ctp*Fg5U2&F]XU5_SlMftC;/_XC6[Ua<uij-fTX35Zf=l,#o^+F2Le)hGTYd2#X%$VWIG/TA]6=&A&rN%g`0D1n_pDWP\RT`qT0$o"/X1;6Jg]ZTZRg?+.4hNFue48V_U=ljhV='L)M4N!kIZrjIfHu:4EcjC$KbElT,%71bVq[j'^!j@D;H0=`.pfQUQB6qbZ+8k)0?7pU-IAH\h4ji!LkK$o8Ai`=RP8Sf(\.68IVgZ7?NV%B=;Tccd%Qr':S\XK*(.RBH[%!4^r%PS=HH/\9pm6R=0r-u>"[Qp?P!0?$KQ8;`u``QXJHBH%PjUmKe#0@slL=tqPrU7$pQXg=?e/S<jO.]Z\qZRI,-?cBe&Ei*Y#%>>M]"CdD>AXcaEaG-mu;.2c&>VdrWGUcQqD>3H]s?#<0rg/-?XP--a*2O:GGW(9L&Up7>hP'3YCD+g5PP_QXj?%$!>rD8s@5al+g%L'9nmOfX1K<_0G=Oq$ZRA8'AV5t6dLFr>N]A-c)"FrS3k?_G/EOAqA9SA0aVE`6=?m`Sr3ZHQArrPu4IXDC.f=:77i^,_JL78YY@%/75<6/"0<6=S#Edh5Fq:mT)[T]4$pr.9AE+RAagB]W1GM5]b@@'L.Ae1q9*r;$8c6&tpIYBaa8<kW)uGZ!RT5&lgk``nGTNX@s;>%"u\hJD8.FerHkN;<]-'cfr5/cYRI>2RS)_#+)d@J5DJ(T6+5:M#_NG,V5@Pf[A;<Z8I9+[En!/YY#?IQ%LT?g2=:>"c4;Q!K-^u_%G"Kq2WVM=5RU+lh=*WI7hKH0]d_aaVA)i:_)nQR+h$3'jYQ=Uu#/uPq=\sC)AY'j,S8M6mH@JAmRhl'kB'e9BKeg]!e[[]]n;f4T%VTGocqWBu4,Z?m'#AO1##80DMX'%`%bFbJ>"8['b>f=lohTA'4KO=`Zi9RDA5--sJc)UI_r0PI(.WI%iW_ocdn5jMg%*Xla=mG0H%rdLpk3;:Vj0^8i>s4(AWC.k^e,m%=ZE3Auh)EtZ4BSeN*.',&&P>cP=ougJU#)X^3/!)!e2>!k:+RXMS0H/t\8MhF&eaWga7*Tm[%3L*YR,Kj`@Ob(#;9gh1maSh!(WLf::-X"Tuj'NUH//l8'NC@*-RP`bCB".nY5nMI<U1V#TW*r1FQj@K1Dpp,i[g8;f4(S2P]E$B_%LT;ln6Zd9Q/^',e<<6qeFE#;D,._3%b6o/-A0<R[+%@<FVtq.E;EYi7bI0P/=Y3C%\:dbm5hI8f@KY':7fn?6!1FtN(rP\Y7)XsA%@4cL_Y6`'0Ns\A"aqu$k#canT[277j@#$>[d@d6K8CSiEKUM]h6;lWs,V6(+\X=_6paK&/HYO6!RAgtL.DT(^DCMFjfCnE<F'Qmh%l3p2k4,U%u%<A5bGA7V@^C3.qJc(sL3>#1?3u3?E*>]J4@V2ttn6LL!'+&"G*[@tkr:;rQbF0kQ[lGr%[pV=K?nb2d@_fn';8Lue%Z4&cdJSMV87BG=pYlL$RQsEp$#uH!,J-DPBRa_==6:$V?6s>Y%'LR!n!2]N$.n*?X]Z*^qA0/gf9BJYPX<:/J0>K;(;NAk"bmhPj%Qe[9'<mCfJ&_aYt*>oD-WM<G=,$;FWOlBPT]7H2R&VZ*7T@=l4%A[jZFpQ;si/%LUV*I::kQ\DgWac&XeT!m$6YSg=E"WM'-[VD9%XclfbI@\hF%$utePRD:/jSpCX.nF>2kfA;,*$1r&(;\F)MelF3L?g-kMl%o<U]=c^(o7?-lm`r2AJ65>2mB%kN32MFWc&J#h05\^%3<AtIa-$p1JD-q"A0-s#,r94.JF"D>E<.WH2fH1Q?q6M;Qf)X&X8l>jehCR"WXZ3l,-4%".1ktmoH4K$9(a`eV7IiP:F^40X%gRK%mhC#%oL.QEi,SI_%#=@qdc66'nZ43X6i'c;s*o<"R9)-UF`BMqUZhm%Y=1#O?+5^U2HVaGp$X#R\-"<mPQDrg^^^SYfg1pSocV-Z%$48h)&$6WF'%inB(uL$S0rPCh0b9S-L@E#-it)ch"eLh>KqV!J=+Ju$Ag.B,/V.s#m.>nr@["';M$=sJnl4?dE7Ch0#d11Hnn-uM%Z2rYZRIi`M>:?@okdMiRn='TA)M((?FtauFF^8>U6%B#0N?"Y<Dor)IO?'Pi"SNh)gU]^G#-gL[)VQB7o_K=G:AlDn0WgEJY^s\_%Kk8kP)c?dk2H1*k^aDDMjp`TLOuE@VY#*2#^@0N;!Z8-NZJ;]M(7\4+f*`R"!F=GlAF706j!*,eL:NGEg,`Ug'G,CX!CNK)*X.ZD%!:jo3@*_\eJJ0XH&2GrF=[(bneR-h18?&%I%Q+t<1,BS/YSGOY"X@CU^NfgI@*nt''I_8"h"[#k\-:8>![69;/1"`AnVH3h@).F!%T#ZKb(eLWjN*IDH&fq-0?rFdr&Mo)kAnfARAeBUhOf6!WUG,SJJT*S"*#?Kae3=#Vp(a`m:cnlRb=Ddbpo;(A0%>eUpBS1gZ,kYS%hiF^#`^,W_J.XQ.JEW]g!&e#"*Zt^jP^*ChLfVLt-$M][%##cO?AFQE#69VA-*SUL<?ZeuCZ)5WKVO8%?,2MW<R_Yj!@TKp@I%)?%O)*?05?-@<+pe>JTr"t)Ojll(7P7>3kQ_6D!8+W'JA>6LKO>r;D)NfG)Ade9&.2dbMaB:S^bqf/4?$)%+&c>]^iB%OIWdUf(:5pj%7#G[]FL;F>L04PJ^fC`&[3IA-I"e_7LV?(uZ?Uq;O/)t`g;9qe@!^3]n3VYBTXH!:_M_M5't"UZK;i?qI9m287YK)3jog6M)gE->%*0%Q3L&pV-T,Jhmg!GC)+V7P-9JFt4!Xb!*7hi5r,M9GhmRNt6R]m!TEu,&M*B$h=R@YHbU.D9tP5,2&"QVJaJO>>,Oj,W9V?%lG%7:%Zg+qc;+F_+1F>:L$_YXj'?f@:AO#;?1,0*mrM)An<]F]YmLTU)>f7kJt=ggkT]N)V4Xl%V)h&S*4de7mEgU^2Lj:.g^@5ae](%;MD:Zn,P+Z9>Z[FM9t,!+ZnfD#9<WTi[Y-H<GH7.a3uN<>f@HuJ>X%@/eNc!,S:T$R'GK$.:JY[q5h[jR2>on7UMDIK/C]hR]aJ`%"otkJY]AG3[NNq*IDNV1l8-sK!2%T/7Z@d*k6NZDTn7h]Apm$>6Z[gb"RF.HlM_h[,NF3BZj.%f44"'tQHM<"as5Y-2iPM:#fr)4%JSl$tWEbcY!![K^!Q^77/e:mK4:=;Sbg9(P65fh.o-79Q2"UnZ/?RZmmjk'81B*1:n=<BQl_2]d;IC$Y5SODj+X;`6e&i8gXiClm%`+$&ni4(\'/Gje7f:fJVO0JTao#'FKAuuSeLBGd$$Uk1,/>;H`@Vl*<as-"^ol`%`%U&"C?`:DncbUUrYE0!.3"j,W=u?:^:8,@i%#aP,a0\@r]q]69aYqd5IMVA+JBg:Wc7>T!D!hkk+`LI6c&E`g?p;/0"#=,MJ+o>8pGmiOan5>&S0G)GH:G!F9==[qVAI"ps%nb'9%$%2/Z>e;R-`[Yr8"#XkHH(`'$"3dqu+S^+$^g`rM"rc]PH2o2L<YVLR&I\Je*LLf)?sl4S'GCf:41sVUSM^rD=gjZ$RYZhp1k;V8%,0U2XLP%$;e-#J(gBgZp('':u>60.K8-ED8_.$2oHg`ckJ8O$R494&V"?O!;BTZ*,loa?j8&k']J.RiP!Je3<Q<-):$PWoM>lum\%0F0DiU]I\r8j!)jF%C3LBLQb&AT^NE?&,=u=`4;!T96/c$R6k38bi]'W<)2h[V<HcWE$_p7DR3g$crH[>F!3R3Z:DZc'eXX?g%N$%TL.^/I\b\Ld8H0R^`s!cZcj8:J^jj!fe"5*\ulOCTe.rl!M)aejt$`b!-U_14NVmQFBLtY(#\&L&Sm1U2uj1;r2p6c`#qmPN4$l6%#\ZOGX<skHKFTU7",cPPOC(;r"?+`Z5W<X!kV*7SPf!pWINL#CE7o8&2b(SJE"WeG8OSrlr<#P#lg'dt.0?Ed<\#H%kFtST!!PDg%E\Z/-+@+'N!PKmZfNZ'&GP$$Z`dtRfLm,9P)L:OYq`KB9`<#1I*(bpQ`%q&55RkM357ZU+og/g@EW@\-3]$oBDtB]:)>$4CI?jjk%&&+(M4c4-&JC%_WN,kqa"i)`>#H#3LoXX2:Ji"8LBISr29dGTm>S3`$"S<h3;1bK^$ikm%@0D7%lN)YKE!;T:&1lX"JHI4;!A/&0%)1n*<%aetZ\<>01lP4?bJSNS5,mFJV6;u(1$Gi+19-U1J73JDs_?d%S-m3;qOsCqge2\*J[k\-FIRM+4;Is#3'O'OKJ3u.P9').s%.]<>$$pqdo"d7i]U6NXL83)3^4-PVS9@sSE(Q,TF+j=OiK\4j5r?HJ752$nV3a2&?Mo6ZeDT!/$L2>3KluS9k;GU)r%6QRd]*Tl9%Cs#V[iX)[t7-kXc[2%%(]S\>`/-9*p#oSZJ"1Z'gX5qk5`[+,W=l1G2*;#K^e'L`aIg=1-pZI&B"pd?b-ut.M(nohg1YK?(*p?U$%LrpA2-l`GG^;:5iN%26oTNi'A\D=3>$a%X8!^d17hLf(8!0?-N/?pgm;?_@QXprH)1b=pmfqUsX:BAh\2DQ0sTVmrY5QKeI2#rp`%KqCd66RPA1\"a:1_UIaqg/0%Rdc<ju%hRqA``L8+!:a/>$PC!"JYq.4]WeiD7ePH'aA!>fJE,,*<omK$^t(hJKa8Y5pDJc?.LAV<%c+)an2a'E6Z-7796_JkZ##X%o,U)*Eeakf\&qG5J_3HMb[U:jBMnLUki!IJi%.o/lN[*1s[G#mgJ<,I^P^4bVngRL<@c0!P!^&QA%p&q1n3)X.Xi_H,G)?b.K/r9b3;NF'`:.s3\isM>jGfmSV5$#U[j*;?\#qQ]lDG'&)!3Em"GhV+>%,C,f(Gmd=<VAP?;uk9b3=PJ$%Nka6?Lr!8`ANcH3DT(\$X5!^I/DaCr0Xp(^:#sEV!HIThW<cJ&$`DDV8*Q1^!68[56l7@%%(*d,<,*a7cjD3qJ)PH7Jg4?J=W#34%*;\ZLSbBRe:-_2M<g=%"5tHPf!aVL*Rp'k5L+W]pT(Y'>.Q<;ch@2a/$#ZfPJcsZ=7Bdnni#DVKXf#p`Ls*Vs$3Up=UB>3qo`2E8%jWkNF#djnn1g1A.CK$Q%YSV:RS(B1=!BI*7.`r#Ze#-\?b\FZ&YFS2uKT(Gb]s.-gC*o8LEZKH6;m)<R:C/C6FdOQDN!:5nX-!j6%S=a8a.2tf4jN/[))$B/Ta4>]AVKN+'b+MP,*]X4N+aI$fK(F-cRUSO8&kP?6G"`3$a.s"7NHiXq.0qhS6mINgFHB:O(o[bUKG1=E%drMt&,f/hRV9&/1]ZC@cMAeT=*M]UH#_60U^q>Da`;m_`_T:4n96oSd_PD1IL5r%8%35o[R+7Dd:O&,Iab4L6j:jucceL\3"U`LU%=-r-!.\IG/Z<.K.,_TP?T)c27!rtB`h_nNq&1DWon'h7[%=f10c0^=EK:WG(,uCP7XlnqS0V>f@B`OB>?>RSqNt+m_V,e"(bYUbm%A.E#0Bk\AQOY6cac=)F\n,f7mF!X1((IE6J:Tq0?MF:<$m%I2?r$C9/'YqQlQ+R4*M:OqIdi"fMQVG[,@$s),`qgacFW:R,e@Gjk%o0quFpV=#4p6Cb4(]ih([WWW&%iRjI'VeC0(Jo4Wk;lMfP[pGr-SW&<cbp$pD(1%+2%-5ai4=Mj8+j95"$#A=CcFR?FfDLB9thNs%_G5Fq*l.@l*`r/:!4"'Dp"$AaV&1^AL1pYCB$n`&:oPa+L"agH.0<[jep0b6iJ;U#+u_'nhEZ]c.XXl^Vm#FV!9BTPMU1>`!0/65%Y;l(H*PD^@;_a_k.;D^YBE/%5X9K9#a)M^X@]bVk9\#Q(D5;$%(QaXGEHBLhE<G'd_Z>-[/mVJ)nhF,UCle^RJ[XlcKZM[DJBB(2%$8![!ol14)Y^id&,le.:Go6s6!"MqU.aY-q<)pu:FHD#.W`+Y-F(PQU83=dZU%djQ"3OVkOWm'ZhZHgnWtiAomOhR$97YCN<`Kal%!K?/%FC:KO]KKtn'T(AJ,%!e8Lo\dsIoEnukp"uCPm9$g>R5@qcV3"K*1-DMe8@$bpN`r2*gUOnmuBn!3"-J-eKPr93k5t0/%M9>%'Mu.[8_*N.-'>ps%qG:<\Z4b<g8FdPFnbEb"cK5n2jh\6YpJhJo)+V&.f(\6Sj&-D$@=sSI5.V=.7s^ES_TD(a0q;Wg82))hb2W(%TgKY=j"ud7>tY^D,02i7fZpp.2-on]bIZ`1?T",&@J;pus5^(Z!-8E(dN!B+keBGGKe!0ES'dCq;]<I'S"@@N\A1s/D+IV,%gPY1%co)!Y6,[),m?Re"%kMQg\3C*HN.@#k?O&la\C0LK!f_B(C^>Q_b<`V4rOS'NY^s,\4in6,QB5HPh#f\s@K_n+b@2i'$pO[l:r\>l%!&Io(oXoAP5W;[gN:`3Z`kpo&B*aH\<-r@Q&4(mWMp5mZ\CdR6%t:HMCH`L2$0VY\#.\J2E>3EJiN)q3eAPVYo$_T/WQA\^].VD4%##VK*=&]_YLS`\j*$A@fV+5TGUnB&,kM6XjO(NWo.Sf%:W95q*1'k>ai*rAE=pPhd(,e=LhNUO"c3FH!b^qiN$&uEITL&)$Bq$**%T2mI<FYRP9'$<J`R<[N.pXq2f*&g0!H-efr;7VU@%N8m;*ZS7.4'S':!=Zu6<RRTSP)gQHRU0>G-BD4XauDWeE1i6^q34qmd'o"P%o+[/L"+G!o!f,;4J1"6JREU>"no??A(ZkI[>5B-S.D,^4'rLMhK0Yuj=*Q`*DWn*So[EaZTBQ\^8NsqZ+RE8kZbf"NM-"X#"&L4a%]K(b"7N<\rSJ)'Ng*dd=`rWQgE.'LG;W4rC;Ao`tmDTa<Nc-UBjm50LlpGR3f?#Vq1QJuQ5%;R+)ifj^a2mEu^,DP/$E930mKM>L%>Uakr;$_]T5,%/>j+m[LY!-iu73'>W\b$I/%M'-)*)?$I3rfB;$dCG)In/+D;Cgn*66'-F,p:gi1*U4#jZ\Bl"S=i8#ejpX"m!o^%5eu?c*S]j*P;PohRE&JP.An!?.6>aX9pnBZTIlEiH4iL<)t<F(N^HIM6P/P$Jd2QeS,JALan8An<uhE3["L%okT*rFl\f#9!8H44%BBK%N:8P#f&kE,7WF@>!BE=bd*Z\)6M(kFB@ZccS!*_L1F)C&`jSHHX6CBdXjDj=@-A_O,>PF1lo.ik/AE<-_!2Fi\2sB')!;#_&%T6?P9:p:U3a%dn=c)fUA_dRD*['D*0UqiSJQ5Yh"CG6iior5g)L/<6<`.+KTf$nD[RRu^Q\`f?(6p/**%YXF'*&6G8PX:T7ZQbG-%*.;E4\hd.7KB)T!P_rYog`a9o=gQU+3?/M!&UhSg'u#&VMl6i>FJ9F<L*fD,'=?H4aT>bDU&F^Nd.Sc"J3Ilm#[PgIp%d*&S^Yet%J4Sp^3LUS*7!Q^%#G*Qo.rS3K5@CAb\pB*=gNXdnR0n>Q&sr,NBRb=+*$$=1=="IK2Vq)DSd8?D6<]XXi9h)IQBQ0rjR'"r&%%$M%?PcNJ:iA%T%?Wp;D$5#K:U>uRIoMepYV8ra;cX1Mb3D@Pl?lIel&aO;C(!/kV:E6cVLSb7F7]hF0LlsZq%&%.O"dB2O@PfcY\WcT%R<)hb=s`Z:&X5DB5Qd\KkhZ,4R4OtjC+=F@n]F7kc3s:WWPGDNSSA`biX:.67V2fAid-Y'CV3f3EmlcG,%.E_+"1J/UqD_eJ-LS]%M=g'%)$(a^]=?5M!DH)/dj6^g+CmLn/LbM:c=iVn'nMK"je,3)!PHcYR:u=9YmmJ@.1]<VE+u[:"s2C!CnLTG[F#s#5bQBVr,Sj)%qM2G9*N"`96(j9uR_u)V;Cd?o:IPEOhR4%WjnMO3TT:3"OZoD4p'Rc`(A1c8>d_H]>,83eTF-4dkE?OU%LlgP+3b6XQaOUe]`Z+6%>qC/q+dW-"H"9oo_#?Nu+m7e9;QG_VA+MAp5tV5JQb2T`9]au=huF$blgr2nh>m0m]beqY4)>f<Hq[aOgVCi*,`ic3W93;!Dbq\*%B=_WEJVQ)fV^uDS!>p-1kVZ6])7C6,qE'Wqp'L9e2P9O4eHSHu4"PdR7NP/L+E'9@j5VtHU[L5mCl]:_S31ir*An723jqRr.Am<9%&3>Kqee#YMh]n?XUa$%$E[V;C)Q\uFo*lfBL-hN+=/VGd#cl.E#o;5+%feB.>^`O\^p_9BP<;ju"JDZ2JglV8kh:Du,LdORE*.O3%MN?eP:9(847r/23<g<ooCbl&qC39E*Rq&5(Mh.h,;[M`H-4doTA'c*V777R6Xq72u<p[[:07:l:B#VEsI,InAW<Nr2%S0E9=TNqT%2iJs0?f*2mRhn[X]KdXui)qo=o"M_,eW8c390V/a6WPLl2BO*/eIRsB^8GX^j!!&bE,%.LB8j$hTJBW^gaN[$%MV^Yk:/f&h_,Xb%>sd3Y[06?'&i?sI?_g)JJ?XV4-XRn^7iPn.>mtd`(#/"8Jhj6(5bI^MT&N^=9'rZf9A;<^d;aHBPm9c?-hK7r@19!QpBDXD0pD<4%32r`;;IE!8jqYl_VL^;Si"I;W*'g<0VFWdWTe0O]lEg:(TQH;!1a*CtN3OkT<;VK"TK:9]Re.76/)T1@3[t,HD)gV-*!\5J4pXZ6%Xt'?nahSP9MjV!E'I-,#?GtHlpj`le+1<451:_SdLQ!bP5[gPSZ2J`k=.MpEW@D\Y*nMQLU#k7kfppt9FOlr%24DR4CB-3H<F,q]%$d&jXRkS*Oi%hjigMg7!;0t/c(e7\oN]C@%gN89BSHO!'Uh->p1%K@j"KOm8=S`BG+Lle!"&!t*BV=?.=4A3Q)'9:'R\7XOe)^5H%!>Q>4[Zfk-Jh2nm4K^_X$UE#EPT94m@P$0c51?>=5%2Q7<IJ+X]#+$G\qc#U+)nnqSu#8Yl:joI#9GMZR0U)P,<VTd)!MJo<W71+%@&r-(<3`JsOZHJW*IZqcV(L1!g*'J:L0PAL"1dk=W=8u3AimYnC8o:nV;_^Jno?5Fl8+a9+WLiURGdS=@!$Zr>s#qeAWQX8[pBU+%m^!KDNq@:_g0td/H=I)nHu]O;5fjT_:mE//hMT6WH/D^$11jf5,&e7KNR[Ke5f\08%ebH7R,BArjV\1bYJBmI>hZYL;IE)-U0$a@%,;<*WEaI\'*HhML4XW?JTn5=lWeLcLd"]pe?R[V!jA;2m>dM9*W=,iX?Y,Clct-J&*+OMq;jUnBGu[&N+uPR=<BCNf$lhaP<X!LD%qWae"\Gs?bo`2G>"7R)"4EqOM/7.UlOJ<HkQOZ=.!05?!YS'JB4E^-@4+JWaFKqC#B8fsXjX.dk;=V"KYG+/P7KZch;S&X*]k=/]%$VQ7;'utX`kbDa@hR[iPHm$r7%E1[qCPMp8l[b'7KXiA&hA^F0^d?kiG4Ye8iTb`o9<Ui.TFegU^mnkUFXl_B$])[4g-Au:<\V'&%1qucqnIW*9oruq?%m7`MYS>2"N!"?1)h_26&DL=j8$![g+!A#bYs+Me])i1&^fmf7C<iNbF>W8JSo3]uY)uF@FK^]^\<Mft!#F3-%eeu$i7mMl+'TfeW&ZD&Ce&U?b>`Zo7Cit(LdW_'`3p0("hdqSHcTo!bPqCK^.LdRu(bo&-J0M[LldEE"BRiod3-EJOQ%6#!&A-Em%)n]6^YgU8.'e-O,qH=G;7)h#ujD"+`P0ZJUl'E7V941<KP[d.Tj"LWdc:qSqE`5C6I/f\9Xs.:bbQ,^c"<e+L@cWEr)OS.=Gi),1%7_%T(P0bS+?#s9V_\>#AEi5B2E:p1_Qa\pDAs^OZQqr(@Y'rs!>LRf_&ZU!e<4G3&C<WQ+9=o'Ho%"go5d$.?!QYN1;d,5@2$;D>%GmsY%mej)EE>?,,aSXAt"6cOu@c>:IFUnhpC*s!g1n`,*3dM%W2HQ:e]&Y">Y[R(8OSu)gO,-&ZH0@5>hl=JYHX43kbl]qk2K=tJ%+O#Y8cu3K7e.H%H'fk<YWbCbg3E1CZ6c>_<.00M#M)$H$nH.TX&Wj>Co\QZdl-gf95-f)qqA,?[3[el73l6%3"Tnn-U9=ltE.Cb(%;sh3d*?cntGGl?u`*bk;UI4o#%!F1.#C]/J!%j9%%Fh(A/(2$7:+DpFe.FVGjtOeAa"H!tX*>OiNMFd:3N6d0QDJfE>Y8#\h)\f.%EjugAn)9CUP_urmWSfjf\4#9GaUNVZ&B%G'3<?l8aLk>@fa&M3eN9Wh6SE]Mcr9a$,(*1KP:@V5Nd=9[TMU?rX7tqQ/JEL6?.pCN%dcD92R"I.L8[(5"p[t#=SBt+>,&?fp#5"c<9ID&lT8Z5aHHfhnh\]3<e7JS[+&5k8+jf8%0p^L'%;7R"F'75HDp:R#"T!M5d*bE@%!cq`)f7g.g*_50fit5qG3=;-1?`+K"^$P3V_#\JpBI*N*q$9J20ZSSALX-sMQJSlR)#$Qq-rR..Q-!eF%eObt^uI#7^uM1WncmQo%g*guh#.!CtKT>AGI0WF5l1"B]T6"4)TW'[+UeI=P@E^]gdAJ+l%\SmS\cI*!!(E$ZCX$-Ig6gl:#2[94qAh6']_,;b59gA--0,0A%EWrT`CboOO`FfT!_)nN?F3iF8)!-c,BDc?h;kM19l)I6EB6sb';92J8nB)_PnH^Rs6'e9RQHo7M9*82@N/)(/F!@#^#cnO"_^Z_"%:l=I7"X2&<^U`He#Gem%S\n'VS\.&*'kV1?XqfTIoMpdqGP*gZo4eG3+ZLqm7#gV<qScb^`DG.nbbj4Oj2C['kVHo;n0Z$=Juc*k%78Z\C<CiOl[*%-KM[67=Eno0X3Z4;l1H<hONki767gom<E[Q>u.NS`WIR7uHCCbc[p\MSHqZ1Pl*h>L.hrtYZR*)-%[<f<&prgRM%8#'Al^[>H"i9fggkmYSAXR<j6*Xq#\!Ihp&$Jqq7>q(7!.NZgqA%R'^?oZ=nS@ordB8?0%,^u5T1c_%$cKBgjfM2@"WUH8<h5gOJ%2bAbpH)ohnogcoEP/iVQ3.*LJG6+uV^&;*&O;/cm`m/qK37S:FA^Wf8c]T_8K*Q_@'NN'Hol50k^VWGZdH6[NUbqpN_Tq1Ud[;A1%c=%UIDFb^YVkkRj7mrZ[l)[,8?Cg`o)mA(:F=R0PMT-&B=UHOuF?Z(/Tld+TN3WD/<NE<E2R#3Q*fm2s=Xd'QJ%.uFbI\T(oriGd%Ce2e7BKkZ-pF#M+Wo#BG<I(<.j(&eK7["9Q>K;B2R3%"Z)Pu+jFK^l,jjg6*`3ub\;XoIGc`Zs,IW)[7QC!p`Km]2\N?*/PBN]<!%Da$iUhCP&8hAS>[?[qR>4r@YG0C2S6Jr"n^OOF2aZV@3kdJ4kUGLdVULHT>#(p-rj^R;qI4Y*Yr@4SmehV2UgIoWq$0o7%W)*Ai1%V]T?]-V?hUqp+rYA[Q^GhCdV7OU^*BHb4B<QgXeSI+b?CV,!4tl!F:^>[cSDh(*obG<_ZpVu:km(sN#?ag^s\doil>]^!Q4oRfhs%Z38r*Z9G0$.M$);ZG&Ue-d>\kaJ*?cMe%B&0Y<:dZ^#ot,T2T&9Zfu*22fRCDprs3>_]Ai&9%5"%Cf#"aI=arrcFZPkC\#"K]rJE%s0k)WP>Qfh4&W%Wl)`1-id:aZOCa\L'](j(3:P'[b!Hm6^J.:>9"-AOHiK@eX^'m#'`N?kVY/4f^1Y2?<G&[")GXr8E9"6$WQ86g%,"L^AEY3MZdr%;#FCV@VBAp-!'X(pAc$2'=2IF:@=eA,4niK*T2dX+I$5j>bUVUVap[o9g0pIJr,3Iq=/bs&hrMH&Ljit-hI4qOX%lh&<e!e%/i@*kO:`;OgblN=Htjj]gVY&FDUnYAC]\kZi`UFU0tdaYsP5KEgFdEW?0VEAG`%Eh1r=<M,`Voq\g]g0Z9eu`JWj_X0C%+"!2p^Vat*b_gn9d:7+]#YM[VZ1W"_a0?PZN1Dk/Mjr#^Q_0*I,s/4!*mR0=NMIMaM)oTJ7a8P`Bp=U?G<6Vk87!Tpe#Tu;H<n\:%0H]/6TnfDbphDW&?+qncMqTZ"03:U/UHVLqK1*6$+2fHUP:oR\V+LOQ,]E4Gjs9BfkF8'jZtncLr<+@[?/Y\OR'gs?qRE5%/"*:$%N*4iqD.h'VRPUr+jbh]/HKM)(`%5)tc1SbTbHe)9)]u%B.+qJI[p/.nm^E+%]d3(.[XPcICq];lqW7:7]A*0dpt'O<h+di`akY;R%*,N1:ASn8!n!7/Ul$*b`PNua=HPhgekaT$0P;Qtl8tm]&DNgD]]P_]fk9JFNEllsC:d*XoN-`$JR2-f<J()&fLVmYARLGAIk4P4a%V4qdgLtoH#]+J1!'p4DBCj@4I0Ub+_U!]>b3he3hUh_<O4DRl[*c:(DbE[Y91^#CsiOaq..bD6_\g*'IVHKEhjfdsdYBK'[;Gk[q%DIr;9k#Zl)-]a&]laWHTs"F5$_8`m],l(fXW_eBIJsi1KPDtVa$sptmf;QmMDek2[/7!8!f:V_CD<_f_M+fd"7@>;BVjrsuo`oc,%R1R[W"$q)(iMa6M3Xtr',VI^->XLf[%#Q.JZDhIcQVK!ZF5%l(%RljRFh+H5M!(iA[s96=hX&\>`\3JN]Br"PQlMsYmehCFrj4qj%<';e#),*nhV/8-e+EpQlmJ$Q+MKa<_=h/ptqg64`\JG(>WF3g\W#MOaj]\"QG9];7__BneWVu6=9IZ=i-AQ$H;Gj_]%.eH[L+1gA%I<M5_\2t2<VS$12i]$M6ATLO(E3\M.QV[T?9Xe9=>W4eU;`=0W_/Yj'8E\/B@lHIZ;m*o^G8t4=*+jC7jtBl,)]sk"QE+bFdh&ls%7f3JYW*JZZ^5p1a]AkUFPel,As(EE'=68M?[]a3Wis)rq>jJ\<qRq6XhRgPDX__c;I$_8@i)cUg40Y@>.[9Ht,W@rGnpXB@I.D23%ZqEm:c/*&7[KX7Y#;h^(OEZ&>@<47D1s1#'IJ5b*]9bGT4YHLSIbk#/oO>&,hPXAV'&\L_e(S,[2_j2A\\p/D`KAtlBQk5/B@4/m%BRZpO.YC/?(IrWaD.h8q)N0nT7dKJ(IY\31>QMr2C=(\E_Rg(jB?tbpm)-5DjU+LM@*d!7O:Tm5I=rt>b&p/sJ!/k7d$OAC^F0nB%G%sqo[0]GO(hHX8EcL9[<1As/9j3bAHF3*/::iH!]n[0jPC&ME<l^cuWdW3uWjW/iXXa6u%t9;+pY\?F<90J]c8U!seoZl>g+!hC%]/ORYaCNE6Gu(Wt,%p^rSSITLZh7YH>PapC0^2.kCMbVfrF%@ikR[P:gU9b;nYtFE-s(BdrndTR[L[9UA3Prpo@JMXD2G^8#gs\u%O%7ZJ3Rb"qY"CDpa7D/o8tn55^5J]/Rk6SoP`jIoc:rMCerfqBDB"#p#,,;R6f3qn.&/0'_/!5sC;+V&(ZJ#9G'0A"8nP`&D(EA+%F4-hZ=0</&*$K+kW_=/(>_In:6Ip+eXG#46KPYD]8g[`eQ9KD7]D;`@X%VcdbB^^AUV4a4rgRG;15Oi%-lGZB[9I[0Uopg-S+lnd%<NfXC5"3;*48D#XbM@@4DEIZ4U[5[1-VN3I)p41`YC(NY]kek\5-/J-KtQ/,hJFG)[ZG];aFE`sm'`"Bcr8f<pB!pYc5(H$IrR38%-:dj&-pW6J`bF#jd^WR$pHbWqDj/"Fo_RG+,Y<ab^bR51+EZjTNpaUGNs<_mhB_@A)bo>NA[uL3j`d=jIeRi2)Xfrec@[`u&j`KF%ga.6<As1d2K;T^7Nmt[69,ChZ".3MT%*pS.8MZ!K:8RsA^RfBCDUksrA81DfpQ`q(dbZ$V,c0ME9g9T*FD9aHVn?SGSq7KZRSPOY%a?SM?1Tegm9(FM679-.#BIh]NJIMN\d^G"/Ef!Sk8BfPF$^jSAR\QQudi[Wp0$ph&J9!\G\e)AGG'0]gh.]r7qQT9\Wld_P-WPh_%jelD?BifN4eX^l+V`_)n]$mhMoFDsQh_`LsXT-eBIltd-("'%n,2*[49N?OA[ek:kIj'e3^MS!u/h(,&il:XKqnjke1%jom@gG4U%?c/%(\3S#[W3noH="5C1$Z0+$.j*)[q%(a,J'+,>bIU`dGA)A77UaZ9S](JLmcst]#c6=+]R_pgo*^.fBFd;XGA!-j<8YANUMO/0%2gBO9a];s,G@u;N^9_(-F]7I+hU(lM*G?msS=T-H0J)nBGF"5Mh0Z(!@__^n^3?TIhYO!lkL:F;qo<nHGOM&*I\OApmrJ5sh`:@,%^,r#nlFhOg_TF?:)>?G*N,jq3/uD2hcN\54?R&,Hg4;iD/)RX[r5U@7D`=Jg>b?:uB]fY('7Q12O>jfDk&3n28oALSFoic+Wg%qp%mXn1q:Trd7kk4@<a8]u,\P(1>OIDI#6gf/tfe,/:V.Tb;[$=C5DNL<@V'=t)WEI=Kfqi;me81J?m8C:8)1.XM^[Gk0fj/Bs<'4aY%Za0M?hqS&ATdUdM$Mc5AS,1Y;gFF't$_DK>a'(MrhCJeI>8/s;[F_i;C6ZH2EAjGZcNhRrqfbPC]D!QKFX"AC5LQjfqJb;PF>4Y=%DgK(%<j#ZCKR/rSO8#J@S%g64j*XADGs"e^PN:%M30?)Wj6dXJn!1P^Y6^SV2RXUeqHt714R]gEZ*t`j*N]mY)_pMb&pJ!Yi6eK1%ZJ2L-`"ZLpq=QIMqeG/tW$Qf*8K.U[AQr9\de`_Y%9Wb1Zi7%QFk.XN]QV3?WU*P5)DbpZ?otYuY,qPUgI'e[*Lp6a*8:/sCaE;P%XZopge5p'Cm2*!k9sd+7pTA<c[MorcB5uUBc0e3+]2IsSm.D-.`%4VRGm*3A,SB-!BCW]W#]#bpI&KU>.UB"Z1MOc[A1bunga$D^%SUg*Zf"^?`NE*9:..?,2:"`(KdFjtOdIPR1CJ%(:]:GuW62QQtmiU70I(P(#,>IqsmX:jNh0OP-.:9WagLYcEN3>W-E0p*[N0mnj%\'+P18<S-6?hroqEQ2(_CABLB.t,G3&\]H`>ku;*'bMtVe+-g8IA[0NV-BatO(doeGjtgu:AMiph,S(*!`pR\(?1Y9Rhbs36FM;j%7qXLoXc&anDoKln+m)E+f>\&_91R@'Y"r\K2u`a+$PYDnR*E8+K=LgL?BmdNESTs-hVKhg3Em*inJ"AUKrAD.P&JIa]@$0@nemIK%\FfYn[XBW4kg:s=6>`1n[HQ'rO4:'Us6V\3<aU<gplR%nQd4Z0/.qGoW(V<;AAR(L"2J?72is?kdUijb/7%fGqUb>`[jTsOQ&[`q%ms?-kX*C=sT<#RS*L(kq$M'&Lj<F"=VqlUX[%^g:QmJE(KY7h3jgpD?_*:TH5l(G4%:W+-h<V,I]uV?m7]me#.b#FIA^'[1Y2KEk%>=En:lJl5qiSJnfpIZ_L]4c+!m;3p3Q1]d&5Q6J"3WDCWTg^.hTfA-jDnd0NL<8R.=>'3V8Auqh&q6"U!?[cDs--<.QZ]Dok$<L5%dO=U_VO)$tDJBbU=X^n52>E9Y%W5tki^nWCFe+caD,&2s#@FXE@r+ooQ\lbN4%IA\EuJU96nAnT-7^Q[p4R,B#hd_=Q#&mZSaS,Y%HJI"oQ8eA^GQ1ggL"a)_&&V64>\D^qH$@kC1==h,Fm_GhZ/>cd+3S*?GEIRiIT9#,R;]eq\&E+MhF.!;0C%s=/CkEBHhm$c:ZM=u%("$/Eht[+UmS&*5c<B';GSifC2]oPX^Le\4ZPl8uI4OEi%u<p2+&hs=FJkoM@Bo)@&_P_:="X)FoUCT"MI\&Q.uUZZ;9<25H/I)/%8kPRNm[S4g@sZ,7EOcGo2jCc!d^A;C2L[[+6+QQc)n[3OTNnpPldoWo4F<)Z$0oZ9fj5,6ds]9"S%"l'5F++?fH')N=9EEPA048;%hEpV:nLN3Sq\r!hV7#UW;!GQg]*)c1GW<D3#@?rRR1HojbG`Ne<7tmRH-*]f;3=R^q/i+sNDhF\#"jW%m9[:,;KdO;AYkWs>#;W,%jeD'1En8mb=ZPTfrd`8H?_=4p!oC]@T9O-QD]#F<3L0JPlQK6,ra8-2]6fP!]_1ma`K8MOL0ZrQGK090V\r-DN8E0S`cj>jEeWh3%6)hB"i<Q5sc'dr_rQ-SCa7?lu:Oai58N6M<VZXPAe@bD95F%7lGP_NAT1>[5jWlIH_qfb=PA.$\rb8S8^p[RVLHYSj:^HV'o&A&1%GQJT$(UG(m\<1%iLZo&/7q4Q6TLYnuYKo]@&:qr6o_NaMWn-//?X?gro#n$S=0,RBfN'8t<m>\jiJ-ncfZT.4-2,Mdpu=m>jUV@)%Y);M^lLWo7C(Eg\>WM:gJT,J@C=g*p7"4g_J:a6YH^:TO<?.nP_IJtOZM`)B!Mip?Qt?QBUB->N(;WnA4<@"XMosla=NXcY[J!qn%+!;?o0;UXf7_RQI?U#UVoVTgg$WrE*Pp_iq\pq?gbKlU6$:e]r!rfeZYe\@kLbB+(bg)G\mCi!)RllFZRa*7#?IR9$*]?K_6$BIU%Q7MCLq`U)\Kcsr;A;=4a>m)ON-RXO,Hp<q."k(j=SL;t-A3R],5)b9eAMU5+:O:.Dp?H9jHJ"/]KDm0.AZFi0OEOb!WoI6ag)7i8%6e)lqH9;=FYFs_=l9T"=1i?X=PO9h?*8[jL#ZDitKBITYG6utgQbiPW*jG:p$PatNs/E3:$d1BI;CF<0DW;ML@J._R%;&DDJ`]sP%=QM28otr8,K<L`-3Zj6/a]0JQ?U7g_:On=$r8<EGjm]2,kk.dOJI\A;Paf1D!.-Q8Vu>rO+Q953^Aukh+L/!#@<MUGroi_D;7l+H%<jd2l^i)->AD$=:?KG!iY6%Y(5ERUWdA_MOI0ul5fRR$AVaFT9!cOl!`"1Io5HIb8NqsGS7-@B(O]g>crj33YN<:enE&roh0=Mdl%&Pr;[FSEo@A[6T27m7b0:K5B)`rja[Zc>X]"DZeWX!4#^%TJecgU?Y][j8j;S#_h>IVKjGMD2/;MN`9?/"it()YW=lfd9+`8%JF6%jmYNYD:*\F2mqUo1/6K+P2UDAU*Q8GYkY`FqRFCB0/D>.10fmN+hPkWZmMPfQ.<ZV:?F_uUis/U56dArEriBVV*+XCYn#+VZh4ad%P/[6)fMa()@b<[.bM%q_'4LS'E=re^lJ7aKdPV:>'^SgTOh$on0r,U]?DabHh<C_nIikJu?&^32.pe($j,"$MO;%ICr!4GU_+4h2%]#j52]*!mO(c[S=^lJq.Z<5)\k*N;,8;=hP,cZW?Yc[TT:h]\YV5\LfIZnm:Lr48&r#DC"HnbG7V5m.&bi9%;L%o@l#@T9*&CQPh%h_S#DXX?5f#76'*&rDfn3AQ'N5>MN:^Z!?519KW2Q'6*CQMmH;lQZkc7UQ<_CJ"VE8KRr%&"if"I@TqOj#$[:1)ODZ!0?L%U\g5X%&g)R3V4KO$`r*Wt4D8,k`RC_,4G3u[3/d$(c1^XH%@'GXh>A$2&&5M(X8;0e#c<'&?Q!)$.eM4mhh"[5MeCoKkbi>nWt8KI>(q"$%Cb&9p.%>J6"D:H<EP7&4!L0.ZB$&[9EMHQj^.+\53@T]3lWC/YB"j_#DW;J@#r7JAYHSUJ>a+Ki4:R.F\g?rIEn"+eWk$V=P&tH)%\XC"YO6lL)RNJ5neuB&40!okHO_u"8jmlW%38"`9]0K&iPpAf$Q>'nd"dY_nl$S9i4T!]&[DS;j8)I538DG2$l$.qf4,'2eb3YRn%g3?Y,)j`tJouq`lAi/+4Y6SL'U-c?\ZD&eiFY]tIZoT(uo9`^T71UbhYban"'Pb<rMM\X@^eog+F*gAMjo9deMk3rmhb*Lej+]a+%6&cH]?T(C-70[%k)Q1ps\uFhj66Sn+<21"839i7+@1$@CUC_&,jk33YdX:OI<bXMK3)JpP)?r[S]Td#$Bb0<$_m)I:&5^iq3J?8d%8,Zj/:Vc26]fqfU]UQrrh6*44HZlf:$*qok<!mrMdF_)KY&N=>n/,Vj/I#PJYoHJNCG_U,cs/g)@LjG\*K[Irr]-#eagA(*.(;!B%dF\!>^qWmi9=qL;nR[uek)"2sl#=M-K5mg>=_\F9S^OD`m-4o*HWf#ln^\HXlW?>:,HXQ<ZQ0+%=qe-:9>Ef.4our1qF4fQhcbL-%e/VXtK@Cmp7tdj%*:797Eu<6`RI6kJ-Oh(SEHJQ^jkpCGUi[`X'D7(K9X]>HU8jJ2Wo>`4:KLS<[5WEAHkM-\CXen^K>b4X=c=Xq%r``D:%s-:?<1SF*`W#$`eTO[[J+(@F*T4UId>Ci3XE.8o4HI=$15gL0prsCQ[0aMJJQMB;Ns3q[7.(igj%0+.3;f=P=L'fi.(2eC%4RgbMMmV91`gF909)QpA].ll[N3U]T2#"a%:1&,+e(Ns]hNGl-S6,)Qr<:B[1b:87HuSi1B&nL_:<Q6LddZoViqSO30Gnq>-L8*L%U"sZE>]sZ@+(Psn?_EJM"Ouq',[_X0kC'lICR:*r1_kM:'Pq1cb,d-51+>lno]#O.joMB4IeTUVJ!(@(&LYm]P`hmpb51>QC-6@j%%:(SrQUKKN\ZItkI!4hnUIcQ_b*2I@/NF&%&G[UskA=X,Z2lC_k`q*k2asO4O(Jq9*[MW/j%98K*me(8F1g=/&ul]R.#EQ[J+S<h%fD"H=h@oIZU-hdj52=X.dDk;)$eMZuX>fS!E[R@96%>>el03FLbI+pAV_?S.g,=rN?;DeGIo*8nB;=bPGWJJErVrjno0(DWVlc\.%4IMb$i^p='5LZ]K="i[<en/dF[CgaEE5L^2Sa(mgB]U459.oTgj5I%`HE,B"b^hI[Wp;k\XNnl:UNh#DO"Z^^a_3dYBB9lkT&G\!%EBM(hI0)G-??M\XQd:^]eT!]H-LgMN5"H]4PD_d:`C@o>fm#^0Cm5C0O-AgA0K4F2ElsL4AO_0:9X!$+SNcUV='=%QI:sAA&m0cS%VACa%^DoQe1BK<a-R36Vrptn:Y<Tcs:&*K&.FFjn^a!0lA-fh0R3YlG2AsG:3Co"Yg:$/P_:iA)XLL)7UN(^F`,tcf0fmUPH*$U>%"`O5n7/8alW9(%MN;CHFj(**eH;&K&6d>QC]E8E!b,5_lP+EF5#;=V)2L[b1,a5T6Yc:"MCcoA$ZOIGB9S=nd5"b]?P-gGLj"-g+%rTSP<^O<$jGbj[L%jm^1RnChT>k6";UjA?>R8r"Tr[^8%&,J*4f^TtdW*)lY$%<3e0#`68_\_MGn!iuoS\Pc%2!k]@UIi@jQV_Hl%d@fkc1MqPWDct7q1)MhkHVb.lDs<WRN'J=P_]McrnFFR3e`1Z)eN=-)aG)PeG(/\6E'G5Y_rPVjQE?P..(!(Fd-tTu$Ql_2OZ8&(%4\hnse2N$*;VE3;K@8Nc!Y>r(f*8$8NJIJs'e!:$12@1R.BRkLlm6RFPO<,:gQLG,h#`=hjV0oG-a*P<qQTL-Z6_="!]OXLR$r'G%b"4EgM?66MVK;RWeHXKrW2Gtn;m(<?PNcmV)@]U]L^a5i1MMq\/.i,(H`ZLdG!+^+#5qt.SUhANCUd@4jku]>S(*4["*<Cj)W)Wq%cJub$A3:r-dk5jT8kDqB;(u_X:g]AC>h0nKWgd>>_HtCpP"[pbp;j6TGa>a\%2+VO?6tcU-#9d.!ii_>;@'\Q#+I#:G[[i#=i`m-%9!FJh`Zd#O"(Y&"$IW?eiOITh0'BZZQXRA:6tX&`rYU5&gr=UA!T>>\RgSe?eGY/EO,48R%pm(o&.jD_)A=Ao&Wqsk0P^FX4@V?1%*[S"Q_.n'oKr4EcZ,/mMdbMdj(n&\(RXNqk=gdlRP*bhHSbZ[/;<1Xm$>>3mWt?=mUbR1\9ZFS>4C'NGGbHOT%cgi]M^5h)/+cRi%r'K828UXBu_%6&E#_R\kab//$'fIXXGr4g+",tXUD:8s>E6f/0AaZXDg&/tO37)+!,\dhfr'Ak<2?KJ^I<')JMo<N)b"m$q8QoAu%%qRGM:J"A%BgL!U,hVlo$/V)Yh=f8TVeP*pCt;">C+>KpS5uU8fhEfq_%B`/1+)79p`IrKj.$ru&k-PeB6j"7M<(39ORp-.Ea3eA%No@:eLAWC*=0ap:A1>!!X.(eI%^;DR-8-I$N656!6YS@,>=LN4l2AS#ma)Yb%f[B:f/SJS`5BdR@cs4Q,iZXj]AuX^^,b8MK*B;e%D_qLT4IIN@Gopkam*h="nMr/gbKZ-E<eg,PmI20cU%t9Tl&a:WNm8^T01JrOHF>EBUd`Tc*DZHLOoa4:MkiEbdMu0'%9+]nFn,mM%7PK^cUO-9V2`$n.X]g`abO5&XQWZP:CBu=73c*N";EM!\Inn9TG<e!2ec5!.rd9+aTA.mt"`J?_Qu[;r+0:Q$BQH?%/Soa0Rt.#)%CNRSUp*L\%gW.4jaI!?=X+a%0X/@JTJf;pih).n>H&K#<9l2@C`g^tm'Y92LJHhlhDn`*bFPR5YdIO\q"rQC&DD3!g72lTF<mIOF%RLD]tNhVi+PFSM;qJrb#,i;LHQ<_=$XB?qO@p8l^M[tf_c=bn.PX"'t.L(fuX<):fUH=9E.iSNXB(A@3au7kMd#2%6Y2(eBN(l0L%8Ybl@=rg&i'#[L8?8TaBE)rIRc_i9!_^<(5G]GOe-Eft_W0smtINc<VY@#k`j2oL/ki/=+]2]e/T:!4B#-DO5n]#DN&:<TGc%X/F%-B_[VlOB;\Yhl%\`d39G)6=Y+*o"hHom&Z&-/@-jP.K,LVC?i_5'ZF:1J^o5'K;/-W&Al@?l?eoj9"A[e6`!W&Eg\j]8jpWCU;%N%a>opf%.?8qhLf(&EKa&;SFVrV'l>^DW,V"5P?n^9dm6+!^"T^H$>s:Y=b!)gE!i-u[$c*L_c=^-g5H8BY!Nhl=_\0:,3-DGh:4P)%-^X/p!,\l\jfK*gZ.e8@9d.U8QuAKID`*tk5.*k8\q<RKV]"[g@c5D;m((03HlXEgd[8l#EfnmLMi$l"Uf&-g9gt"0nYpDMY"hls%)R,Q%qj53CS/dS;27`%a8dqrOeL4ED>i+i?B$JcePZA3)XOVbM\H)NWX.I).[O0q]$XUrAYmA_4XA@b7KpE;horl1IBDdl.M:ISa%hT-1.2q>'E>smY-oT%p?dkoZqB6-YN'\eL=&iT"%L>rW!$B;Jb4JoH9C-E^5Q;<LbeC;(c"sZK><6RYn4Nn##:f3CtE1n\e$mBB3%=\S)^p8U5n1`.JnF'U=\/Iso)df`S8#6&=sU87AU3d48/o]o*scQ<Q"EuBFc-IqjK4CWK^lF`2a6aFJDg2bXUOQd#7!,#/,1S^P<%!mRQoin^l:$2oA=%p+RUmY"Rj8D_[qk1Ae6\3F)(2R1tiI@a+G\I`C&kIugW<?4.oSR,H[QnErk+('J?BL>:_Njk$Aph@$l-ZY)8%"e<Wn<7&!ofX"0L)@mjiEYMYBd2'tZb\=WX.:c2qX94=,@rtbp'/@B69HsAuUC/RU!;Oq[]cPTR*$[:5E*BqT\XN23S[,n8L"XAk%E7DRiN38?gr/,7oRAilhAHfOPe4AsgXj$8n5#&FqhR/hSL&%Rr'H'ejJ5Q!]m.G&_ZB=_/94jF*I6o6i#K&0]7X6auctCm6j$@nq%U)Nc^L,1^B>%>+rcCs84`R@K2pAkI)p%-S3eMBj_:M94%(JfAG_HC`2`C=m[[5I(k89II?cf<\Ur&0sZ`/gu8Do`F+a^t%W*HrQo%n7sQE_3[4)%-^%g`2J15k:gDJ0e$`(9$<=X<*hl"0@/dN*$-Ym><jVpn<OuP%1Yt4''3.LSb7d'<0P^8Z'#,9Si74G/UW6bBc/k(%D_ugjX,'qg;UP]NlE91L1YTK9.kD!FIP@J*p:SOPD<#eAoi#i[*^KpSC;saELtI29GAsq#nsG8+2K0Zta?[_F:KZT%XoSJO7!I27%<Dlgg6PV:@&uO42=37[-NF/CY`5?=N)TNSq``!#hqo3"FIDE<mKkM-TK^[U1hN$aK0e?*8PU7PKaf0!a974EW5;U^=<L?I(*<NY!%fa*As-IoicNfC)lpamO6L7f'qL(nYhmp7/`%u)Z=1,-VmCdVSYA1Z9YKpfY>Xj2\TnWd+^bmYa(h4=2Y)]'4!T6aAagIEc0/\GiF%3ZXtJ.>[+Rg7OS2m<Zo/AM@=5I5c<l)rr39h`iLOGkb.6Q2i;%h:*=7*f.:R:ZGNu6]gLqW-*Msa.-<bS6i`E^&F__bLo"bqme<A%EBN:kPk@,OM`cZWF"j08i.k<j#IEi+,$&[<[!#GbGGE_a[^@NJSP8Y)EO<-@>YL;Fk9_u9>/Kpag!"Eccup2l_Atki>1=YtRAS7G%Y!U%Gdbrb_*\-$B:9P.n=NukG;%5<GqO4/nl+qGcf3r1PYZ]T7c*^p')_8suFV8)#.fn>^M\>#slP+9g@H/nH;_,"IVBmUbHMLYA%XC89Q<m*FiaPDdhOXF_2iek,&Y*M(FlVGcfOnCPC"fNgf9=N3KfkQ'L3IrSNcn_`PZ03P$[Pu)jmA7&:"GKk>`R17$fUXdEldjnG%:8-IFpucO1Cn/0.8A/YY=c^3AhS_G-XF6:0(W+WN]bY\&Bf"JP67TV0MTn3&YblH/7Qde>CMdh_Fn(sj_q?LNaE(.km;osB>J8FN%AkQ/deqdFcL[/cBQ*si]`n^\&/&+-7E05:R(9D;dNJ-'@fHDci4M@9_.b=9T_<P="9T3F+Z50N=C&=G,hCOt8o'TT,XPS!0hEDg?%f*Rq;'=LU:ndSYPk<8`#^<([KL2LT:XG,_CV%q0]^,d0R;aRfO"Eq'TDrm@#7:!BSmQ7MCZ^HMo#C@V9+tE=H*t2LWnTBH6oM(0R%)<R%,:#&ss(!VZ:Z`bCf=m1!]GSlj@<FguWL1(!`5A`T/&:1G]'6,#bc?J,pK0.sT4[6:`ml^OEcM(Br(OpME2ugVXl3I@?^W?`T%h!`R$NRgO?s5ac`5Q3QY?!,FedncMrh`gb;DLFN/41fXu]9b`_p@(TLf%3uQ!8uK-41>\0^\m3E?=MeZf]-1[Sj3(<Fnk@1I6"ub%X*OU"@d6W/!ckE0iqqd9IciUU2tVUmYCHN5i4kg[n?Zp'bZ!h_(J1s=2jo%0&+:%#rc-fin&'Y,lX,]6GM58?5PsR3L\e2=eUR)'%Dg'F?(Vfn*iU!$_o`"C7qVf1:9g._q+YP:PDZ;5oD!TcMH#`jK\*D#KT0;Fddh[E5`tTn]VNZimNKKkUDr%u(kBFE/HWKOb_<L\i%D]OK9(6NsjGU=1s'43uDh\u2ip&EMf);dkIr9Fk\:h<Fc1qiS:QS%CDmlkOK)V#=qiI0ndc[Y^1rk(J"H=&dMV=D,UI6.2M+T0>B%'W3doi=kk=qo/NKJ+)jD/A3_'@>]/3\&iR5YPt`f*ej2Ihqc'?Kin[AW>Ic^*A3iRpW7>,Y"j&%1+hJ`Du]/%q:4+ISFh%*f99d0%rp]aAr:&=t8\_h/I/<ZfB.#B++g(eDp<2pm2P:"O2!LQX?1H1&8\M1.rq3sLR%"e&Ojf2#^K;NBX+uCmIb*cZrsBh)IT//'eN*N;%[:E28o=^@:H<k8s!NkA7J$&U?s8&O9dea:LpZ7&!g+S0HrQcRjY9lF.nk2!BS40Q[HZ(h+a[ncDceI,QI5^oGq=,%lH@&MRC<sl.%&"@cN;DD>dUu/rO<;(@]RRt3/nRo1>PK&gD^Y!nEAC=6)++EIdB%"h.C>*D#2g<rN5D[_YB;=HX^\M\qqIT08UhJ2ur4hr3Aaf?l%pWn=>U@lejpE"OE9^7-,q4I7cKAoJAZfbBPVf,>SUd.RVPcgcEnYl-LU.MK4W;ko+8\]LpSD7I0B`aHFs50IK>0Pnp5?iIf&"fH1%Uqo#Ll1E0r0:9H!%eat-H@NXkI8#j5s7<O[[?fh(n#W8hOc,EP[334K]_jPsNUK<`Ut3rd7C%$`b$OkIrVO-n2EU0lf(%\n[!:#k%^ARZ%>&?)FSFlHI)jj3*?*_p#h%r;4-'LM/f%G])gIilacVBPh57`VuKlqZUc2((I4\Hh:?7hZ=JbA[00>B$/oI0S,l2IeThoeSA%H[/eE5'ZqCdReqkn)+"ifqa&^f<;sf]kGj:hXn-E&!B.pFhcW`AFOO#T06F?l-$\k07R4^l$pFVIfI)6jJ4263EhL4HoCs2b^8<E%s)ihE?TRFac[PoZY\6pn0#"l=CGP.E]YnOQ/1AcJo7(sJ$btrCUj)j_S&2^!I&\NA)1@d>oZn>iogDPYf`Q0-s$MOlgF%45Nb3-u%o]nq?4ZhF\mQZ(-PQ'Gr:MK^RfM[pY^;"/)"e1IJE6nC4$W7o+\(TRZZNfFH<kJ=+K9Ok%:#Xs209c@m),/bPk7-CZLBg&e8TA&&%T+5o8pTq1JccAA]h`j+^aokYLi@Urflf+_k!i8]Ks8;C[l^P(cdN<Cq8RWCVi5qdCLV;upFUkBT:A!IRq,=d"i*bfu45YIE+2t_K%q8jG:V,+5e2ncEjl01McE:eWE4QiV<7uLPro_@d,H+rdTpYYE0V[m\T/rQ;NN`cn3^M:r=+4"<nZ2EkNdjSDioW$_$**[f>p3:\l%o]]o[[DPc,rj)dqIJP5aPFqj;cUEjW]kl!=o*$Z=YEOI<Gj><A^Z[+fm,oIn>0D9ml92ngr98,QpQ(Y*rI&&N@Q7EXr:9Smku2Qi%hgN!3WH`_#YMbfHD=-?)o%o?sLuhDSIHQVkE6LNFoBs;g^$gD)*kb\Po[Xh&RN=\A1!)ZYf>I&`)NLBgs4Y2.Xc8]Np^2BZ(bjUP%D(fub2U)@kGNd!h$,(cUH2jCMs(3OYb'KQ#H1HX/*q-+fAk#^qYjBOPg=in0lW_F36SYpnc.XW;lf),_rXG[Pc3k:K2uBX\+1pB5%imtrc_Vs4DhH6muSZGP-[gpuTap3].2*^aCT@WbP_OPMN:=!/=_Kph=-Di!rlA>ApL"fM.!6[@Y"Gsk"YK4G=EFX<'Y=`pjZui+3%/l%e_`/Z.<(%%NO&@_<Qmq!D2cdQgf6r!b#^ZU;7`k!IeJjc6]@lku[:/%S2"PPjPTha!-U>:"<8[hQfJnk0p`cm;`:2HhAk<'#u%D#Hqsl[6DlGA8-l8tC9T[NTd>5;b;ATbk+dhPj(-,utZCf)C<Us&4$;<p:gBe+)!`/[eTPrC^C0L?=BIs)h#5SZ@E=f-d+cVl3l,%"G?Cidj_4"TMsXaFh42qhB1LmMEVfE/*[i6W_VQW(&k2Te>8ReHLc-n^Ai%.Zj\O$f/'``)4i(QQB2l8Ounuj(K+@ZRUAXqAJY7;%dtTTjUhq;bbchIlZ-o^EIi?k*"u4]nl@W%k-\!=^?gn`%eLm+g?U'%e0u0\EoG]VYcQU+-h&l%#f.$@%I*Vp9:_iaQndBU`NG!1p%/U6Je=a$]of[I:q6:(NPHn4%q16%^/+rD+;L1)^LP=Hl)A+1YFf)KjD$M\7c@qR.2f*=)k>LRL;V`-R:A\9ZK2@JRVEb/hF20D`t%:\mW+O='VBO^>jgB<oQ(E!HSR"bQBC@WOU?l/^18l'eiVUZQ2ac>C&0r$74m1SfNM($o5@l1#2JL\uG7HqMV_;&u6eW:lerOd0MV%EWn3cXo#;Kg^g^MM*^HV5+[Fr@\0W2EfV@:=1rnL\XlJtK!)>EGflJUA]9$PhQ[knDhc7o7Fposm48V5A6i)q'bW[So>MSIoJFI[%LX2PKT.=GZNDAS&5p.8T.XJ[Q[4/,?7<)lPXm+*_n_c[06+65]3:7t8%.Nate%#0Zh%jH]"'8BM>f>-lj&r8al_7-LRbH3Vc^f`g%;'%2]&KZhInJh:hqSmlk,;H7lm4#L?&]ENg?`Re+:bHdr'\_faa`Ph]:ndJ0r3IKW9[Lt$ICq?m@Zkp!eKWD*ODG\UlG:uL;^]/]%eR/;VCh'_E"Zpa\mr$.sb:;DWP5-_ulVpKj285:+ZMo&W[R0tth3A*l,08bUr+]IfVaP$g"YJ()PoS17[*e0$JT=]4>5.?]:54u`%a<S;S9/.[G0k)M5s79E#kgdQ2e]egq90tL)AP(J%['3NW,Bg?hFa[lp?RpG4MU<<:C%9UJ$>iGkHL5p)@ITW@=g]V7@b%g!lX;g0%Ml[e!To0d$iQCS5gn9u/GiD^aBh34N*SDrepGpj&D]\Z=+dK3#aJS2!nd>5IAAt:(ofK>=7bChU_NQMBh,qAjEH1lPV_N%1PLN*Z%0k6Fb1P`jbgQm,V7uuX*YbBlKh__ZSa$M^cj"ECGe^OD+aWW+?d9Q1KPY[KQP(F_!Pn+i!*^:'7IP":fBdf0iCrArKSphDpKjh5B%Q!lM['^TMhS#`<CDM1R"&E\"5:ZIcMb7nOIKa*^`0GJs!Jb85n"5tMZ;fb+1iQ_/LHGgT,6!W%?=GCBA2<91OAe_$u("YX"`QoIN%BJ2Ok^A@(:m*lS-beME:N9b]m\bLO_n*lLZQXs!&8::dE.3#:BjZlng6K]3h!9c*Q?cB!QO=o[./fc&%7*RAdkSNK5;Kh+Tc(ZQ2%,elsZRj=pkRe^[4Vr(:<DOJc$).Sj4m=-Fo'm"dHbN^0Pbb*[KXSu=,5urfXorV$,i::2g:ASndkuN#>GNjBGAaie48WkaCS=D0+%-B9G>OsO?NWPNM,2>CiT5R*SAo2`#eC@D>88RQ:60cABLF9fkX<d7j:gV#oD0"/JoPB*<&q<qps)4cs:?D?=iMZe5/o_XIC"VC9P%[eQm6+%V@*#&t=If>LOl&-[rh5ujcI]rL_Z[]2rh,'Pk<R1?F:dSY:a0ALOV<[+QQm0%?/N$]O(]@ih*@]rIGDPh?*0X]Tmq;lHt%h#dnTF5["nUOjO[ko&`5]4^#"-Bp#+;n>@Y\EOGN!!4'kL!$Inh&lb!d,IHe"h!m1XY*)0h<rt[de9B?Ug<V/FVq2Xo/D+r=9RM-%F'Z.S!JPK<=Gge-10L<LB^1$_\(b>$ZRH1(AbENA@gcX2bN.-)&HjP%eKVH7L_sKRG#UgaI5DNjEGT7n%[:0(Crnpa)ml/Pqjt%1%j!#560f;;Mf-ZB,6I(2&0Q/[V;Bi3.bW-QR?@dc\`j@:5R(hBa;_t+a0LLdP(6o+XR8D"Q(JFi]-V:]*f3X:<Y`'2HQ]e%n]TFLt%QRpNTQ<GeA$tY`<cr<*T1kBf62hH^BmH',SPYR9/+jj]J\3q9jpT^9*&rk:@HoiR7BUGDSK%MRkN@N=dUOF"iZA@O/H+(QtQ=N9S%Tu2tP,&%j3194ZHb.S/\l1'9)fVnbFo+j*Wqq'&23@257H:[ml<+'5+iDLu9T0^[fA+<#u"u/Jj^S*U4chfMG,&$#H-`JOi_PFZ)%T\@Gp,4Cd_4%#o2OB,nE3^3,+hG3d_,MGdA)]fOMWtp%ji9A2up?mY8lW_,b[eN[ZeVDuj6'.VVqpq](Sp`Oso-ptW;agIiZ*E&W%g#kciKu<7dY\G%]>04An[aVF/+4U_$rp[NCN$`NtjLK4Ig.C!-PP;quKK0oh2iQK!X).IZh=,NRF<kGk=!(m)Uq@e=4I&2K3(6?n%7a/@Z.OFKA/C@tTJ51$H29L1#%f?(,Ys0*C15i";9g)7KGSQBPXbsB*FZ5Z/Xbpn^M9f\+Vh)elbYUrO>plJt71Mn#;W5+/`*U,H%g?iPA[WMBag6U1ca`0cgR$@-$aAD#&#(-CD1VjBbNO^<Q:M44k[a:6W]*YT4?dTg/9]'`K`^=eDRE;'@',aUq\P]F!_5B1,ULIUp%6)4a=oqKf$_P"i/1/^MGq"]8a5b'EF+kgh@AYE)H\\HI>]5,/b`s9f\YLRgfj)X*N<7'_6UT'q[Y+T8>6UTJP7<L(0keu]p_q!*[%=3q-$K#?0d-!/Gbqo_enFQLFJ3`.Ig>Rat4VlYJ&Y$/'e)S4u:3`.Ig>RatdVcZ6_BGX%ccm;c?iESiL6^M%Da*\[jf?j2H.&DNU%gA?<Jd"N*qj6M42hGd-1g?b*t](cW6:3A_;OO?8)0W7IH=[/Tn:XR<FY05\Ok@g#eHT]!XO9Y4HY(_)soVIJ+nNdBbZ+8q`nO2Zb%_GrK+R:\Oa)2c7$>TqdWdMq4>BIkG?.t2rI#+M<,0(]"XSu]\iSsnHTL6SD&0u\4!0I/8dR%E)_d9L9ddlcOc:c!k3.\OqG$BcoM%.Q6Njo>AN/j=E0U>UP0q.qNHmWd@.b9j4gV!.k0S^#'gV@iUq6aAE[f-)D?gop#js,:rpNnY+ULbReS?>\DGs@qlA%9WneCdip\q%@c_)HRFTGfo^Zb5'XRP2'e1t5%6r&#XPl4SpZ)t,4re3c/0;upo(:(BOuULMl8Z.s^%[TE7jqh(9Pr$g]TZ9QQ2:@*lG-<JY(#[2%;N<BN>fZ$*f"W?l(,M2PWO\$<V1hK$n1^et=ERFk?&&"sr:2h8]]Wn1j&8+.]f#8Hh,="5Bf.WY9rV91TuN6k60Mf`=Bh>$,h('b%6fF*b0U>TkdiZRB66Z;;/FG3F9T=`G^L)ofiS'^Me'$(%9!3!Am+:6@ZC-uAQp%='SpIqLBbAt4G^AK3hPj9LUe'\!e+\+DQL'qH%`nj1.@k[8/LlGL;OkbW>5hsa8P4^;*3keR2^_PiIm+:606CkWddR:F\_aYEu:Ig2/c_!Jr0i=MN<H@Bu(8n_$KR116boI7]<sa1`%[9&Fe[i&Bb.p!-JebZ4XgW\s>$(4E!e[5tmE_0.V[N__30f"1DiiA07Um:a.Ou[ut:\RV&*`>75(LQ:g;;c0U99%pJ&U%_d''RXd%A%fn3,Em/V^-".W6c+e<dGQJ,,EqG+:jmV"6<997s"u2&a1CPufc&Qh_e@8aS/i^&D=P7RCW?_fPHd5?hk',j,84q__pn>CTr05"%1(i1[fuq_tja\_NVmJ;gNsletKe$'upW/H]]QB3./d#SL%#@J-cCm;C<r_8An]LFNm+tf7=f+&W.G6O\P\&5'-=Z/.\L)<CQqW62%cIL\C0MWX2C;mQMhCMUk-\4EuJ!p8'c]l#&<^(,-WtnC0X36_a)e^&8XG_4D_re*H>0qJUlp+?@&E28]1Jr24<4ua/*;(HQ]Y83u%LLKK,,[3sBM!I:'/sI4eWeVPYr3=K=E60ppWd6Ysp'b(,StR2XCPM+nol+/3<\!*`RT2a=>k3`EUT0*-bD$pP4WN/L@nJUJ<tC'C%elr`Q\p*gM%i86b.AcZrW#dS5(5iLb1rP6i=k1?UHEiUo6lqJ\a:,XkQCQ$kjIF;m]RTi?9R/e)ir"0T&$8Tg<h_@%qi($mG5AAW%lLDd=G)!-(-`mY$9Z_i]cZmIh\p1]nRKK06j14d4bD$!i.E!BT8m0dXZPnS'b)"pfbE#-3L<!03b,!+`=>i:ePa\,:N?c/m532k?%n4GZ9C!_#YS1Tq:^!_(Y/VKq-4I+mY&6ha#_dl^5Bk-[Af9iGp:MZJ\3"d'$]\4g7FHf'3<KVV,5(\YkI9]RS?F*_/lJl$)82F;B%lJpHGVMjLY6%!m?O06W);E(&%e<:JEUn3O@,5#J7'r`Q`O+C@&qVpeLHB3VX&f*5L)+dsidh0Vc@l;h7nckC;gK#bX)`"09\eIp+%@TbI4"tbO%3=C.$V/VADHP/n>>7*<^?.ij>>g+'R,;+[C5.tB(V/U)mVlGIh'Z6M0KG@@7euK>dW@,QX:-?=Kn?MiBmH998<219L%OTV"NYJhMlfXD@>W5Z@rA"Ah2e`[k<:[s"3T$E8ELV]8m=neAY\2cCA'T0sH12IJa6A2hf7?TH2"+">L6b`Efo."*-^22r4/*:EG%OKWQt9tVU^JY,!qg2QhnS1idM[do]kr<E8;9/ZZ>^7\Du+gXs:!SGGj?MI?EY\LG42/^Y7d<0*nj&8OgDRHK<0;/`bo"=M^;\g*?%2:f^ngXB;1Z.lIXlf.mi=4mKNE=gmhPeM9_(Y@o"<%XEGO)O\VRVSkSD;n>m#fZ9ZC5_PEc[;VKlf'r3'm>,cL%l!:XlX=_@QJWY%-MO-lbLd06:1Aq5V\S+RHKFu_[SsgJp.tU7I'obFgXEEuIXE1gk!P\s$9MlE^O/mA<*$Em#MkS>C`uE1?h_lLT"FoLIZ\\tA"Ich%hCk@r];[C9Ii."HXV4?fc<#ZCb5>b#T;L7fUg`RNrg'>g.CW^p2BkV4[[)+'J%!cH;D0raMK(cOH0JCHDG*[K<IAMAWWZt9o'>i=%%=OG11aMKplFC!'?ggn=9lbl4iRY<481*N;i4We[YpNO??=2-oDnX9A.:0O`/s2'_?cp'#e^;SorN:^q-)bnTRAJ>;".>7BRPLG%%?fk7h@u*g&%9;hr[<0pX)eCn_d!h?UeT=Z35_KqkaD*bIC93^Rja<ErWp-7*Jir(2ACYe%FDA+f#=i&o(O+HTBWLBl^"/s]VAnrV%OK?uSaZ56RWht]3dmV/]LT@;9*tE&MiZ]V"=49V6=lf0+7oN+u-!t^<YGTK`cIMF7FMYk8/R;bt%dIThXeq$1N24\#&QR:K%>dTU%7oi>#<D+.B0k^8r\u>:sr%cE0]%@;W8?;"'mh?g32;LM7larT<$"Ka2VTVkK1OM&cjr1:oWp-67:URWW'\.;&%ES8jN2E$r.U#/$%=!OiEP8ae"#WfP3\u>2)QocCFW2>KQV2O/:#-Oh]6:RbhI&LekW*6dB9!6"2l(TNCcQJ*B8o[]$citU^7Qta+C;b8$c_HuhDt/.q%X&dZaKliI$*j8k.ke=VRm:(23eOA:pf:uV^`7&fmY*2b"SbTtEFN#FK$2hnahlAN2p`Ur@Jr!+tKL,92)Cl7GPhgnC9%*dG%a"-7%_Be*>D4P=(0_,^J>!ra*@>bDLWm]=sH_"PAG%JugGD"DH.G*?Dk/1_0aYR:FQV7&i5Aq!ZboPZ*Q[7%bQ9r1$"GpsjahqG+a/_1`%0"N"uR_-9rM?@4,fBZ:m\EL*!>,A05mQr:P7pgAiGOT9-j>@e<S1Dr[j,]GiZd-Em3c["j^LjDqg*X9`AkrGfRp%7dC:T:WFO@XS%IH=YMRO=C9AM'^9's_SO8m6pWQ3u9/WjM03[)7?UaKW`^;4uqt3U)8M\Xr$IC:^=7kiO?g$n5gV`Pm2.4Ab_%%@3R!pH5`t.'.h9%=Z4ddF2i$pj8t=1X$Q3/$roKWMSj<eUm7@Te^)lCIt=$ObV!_016Pd?1K=cpaR$d`;Nf:&DI<ties:XB+fC)?4;ADG)r`(%E(9S1%7U[Y4?*U?@T/,]"ejVJB'9n;eEYrl-OC;a42Bf9-&(f_8nS8?Z4gd$K[^VL5JMOatV:rCPiZlVUL7aOcPf5q5^ZXD4JL_gt<%!8u%P-R.GBkIRH"H[d2^9(SG_XdM4UM>5=Wa[l?(?H/G1r;<pECqrdi\_nlfXD*7TH!<FlRULImKR2hhNZEs*#ng1].D\2n2K.mb/Y*u%@JgRYrSNhu83Ki"9mOX_@JGShq"+;;e;%SKiD/t9-Its$G/IV*;pDTDBg9Ld4t-Y<fZU3#CJSEi*.IThp;5OIriPJLb/Y).f';9q%;;FG*3EN#IXPU%3S1E==.-`gn\\\UZCS@;PYXW33aS"UFAP@>S?>=n8<"Teq@DZi*p!Ls;!#s.c'm9!"=mWs[bC(-\bnfu*>qEFC%.0c&=+3A,AXrkP%)B6n:O5e<_O%aHV$q3jr7;#SC-*60Iap$M0$tW,1M3Y\U'LUQSJ:l!h@9b.ucr`Hu</G(_oFapE(t:a]r<ruZ%2=I9c)V7`=lQ1DuJPW9OHV?>U;Be"BN4ijP9?hS7j6Gl16.KBJY&Wi>3hInf9mOW]pW--K^`2N-<T=ERMPtKRY'Njmd=fAsl*]p)%M#Ne,LLj*RRI*!t=!0qX=P.hZY?]m*k%>0**;m1aCAYHCCor0_kd$1\iUp'f=Q!I_/#S8uH8o*Q_=(g5CGJAEHFV;cak&IsUJpSh%/)F%h5K6uMGFg<1Q/Q"<f)Dr&ZrL`tVGh,:o#7-2P3j'n%.>sFe+L?ohs("67u):,0#GdH-Jk<^o=35UKR,WHkH]JrTN[dbSpNM]%MX]h8BbH#1Q;;,Li\#`H,h9dqBX+*0^U,UOiX-0dM8Ed$pbo;(S"sifZrt@h'e[CNfU@W`1k.^J*6"V\'&.-'!-?td$EYe`AsII6%4p<7"htNP1gR[P_SthI`kK38MKm\Uj5JF<B$dpqiF7)mdJT7*2J[[/KOB3aMI+mD;f^7\I-L$M+c_5TFn=F78@Z%oslRen]V5Fa@%QR"/\UpO!i5Js-lZJ:WG>se+SXUUh)`J5.&09,M<Agl/s=kUu2>ro8DZ$;__P(K"%.]pJ8We@CZEpSmPF*]Xidp/aLq*fS2Z,A50%b%B@hC2*U/^$74-9.O)b32fA4nK@amPc(p9'V-0^19EX'Qa!\\+*1%#=#P'KWPfTBBD0/"LN[PAN*S>3't<U1a$WcE+Ni1"s!6<s%R`*@<2XIu6=J$qnc%DU'h<`=k*1K$I<IdFY647JK>VDCX[:!M7=^"u+A"fpUhQu3F)/<ci8XQ";e(@$5qQuAh_aM1b$LST7)ToYU%n$&ini_fK6K8*CYV0c4b]a4i9l`$d70RZ>kij%$N?MlCg=UW?'4&a#Qas!p!M`?#ki#8Yt=1pA'R4tSCV6.7%/QE`#h(PYJqZ0:i%Gp2*VHMr<T;S\W`]3M)]0/C"L4[Yo<G%+Q<GY,MYVN8_0DUG0JrI,Y`GEj=+Q<)2Xa1/997Yn=&aCYAglc.)'SoS6c_E2uW?rlYk%\gqWJ.R9CPPA1)E:=Y/9,1S/9WWA?l^Ab/5Zdo,>9`'CA!7Pb_\GMEcWrgLK".5/T)m_k`go)%3<Tpar0G9uiE[/<<.SCLa]'U;k%M@NShR'd,Pg.#]7l(-@TQgtT/,?qpLo#4S(NqcMd7'FJK0'18f'cKGFb,<=cs0GAoe4AU!eYRY(>nR?!RS3HIp0d$_i'B$Xlhg\(%JM-&BW(Xun-0WWr1b#9;Tj.K6/S64e)_1P^^HO0Y7Wp]>@/'N:9T@ln2b^Z^I';GCGtNM@l^*""hp?"'Z$ZG4SIqi66Y3p^0>5)?%'_hG-fSOc_KIM2nHi9+Goue(*W9h/@/H/tjIO_ltPc`SZX'`gE1=3^`a]",4^TtV$rSe$Ef7q$@7,7*p4JCPdme'4^gpc\3;pDWn%-9W/_'_hGMF"c(`LVMFoH)"<>U`o1!'1)&b>Q"ahJLZ&N?ZPF2O9If6]mbf@cj.YhUU\oo'K,@Dp\OQ(+5c#NqT5ibj]i7=Y?t'U%9&XSQ7;?3(qBZAGkY6??hs2(cSq=HJj\gufZWDu0h<Loh]afLp?XfP&X@D(O^Xk,!iB"Oo[JtUP+uio?eM!#MK@`7+AI*D>ZIV17%h!:;lpP6B4O-_(\hWd&HI=-I8iXp5Rhp?KV?0,,%_5fT-b.W8;<j!DdcB)n4l!D-c`)ah^42eg]aldpP[q-"qYMWgKXa[olBZPQ!%P2jfl=Tj00lPHn)lrLk5grGa)8L)u<Hp\mN__\koEN`a?XaY\ghU$VQ?^@bfi[[n3\CWCJ$5YKU.)-1?Y?t8.PZW[6WmXf1f7f[2%:B_a/?GC#.-`F*gp0PK6gX3M,om\(@+B>pKp[J]5Y@$k&I`'s]Qb<_b?<['ZlSj&C4Otd<ia+jcL/GGVOdrHah!8$:][`)(>`IZJ%^F1s)=P<mf,Il>Yfk`#Q)o94:_764XoulR.9YK%r5eF>JHi;r=''ZNI,KV"F+XQ"1-_E:]be8JIMIA.';/[oXqBZrr7dS1uh<Pl0%8p77BU-@/K]me*!^krVcG*5kB]mbCq0E^.s(UK9+i>hWg`a\_LPIT_.nh!@OY@$k_^ch17Hg!VE\,ighpo85S\@ib%DlO:g?.'p%%]4X^<h3>j)[;<+Eat\beiPW5Z4=P*-.N?\WVLk50THronMtZ#.^h6FI&_=[5Gh)`AGOoA<,S.,32tm#H\+0!n@&tt%?$(u"_M`3k%Ve<D<Icg=]BAT"=fI>-0c*!?K(I"/.8)&Nj[H<N/;eu3RAZ^)pYlVP>=2+F:[_$j_[Ej<XBfe,C2=4dhg=?b:Q<(DgJ%,1+nat!H%mC9:5CWC?tPM4.,m@&4'qm`b6I+;!"X3KpfG!30=d&uOb9-56?Wm`&^.i6LOkNgX[a7nrP=g%6Sn[A;+B"#Bk<nmH>]!plskBDqe%$\hluRI9K;*</')S:(.2\#'T"lGrPi_5oSE\91k)+1Cm?(Os_SSMDi$SDNJ$2lghCl5qQK\V3IjeQa9tnb8baf_rFg:Xo=K[[6;Q%97NT3I/1n\WE]I\pISPb:3h<&3ZCC$5o!ddTE?N'V-WO(Itm)(RV@'8c@WO5V+%M/Ggb$k-XQO25/!/,;G##h6P%?Jod[M1E]g9l%Cc;=D5<dD#k7BZd;V<Lc#khD+Ga!5UW_P6tCYP1c1(#)Tc'%mjMq0iDNHn,Ld&cT(SE>a[RrL!ah82BtGcBh3^07/?7'nQ*D4B^5%Of"1lPO<Igg._6Vfct:?o).5@bS=0e:JNOcCR)b\X15FF#o;arH0_JP[LG@TYu0PK6jWr"p[pq>>#("Lq'UWn1EgRQ9_2%K]YX%C%I6i+WcGg9lqP=e)$3D]a$lEMq%DUKhMtM,^piHU.F)ETN^TBEnhUH\M^1\8'5k0U;mCl\m%=X\8&O5L(bLu\r+o#c^,(>+QY.Y\M%d&KZ%>^Tm2#=#RQnUoWqqJ6IN=qX!Y?FddTk)Wl4^4XI1<Ug1=VZGAOds[q(^8p4,E+O+=J,Y&'7g?Cb"*3MHB+=2bb4nM]gh>W[%!+<,O8<[sq]EGH^NBBV3Z%9+U)G4fdrnQPc;qe=`FSJb/lW9OVQ&&;9eN972-)$Z[50#D/fr^BCbZ3!]k.6nUhi0iqCNoHnS+%]S%jMdLn1"CRZ=e3q'I[s'Rd5H?IM6T*3$aYhXUT(e>R*-RqqebG6jlM/7QEb`oF%IgkFEdS*H*3_<!(&b(3MBa%.t-.f6urH(>'gJ+%ILVE>_1E^p#8L]N**:6p5l\Y/rNuFEgd&=:!)_!ZP##nVD]`f43Fqm3lAnFmoRZ51IblpW!SUj/dSDfcN<N'eO#I7bcRj6X[)<1F%pgCLu`XXco0:U;Lem(7NTp9^/5<-EXC\=1mWS*&nl(cgWe+slD!k@XsjOkRG%s%gWqFZ*@VTZ0L3fXg:DInQOC7]@/kpJZ4Gj`Bn%0OqLhDN`D?eea:cq=VDj[._-$H+5uOFD@poT5#%59jLc;Vj)W)pcYtpMd8;D+T(Z&;eUQ^rG$INf-]q#RuN@!rR9GXh:Ek;br].1%V5KBfjnb=MZ.d]BLNC5a08o-la/A)N)c$B5hRUa3=U3E/IJ@!2\-<<j!TWFna)W:I07ip?a(t@_j*O^HosJ8rZ[)<?mV?sW7SapG%3\Plg9&sAN^u@+uSLs0#&hO_&$,(:T#k&aK<)B<\Ko%QBZ=*P*AaL;!S'e\,L.:enm];c_Ib6994ERrn[$U*//[hXSegl`s/Vd=C%lpsWT]aaPh4l0jW5H`eb":;qDZZ!<m+guN--Wsf)GDI('@2FCh!?H8g#sX^=V6H2Tf,GG3],BLZ4a2=<5(^lP\,%r\daC(S/KGdl%gYQ&d2g[=IPA'.W1R<2<)sU,_hHE["af+G"\piA[2jTqSaN$fP]nO`ti(jjY&XSHUW]BbHobcc+er701Z+ZuN2r;!<;gc]WHX*P5%+=+G<F-W#jOS+*VCC,i5h/U%Ze-Q1,=?kAcCA3FK20enk//pjMJbc,EWI`=c8ko#r&Z'@7k\:<]h>K">ZMR0QR"AZ)4X$e\;nn8C%8X1W8;DdQ\70>d)]:N^Mhb"P$;]A&U-eq2@'!hA,oD^N6a@=N9.N;ss<9(2DLB2$e%c1&dIMG'qUB/R:P"6^_oq.YhI/[<\C)X9.%kN@Ge"7]O[n,q%JS;BS8-cQHqV+Yhq#jA)V]'m&Q"0LFkap7ZEK+cg`7RjVg_7G.0Hs\Ns?WeCSq\boJZ0L]H,:q-i'1-<,$(ZL3%\&!`0F_0@hp,k6NH.9YVjns"<;NHE?o6n;g$4S&=odY\dm6TS3=,\ec:(4/pmZ(?*m>a]loNg=Q`Jg:.aqg^N>WTKQ=bu2.kR#'\%i9FrW#TA>n9q9C$bWYFd##8YI+M:M0LU;nr\0_j/E;lFkL0PmI'Z&I>"&FP/<f"44)O]9UnL%p+?jnO)p<MQY#r1A$Wu-Fg>(l(M%T>>T>?fX4Z-#'LKq*!i]f6hCmfbjHnS9OWWo=hZ<e%([7m$r.>l:=RBSm,]dBSl<Qi'mIqr<buoTCU-LNg7ZZ3j6]XgCNE3T.f<l%j0uTPSL`flUsAA>o!PMTf(np:I!nuJm_!ot?U++]K^!lFbJ4(GR#o)>hC8W<m4&4KrM'e^p/)^Km7R^p\*r3r6_S,Uf2<L:=Bi)L%Q2U&%?NLTj?_%$obEnY&2u1QQD`1s-HMW8dI/NUq?bES7jpLm1;=R'HR-TWf@dU@HlkOLM)!tJg#XF)o=Q7(KQ^>3,CGf0!FCt>b%XH9H6K(>H\Wl4<2D04M#g&3pGSc>95<fGJTnf3Zu%SX^B<VpQMZC<AG?i7M6a"4ID`sK]&%6_D*Eb!_\XYTfQs1>aEU]/M&Y7!5,%.Qc1[<MJ&H!Vumj%\<et31,tk:6s0=ft!q<H>u'd*@jX-3Pg$\H0mXW]9A.@;'fhAYRTD12bONPQ^=Ic>?^c@fnCL`F`$Gf@9HsP%Rf"=SA8pP&WPEgch*:l^qSo+VP(c.Y^8Cm[.2Nrbo&@UcFT&E!=sTP#BSTYH=H^-.mTq2Cq`&n4@'9\XrGmaoQ+%PeID+$7+<JbR%XQD.,YI9DS`UPhN:')onR'5H?nV4(3'[cKAQcuG+K=M?Fa**^ORffE8TJg7>g/Y.Adt%WXd'dikP`;P#^TQI2Y&9"b35%/T%ee)O%L!_cI8=7FNY]T"Y_X[EC,bi(&r;sZ\nb,&JD`DSMCWJ%N6hJ!_7i%S3Qj\(Dl@12R7Felu^stY5g`a=?:<k`+bc1M6X8]U"Y[]L_%2tMQecXhOBe_4CKchceHohn`G-obF!aYsV%q3HL,p.8FMVe!'_C!VDYs)`oQ^q&T"Z\l-s;tJc@j;gKiD#lW^T4q&gg1L;%V6R%%%0&:RuE4F-sX&5M?bE%WoD/4QC"t8?!d;Rd;/*uSrL%bLPK97/";gOYo"TFVMjAlfP,3nDY&\<#Qr3=OY@(>U:E7_pkn90m6q2'DS%!_6S[KDC58MQ!:UI5/&DQo+T6(We+5N5f6XfYB="fB`ZM]qK:i#+CD)W!0*GeEp:"n5Fih.SR=ooUdXO@@#srr3%(=6WsD^?,#>`%<65Z]!rM61mIHn7niLcL#Q@*3.\39qW!#13EhiA!7Jm-Do(mu]c[Vr,k9a*<7Qgi]R[V__-&+1[8f-leEne&6A]3q2AkV#U]!G)E%<d%f;jO`k#$Y\Q!X:sQfh^r[hg4$>>JN$-+GRiR-"EE>X!H&)'goFU\0R?h9SZ7j&J+]f70U"#gm+qVXYAJ4?&&a4>Dl79I*e^Ik%M,g=Xd@(S')etUK620(!ch9\=T7U@kHWW<'T)@@@Fh`\QO@*<NAD)7_\MOCT41$7YX=^uQCeh!PLKOH,5Vqc&*\bBdL;F?P4?:dk%kKXAGRBL-R-RSYJT.J\aF7'ou*PY^7=*K<#IW9#q09(IEkg$[r0"DM`QRUCNEP;'*akT:Fs(q,YF6N=qPpSZ=GWI60.t.e,>W\NV%<!+TRp=Y,;*u8GL\YG)V787l>:6fu7XV^K)F+P,C(HVS,aNs69=9u5W7e<s/IGAP<Q+^(re_E1YUjO!fa)tJJ(52f6^^1kQ<'7Oj%8sG*K`j^bB[2_;Lr/LiVL=7PCYm)gfM;Qb[+JO]Rd:QDphA"@Z@$.lp%=/O)E6D7%'I04?oa@/Up`n.$gj'eer-^DKVIgA05W*A`%k@"MR%k,Ze&TXrm+i:6YH;TaW_a8cgC]7=$>>0lG@$Tmgom9[d2udjE;^1G'QsFWkf8R-&=d_Z%O:HG1F)dU(EP5AK0!sksrHAm(%J6nUqmYAe-Q.$Lc)aZ@Zho2,OH1mV<HgY!as8/emZ2=(ciU=rl,r_0kYAEM#dEDK(l_E2tm/G>_g?[ShF8+d3Cj)noEmWIoo^'!R%h<TK5X?n?'g>seh7Fb#S3),hKJ[OD7qW#T6rkcq6Dlp@u'-8th(@p#P2!g_L!h7LP])"<SaU[fUMcsOUh3M=Q7.:dgB4bVTqm$"R%/FTrA6=Q':b3Z%\k53l9QG!=)F2OS$X=]_;S?6,t0Fln*jeW<3]rM?$/(i.tTXSG46lR7U;u+l>%h#:TN2'^3\U`X9cW<`^b6ZqH%Q[b%q^e!;mr*]olI/!HZcKRfIk'[<ps5r,F,)kSn?),XAeI?qeai;mHheVsmM.@dq!buN4iF.j()cZmbF,b*ZcZPea;"s+Pa?KRg%P*fR4L%(tsb=p;0?Y>:QN/]<JppD^)">JD.^kJ7UTM5nM/@m,VS0uQhEM4r^+GC^L)c]uV&^HS'd[PBIUZNUuJff/Y&YER1_>;$-%'[2be?>ig((oc:LHDs2"c%+Mh?DbqinbMVmIb<8o=3ru!n9&YP[!fnus*H>l1<g(*M/p]_*ndt,_J9sRG&Oib6[X+c$@G"bBhXQl%Q1iMIqTco%mQ6288L^<0X%lk%+g6N)=BHtQa:K2O'>o1669^@tV3)a2U@f(c>7@SNdUHq6qrrInXl\g8iS*EW41/*E0O`7]X90B;%VlL+n?C`$.$K=Y<Fh::VG"dh-4fU<D^HL+42r?1&V_al\9t-J/U;(EX>2A%CFq"7qDilC!dQ[)#Bj_J#X5N;X&ES=&dt1A^\eN#F%im<b\VY%c;hRnHNO@\L+c?g^2"eM8Y0j+poX(JpKUWOAKf4dt=QTIYf?^I4qXtLUMdu>Dr\eh'\41:&prNgf>@t,N.AkIu&mW!As%Vff[On9Hi;3>Wn/GpIVs8DI[rSXuBu26>r^lML*lrG-#Im+^)RI%&s8'pe0XDbD@[\+Y6V[gPDP/@GDtrVOURf#5SfqrDg&ZBGMl%6>4Rj;@OM;&jkl<UXbG<.NoZ!Mbui2W.[DhEGA$F,p]%%BGS/>.T2gV>kA.e7J??D_EmcWLm$Rgog['3:ILGkBH5l4i@*@`*j!'h%1iZe,2t;=.pRW?NbNB[&c_3%^)C;^NHZBenCFe1n\ToNj31p;H^jBWkbYfnA\sbNLc`8\<AVt0E?9W&$QBW6Yk'`!#*llIfPnN<a%pBp%[]:`#q=hUmVpjPS.]\nQKQ)GNV%SpOo:J/o2V'nhO=9.S`%NmnTr<NRgpi7.&F`A`Th>Pb4Or`"uFSs.$m55S"LlMu#Jilg>%H]e6o]h65QcdguSZ:3ke5GLP(YkhLT2bX"uBB6QoVedMIW.+1mZjb/28)7>f@NjB@Q>rT`(6+.X#"hVZ@-<&M+?;FIjo,@Fi<"hR%#%0(*9os^3L6r0*cR6Mqd_nS1qIQHMOC9jRZPVTT/W+$:M;dS@4``#tKKYNpdE=60$BijredcSC="ii[-+ZCk+W[`V-0\ZR!S9RE%Us=>rkjPnT[skX:54fh]6*6c\[ZAL3*5q]qCAWfn#-iW_g--c8Ea\2\X6kPQ$uZ#S[=*'_=[-&++0*3eCAh\NI1Tn@><c8-+7AeD%aSO"nqrA+%=?fr*+5'9OhteKgE&]OE0s]0"Z@o$$&fR7,$1*Y(2tkVCHSpW&=@EggiLuKMR^E7WW6E0l`b?`=`00IpO'Bn:0Y7th%XXcg'P6BG4hp\bIFiFB_ba+*c9k%d5"f^Y4nW3&KH:]BJ)*f=VA3UKtZ&mlf_'4tD33ja.RZGt2:uXF&a=dt`?k`-`nr!m6kNN\A%lUOC)k81E(bPHikA$Hq]@n\K[-I2Ij7\u=0&>D2;`-M+Q^PfW_R)u5.?Su3YAbTf>:]SR&pZq\c+0_qL]+9Bug,K'!IcU,UqG2`n%pt,2ZFMf%RC`C+@#]8J]MWEGF]en;haVCuD.j&,6J+(,N^:rBMr-)rm6)Qg3UWp3OfeN?i'g+Q:<eSk6=7A'E<'m5B'o_W3Vi@go%s3q#/^2l*fn7`\.U"*BM#>rs`Z/XW_O2Kcqbq[,b`Yp-'s%cC"@taUU$X^@#_`n/"B?V:K)*>IW`pU+RrL@;329Y[[0h6G'NpF5c%cT/o6CS#.K"D4.74,+<ie*'_bn+[#p\<]o5RVB9AGOV2*o52AGQrC=3Esr)8D'Hcu3JI\;ketj[@+JT7oZ:<4bqKRm9rj\ZLJJdF%?aIs27l+qLiF50#c#RWAbk@`7S\1fN%*ru#6uu$@T$_;E$gV6u0FZRa$,lBT7mQQ,5acD6dSm"R^%nh\&jT^HFJRan@X=J=+MMaR%1[r!?_u)A$g-H\Z`:dGhkV^tiF#2X@Bj6*Hc%7%^Yr7-&RW">1feqM<!0nm?9?2gXRYC?&LuFPpS=4(n"M"N]9[b:Ae$9F-$BXOe%/nrE^I>:&rh`",NT'k#MQnW!A%a0J*OYN65k[a$$Lq#/B^oTX"J^q]Y%;9!50=GBk2>@TNAB"hdjV\3Z)'07fV@Mf)&:@3UR6KOo%H-4Js;ecSW#_])K#)hZ4()[`23<L$_KDln95hs7$(gbJ:$0LTCDWt]2%%*N&1RbXEJoeh["XSg.letu#@=S?Sq@\W(HHim(qM]4,%*3_"(;.^@V5ua>hCsU!X4eO'f4[S(b9-CBI3<\>G3do$"%>"fJ&STiB0Fp\l#AQ4:I?!l.(fnn8[KQe@K4VML:O^Hgl+S`.'OX5p%%>`E;km.PL,/eI,07&.YNFC/`*&0O&%mF1.8[728(7?m"/HBK+*Inp`%LH3fR'smNiZR(JII`J80O`nNF?h0.!m1T#neeL](0OIq%1Bt59-=gaM-=n#e_[.Q)U3o6^G<K:\oW)\bn21b#PjV79B+LEk&J(3@R75/1Qr_J[4j%r^anQkN7ak&Z^[!UdZ(Z#&V<6;:)c6nQ%h1HLTiq]/I!<RF]b-2N&YYk6?`%VM5Fr:OkVEs3&T$+VPLrgu1Pjh#/U.*[FJW*:!3JO2-j;6YD.De6;YRiLIk<$+E^4$O0.O>j9%8),6j3g3,=KUc\SjGQ-9\[nFp>Sc49,f0Zm4.bO^jNEZ.SdK!IDoedIW:]5hg6g#uaLNXoHHd`$k>M;CaVPk>>b<4_FW?/C>gmXs%Z,>On@-]Kl!gY!gJ7Xg[BFYojVHF[;)&K3$&Dbob!jUA^K@?O\!q^'?pt>j_pk0S8&L,!parpc@F)1mYC`jLT\6V]6YXE"@2K>q.%a;/8g)J]S7)^2@U`WR6>k'HAOT+D'#QZ#_>LAdT`#KYLST5JY_:.[hE8P9[!d,hKKO2EO#E62%=CRHsCJ@[V]&a6&90QF.U#nJDY%]2[R"^.-.<V\b.`S=\#^Ki8%0mgp)Ta9=J@;tjjS(oRKkh15oAR?gN3Q3e12U0l)q[k'o2$t-Nh>,"ANM!N2]'-Mi_A8Gl:Nh[Np%")Zc,Dn$GB!+L1hImF\l_m[ZT5S<K7rPIW3S)=EqnHmSD%iZFPOrE0;@4b3G;MsEo5/WQOg@u@u^pq.IN0dD@+u2E7JDt1IFlG)!%!taICA0ql2ZRsUrAp>YRBKB4h/.G_m`$F\EA<2H/kTImEQo9ft"]EOZesZ)]!67Ut"9:RM1ZSR&>,3V%olPdnb9K,Ce-).tAQ(=A%=Re6(A6Pb2=Tj!s8o+Vi^.u5fGKJQY#ZFpkCE-r%6mW$(9=O/sfKKWXCt^_bL52tKS34*&$\AR"LioR#=L\_=`7,6aH=1;i-U_IW%^OQlHC4%cO:9(OD]:,`)JA)K2,)][Tgb%Cu%G?7b=7$D]TRY,fN=a.=,l%r^e'T^$[ml$Nn<Eg@RlNh4_m#g`gS_DJG+<1_#2JIQ%3')S7Sk^FIkm(hY&RiO!0Ko^iJnbT##'b8a7)(+_#nY:$B^<*eZZ+9=+M=K$I+W[7>G10uN[H)#[KV=rig's+%sKOWJ@p#9#`)(.%U_(T9#arJ,^.j8!$kP4*#fNt3(`X3j/cifU>c4'GJ:Rhk+Y6duq?CfWPkkd;IJP!*Q%l[/)e3@<#XM'!o0WVq[;7a6M?aU@/^Io$%UY(/QJ2F%rUDVO#RF($QGRkof/&D&bY]`dC,(Gf[1dY$0P9?ec)Iu#5#'(,A'=:2:TYC:UI1n.iMa0,RUGN&#a!Sf`D,V>R(fAos%7WqhZRVTK%N>81_)NI*$0*!C;jUZnVE@b1sH5r8K3K2D5FL$#i%&B7ZKpI:ZY2doX*$LW&ZjdT$ETf3I9sm.S'Nu8#mB@n[V#=."%(a(5.d)pn[J.`dc_@AFS/JPuS'iaVCG7,_-K3Nq>$4*@/'G(po,7[*5g2tXUDq^j0TWuDh[ZQpd7i;<B^qc`VJ[K$IE<n;39[=FA%+bZ4Ypn!>r.01#T#"N(K?NnRQ@M@:P)p&-_b+d&b07\UuG79ru`B]!hJN(k5e6iEB]k.?e(r!//Bn0oXAP5*E6@?65];Fs-M!9U^%-a8os8I>PB(t:fRV1<--rPqaq1p!<^ag.C.+kZ0m9@!VSp._N+!4]1C.3eh[Vj[07$dD6g+DU'&W7)C1#/7PeVD'uOZbiV6Jd!8m%',_7kF%iTOqFL,^d9MZGWNZUH!A.J-2:)b5-QHWb2H=[(kEi"_oC,RG1BSkSlH(/dpl7t5$BV!mNhd+][WW*o4_4pCel[ZWKeGe1%$5sL<P-eH(%Q,/],XQA-=b[*?"Fq%j%*BCugD%MP:oMA."L0QjUPHH1QUCiDFA&?Q(JH42[1uR"_7jAnnl$TcBNpflOb\)m)TO7`%5[bo+fk@$NqNL(r_F7&W+Q7W[9G.(2gP&CF8.QN[UpIBjd[cB'8X;aE+d=-C!Z[H&$YeRn:<947'dt[Q^m;0[+rAU@aPmNWd06m<%^+>.H5U%V;P*c?FmcfHU$h6/WP!ffZ`r&d?C1[r*6&)9C+r??@q%Vl-2PpQV)j*`?<s(Jb!9ILGH"J=X&4@Lm`Y9sKCPor5C.=*#%\\cFC&6PKF17ml:MC?@#4/OQdA-`o=%QYFIeJ`U.,+Fm[(5Q@(Q^,Bp).ZV*!^@X</O+rl,M/.u6Doncl4#pl9HU*@Os+r&i]U^s%6fYo#3'+:WOfplZ5Z2Zco:E`FLG5eg,.L\5BHLcPA,$C$$Wt3l5!":;?/fN>RDuHFNWtk`&WR2Xg'=&/)S3kg4q(_@FIAt"A0at)%ktHJ3B,!iI@_tZ@96Xs-7[WYU_B!G:n_&XG3#Ws3m9)27,KrTWST?VS1l^nMKVPedJinm`aImJsi*>FI!um3b-tC,94l*I[QM,Gt%b<0-?Bci_cE$[Dt.=ppI4-I5Vkm3cI.T7>PA/@@f&172Y97+1"0bG>.[-++f6<@:C6g`C0"A8iI=>YW+"[oROLIj$K?i^T)`]6]`%+\40Oi>uO1mPGotU!*E9)+*!]hfG2m/7:6OSgNk)J7$Li,uoQ#K$;V-k(`'@.Ys-<@p9QT5"8I;SH4]HK#rfo!$/Fk9COa!L?3*_%_U#qbbnIq>SF\]q"[qj$&'kT32UTH`4P?5=+D+=\J5:Q@bU*I8^Li&,Of_1g4/@`=[jFiAU0=Gl,-"tX/W<8S&0"D#-4pI:YqI&[%-G%?Ug;kg8"9:Ab.`=8f?a_6mjq7W9?qV+<&a.B&j8`U[$4o!=75KK<.68,sU_m!;8FfU_G,1LoYTj;YKH2KQ("eWgQ[pk>&2)0t%YqX%R'[%l\A1JX%OTN=X8-.^.U]<+_&co.J)o@9HrkZ0hAJ5\bTYB,Hba[fjF$3*nS#GrtRUe*%f]5hR(q6jt3H(SGnm'k(7$tlf%3jBi&6Uskj&iM"%/D#&U)cD!>foW!QWlkQd*[$2K.#JZJb!@Cq+Gt.k*qBc,ei7$tGY-*]2q/gp=q^ERL,_jo1+Z/ETe8[g2U2W=%7,;N-3cH_63J8?6r&mWuS!jf@KAjsRUkt3UhitTN(Ib)LN(=8l"hfG+,>nRt,EfMVfG@us_MCSsf[5S[%gNVkP9f;\.8;TDTh=25%*@5HPfQ1:f`9IoM\mdGS1(Y@dj?0T;/*UnMp,IdWm09GJd833?rt++5W\0&\=(e9R-6tp*@T3L('2k&a4bDIB,Yo"j7USP,`#s^T%R#jj]54oM.'9Z1d9ak`N66a2F;b*4:OuNkD8-Ate>[]snUp1?]g.,$#H]GIVPcYtClGA8i>6fXT!h]]G!8N+kfn-$UaZomgg*0l(%[O7$UK&%qb^bS1CN0dc\#66K@/1:U65/f"eFOt(J#-#kc^bc?+!QTOFc<NV22>)(bSu0o^V1At:![q1p`+IhV7A,jrI$;JpE)7;V%r3Ip]*&g_M#n)>^5)-CRq_Ef>CF11?[,e,=,\\1H"%Q5p,RA'/(a6cj36VSCqC)"jZU1S(I1;R3oV\0BonHA035?hsSE`XZLcK3i%!L?t7"ZaLH8I6(WN3U_U@esVU/=b]EP67+E/VrOC#b;rV-1e$n_#99J'_oeg8?nr$F\L6siD19u^5%%W$f=#]CmbQ;PjQj4!IPDf%E'@:'^iY?O!X*Ucl9ZZFXTW&u+8R&=Rt(N.IfRk-/RhBhM?5h6PJhrAN#`o@3'AeM)`@[u<`dlVjGm%sW"eeV1$DD8$T/%2O8psi%?)MTE+;TsTAo(pu"mQVAVHFsO/V6s5#(GLU-^mSqN8)g;CP>3o9oQ3;XT:rs9hbX"'[B"KEPekLQ4?SG?09?bs5"(=[V2ssA4R%=%ZQg%^]=K0P8;*Z'-CKu%JuqXc;4ACVnkI4PD.8mQFB&4U7]"UWUo/$:5/W^bF%dMu6_I*UFsOX_IE*(G,W[G]_j9X[)o]2E.!?js%KM<X9!]q#;\fj(gYW!AHlgjJ(@tId8$=JE[MEXe/-,=V2[Z7(h=9N&iH=;@cA%@c1Bp-9.kDH]&cB$@$GlS[Za$@(001_1q=bp`\%,/A/cV`E*V0FI2%N&*9<,cP&j[j(?(5r5to-&>AM3)!G:&r[\l]^<Lj'E\n9,S&<^/L@6L%,PHE6`OG5&?9$oHToW&#^1D[StQNB%'(O/n$3Df1/V5Or0O.>(\)JPB>co;/K,J9p^+aBfqRSL-)+$hFhW%W^;?dd@gkm@>7J!%:(!5-hj,sMS%GAY$dO+AF6*O5=O9-17%OT=onf90r9a2$&b"G$S8TKemRWu-s/a;N%FjYn2gC/QRFGj@L_Yp'52ZWL^F7&%TU@3UlgMu`CH6-:>l2`(U]&g$VCbnq:[#dGse%Z6D:s1*ZrRYTnEdgl;fSPKZQ]->l<DEH=2sR%.\VEZ@V^,f^TX,<7Zm299bifo^Z!,Wh0mTQjD%!gLWb'G+\E$CELn"Y?l(!TF>m%!GY9E(au(M[NpmVd\J"9M;_IlQXr;a:96_)0Ng&*b+HQ;1!>kn]aMcSH(JJ<U3#"nFNKn<GHgDdOthg]FWqeN@o>E((mETM@(T<N%milP#CcNK#Ak<UQ-KBHYlOP@:3+&!F(sW-i71o8Pd$u[L(SM?N.&QK)Jqa^2NUEkE%8=rV]*&lC!CU%R_0`K#[kU">H\s[p#Dlu#%LCI.b\2bu\6K3'R0II#P0IM/+gt:OPOR,OIbhBcD#sajn8967BD3c-^`N*hh%*:7A_nL\U8HcG\k.2d_rG`\pbE?[3>YuHYHf/^N%p*9r>bN:&S?OU4T)ZppCoJ%0__H7e0>*H*)KGjr.dRDKlD(F0_534J4:6et@m.dG&=d&hoMR'H5*H\_LQEV\:?rG63YU5'/jOPSG%oaPLO:hp\4OCe::3WVipc*7su&fBB2A^aKl'&lV'6L78E&I)gmL*UV:*\)9G'R>"j@=]?VJVlsF["5+6=`bVCg'eDCZYNOM1F?cK%ONWSAU):0(JsY+O1;cCbNbOA=!?@-fbP;==#GV8>?X\638&6iA6m=n!UaWgY9L8,5B<FrdCGDO`_T*Y/-8RT8Y$>S<#0NJ%@B-dh%g!^e)Eg^%&GSC_*g]GLD`nN6W$m&)5,7l?g"7$\s]rk#7Ami@te:rN5c_)$i$/Aom-I!&I`[MhQ!$G5%q7EL36<ReDkqXm-(oa;,%SQq_3qfoObJ[i;0i!:K7/W!7X5"KDs!bQVX+=WSj"a&^jXs,9%IOtAX5D;BEfu`<K4m/lGTnaMR/-\CfK`pC-3G&Pi=alNG#]8lg%bG952hdWWoHO??PM1[>ib&/tf'8H^#3u^"E#OZ!dbT^!5?&b`#RYDoCgnrZ%6/m0,!qL&1JRopl*p0911e19HE!,fU((UR;bLADD%qKODOR*u,C/!6fIQYCFTAtB>>7\OI1#30+71T:6"^d]UIl1rO;Vk+>86BdTJ&4I9uJES#):$do)Q,<@t(n$U^@k^_kNjHrE!jQU>%lXQ`L]Vd*0PE?f=Zse2S:a6ZNO,&@O_c?K#a!.,7.4GHr)T#UDDCK;8#]lOZ1RHIU$mGGb#iT#(&/iLa>a@oK6q!N[QuU)BKar3Z%:(%pE+Zq3:PrIZDHpc3Q7YjeqhFX^OQ*re!jKKfs]KN-X;k3068_$i^]`QUl!(5*A;he["+#LMt`88?(Q(o<Jot&I0A&ZmKkm8pV%e&U#pQA]28JIma!)DZ=<7cBFjJCeW?PEUfe1i*q=[W/RGGN.XM2:EnO5qjU,mgthHm9h+l1*bq(gDG)D+H;lo_`T'"AdatKs+++C%@I2gJ*6Cmj)?p\(>o-!ZNIp66fNA#>8(o*5E1OY\VaDZE2C?0BZY&I"R)]VM1a\6F%NXJT'T>;T/03!_LaFB:J/X.%g@?4<&^.ZE%VqNn"bRnZ<(CNm1@5_jA#0Z!RKg#bE!KJD2I%#SF'6ekfT8jt+%,h2>\3r#nNd0o,e3rj*"q@i4:YESq\j6s!I98H2L*j_jW8XE\%fLF.?$13o6(/.2H%#_8bX,pbg*ErZ/XP5+s(Qje**um#51kVqNk`%LR)GO`hR9FPs_eaDr6QspE@2s(HgMlgV#[[W);HUR`8l=f.%o5r2^i&$@;d_74`3I8@i:F;%4#e"FL5AIuW,VY'A(L&.8oLpI/`#.Yk&l(i+f>`JKQNTcpRQ#n%o?i3CO;7lqSN8&qhkkAprYuK%%O*-Z#e/H?mM.#@,_ST/[J4&`K`nCouMU044PoLHNTlU^e$D2A\$3pLCSLa[fNQhTeiDROKJu@8Qi#rbW.<=A)1\k-q>r!YUJdHT$%NNBZ#$?X>)mU17jW=Z-l@"ZiD>4>9tKl%DXfF:K[8n7OHYE-FO%qET/eWmbYn)sZ$Y8_jg.^:j>#GaAKYZmcM#q5?^#%JN'k.Q#d%XcIpDO48+qF^$/K*$Euloo"YN$lA\9`<?H<!^ukC+3EK#=LARnC1DBKU(NH$KVll#S*05%bC0,7kkB_5f8oq9hi4m%^:3\(p%RV5%n'*3i&W_8ID^"LJ>5d6(\L08WeS;6`fXlFm*e)oBIHl:B*^4NA?[(l!jTXhtI=knH*^70-crYGXo?Z`P&-B$<Nu&/Jh,`tD"4#rud/~>%AI9_PrivateDataEnd