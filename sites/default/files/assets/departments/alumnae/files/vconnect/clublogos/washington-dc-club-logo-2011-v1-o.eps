%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Washington DC Club logo 2011 v1-o.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Cicia Lee
%%CreationDate: 3/16/11
%%BoundingBox: 0 0 198 132
%%HiResBoundingBox: 0 0 197.0977 131.0811
%%CropBox: 0 0 197.0977 131.0811
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 11022 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD08FFA92F532F2F7EA82F542F547E5A2F2F53A92F2F2F84532F2F%54FD052F7EFF7E2F532F542FA9FD04FFA85A2F532F2F7EFD05FF5A2F2F53%2F542F2F2F5AFD04FF530D070D077EFF7E2F532F542FA9FD04FFA95A2F53%2F54FD042F7EA82F542F532FFFFFA92F542F5AFD11FFAF7E060706FFFF5A%06072FFF59292FA9A92F067EA9A92F07065A7E7E53072FFFAF7E060706A8%FD06FF842F060753FD07FF5307062F7E847E2F06FFFFFF070759FFA82F06%FFFF7E060706A9FD06FF842F060753A87E5A065AFF7E060D067EFFFFFF5A%0653A8FD13FF5A070D7EFFFF2F062FFF5A07FFFFFF065AFFFFFF7E070D7E%FFFFFF592FFFFFA80D0753FD08FF532F07A9FD07FFA9072F53FFFFFFA90D%A8FF5A2907FFFFFFA80DA8FFA80D0753FD08FF532F07A9FFFFFF5A2FFFFF%5A060D5AFFFFFF2F2FFD15FF7E0D0653FFFF5307067E067EFFFF59077EFF%FFFF5307067EFD04FF7EFFFFA906072FFD08FF53060DA8FD07FFA80D065A%FD04FF7EFFFF53060D84FFFFFF7EFFFFA906072FFD08FF53060D7EFFFFFF%A8A8FFFFA807062FA9FF7E077EFD16FF2F0D07AFFFFF070D072FFFFFFF2F%2FFD04FF7E070D7EFFFF847EFFFFFFA82F0754FD08FF532F07A9FD07FFA9%072F53FFFFFF5AFFFFFF532F072F84FD05FFA82F0754FD08FF532F07A9FF%FF7EA9FD04FF2F2F0784FF2F2FFD17FF7E060753FFFF5A060759FFFFA906%7EFD04FF5307065AA8A9077EFFFFFFA9060D2FFD08FF53060DA8FD07FFA8%0D0653A8A9532FFFFFFFA90607060D53A9FFFFFFA9060D2FFD08FF53060D%5AA97E2F7EFD04FFA8060D2F8406A9FD18FF2F072FA9FFA80D065AFFFF53%2FFD05FF7E060D072F072F7EFFFFFFA80D0654FD08FF530D07A9FD07FFA9%070D062F0D0753FD04FFA8070D062F07A8FFFFA80D0654FD08FF530D062F%2F0D06A9FD05FF53060D075AFD19FF5307067EFF84060706A9FF0D53FD05%FF5307067EA9A9067EFFFFFFA906072FFD08FF5A060D84FD07FF840D062F%A8FF532FFD05FFA92F07060706A9FFA906072FFD08FF5A060759FFA82F7E%FD05FF7E07060DA8FD1AFF0D0D2FFF2F2F072F5AA907FD06FF7E062F7EFF%FF847EFFFFFFA80D065AFD08FF532F07AFFD07FFAF072F53FFFFFF59FD07%FF7E0D072F5AFFA80D065AFD08FF530D07A9FFFF7EA9FD06FF072F0DFD1B%FF5A060D2F0DA82F062F0753FD06FF5307067EFD07FFA906072FFD05FFA8%FFFF5A060DA8FD05FFA8FFA80D0653FD06FF847EFD04FF530D065AFFA906%072FFD05FFA8FFFF5A06077EFD05FFA8FD04FF2F062FFD1BFFA80D07292F%FF7E0D060D84FD06FF7E070D7EFD04FF7E53FFA80D0753FD04FFA92FA8FF%532F07A9FD04FF535AFFA9072F53FD04FFA92F8407A9FFFFFFA9062F5AFF%A80D0753FD04FFA82FA8FF532F07A9FD04FF535AFD04FF2F0D2FFD1CFF2F%070684FFFF060729FD07FF53070659FFFFFFA8065AFFA9060D06A9FFFFA9%2F06FFFF2F060759FFFFFF7E0759FF7E07062FA8FFFFFF2F2FA80D29FFFF%FF590706AFFFA8060D07A9FFFFA92F06FFFF53060753FFFFFF7E0753FFFF%FFA80D060DA9FD1BFFA9062FFFFFFF5A067EFD05FFA92F0D070D062F2F2F%062FA8840D2F072F072F2F2F065AA853062F070D2F542F2F07FF532F062F%072F2F2F072953FF5329077E530D07A9FF7E072F072F072F2F2F065AA82F%072F070D2F542F0D06FFFFFF7E2F070D062F7EFD1BFF5A7EFFFFFFA85AA8%FD05FFA87E7EA87E847E7E7E847EFF7E7E7EA87E847E7E7E84A8FF7E847E%A87E7E7E847EA8FF847E847EA87E7E7E847EFFFFFF7E5A2F5A7EFFFFFF7E%7E7EA87E7E7E847E84A8A97E847EA87E7E7E847EA8FFFFFFA97EA87E847E%A9FDFCFFFDFCFFFD96FF595A537EA87E537EFFFF7E5A53FFA85A59A9597E%537EA9FD05FF7E5A537EFFFF7E5A537E53A9FF84537E7D5A7E7E538453A8%A884FFFFFFA8535AA8A9535A84FF595A7EA9535A7E7E53A8FFA9535AA8FF%A87E535A7EFF537E597E535AFFFF595A53A9FFAF537EA8FF7E5A59FFFFFF%597E597E7EFD04FFA9535A5384A9075AA8840DFF532F84FFFFA9065AFFFF%2F5AFF2F07840D53FD04FF532FA884075AFFA90654A82F7EFFA82F2FA907%5A2F7E5A2FFF540DFFFFA907A85A5AFF2F07FFFF5A06A9FF2F07FF842F07%FFFF532FFF840D53FF7E2F7E5A840D2FA92FAF2F5AA85A07A9FF5A065AFF%AF077EFFFFFF5A077E7E2F2FFFFFA9077EA87E2F2F0DFFFFFFA8FF7E06FD%04FF0753FFFF7E7EFF2F2FFF5307FFFFFF7E077EFFFF5A06A9FF0759FF84%A9FFFF530DFF5A0653FF547EFF060DA8FF592959FFA8FF2F2FFFFF5907FF%FF2F2FFFFF2F072FFF7E7EFF0D2FFFFFFF84A9A8FF0753FFFF2F07A9FFFF%2F06FF7E0D067EFF5AA8FFFFFF590DA8FFA80753FF062FFFFFFFA82F53FD%05FF530DFD04FF077EFFFF7E84FF5A075A067EFFFFFF7E07A9FFFF842959%FF072F535AFFFFFFA9077EA82F7EFF2FFF7E7E077EFFFF072F53FFFF5407%7E5A2F07FFFF2F2FFFA85A7E2953A97EA9067EFD07FF2F53FFFF2F2FFFFF%FF530DA8847E5A06A95AAFFFFFFF7E06A9FFFF2F2F7E0D5AFD04FF0659FD%05FF5A06FFFFFFA80753FFFF7E7EFF2F0D842F06A9FFFF530784FFFFA806%5AFF0D2F7E53FD04FF2F07A80653537EFF2F2F0D07FFFFAF2F292FFF2F2F%7EA82F0DA9FF292FFFA92FFF53072984840753FF7E532FA8FFFF0653FFFF%062FFFFFFF5A06FF597EFF0D0653A8FFFFFF590784FFFF2F0784067EFD04%FF2F07FFFFFF7EFF5A2FFFFFA8A9075AFFFF5384FF5A0DFF7E2F7EFFFFA9%067EFFFF7E2FA8FF077EFD06FFA80D2F7E072FFFA953FF592FA8A8FFFF2F%2FFF542FFFFF7E07FFFF542FFFA95AFFFF2F2F7EFF072FFFFF2F2FA9FFFF%2F53FFFF5A07AFFFFF2F2FFF847EFFA80D07FD04FF7E06FFFFA9067EFF0D%2FFFFFFF7EA82F2F847E2F7E53067E7E2F7E5A067E5953FFFF070D7E2F07%FD04FF5A067E7E2F53FF7E072FFD07FF072FFF0D53FF075AFF84065A2F2F%7E2F53FF060DA8FF2F077EAF060DA87E06A9FFFF067EFF8406537E2F06FF%FFA8062FA8FFA82F2FA8532F7EFF2F53FFFF7E0DA9FFFFFF2F0753A82F2F%A9FF7E0D2FA9592FFFFF7E5A7E84FF7E847E7E7EFFFF84597EA9FFA8FD04%7EFD06FFA9597E7EFFFF847E84A8FD06FFA9A8FF7EFFA97E7EFFA87E7EA9%7E7E7EFFA87E7EA9A97E7EA9A87E7EA97E7E84FFFFA9A8FFFFFF597E7EA9%FFFF847E7EA9FFFFFF7E5A7EA8FFA97E7EFFFFFF7EFFFFFFA8847E7E7EA9%FD04FFA97E597EA8FD12FFA9FD3FFFA9FDFCFFFDFCFFFD21FFA9FD26FFA9%A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9AFFFFFFFA8A9A8A9A8A9A8%A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8%A9A8A9A8A9FD04FFA8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A9FD27FF%5A060D060D060D060D060D060D060D060D060D0684FFFF7E07060D060D06%0D060D060D060D060D060D060D060D060D060D060D060D060D060D060D06%0D060D060706A9FFFF530D060D060D060D060D060D060D060D060D065AFD%27FF5929060D070D060D070D060D070D060D070D062F7EFFFF7E060D060D%070D060D070D060D070D060D070D060D070D060D070D060D070D060D070D%060D070D060D070DA8FFFF5A060D070D060D070D060D070D060D070D0629%59FD27FF7E072F060D0607060D0607060D0607060D072F29A9FFFF7E2F29%2F06070607060D0607060D0607060D070D062F060D062F0607060D060706%0D0607060D060D062F2FA9FFFF532F292F0607060D0607060D0607060D06%2F067EFD29FFAFFFA8A9532F070D070D070D070D7EFD09FFA9A92F0D070D%070D070D070D2FA9A8FFA8FFA9AFA8FFA9A97E2F070D070D070D070D077E%A8FD0AFF5A060D070D070D070D2F84A8FFAFFD30FFA82F060D060D060706%FD0DFF2F07060D060D060D2FFD0DFF7E0D060D060D06070684FD0CFF7E07%060D060D060D53FD36FFA82F070D070D070DA8FD0DFF2F0D070D070D067E%FD0EFF2F0D070D070D075AFD0DFF7E070D070D070D2FFD38FF7D07060706%0D067EFD0DFF840607060D060753FD0EFF2F060D0607062FA9FD0DFF2F07%0607060D06FD3AFF2F0D070D070D2FFD0EFF54060D070D065AFD0DFFAF07%0D070D072F7EFD0DFFA80D070D070D077EFD3AFFA8060D060D06077EFD0D%FF7E07060D060706A9FD0CFF5907060D060707FD0EFF53060D060D062FAF%FD3BFF53070D070D072FFD0EFF2F0D070D070D2FFD0BFFAF2F070D070D07%84FD0DFFA9070D070D070D7EFD3CFF7E070607060D0684FD0DFFA8060706%0D060784FD0AFF7E060D0607062FFD0EFF2F070607060D07FD3EFF2F0D07%0D070D2FFD0EFF53060D070D065AFD0AFF0D0D070D072F7EFD0DFFA80D07%0D070D077EFD3EFF84060D060D06077EFD0DFF7E07060D060706A9FD08FF%5907060D060707FD0EFF53060D060D062FAFFD3FFF2F070D070D0753FD0E%FF2F0D070D070D53FD07FFA92F070D070D077EFD0DFFAF070D070D070D59%FD40FF7E070607060D0684FD0DFFA80607060D060DA8FD06FF7E060D0607%062FFD0EFF2F070607060D07FD42FF2F0D070D070D2FFD0EFF54060D070D%065AFD06FF070D070D072F7EFD0DFFA82F070D070D077EFD42FF84060D06%0D06077EFD0DFF7E07060D060706AFFD04FF5907060D060707FD0EFF5A06%0D060D062FA9FD43FF2F070D070D0753FD0EFF2F0D070D070D53FD04FF2F%070D070D077EFD0EFF070D070D070D59FD44FF7E070607060D06A8FD0DFF%A80607060D060DA8FFFF7E060D0607062FFD0EFF53070607060D07FD46FF%2F0D070D070D2FFD0EFF53060D070D067EFFFF2F0D070D072F7EFD0DFFA8%2F070D070D077EFD46FF84060D060D06077EFD0DFF7E07060D060706FF7E%07060D060707FD0EFF59060D060D062FA9FD47FF2F070D070D0753FD0EFF%2F0D070D070D532F070D070D077EFD0EFF070D070D070D59FD48FF590706%07060D06A8FD0DFF840607060D0607060D0607062FA9FD0DFF5307060706%0D06FD4AFF2F0D070D070D2FFD0EFF2F060D070D070D070D072F7EFD0DFF%A92F070D070D077EFD4AFF7E060D060D060784FD0DFF7E07060D060D060D%060707FD0EFF5A060D060D062FA8FD4BFF2F070D070D075AFD0EFF2F0D07%0D070D070D077EFD0EFF070D070D070D53FD4CFF59070607060D06A9FD0D%FF840607060D0607062FA8FD0DFF53070607060D06A9FD4DFF2F0D070D07%0D53FD0EFF53060D070D072F7EFD0DFFA92F070D070D077EFD4EFF7E060D%060D060DA8FD0DFF5907060D060706FD0EFF5A060D060D062FA8FD4FFF2F%070D070D075AFD0DFF2F070D070D070D59FD0DFF0D0D070D070D53FD50FF%59070607060D06A8FD0BFF7E060D0607060D062FA8FD0BFF53070607060D%06AFFD51FF2F0D070D070D53FD0BFF2F2F070D070D070D067EFD0BFF2F07%0D070D077EFD52FF7E060D060D060DA8FD09FF7E07060D060D060D060706%FD0AFF7E060D060D060DA8FD53FF2F070D070D075AFD09FF2F070D070D07%0D070D070D59FD09FF0D0D070D070D53FD54FF59070607060D06A9FD07FF%84060D0607060D0607060D060DA8FD07FF53070607060D06A9FD55FF2F0D%070D070D53FD07FF2F2F070D072F5A53060D070D067EFD06FFAF2F070D07%0D075AFD56FF7E060D060D060DA8FD05FF7E07060D060706FF7E07060D06%0706FD06FF7E060D060D060DA8FD57FF2F070D070D075AFD05FF2F070D07%0D075AFFFF2F0D070D070D59FD05FF0D0D070D070D53FD58FF5907060706%0D06A9FFFFFF7E060D0607062FA8FFFF7E0607060D062FA8FFFFFF530706%07060D06A9FD59FF2F0D070D070D53FFFFFF2F2F070D072F5AFD04FF2F06%0D070D067EFFFFFF2F070D070D075AFD5AFF7E060D060D060DA8FF7E0706%0D060706FD05FF7E07060D060707FFFF7E060D060D060DA8FD5AFFA92F07%0D070D077EFF53070D070D077EFD06FF2F0D070D070D7EFF2F0D070D070D%53FD5CFF53070607060D077E060D0607060DA8FD06FF7E0607060D062F53%070607060D06A9FD5DFF0D0D070D070D070D070D072F59FD08FF2F070D07%0D070D070D070D075AFD5EFF7E060D060D0607060D060706FD09FF5A0706%0D060D060D060D060DA8FD5FFF2F070D070D070D070D075AFD0AFF2F0D07%0D070D070D070D53FD60FF53070607060D0607060DA8FD0AFF7E0607060D%0607060D06A9FD61FF0D0D070D070D072F53FD0CFF2F070D070D070D075A%FD62FF7E060D060D060706FD0DFF5A07060D060D060DA8FD62FFA92F070D%070D075AFD0EFF0D0D070D070D53FD64FF53070607060DA8FD0EFF7E0607%060D06A9FD65FF0D0D072F53FD10FF2F070D075AFD66FF5A060706A9FD10%FF5907060DA8FD66FFA82F075AFD12FF0D0753FD68FF8484A8FD12FFA97E%FD34FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: 
%%DocumentCustomColors: (PANTONE 280 C)
%%CMYKCustomColor: 1 0.7200 0 0.1800 (PANTONE 280 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic CMYK</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2011-03-16T10:33:30-04:00</xmp:CreateDate>
         <xmp:ModifyDate>2011-03-16T10:33:30-04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2011-03-16T10:33:30-04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>172</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgArAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXz5/zkL5HuNIiX&#xA;zXolzdRQ3Fwy6tAJ5WRZJjySVAW+FS1QR0qRQDN12bnEvRIDydT2hiMRxxJ890w/KHR9B87/AJV3&#xA;OkTzXMWqW928lxci5mMiXJjKwXCjlTj6bceHQ8T7ZDWTlizCW1V3dGejAy4aJN33nm86/LC9k0n8&#xA;1LXS/NdxcAQTy2jB7iVVjulqsbMQwqOYp4b1zN1UeLCTCv2OHpZmObhmT8+rMvyr8gWXm3XdY1x7&#xA;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&#xA;XYq7FXYq/wD/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:1E05FEE70820681188C6AF33B70074B5</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:1E05FEE70820681188C6AF33B70074B5</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:1D05FEE70820681188C6AF33B70074B5</stRef:instanceID>
            <stRef:documentID>xmp.did:1D05FEE70820681188C6AF33B70074B5</stRef:documentID>
            <stRef:originalDocumentID>uuid:E3B705F59336E0118987E9F32614B546</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:20:43-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:20:57-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:10-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:28-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:53-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:25:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:17-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:45-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:008011740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EC80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:14-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ED80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:22-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EE80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EF80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F080265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:30-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F180265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:41-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F280265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F380265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:10-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F480265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F580265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F680265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:30:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1405FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1505FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:26-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1605FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:34-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1705FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1805FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:11-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1905FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:33-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1A05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1B05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:58-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1C05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1D05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:24-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1E05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:30-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>uuid:E3B705F59336E0118987E9F32614B546</xmpMM:OriginalDocumentID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>8.500000</stDim:w>
            <stDim:h>11.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>PANTONE 280 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Red</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Yellow</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Green</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Cyan</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Blue</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Magenta</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=90 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>14.999998</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=90 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=80 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>80.000000</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=35 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>35.000004</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=5 M=0 Y=90 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>5.000001</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>19.999998</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=90 M=30 Y=95 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>90.000000</xmpG:cyan>
                           <xmpG:magenta>30.000002</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>30.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=75 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=10 Y=45 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>80.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>45.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=70 M=15 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>70.000000</xmpG:cyan>
                           <xmpG:magenta>14.999998</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=95 Y=5 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>5.000001</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=25 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>25.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=100 Y=35 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>35.000004</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=100 Y=50 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=95 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>19.999998</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=25 Y=40 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>25.000000</xmpG:magenta>
                           <xmpG:yellow>39.999996</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=45 Y=50 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>45.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>5.000001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=50 Y=60 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>60.000004</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=55 M=60 Y=65 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>55.000000</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>39.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=40 Y=65 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>39.999996</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=30 M=50 Y=75 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>30.000002</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=60 Y=80 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=65 Y=90 K=35</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>65.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>35.000004</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=70 Y=80 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>70.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 282 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>68.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>53.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 280 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>72.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>18.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grayscale</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=100</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>255</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=90</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>229</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=80</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>203</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=70</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>178</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=60</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>152</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=50</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>127</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=40</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>101</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=30</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>76</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=20</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>50</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=10</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>25</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=5</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>12</xmpG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -131.081 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 131.081 li
197.098 131.081 li
197.098 0 li
cp
clp
[1 0 0 1 0 0 ]ct
42.9287 1.61475 mo
42.2539 1.76172 41.9297 1.99658 41.7241 2.26074 cv
41.4019 2.73047 40.9028 3.66943 40.1099 5.51953 cv
38.6719 8.95508 35.3535 16.2661 33.9146 20.0835 cv
33.7378 20.23 33.3271 20.3184 32.9458 20.3184 cv
32.623 20.3184 32.3589 20.23 32.1528 20.0835 cv
31.8301 19.3779 31.3892 18.3218 31.0371 17.4995 cv
29.8037 14.7104 li
29.3936 13.7705 29.0107 12.8892 28.7471 12.4487 cv
28.4829 12.9482 28.1299 13.6538 27.7485 14.4756 cv
26.3691 17.4697 li
25.9282 18.4097 25.605 19.2612 25.1353 20.23 cv
24.9888 20.3765 24.6074 20.4648 24.1665 20.4648 cv
23.8438 20.4648 23.6675 20.3765 23.4023 20.23 cv
22.9326 18.9966 21.7588 16.354 20.7607 14.1523 cv
15.9448 3.64014 li
15.1519 1.90869 14.9761 1.76172 14.0068 1.55615 cv
13.2725 1.40967 li
13.0381 1.11523 13.0679 .528809 13.3911 .380859 cv
14.4771 .44043 15.71 .470215 17.208 .470215 cv
18.5 .470215 19.645 .44043 20.7607 .380859 cv
20.9951 .499512 21.1128 1.23291 20.8198 1.40967 cv
20.2905 1.49707 li
19.7622 1.58545 19.5562 1.73193 19.5562 1.9375 cv
19.5562 2.14355 20.1729 3.52344 21.0835 5.57861 cv
23.9907 12.0679 li
24.8125 13.8882 25.1055 14.5044 25.4585 15.2095 cv
25.8105 14.5635 26.2813 13.6826 26.8677 12.3613 cv
27.2495 11.5098 li
27.4551 11.0396 27.6313 10.3945 27.6313 10.2178 cv
27.6313 10.041 27.5723 9.71826 27.4551 9.4248 cv
24.6367 3.22998 li
23.9609 1.76172 23.7554 1.55615 22.6392 1.43848 cv
22.3457 1.40967 li
22.0527 1.17432 22.1108 .499512 22.4341 .380859 cv
23.6963 .44043 24.8418 .470215 26.1338 .470215 cv
27.6313 .470215 28.7471 .44043 29.5098 .380859 cv
29.8623 .470215 29.833 1.2627 29.6274 1.40967 cv
29.1289 1.52686 li
28.7759 1.61475 28.3354 1.73193 28.3354 1.9375 cv
28.3354 2.17285 28.4536 2.49561 28.6001 2.81836 cv
29.4805 4.84521 li
29.7451 5.46143 30.0391 6.10693 30.3027 6.63574 cv
30.5962 6.01904 30.8901 5.43213 31.1836 4.78564 cv
31.4482 4.19873 li
31.9473 3.08252 32.2407 2.20215 32.2407 2.02588 cv
32.2407 1.8208 32.1235 1.73193 31.6538 1.61475 cv
30.7729 1.40967 li
30.5669 1.20313 30.5962 .528809 30.8613 .380859 cv
31.7124 .44043 32.769 .470215 33.7378 .470215 cv
34.8833 .470215 35.9702 .44043 36.7334 .380859 cv
36.9678 .528809 37.0269 1.23291 36.7622 1.43848 cv
35.9404 1.61475 li
34.9419 1.8208 34.7368 1.9375 33.709 3.69971 cv
33.0039 4.90283 32.2695 6.25391 31.8887 7.0166 cv
31.6245 7.54541 31.2432 8.39697 31.2432 8.54395 cv
31.2432 8.63184 31.272 8.80811 31.4775 9.27832 cv
32.8574 12.2432 li
33.6206 13.8584 33.9731 14.7104 34.1489 15.1216 cv
35.5586 11.7153 36.939 8.07471 38.3481 4.49219 cv
38.5532 3.99316 39.1406 2.31885 39.1406 1.99658 cv
39.1406 1.79102 38.9648 1.70264 38.5825 1.58545 cv
37.937 1.40967 li
37.7021 1.14453 37.7612 .528809 38.0254 .380859 cv
38.9648 .44043 40.1396 .470215 41.02 .470215 cv
42.0479 .470215 42.8989 .44043 43.7212 .380859 cv
43.9858 .528809 44.0146 1.17432 43.8096 1.40967 cv
42.9287 1.61475 li
cp
false sop
/0 
<<
/Name (PANTONE 280 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 1 .72 0 .18 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
51.2085 8.10352 mo
51.2085 8.92627 51.2373 8.98438 52.0308 8.98438 cv
54.0562 8.98438 li
55.583 8.98438 55.9355 8.77881 56.229 7.37012 cv
56.376 6.63574 li
56.5815 6.40088 57.3149 6.40088 57.4629 6.66455 cv
57.4038 7.60498 57.3745 8.66162 57.3745 9.77783 cv
57.3745 10.8936 57.4038 11.9502 57.4629 12.8892 cv
57.3149 13.1543 56.5815 13.1831 56.376 12.9189 cv
56.229 12.1851 li
55.9355 10.7754 55.583 10.5405 54.0562 10.5405 cv
52.0308 10.5405 li
51.2373 10.5405 51.2085 10.5698 51.2085 11.4512 cv
51.2085 14.9448 li
51.2085 16.2959 51.3267 17.2354 51.6777 17.7344 cv
52.0601 18.2622 52.6172 18.4971 54.7612 18.4971 cv
57.3149 18.4971 58.314 18.4097 59.9287 15.0918 cv
60.1636 14.769 60.8975 14.8862 61.0156 15.2378 cv
60.8975 16.7651 60.1929 19.1436 59.7822 19.9365 cv
58.2261 19.8774 55.4072 19.8486 52.9995 19.8486 cv
49.1826 19.8486 li
47.7729 19.8486 46.334 19.8774 44.1318 19.9365 cv
43.897 19.7603 43.897 19.0552 44.1318 18.9087 cv
45.5122 18.7036 li
46.834 18.4971 47.0098 18.3218 47.0098 15.6206 cv
47.0098 4.66846 li
47.0098 1.99658 46.834 1.8208 45.5122 1.55615 cv
44.7783 1.40967 li
44.5137 1.23291 44.5435 .557617 44.8364 .380859 cv
46.2173 .44043 47.6553 .470215 49.0645 .470215 cv
55.29 .470215 li
57.1689 .470215 58.8423 .44043 59.2236 .380859 cv
59.2529 .851563 59.4585 2.96533 59.606 4.93262 cv
59.4883 5.25586 58.813 5.31396 58.5195 5.05029 cv
58.1968 4.02246 57.7852 3.1416 57.4038 2.73047 cv
56.8457 2.17285 55.9648 1.8208 54.5259 1.8208 cv
52.1772 1.8208 li
51.2085 1.8208 51.2085 1.87939 51.2085 2.96533 cv
51.2085 8.10352 li
cp
f
68.8545 14.9746 mo
68.8545 16.354 68.9722 17.2939 69.3535 17.7637 cv
69.7358 18.2622 70.2632 18.4971 72.4067 18.4971 cv
75.0796 18.4971 75.9009 18.4097 77.6328 15.0039 cv
77.8682 14.7104 78.5435 14.8276 78.749 15.1797 cv
78.6025 16.707 77.8979 19.1436 77.4868 19.9365 cv
75.9302 19.8774 73.1118 19.8486 70.7041 19.8486 cv
66.7695 19.8486 li
65.4189 19.8486 63.9507 19.8774 62.1304 19.9365 cv
61.8662 19.7603 61.8071 19.0854 62.042 18.9087 cv
63.1587 18.7617 li
64.4795 18.5864 64.6553 18.3516 64.6553 15.6206 cv
64.6553 4.69775 li
64.6553 1.9668 64.4795 1.70264 63.1587 1.52686 cv
62.3066 1.40967 li
62.0127 1.23291 62.0127 .557617 62.3657 .380859 cv
63.8926 .44043 65.3608 .470215 66.7695 .470215 cv
68.1787 .470215 69.6465 .44043 71.1147 .380859 cv
71.3496 .557617 71.3496 1.23291 71.1147 1.40967 cv
70.3521 1.52686 li
69.0308 1.73193 68.8545 1.9668 68.8545 4.69775 cv
68.8545 14.9746 li
cp
f
86.4121 14.9746 mo
86.4121 16.354 86.5303 17.2939 86.9116 17.7637 cv
87.2935 18.2622 87.8213 18.4971 89.9653 18.4971 cv
92.6372 18.4971 93.4595 18.4097 95.1909 15.0039 cv
95.4268 14.7104 96.1016 14.8276 96.3076 15.1797 cv
96.1602 16.707 95.457 19.1436 95.0449 19.9365 cv
93.4883 19.8774 90.6704 19.8486 88.2627 19.8486 cv
84.3281 19.8486 li
82.9766 19.8486 81.5088 19.8774 79.6885 19.9365 cv
79.4243 19.7603 79.3662 19.0854 79.6006 18.9087 cv
80.7163 18.7617 li
82.0376 18.5864 82.2139 18.3516 82.2139 15.6206 cv
82.2139 4.69775 li
82.2139 1.9668 82.0376 1.70264 80.7163 1.52686 cv
79.8647 1.40967 li
79.5708 1.23291 79.5708 .557617 79.9238 .380859 cv
81.4502 .44043 82.9185 .470215 84.3281 .470215 cv
85.7373 .470215 87.2046 .44043 88.6738 .380859 cv
88.9082 .557617 88.9082 1.23291 88.6738 1.40967 cv
87.9102 1.52686 li
86.5884 1.73193 86.4121 1.9668 86.4121 4.69775 cv
86.4121 14.9746 li
cp
f
104.117 8.10352 mo
104.117 8.92627 104.147 8.98438 104.939 8.98438 cv
106.965 8.98438 li
108.492 8.98438 108.845 8.77881 109.138 7.37012 cv
109.286 6.63574 li
109.491 6.40088 110.225 6.40088 110.371 6.66455 cv
110.313 7.60498 110.283 8.66162 110.283 9.77783 cv
110.283 10.8936 110.313 11.9502 110.371 12.8892 cv
110.225 13.1543 109.491 13.1831 109.286 12.9189 cv
109.138 12.1851 li
108.845 10.7754 108.492 10.5405 106.965 10.5405 cv
104.939 10.5405 li
104.147 10.5405 104.117 10.5698 104.117 11.4512 cv
104.117 14.9448 li
104.117 16.2959 104.234 17.2354 104.587 17.7344 cv
104.969 18.2622 105.527 18.4971 107.67 18.4971 cv
110.225 18.4971 111.223 18.4097 112.838 15.0918 cv
113.072 14.769 113.807 14.8862 113.925 15.2378 cv
113.807 16.7651 113.103 19.1436 112.691 19.9365 cv
111.136 19.8774 108.316 19.8486 105.908 19.8486 cv
102.091 19.8486 li
100.682 19.8486 99.2432 19.8774 97.0415 19.9365 cv
96.8066 19.7603 96.8066 19.0552 97.0415 18.9087 cv
98.4219 18.7036 li
99.7422 18.4971 99.9189 18.3218 99.9189 15.6206 cv
99.9189 4.66846 li
99.9189 1.99658 99.7422 1.8208 98.4219 1.55615 cv
97.687 1.40967 li
97.4229 1.23291 97.4521 .557617 97.7461 .380859 cv
99.126 .44043 100.564 .470215 101.974 .470215 cv
108.199 .470215 li
110.077 .470215 111.752 .44043 112.135 .380859 cv
112.162 .851563 112.368 2.96533 112.515 4.93262 cv
112.397 5.25586 111.723 5.31396 111.429 5.05029 cv
111.106 4.02246 110.694 3.1416 110.313 2.73047 cv
109.755 2.17285 108.874 1.8208 107.436 1.8208 cv
105.087 1.8208 li
104.117 1.8208 104.117 1.87939 104.117 2.96533 cv
104.117 8.10352 li
cp
f
121.177 20.3184 mo
118.476 20.3184 116.801 19.5547 116.185 19.2026 cv
115.627 18.5562 115.245 16.4429 115.245 14.4453 cv
115.451 14.064 116.126 14.0347 116.36 14.3579 cv
116.948 16.2661 118.915 18.9673 121.412 18.9673 cv
123.584 18.9673 124.582 17.4697 124.582 16.002 cv
124.582 13.624 122.351 12.2139 120.589 11.3335 cv
118.476 10.2759 116.155 8.51514 116.155 5.60742 cv
116.126 2.28955 118.709 0 122.968 0 cv
123.936 0 125.14 .117188 126.314 .470215 cv
126.696 .586914 126.96 .64502 127.313 .70459 cv
127.549 1.35059 127.841 2.93555 127.841 4.90283 cv
127.694 5.25586 126.96 5.28516 126.696 4.99121 cv
126.197 3.49365 124.936 1.35059 122.82 1.35059 cv
120.883 1.35059 119.826 2.61328 119.826 4.08154 cv
119.826 5.43213 121.03 6.66455 122.498 7.42822 cv
124.436 8.45654 li
126.256 9.4248 128.576 11.1279 128.576 14.3579 cv
128.576 17.9692 125.61 20.3184 121.177 20.3184 cv
cp
f
136.533 14.9746 mo
136.533 16.354 136.65 17.2939 137.032 17.7637 cv
137.414 18.2622 137.942 18.4971 140.086 18.4971 cv
142.757 18.4971 143.579 18.4097 145.312 15.0039 cv
145.546 14.7104 146.222 14.8276 146.426 15.1797 cv
146.28 16.707 145.576 19.1436 145.166 19.9365 cv
143.609 19.8774 140.79 19.8486 138.382 19.8486 cv
134.448 19.8486 li
133.097 19.8486 131.628 19.8774 129.81 19.9365 cv
129.544 19.7603 129.486 19.0854 129.72 18.9087 cv
130.836 18.7617 li
132.157 18.5864 132.333 18.3516 132.333 15.6206 cv
132.333 4.69775 li
132.333 1.9668 132.157 1.70264 130.836 1.52686 cv
129.983 1.40967 li
129.69 1.23291 129.69 .557617 130.043 .380859 cv
131.57 .44043 133.039 .470215 134.448 .470215 cv
135.857 .470215 137.325 .44043 138.793 .380859 cv
139.028 .557617 139.028 1.23291 138.793 1.40967 cv
138.03 1.52686 li
136.708 1.73193 136.533 1.9668 136.533 4.69775 cv
136.533 14.9746 li
cp
f
154.237 8.10352 mo
154.237 8.92627 154.267 8.98438 155.06 8.98438 cv
157.085 8.98438 li
158.611 8.98438 158.965 8.77881 159.258 7.37012 cv
159.406 6.63574 li
159.61 6.40088 160.345 6.40088 160.491 6.66455 cv
160.433 7.60498 160.403 8.66162 160.403 9.77783 cv
160.403 10.8936 160.433 11.9502 160.491 12.8892 cv
160.345 13.1543 159.61 13.1831 159.406 12.9189 cv
159.258 12.1851 li
158.965 10.7754 158.611 10.5405 157.085 10.5405 cv
155.06 10.5405 li
154.267 10.5405 154.237 10.5698 154.237 11.4512 cv
154.237 14.9448 li
154.237 16.2959 154.354 17.2354 154.708 17.7344 cv
155.09 18.2622 155.648 18.4971 157.79 18.4971 cv
160.345 18.4971 161.344 18.4097 162.958 15.0918 cv
163.193 14.769 163.928 14.8862 164.043 15.2378 cv
163.928 16.7651 163.223 19.1436 162.812 19.9365 cv
161.254 19.8774 158.437 19.8486 156.028 19.8486 cv
152.212 19.8486 li
150.803 19.8486 149.362 19.8774 147.161 19.9365 cv
146.927 19.7603 146.927 19.0552 147.161 18.9087 cv
148.541 18.7036 li
149.862 18.4971 150.039 18.3218 150.039 15.6206 cv
150.039 4.66846 li
150.039 1.99658 149.862 1.8208 148.541 1.55615 cv
147.809 1.40967 li
147.543 1.23291 147.572 .557617 147.865 .380859 cv
149.246 .44043 150.686 .470215 152.094 .470215 cv
158.319 .470215 li
160.198 .470215 161.871 .44043 162.253 .380859 cv
162.283 .851563 162.488 2.96533 162.635 4.93262 cv
162.518 5.25586 161.843 5.31396 161.549 5.05029 cv
161.226 4.02246 160.814 3.1416 160.433 2.73047 cv
159.876 2.17285 158.993 1.8208 157.556 1.8208 cv
155.206 1.8208 li
154.237 1.8208 154.237 1.87939 154.237 2.96533 cv
154.237 8.10352 li
cp
f
175.318 15.6206 mo
175.318 18.3516 175.495 18.5864 176.816 18.7617 cv
177.99 18.9087 li
178.197 19.0854 178.197 19.7603 177.99 19.9365 cv
176.083 19.8774 174.643 19.8486 173.235 19.8486 cv
171.823 19.8486 170.356 19.8774 168.624 19.9365 cv
168.389 19.7603 168.389 19.0854 168.624 18.9087 cv
169.622 18.7617 li
170.944 18.5562 171.121 18.3516 171.121 15.6206 cv
171.121 14.1523 li
171.121 12.6841 171.09 12.2139 170.327 10.6582 cv
166.832 3.43506 li
166.247 2.23145 165.982 1.76172 164.953 1.58545 cv
163.956 1.40967 li
163.691 1.17432 163.721 .470215 164.073 .380859 cv
165.394 .44043 166.48 .470215 168.213 .470215 cv
170.004 .470215 171.502 .44043 172.499 .380859 cv
172.765 .499512 172.823 1.17432 172.559 1.40967 cv
171.561 1.64404 li
171.031 1.76172 170.855 1.87939 170.855 1.90869 cv
170.855 2.14355 171.002 2.58301 171.62 3.96387 cv
172.998 7.10547 li
173.439 8.07471 173.997 9.24902 174.35 9.98291 cv
175.2 8.54395 176.023 6.84131 176.816 5.34326 cv
177.932 3.25879 178.343 2.28955 178.343 1.9375 cv
178.343 1.76172 178.05 1.64404 177.345 1.52686 cv
176.668 1.40967 li
176.436 1.2627 176.404 .528809 176.698 .380859 cv
177.872 .44043 178.93 .470215 179.987 .470215 cv
181.102 .470215 182.013 .44043 182.863 .380859 cv
183.218 .499512 183.218 1.20313 182.982 1.40967 cv
182.22 1.55615 li
181.69 1.64404 181.133 1.84912 180.81 2.26074 cv
180.37 2.81836 179.634 3.87549 178.225 6.42969 cv
176.376 9.77783 li
175.612 11.1567 175.318 11.8911 175.318 13.5649 cv
175.318 15.6206 li
cp
f
104.216 54.2432 mo
109.403 54.2432 111.192 57.6206 108.307 63.3003 cv
98.2754 83.1738 li
88.2451 63.3003 li
85.3584 57.6206 87.1328 54.2432 92.3193 54.2432 cv
104.216 54.2432 li
cp
114.345 114.964 mo
102.999 92.5225 li
118.045 62.8135 li
122.428 54.3403 123.498 53.8535 130.9 53.8535 cv
130.9 49.5688 li
65.6514 49.5688 li
65.6514 53.8535 li
73.0527 53.8535 74.2207 54.3403 78.5059 62.8135 cv
93.5527 92.5225 li
82.207 114.964 li
55.6206 62.2285 li
52.5039 55.9966 53.2832 53.8535 57.6167 53.8535 cv
60.3926 53.8535 li
60.3926 49.5688 li
30.2031 49.5688 li
30.2031 53.8213 li
31.7607 53.9185 li
41.4995 54.5029 42.1816 55.0229 46.6611 63.9819 cv
80.6494 131.081 li
83.4727 131.081 li
98.2754 101.857 li
113.079 131.081 li
115.903 131.081 li
149.891 63.9819 li
154.371 55.0229 155.052 54.438 164.791 53.8535 cv
165.435 53.813 li
165.435 49.5688 li
136.159 49.5688 li
136.159 53.8535 li
138.935 53.8535 li
143.269 53.8535 144.047 55.9966 140.931 62.2285 cv
114.345 114.964 li
cp
f
9.05957 29.7681 mo
9.05957 30.0386 9.10449 31.2388 9.23926 32.1079 cv
9.17969 32.2886 8.77441 32.3481 8.66943 32.2134 cv
8.26465 30.8188 7.30469 30.0688 5.84961 30.0688 cv
4.18457 30.0688 2.3999 31.4937 2.3999 34.478 cv
2.3999 37.4634 4.12451 39.0679 5.9248 39.0679 cv
7.73975 39.0679 8.57959 37.7632 8.98438 36.7437 cv
9.10449 36.6235 9.46436 36.6685 9.55469 36.8481 cv
9.44971 37.9585 9.19434 38.8579 8.98438 39.2026 cv
8.17432 39.4282 7.10938 39.7583 5.93945 39.7583 cv
4.46973 39.7583 2.96973 39.4126 1.90479 38.6177 cv
.824707 37.7935 0 36.5483 0 34.688 cv
0 32.8579 .779785 31.5688 1.81494 30.7134 cv
2.87988 29.8286 4.40967 29.3784 5.96973 29.3784 cv
7.49951 29.3784 8.60938 29.7388 9.05957 29.7681 cv
cp
f
13.8149 37.0278 mo
13.8149 37.7329 13.875 38.2134 14.0698 38.4526 cv
14.2646 38.7085 14.5347 38.8276 15.6299 38.8276 cv
16.9946 38.8276 17.4146 38.7827 18.2998 37.0435 cv
18.4194 36.8931 18.7646 36.9536 18.8696 37.1333 cv
18.7944 37.9136 18.4346 39.1577 18.2246 39.563 cv
17.4297 39.5327 15.9897 39.5181 14.7598 39.5181 cv
12.75 39.5181 li
12.0601 39.5181 11.3101 39.5327 10.3799 39.563 cv
10.2451 39.4731 10.2148 39.1284 10.335 39.0376 cv
10.9048 38.9634 li
11.5801 38.8735 11.6699 38.7534 11.6699 37.3579 cv
11.6699 31.7788 li
11.6699 30.3833 11.5801 30.2485 10.9048 30.1587 cv
10.4697 30.0981 li
10.3198 30.0083 10.3198 29.6636 10.5 29.5737 cv
11.2798 29.603 12.0298 29.6187 12.75 29.6187 cv
13.4697 29.6187 14.2197 29.603 14.9697 29.5737 cv
15.0898 29.6636 15.0898 30.0083 14.9697 30.0981 cv
14.5796 30.1587 li
13.9048 30.2632 13.8149 30.3833 13.8149 31.7788 cv
13.8149 37.0278 li
cp
f
20.0547 31.7788 mo
20.0547 30.3833 19.9648 30.2935 19.29 30.1587 cv
18.915 30.0835 li
18.7949 29.9937 18.7798 29.6636 18.9448 29.5737 cv
19.665 29.603 20.415 29.6187 21.1348 29.6187 cv
21.8696 29.6187 22.605 29.603 23.3247 29.5737 cv
23.4448 29.6636 23.4448 29.9937 23.3247 30.0835 cv
22.9648 30.1431 li
22.2896 30.2632 22.1997 30.3833 22.1997 31.7788 cv
22.1997 35.2437 li
22.1997 36.9985 22.3945 38.9331 24.6748 38.9331 cv
26.5947 38.9331 27.1797 37.2534 27.1797 35.1978 cv
27.1797 33.3833 li
27.1797 32.1685 27.1196 31.0288 26.9546 30.6382 cv
26.8193 30.3237 26.4897 30.2339 26.0845 30.1587 cv
25.6797 30.0835 li
25.5596 29.9634 25.5898 29.6636 25.6797 29.5737 cv
26.4897 29.603 27.0747 29.6187 27.6895 29.6187 cv
28.2446 29.6187 28.7993 29.603 29.3696 29.5737 cv
29.4595 29.6636 29.4893 29.9634 29.3696 30.0835 cv
29.0996 30.1431 li
28.7095 30.2339 28.4243 30.3237 28.2896 30.6382 cv
28.1245 31.0288 28.0645 32.1685 28.0645 33.3833 cv
28.0645 35.063 li
28.0645 36.4731 27.9297 37.7632 27.1045 38.6782 cv
26.4448 39.3833 25.3496 39.7583 24.1348 39.7583 cv
22.9946 39.7583 21.9746 39.5776 21.165 38.9185 cv
20.3848 38.2729 20.0547 37.1636 20.0547 35.5278 cv
20.0547 31.7788 li
cp
f
33.5244 36.9829 mo
33.5244 38.1528 33.6743 38.8882 34.8442 38.8882 cv
35.9546 38.8882 36.5396 38.0327 36.5396 36.8179 cv
36.5396 35.5132 35.7896 34.5981 34.3496 34.5981 cv
33.5244 34.5981 33.5244 34.6128 33.5244 35.2134 cv
33.5244 36.9829 li
cp
33.5244 33.5181 mo
33.5244 33.9087 33.5396 33.938 34.3193 33.938 cv
35.6094 33.938 36.0894 33.1138 36.0894 32.2134 cv
36.0894 30.9087 35.2793 30.2632 34.2446 30.2632 cv
33.5396 30.2632 33.5244 30.3833 33.5244 31.0435 cv
33.5244 33.5181 li
cp
31.4546 32.063 mo
31.4546 30.5483 31.4248 30.3989 30.7944 30.3081 cv
30.3896 30.2485 li
30.2544 30.1733 30.2246 29.7231 30.4497 29.7085 cv
31.5894 29.6333 32.6846 29.5737 34.1846 29.5737 cv
35.6245 29.5737 36.5845 29.7388 37.2441 30.1284 cv
37.8892 30.5181 38.2793 31.1479 38.2793 32.0337 cv
38.2793 33.2935 37.2144 33.7886 36.7495 33.9087 cv
36.5991 33.938 36.4492 33.9985 36.4492 34.0737 cv
36.4492 34.1187 36.5244 34.1636 36.6592 34.1929 cv
37.8442 34.4487 38.8491 35.228 38.8643 36.6831 cv
38.8794 38.063 38.0542 38.8735 37.1094 39.2026 cv
36.1646 39.5327 35.0396 39.5776 34.1245 39.5776 cv
33.5845 39.5776 33.0146 39.5181 32.5796 39.5181 cv
31.8447 39.5181 31.1094 39.5327 30.2544 39.563 cv
30.1348 39.4731 30.1348 39.0835 30.2544 39.0376 cv
30.6895 38.9478 li
31.3647 38.813 31.4546 38.7085 31.4546 37.3579 cv
31.4546 32.063 li
cp
f
49.1543 30.0688 mo
47.3091 30.0688 46.3193 31.7935 46.3193 34.2983 cv
46.3193 36.1284 46.9644 39.0679 49.4092 39.0679 cv
51.374 39.0679 52.1392 37.1479 52.1392 34.7183 cv
52.1392 32.1538 51.0142 30.0688 49.1543 30.0688 cv
cp
54.5391 34.5229 mo
54.5391 37.7935 52.3491 39.7583 49.124 39.7583 cv
46.1094 39.7583 43.9194 37.7778 43.9194 34.6431 cv
43.9194 31.6733 46.1392 29.3784 49.2739 29.3784 cv
52.394 29.3784 54.5391 31.478 54.5391 34.5229 cv
cp
f
59.2192 33.6382 mo
59.2192 34.0435 59.2339 34.0884 59.6392 34.0884 cv
60.7939 34.0884 li
61.5889 34.0884 61.7539 33.9829 61.9038 33.2485 cv
61.979 32.8882 li
62.084 32.7534 62.459 32.7681 62.5488 32.9038 cv
62.519 33.3833 62.5039 33.938 62.5039 34.5083 cv
62.5039 35.063 62.519 35.6187 62.5488 36.0679 cv
62.459 36.2036 62.084 36.2183 61.979 36.0835 cv
61.9038 35.7231 li
61.7539 35.0034 61.5889 34.8833 60.7939 34.8833 cv
59.6392 34.8833 li
59.2339 34.8833 59.2192 34.9282 59.2192 35.3335 cv
59.2192 37.3579 li
59.2192 38.7534 59.3091 38.8735 59.9839 38.9634 cv
60.5391 39.0376 li
60.644 39.1284 60.644 39.4731 60.5391 39.563 cv
59.6089 39.5327 58.874 39.5181 58.1543 39.5181 cv
57.4644 39.5181 56.7144 39.5327 55.8145 39.563 cv
55.6943 39.4731 55.6943 39.1284 55.8145 39.0376 cv
56.3091 38.9634 li
56.9844 38.8579 57.0742 38.7534 57.0742 37.3579 cv
57.0742 31.7788 li
57.0742 30.3833 56.9844 30.2485 56.3091 30.1431 cv
56.0093 30.0981 li
55.874 30.0083 55.874 29.6333 56.0391 29.5737 cv
56.6841 29.603 57.4341 29.6187 58.1543 29.6187 cv
61.3042 29.6187 li
62.2642 29.6187 63.1191 29.603 63.3291 29.5737 cv
63.3291 29.8286 63.3291 30.9087 63.3589 31.9136 cv
63.2988 32.0786 62.9688 32.0933 62.7891 31.9731 cv
62.624 31.3579 62.5039 30.9985 62.354 30.8032 cv
62.0991 30.4888 61.6489 30.3081 60.8838 30.3081 cv
59.7139 30.3081 li
59.2192 30.3081 59.2192 30.3384 59.2192 30.9233 cv
59.2192 33.6382 li
cp
f
81.8086 30.2036 mo
81.4639 30.2788 81.2988 30.3989 81.1938 30.5337 cv
81.0288 30.7729 80.7734 31.2534 80.3687 32.1987 cv
79.6338 33.9536 77.939 37.688 77.2036 39.6382 cv
77.1138 39.7134 76.9038 39.7583 76.709 39.7583 cv
76.5439 39.7583 76.4087 39.7134 76.3037 39.6382 cv
76.1387 39.2778 75.9141 38.7378 75.7339 38.3179 cv
75.104 36.8931 li
74.894 36.4136 74.6987 35.9634 74.564 35.7378 cv
74.4287 35.9937 74.249 36.353 74.0537 36.7729 cv
73.3491 38.3032 li
73.124 38.7827 72.959 39.2183 72.7192 39.7134 cv
72.644 39.7876 72.4492 39.8335 72.2241 39.8335 cv
72.0591 39.8335 71.9692 39.7876 71.834 39.7134 cv
71.5942 39.0835 70.9941 37.7329 70.4839 36.6079 cv
68.0244 31.2388 li
67.6191 30.353 67.5293 30.2788 67.0342 30.1733 cv
66.6592 30.0981 li
66.5391 29.9487 66.5542 29.6489 66.7192 29.5737 cv
67.2744 29.603 67.9043 29.6187 68.6689 29.6187 cv
69.3291 29.6187 69.9141 29.603 70.4839 29.5737 cv
70.604 29.6333 70.6641 30.0083 70.5142 30.0981 cv
70.2441 30.1431 li
69.9741 30.188 69.8691 30.2632 69.8691 30.3687 cv
69.8691 30.4731 70.1841 31.1782 70.6489 32.228 cv
72.1338 35.5435 li
72.5542 36.4731 72.7041 36.7886 72.8838 37.1479 cv
73.064 36.8179 73.3042 36.3687 73.604 35.6929 cv
73.7988 35.2583 li
73.9038 35.0181 73.9941 34.688 73.9941 34.5981 cv
73.9941 34.5083 73.9639 34.3433 73.9038 34.1929 cv
72.4639 31.0288 li
72.1191 30.2788 72.0142 30.1733 71.4438 30.1138 cv
71.2939 30.0981 li
71.144 29.978 71.1738 29.6333 71.3389 29.5737 cv
71.9839 29.603 72.5688 29.6187 73.229 29.6187 cv
73.9941 29.6187 74.564 29.603 74.9541 29.5737 cv
75.1338 29.6187 75.1191 30.0239 75.0137 30.0981 cv
74.7588 30.1587 li
74.5791 30.2036 74.354 30.2632 74.354 30.3687 cv
74.354 30.4888 74.4141 30.6538 74.4888 30.8188 cv
74.939 31.853 li
75.0737 32.1685 75.2241 32.4985 75.3589 32.7681 cv
75.5088 32.4536 75.6587 32.1538 75.8091 31.8237 cv
75.9438 31.5229 li
76.1987 30.9536 76.3486 30.5034 76.3486 30.4136 cv
76.3486 30.3081 76.2891 30.2632 76.0488 30.2036 cv
75.5991 30.0981 li
75.4941 29.9937 75.5088 29.6489 75.644 29.5737 cv
76.0791 29.603 76.6187 29.6187 77.1138 29.6187 cv
77.6987 29.6187 78.2539 29.603 78.6436 29.5737 cv
78.7637 29.6489 78.7939 30.0083 78.6587 30.1138 cv
78.2388 30.2036 li
77.729 30.3081 77.624 30.3687 77.0986 31.2681 cv
76.7388 31.8833 76.3638 32.5737 76.1689 32.9634 cv
76.0337 33.2329 75.8389 33.6685 75.8389 33.7437 cv
75.8389 33.7886 75.854 33.8784 75.959 34.1187 cv
76.6641 35.6333 li
77.0537 36.4585 77.2339 36.8931 77.3237 37.103 cv
78.0439 35.3628 78.7485 33.5034 79.4688 31.6733 cv
79.5737 31.4185 79.8735 30.563 79.8735 30.3989 cv
79.8735 30.2935 79.7837 30.2485 79.5889 30.188 cv
79.2588 30.0981 li
79.1387 29.9634 79.1689 29.6489 79.3037 29.5737 cv
79.7837 29.603 80.3838 29.6187 80.8335 29.6187 cv
81.3589 29.6187 81.7935 29.603 82.2139 29.5737 cv
82.3486 29.6489 82.3638 29.978 82.2588 30.0981 cv
81.8086 30.2036 li
cp
f
84.7485 35.3335 mo
85.0938 35.3335 85.1685 35.2886 85.0488 34.8979 cv
84.6587 33.6831 li
84.4487 33.0386 84.2539 32.4233 84.1187 32.1079 cv
83.9688 32.438 83.7285 33.0679 83.5039 33.7583 cv
83.1289 34.8833 li
82.9937 35.2886 83.0688 35.3335 83.4438 35.3335 cv
84.7485 35.3335 li
cp
83.1436 36.1284 mo
82.7837 36.1284 82.7388 36.1431 82.6489 36.4282 cv
82.0938 38.1685 li
82.0039 38.4683 81.9888 38.5884 81.9888 38.7085 cv
81.9888 38.7983 82.1089 38.8882 82.5288 38.9634 cv
82.9785 39.0376 li
83.0688 39.1431 83.0986 39.4878 82.9487 39.563 cv
82.4238 39.5327 81.8237 39.5327 81.1938 39.5181 cv
80.6836 39.5181 80.3389 39.563 79.6489 39.563 cv
79.4839 39.4731 79.499 39.1577 79.604 39.0376 cv
80.0088 38.9927 li
80.3687 38.9478 80.6689 38.8276 80.9238 38.2427 cv
81.1787 37.6431 81.4487 36.9233 81.854 35.8433 cv
83.2036 32.1831 li
83.5488 31.2388 83.8335 30.7134 83.7886 30.2788 cv
84.5088 30.1138 85.0635 29.3784 85.0938 29.3784 cv
85.2886 29.3784 85.3784 29.4536 85.4385 29.6782 cv
85.5586 30.1138 85.7388 30.6685 86.1138 31.7329 cv
88.1533 37.6128 li
88.4688 38.5132 88.6035 38.8579 89.1587 38.9478 cv
89.7285 39.0376 li
89.8184 39.1128 89.8486 39.4731 89.7134 39.563 cv
88.9937 39.5327 88.1836 39.5181 87.4033 39.5181 cv
86.6538 39.5181 86.0688 39.5327 85.3784 39.563 cv
85.2139 39.4731 85.1836 39.1577 85.3486 39.0376 cv
85.8286 38.9634 li
86.1738 38.9028 86.2334 38.7983 86.2334 38.7085 cv
86.2334 38.603 86.1284 38.2427 85.9487 37.688 cv
85.5435 36.3979 li
85.4688 36.1587 85.3486 36.1284 84.8237 36.1284 cv
83.1436 36.1284 li
cp
f
92.9238 39.7583 mo
91.5439 39.7583 90.689 39.3677 90.374 39.188 cv
90.0889 38.8579 89.894 37.7778 89.894 36.7583 cv
89.999 36.563 90.3438 36.5483 90.4639 36.7134 cv
90.7637 37.688 91.7686 39.0679 93.0435 39.0679 cv
94.1538 39.0679 94.6636 38.3032 94.6636 37.5532 cv
94.6636 36.3384 93.5234 35.6187 92.6235 35.1685 cv
91.5439 34.6284 90.3589 33.728 90.3589 32.2437 cv
90.3438 30.5483 91.6636 29.3784 93.8389 29.3784 cv
94.3335 29.3784 94.9487 29.438 95.5488 29.6187 cv
95.7437 29.6782 95.8784 29.7085 96.0586 29.7388 cv
96.1787 30.0688 96.3286 30.8784 96.3286 31.8833 cv
96.2534 32.063 95.8784 32.0786 95.7437 31.9282 cv
95.4888 31.1636 94.8438 30.0688 93.7637 30.0688 cv
92.7739 30.0688 92.2339 30.7134 92.2339 31.4634 cv
92.2339 32.1538 92.8486 32.7837 93.5986 33.1733 cv
94.5889 33.6987 li
95.5186 34.1929 96.7036 35.063 96.7036 36.7134 cv
96.7036 38.5581 95.1885 39.7583 92.9238 39.7583 cv
cp
f
101.849 34.7632 mo
101.233 34.7632 101.219 34.7778 101.219 35.1978 cv
101.219 37.3579 li
101.219 38.7534 101.309 38.8882 101.983 38.978 cv
102.463 39.0376 li
102.584 39.1284 102.584 39.4731 102.463 39.563 cv
101.608 39.5327 100.858 39.5181 100.184 39.5181 cv
99.4639 39.5181 98.7139 39.5327 97.9487 39.563 cv
97.8286 39.4731 97.8286 39.1284 97.9487 39.0376 cv
98.3086 38.9927 li
98.9985 38.9028 99.0737 38.7534 99.0737 37.3579 cv
99.0737 31.7788 li
99.0737 30.3833 98.9985 30.2339 98.3086 30.1431 cv
97.9487 30.0981 li
97.8286 30.0083 97.8286 29.6636 97.9487 29.5737 cv
98.6836 29.603 99.4639 29.6187 100.184 29.6187 cv
100.858 29.6187 101.608 29.603 102.269 29.5737 cv
102.389 29.6636 102.389 30.0083 102.269 30.0981 cv
101.953 30.1431 li
101.309 30.2339 101.219 30.3833 101.219 31.7788 cv
101.219 33.5181 li
101.219 33.9536 101.233 33.9683 101.849 33.9683 cv
104.969 33.9683 li
105.599 33.9683 105.599 33.9536 105.599 33.5181 cv
105.599 31.7788 li
105.599 30.3833 105.523 30.2632 104.834 30.1587 cv
104.429 30.0981 li
104.309 30.0083 104.309 29.6636 104.429 29.5737 cv
105.254 29.603 105.988 29.6187 106.709 29.6187 cv
107.443 29.6187 108.133 29.603 108.823 29.5737 cv
108.943 29.6636 108.943 30.0083 108.823 30.0981 cv
108.523 30.1431 li
107.834 30.2485 107.743 30.3833 107.743 31.7788 cv
107.743 37.3579 li
107.743 38.7534 107.834 38.8579 108.523 38.978 cv
108.883 39.0376 li
109.004 39.1284 109.004 39.4731 108.883 39.563 cv
108.133 39.5327 107.398 39.5181 106.709 39.5181 cv
105.959 39.5181 105.224 39.5327 104.504 39.563 cv
104.383 39.4731 104.383 39.1284 104.504 39.0376 cv
104.834 38.9927 li
105.523 38.9028 105.599 38.7534 105.599 37.3579 cv
105.599 35.1978 li
105.599 34.7778 105.599 34.7632 104.969 34.7632 cv
101.849 34.7632 li
cp
f
113.533 37.3286 mo
113.533 38.7378 113.623 38.8433 114.313 38.9634 cv
114.733 39.0376 li
114.854 39.1284 114.838 39.4731 114.719 39.563 cv
113.908 39.5327 113.174 39.5181 112.469 39.5181 cv
111.748 39.5181 110.998 39.5327 110.188 39.563 cv
110.068 39.4731 110.068 39.1284 110.188 39.0376 cv
110.609 38.9634 li
111.299 38.8433 111.389 38.7378 111.389 37.3286 cv
111.389 31.8081 li
111.389 30.3989 111.299 30.2935 110.609 30.1733 cv
110.188 30.0981 li
110.068 30.0083 110.068 29.6636 110.188 29.5737 cv
110.998 29.603 111.748 29.6187 112.469 29.6187 cv
113.174 29.6187 113.924 29.603 114.733 29.5737 cv
114.854 29.6636 114.854 30.0083 114.733 30.0981 cv
114.313 30.1733 li
113.623 30.2935 113.533 30.3989 113.533 31.8081 cv
113.533 37.3286 li
cp
f
125.248 36.9683 mo
125.248 37.9429 125.248 38.8882 125.278 39.3833 cv
125.174 39.563 124.754 39.728 124.394 39.728 cv
124.379 39.728 123.883 38.9634 123.178 38.0933 cv
119.713 33.8032 li
118.844 32.7388 118.349 32.1079 118.078 31.8833 cv
118.004 32.0337 118.004 32.2886 118.004 32.8433 cv
118.004 35.7534 li
118.004 36.9683 118.063 38.0933 118.229 38.4985 cv
118.363 38.813 118.709 38.9185 119.099 38.978 cv
119.519 39.0376 li
119.639 39.1577 119.608 39.4731 119.519 39.563 cv
118.709 39.5327 118.108 39.5181 117.509 39.5181 cv
116.953 39.5181 116.398 39.5327 115.828 39.563 cv
115.738 39.4731 115.709 39.1577 115.828 39.0376 cv
116.084 38.9927 li
116.488 38.9185 116.789 38.813 116.908 38.4985 cv
117.074 38.0933 117.119 36.9683 117.119 35.7534 cv
117.119 31.9438 li
117.119 31.1187 117.104 30.8784 117.014 30.6685 cv
116.894 30.4136 116.684 30.2339 116.158 30.1587 cv
115.738 30.0981 li
115.634 29.978 115.648 29.6187 115.799 29.5737 cv
116.504 29.603 117.254 29.6187 117.869 29.6187 cv
118.379 29.6187 118.813 29.603 119.129 29.5737 cv
119.279 30.2485 120.254 31.3882 121.604 32.9937 cv
122.863 34.478 li
123.523 35.2583 123.959 35.7837 124.303 36.1284 cv
124.363 35.978 124.363 35.7231 124.363 35.4536 cv
124.363 33.3833 li
124.363 32.1685 124.303 31.0435 124.139 30.6382 cv
124.004 30.3237 123.674 30.2183 123.269 30.1587 cv
122.863 30.0981 li
122.744 29.978 122.773 29.6636 122.863 29.5737 cv
123.674 29.603 124.258 29.6187 124.873 29.6187 cv
125.428 29.6187 125.969 29.603 126.553 29.5737 cv
126.643 29.6636 126.674 29.978 126.553 30.0981 cv
126.283 30.1431 li
125.894 30.2036 125.608 30.3237 125.473 30.6382 cv
125.309 31.0435 125.248 32.1685 125.248 33.3833 cv
125.248 36.9683 li
cp
f
136.858 37.8228 mo
136.858 38.4526 136.889 38.7534 137.174 38.813 cv
137.233 38.8735 137.219 39.1284 137.128 39.1733 cv
136.873 39.2183 136.483 39.2632 136.078 39.3979 cv
135.553 39.563 134.264 39.7583 133.424 39.7583 cv
132.403 39.7583 131.533 39.6528 130.469 39.2329 cv
128.713 38.5278 127.514 36.8628 127.514 34.7036 cv
127.514 32.8286 128.354 31.1782 130.153 30.1733 cv
131.174 29.6187 132.389 29.3784 133.663 29.3784 cv
135.328 29.3784 136.153 29.7388 136.633 29.7388 cv
136.678 30.188 136.693 31.2388 136.844 32.1538 cv
136.783 32.3188 136.379 32.3335 136.273 32.1831 cv
135.793 30.7729 134.848 30.0688 133.453 30.0688 cv
131.068 30.0688 129.914 32.0483 129.914 34.4185 cv
129.914 36.563 130.648 37.8384 131.623 38.4985 cv
132.344 38.978 133.123 39.0679 133.678 39.0679 cv
134.533 39.0679 134.713 38.9028 134.713 37.9282 cv
134.713 36.9829 li
134.713 36.1733 134.623 36.0835 133.903 35.978 cv
133.243 35.8882 li
133.078 35.7983 133.078 35.4536 133.243 35.3628 cv
134.309 35.3931 135.043 35.4087 135.778 35.4087 cv
136.498 35.4087 137.233 35.3931 137.743 35.3628 cv
137.863 35.4536 137.863 35.7983 137.743 35.8882 cv
137.398 35.9478 li
136.948 36.0229 136.858 36.1733 136.858 36.9829 cv
136.858 37.8228 li
cp
f
141.973 30.7437 mo
141.973 30.3833 141.973 30.3081 141.613 30.3081 cv
140.684 30.3081 li
139.588 30.3081 139.273 30.9087 138.823 32.0034 cv
138.644 32.0933 138.358 32.063 138.269 31.8687 cv
138.584 30.8335 138.658 29.9038 138.764 29.3188 cv
138.823 29.2739 138.898 29.2437 138.974 29.2437 cv
139.049 29.2437 139.123 29.2583 139.184 29.3032 cv
139.258 29.5581 139.303 29.6187 140.443 29.6187 cv
146.023 29.6187 li
147.014 29.6187 147.238 29.603 147.373 29.2886 cv
147.434 29.2583 147.479 29.2437 147.568 29.2437 cv
147.658 29.2437 147.764 29.3032 147.793 29.3481 cv
147.643 29.8589 147.538 31.0737 147.568 31.9282 cv
147.493 32.063 147.088 32.0933 147.014 31.9731 cv
146.758 31.0132 146.548 30.3081 145.424 30.3081 cv
144.523 30.3081 li
144.163 30.3081 144.118 30.353 144.118 30.7437 cv
144.118 37.3579 li
144.118 38.7534 144.208 38.8735 144.883 38.9634 cv
145.482 39.0376 li
145.588 39.1284 145.588 39.4731 145.482 39.563 cv
144.508 39.5327 143.758 39.5181 143.083 39.5181 cv
142.363 39.5181 141.584 39.5327 140.533 39.563 cv
140.414 39.4731 140.414 39.1284 140.533 39.0376 cv
141.209 38.9634 li
141.883 38.8882 141.973 38.7534 141.973 37.3579 cv
141.973 30.7437 li
cp
f
153.344 30.0688 mo
151.498 30.0688 150.508 31.7935 150.508 34.2983 cv
150.508 36.1284 151.153 39.0679 153.598 39.0679 cv
155.563 39.0679 156.328 37.1479 156.328 34.7183 cv
156.328 32.1538 155.203 30.0688 153.344 30.0688 cv
cp
158.729 34.5229 mo
158.729 37.7935 156.538 39.7583 153.313 39.7583 cv
150.299 39.7583 148.108 37.7778 148.108 34.6431 cv
148.108 31.6733 150.328 29.3784 153.463 29.3784 cv
156.583 29.3784 158.729 31.478 158.729 34.5229 cv
cp
f
169.333 36.9683 mo
169.333 37.9429 169.333 38.8882 169.363 39.3833 cv
169.258 39.563 168.838 39.728 168.479 39.728 cv
168.463 39.728 167.968 38.9634 167.263 38.0933 cv
163.798 33.8032 li
162.928 32.7388 162.434 32.1079 162.163 31.8833 cv
162.088 32.0337 162.088 32.2886 162.088 32.8433 cv
162.088 35.7534 li
162.088 36.9683 162.148 38.0933 162.313 38.4985 cv
162.448 38.813 162.793 38.9185 163.184 38.978 cv
163.604 39.0376 li
163.723 39.1577 163.693 39.4731 163.604 39.563 cv
162.793 39.5327 162.193 39.5181 161.594 39.5181 cv
161.038 39.5181 160.483 39.5327 159.913 39.563 cv
159.823 39.4731 159.793 39.1577 159.913 39.0376 cv
160.168 38.9927 li
160.573 38.9185 160.873 38.813 160.993 38.4985 cv
161.158 38.0933 161.203 36.9683 161.203 35.7534 cv
161.203 31.9438 li
161.203 31.1187 161.188 30.8784 161.098 30.6685 cv
160.979 30.4136 160.768 30.2339 160.243 30.1587 cv
159.823 30.0981 li
159.719 29.978 159.733 29.6187 159.883 29.5737 cv
160.588 29.603 161.338 29.6187 161.953 29.6187 cv
162.463 29.6187 162.898 29.603 163.213 29.5737 cv
163.363 30.2485 164.338 31.3882 165.688 32.9937 cv
166.947 34.478 li
167.607 35.2583 168.043 35.7837 168.388 36.1284 cv
168.447 35.978 168.447 35.7231 168.447 35.4536 cv
168.447 33.3833 li
168.447 32.1685 168.388 31.0435 168.223 30.6382 cv
168.088 30.3237 167.758 30.2183 167.354 30.1587 cv
166.947 30.0981 li
166.828 29.978 166.857 29.6636 166.947 29.5737 cv
167.758 29.603 168.343 29.6187 168.958 29.6187 cv
169.513 29.6187 170.053 29.603 170.638 29.5737 cv
170.728 29.6636 170.758 29.978 170.638 30.0981 cv
170.367 30.1431 li
169.979 30.2036 169.693 30.3237 169.558 30.6382 cv
169.393 31.0435 169.333 32.1685 169.333 33.3833 cv
169.333 36.9683 li
cp
f
178.678 36.8032 mo
178.678 37.6284 178.707 38.1685 178.978 38.4829 cv
179.248 38.7827 179.683 38.9185 180.223 38.9185 cv
182.817 38.9185 183.702 36.6079 183.702 34.5679 cv
183.702 31.8687 182.277 30.2632 179.563 30.2632 cv
179.158 30.2632 178.873 30.3384 178.783 30.4585 cv
178.692 30.5786 178.678 30.8638 178.678 31.3286 cv
178.678 36.8032 li
cp
176.533 32.0483 mo
176.533 30.6235 176.503 30.3384 175.813 30.2632 cv
175.527 30.2339 li
175.378 30.1587 175.378 29.7231 175.558 29.7085 cv
176.818 29.6333 177.988 29.5737 179.578 29.5737 cv
180.808 29.5737 182.037 29.6938 183.072 30.0688 cv
185.037 30.7729 186.117 32.5435 186.117 34.4185 cv
186.117 36.4282 185.157 38.0483 183.433 38.9028 cv
182.412 39.4126 181.183 39.6079 179.638 39.6079 cv
178.933 39.6079 178.183 39.5181 177.643 39.5181 cv
176.923 39.5181 176.158 39.5327 175.303 39.563 cv
175.183 39.4731 175.183 39.1128 175.303 39.0376 cv
175.768 38.9634 li
176.443 38.8579 176.533 38.7378 176.533 37.3579 cv
176.533 32.0483 li
cp
f
196.603 29.7681 mo
196.603 30.0386 196.648 31.2388 196.783 32.1079 cv
196.723 32.2886 196.318 32.3481 196.213 32.2134 cv
195.808 30.8188 194.848 30.0688 193.394 30.0688 cv
191.729 30.0688 189.943 31.4937 189.943 34.478 cv
189.943 37.4634 191.668 39.0679 193.468 39.0679 cv
195.283 39.0679 196.123 37.7632 196.528 36.7437 cv
196.648 36.6235 197.008 36.6685 197.098 36.8481 cv
196.993 37.9585 196.738 38.8579 196.528 39.2026 cv
195.718 39.4282 194.653 39.7583 193.483 39.7583 cv
192.013 39.7583 190.514 39.4126 189.448 38.6177 cv
188.368 37.7935 187.543 36.5483 187.543 34.688 cv
187.543 32.8579 188.323 31.5688 189.358 30.7134 cv
190.423 29.8286 191.953 29.3784 193.513 29.3784 cv
195.043 29.3784 196.153 29.7388 196.603 29.7681 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Cicia Lee) ()%%Title: (Washington DC Club logo 2011 v1-o.eps)%%CreationDate: 3/16/11 10:33 AM%%Canvassize: 16383%AI9_DataStream%Gb",KM...-oC2JUIL"=['FHRABJ1e+k7_M2U]fE".s9h\EH,gH#DN3,Ikr"&Ug:/W6JDZ;g)RG&BkB32B%MBVNR<.+lOR>\7W30G%4X[7e33ET9W.pmBg"Ul#J!s.(@qn<f`&P!`\Xn?!U)&Vg<'rUDH&3WYIBCo]r$!0,%O\%#F?49!#,B<4G%IlV0KALm#AIg-\`h>=%Y$5rYk^(:/H%41f4MNjI-b$.*Os&CAQ8_""G$h,UX7CH959-7)k.UD+cok*M%kll3'JDkpo(So$2?S'!\#ZZc8om1eN@knleSBs5%a3U>>DHFO(WA^rt\E9P&hcXIIk,M@<]W)&ugpl9s)fe=`b7T<07sJW<RfbVtI9la3C&5,"SP?]%rb2)]F[b\.1qr0K?3,L/-h,Tc%7YsXeSu!7`6$JX;:%4^X(''[&r,-sb,D!UMP`%V+%2)Nt,!ji)^8.t0l//tN&(5>KS^>C+-aTTIrrK$'+WQ9Oe!6j&5rs9Tm*?5!%"=:E2O%-g)!&C8:mgQc\(%r-CLVM;gBAL\QF9W@8)U+?3gXVZmJ=Spg^.fu^Bt1sBEB8J*qE\R>#n6t;hn<bU]P8:o806(DH*E#V%e=*b99AaGuS-Z%Oq'4O[6P,G/PQ&c)n@$1d3kdiCpPe=OcH#QO&l=LgrtGC(0En1`ZZN-"#?bq.1@mJ#mElLtnE_.5He@]fa'::#%Jtg578co3)f]pbn!-K=.K.V@ID7lF583?=ep[NSIiqF_7n'*1HI33t85$mo1]^#B9[F;t(l)l_Y;.591KcuH`6Q?hqSIWu6,WI,B%E(lFfqVb3iPpA<rJ&C_7WnG<fbpM<#CuU^l'?>2UGdZ!,6bL%[_<[X%h*W"m^4[$!86>=V^@(l`4oC>8O='mcUQ?h"Pcc/up`7Bt%7JInfAkp^d8/$Hm^Q9Z;N\_9>BP+%G^E_S0';7r1Y"@EEol1\oL#6lDVh6\[+2j[o9O&hqiHMks-n"?fGJ]>?8'H7>GQdu_;+MdX%a-gTGM/'Uk4,,t>'[k#`9O+9<OZr]'Ij&sAs7i-=7gORa;+MdXVd1Ps+hlD$\0B)r@a=P^HUdcBf5VMpNVPo*'D@5BiC3(\be.:>%K)adHUlH`7WPc?)C:];piHH81nr<8R:Zu-_Nan0^arX26lOIop<ZpX=).m#[Bg^*9;FhR*06g9Lmt;^$S^o+$+m-E^9H2rNUNgpM%SaNEAoT([Rbp7##4X]+5$m#/)jO\',h,E!:D)Id$Hnr!'d`lfNj:C];1;oW!G+#mWp&QmW:?()a)iQ<-bNmThF=.npq%%t<<HQbU%Yl=3cq+:V5GMtdXPQ"SU+F'%KbYS'O7J+(b8cRe;rf1Jp4')CHFh2%2d_A8(r\d"*?Y-Fk,)H%ds4V>dg\djsNrDQB*;9rXe%X8f%r"o;7qE3.>6)Wh_SPD?<3e?aB]M?tZa7-^Vs.aa67p+^0Fo7+#NInbGg_o&F%fB+Hj'D<\hu[MLnQqe#a*'L+>@il8b.m3u54G,/%'B/saB1uu.\f5&qCgf1"PEZ?Af6-%j(up9'Z]pZH%buWME,:V\$-nQT3$HL6^VS!a*jpQBT>m9:lJRD*?'kpbM[mT*+9%9Gp2D&B%M$;m6X*&Bi-qKF=#X`n*R+[Z#>kJpoNpE`C/]<QZ,0Y$8d,j<Fa=Xu\pIgD/Ll5M>cCn:&j(N:$2=W+b?;(4VNoZcF8W4kS+]9BV%*Q:mR"`[*bpFkJ?n:$$BR7H6&Z)lK<)TE*X*N05hFtKL^Ng;dq\r!F0+^#r3q'sJfN<%190@edd#4b:4&BgL-El[em1aX!^Rq8o[%f9'sH;U-Y6(hl@/+sq1UGn95kH+.!'1INN].^*`5$RLIOLtn0!>d+I;hpsD6mq<DM,3dU?3@*3QVJ1J>\.chJo0-VD<4oEXh\5-B%AWJiGHk5MX#IPYBB<>a8#L$BtX.Zd_o7QfhjhPL8.@LL<V4O=q0b2!G3@Yf?2/Xu@*mnlp:(qgccNC:8&WJV0Q_QFQjR-T(Nn7uH%V,Ri1pB6J_1ur9UBts0s3FBSo^cZ:g&kds*--?F6O<6G'GDo%b/Mao0PL-n(@>QeaUt2]LrE"$5C`0ES0Sd)1dQ0).,2Pu%Nk!3e%;=]??'r?HI(@mgeMO<-rXnKYuaH#8!-R7*'mj+m>;n.b]qpc1!ZohiGK"K_<*#k&VFcm9RRr"eP].d_RU'qh>P#O%3,ejtlEU_XJ%>M>`\NO6WqbNKQ84#s(_p)1)GH\n=ae'5KB>'<58%HNab@0Q$KXp&!<m"NAO@7C+E@mN:&>MFtS-nSR.VcaDiA.#,u\kTJGaA]C=%P+RTu"bT4dJ``3FM@Skfqa]cB'"5gP43=.n3(gK3fQo"W-dMeaFkAH'L#g@`SW?mujNKgF9m[9FSZ!Q#aF!LWl.o"R$BT^6e3eJS%cB1<Ks&(eOKu?uff!RKO+g02kPI)`48e<)S,&O?BEQ#4tB"m$DmBejmOR\(B;L5/DdUBKpmq;U=#QnQ`MGs#&oTjsP_NFlj2bJuG%NH"ee^Y?(+2DRn*S%m@;A4PY7B]8P=n;cNd`WaqJIHk4aYJ)B_eIW)m5)mFO]JA^Zqulm7,^?d<Q*>D+]?Fs$)u5M6/RZuca:J;?%Y2N]&55O=DnL$X8#Flb5VRrYc88'"-(da&qEik#o-JO=A9?Z*68eb#m)Z]J_ma,9:cA]9,QK&l3LEp5[,t]r;/n<sg7sTOE@0DRT%pI20OJKPIg2SbLl"?iueFqX5*X,q1\]N+R/^*!mW[u=iBNn<c,[<@><3V!X@=5#>Gqr<&Lq&K,1f/b8(^oPNW)7:k4B\0(u[!6N1%)g*9H5Uopk-1<8AOg`A6!u27pm)e\66HU4+D(1E?9;QGT%jA7`ns_`tfd!dS$mGR\%*43I,X9)N`s+mE/[JG&O!#aGcM@P4F0$t^%1\OFQ5JEpT:jBI*""`P3;X:jM-D!I4d&O<[5Rh0tIY4ChjtfR5;o5jZ*tGRgTmic4&:]N=\?E,,#td2BM"/9.-Z_mK4Y;mjb'l%j%;eX6X,tobKPW8kDLjk*CY-T]j%[k"#hhmrS3u]VSM:$eXFkRl#C"^s(dW>4p.6J@(bBr`^K]=5O>K.U6W<!W<:KZ2\,Sj;(I.H=a%cT'Z&?_XB%g,+s-Q/u`%,(,Y&Wsjepbt,4`[4"f5BNXYNM`$Ui(>!0o+M:[t&s@J2PTM*=6THCS5q8pt5)<dLU]8?I1V;3%E&L+M%L#lS&*%GkN=WeeQEJ_u067%U7nV5VlFidre^+FbH8="k'#]1rk6P5Th9On=m4I1.\7<&q"9/_^<LchTH"n">*_7%.CI&j<_NNAQc%+(^9#>"'J^Y#2Vc7_'WjA#UbgiZ1N\TX@dA+K[$Sn45!B\FJ=LeUc42N^-T&(Wu\JbUDT7eJ5BajF(_iUu+qgJ(kMQJToI:o&$fQ%7WS<B?AgKmGa#UICcEC&FN>*Y]9Vh0?RYLYY9RgLIYWC+Z%;'NbR7"f&YBO3n*nIXI,hgHs0qIZ(jgo4&GO7F9\05>I-8/%rho\k%?2qD%N\%fQ_4>8/5slmfOqa=bCP>"+,&s^mom??PX+/:G?3XkMAa=;,0]F;EX!h6ET\q1ek6YdtpcJ:icFAf#:_eX[s0SpZSm-PT%/>fMB-M]aiT<pNA\0p<.Ou:DDeB7'+Ba80+^goB]kN[OmkqHgaSUVtIbK0TW\H0oWcZ!%579Kb*s1ZBN:g:N,I^dDLfs2mjEQdF`%jpme.2ee?&I]NLrKDQfn`!dCo^D9o9GUHJ8URd%\>)c]G6OCtrp9DRu9KOTsfeW4?_G\AdD3a!.]N#tVd7RDP\dC7FZWKc`gG6@g%P/DOpl0]>=)ArYJRq?#@<g=aW/82,b4'46`0l(f9Xe:fn_7+!]Nde(k2cQr`Yup(_KJb/i1*\;rErT;W@:nWLDecp/D;1GdN0[#E%<?imjC)kG+5_H91@]jG5qDmuDH<2h6%F6?'>f4bT[ZIgpXkA66jO7poOX-o>:NMFi*E8$E_M]_Y)Cp67E7XQFnDIuqE)srWKtPBd%DmeBC1Q+<Gm#$%WVZ>mjcLQE;iN9,^(NQs%q_?M^i>;$mJ?qSo\89I!4#t$lN$?SJ[PbA)QK;n[=C.t=B(7_EE#gsb<D-Zk\PE5r%jkX(2L7:ab<GMrOR:P@m.?B@3RDh;SJX1=2jukP:1EWrH[E+dTrm?24HqUQ?ZGmd^Ab_#Mg&g/J)e1Ep.j&]/a<MpX(;GA8dE(jY%DTeWV/PGmBr"[4<1RA`_kBT8=W`f>j*?sMOEGaPq9>YM%>3&>Gq-lIj?I.3BE%+"4Go^Dpjt4XZ6B,7tC]h_`WOC#-Z<Cj@F;e:g%+Qd?'!k5rH2#,#,g)'>Q%ILn^IKWtP:5Bk2U7>=_:L:Kj4[IpoeS1VV&'aVl.H$78PSKThBM4H=.t*#Y-o4.S>V\C\5034"lZkK0%-1/F'!!mYA.0p;A()0msrgTuVc9E2ljXjB$k$(s"PM:"U)d_H1Cib\SMof=IR`7$ci]8Q-b1\`6A[3Fu\dDn+Bhj]\Id?i9T$F!"%Q5&LUAl6A$.%>X!?Ii9F1NK(Dq07+#8tqh7`TfP/f$&KOXG1=r%a@:%a^("FS0bE,Gb?7_m!d^h92;nd(-Q0.'%L&\QpFBjFRg3i%P.#\A4XYL^S\/93eCSR&mG%]@%c'7tl@c@OL^Wl;KR%o4e?t[T/5;gNCcq#Bqkq)-KHa'C`1D7So.c*0eg\JeFUY]<48*O=BrO/B%GKe1#_Fs'4o).;/kVN$2Sj60?MQ/t,c1ur@N-jr#%i]*E\)ulU4.3#%6@1[0%7W#8Rf6T!3D*rU1%bUk^Q0It@!$mS*P.NVnk+:W%31.U[qifETr,?m=Wa)V!7OMpCfq`s%_l?L-r_-+#f;mL;_#/@4n'BEc[m.U@Eh^jP4%ZJp&T3nao$?uQ\'hV1jMK\Id.ZsO3Z*jY%Bf2\JlrAQ%:<)Ut4re["h+:V`oum[>f5RPo4>LssfERP:PN`o$-?##6EXSrc?sVJoU$h9[g)-X'hGhfqIqB9?f_YE(:9g.4;Jf+i%e+;k2d:f2Nc!Ji)/$O]dpi<HU-uTqd)%qQ;=&K.k/(H#Rd]ESGQ`gB*b<1-X3uITs::fKWrb9a]"kWE>FDVu5H@'We)YBpD7\20P%@<XKmT+9;E\'nK+Z"c2X``[fD"$r1&c!WWE(urM!eYDa(30eR1c9$(-Oe+6d"q,8%f_ta```H+Y6gO=A8[m:VZ[NkDG*kn>7$+Eq%]i"jJ-U=\k?KINrf+mcfD0][=JESiS`1<h?G(Pb<pu%q&%X>@(]A73\gPpBiS[@F#e.15!>I=@;f65nnb1^a@>0U*C<Gs1c\C-7<%+bV5;jgVmgMlsVDDRQ"YAtrLI-I'%<28a%Q'MZ@,2;KUT&WLt/eS$iZNHug``/U]-2M-Zsp^OFc2OmCQ;fC8lok(m7YKN\lW#jNB%\u>LKYO9sb;G#S6.qp>iUn/i'S4#r9"Go\I`(Skg,,)Le\)M#TM!K$na-AWA_`.Y"l,R,s`XquT^I-M0)GrXiU,\%)0FB!9q2lK(%(bgX1YSB(67T^1b0Fjj3%"hB0IcuK'kZ!./cjh2.$Q@[)&B$jKKL$0*^^n)n%3Ts3D#m5/BSa5j^fs;Q'S-h4(S5T"j*1F0ht!7c%_lrro+'8B]&,j9[^@-E_lT5Xg\%S*ZoGV&l9>&o8][.$KiVB).\Xqi)gpYsXRr6-G]87K=OW1l_.pV!)>SlB+#<!2]#2lol%!,q]%VZV`80XlZDiqFotFmlgp!L]ScK#27&59'tmWpCbhTT*[)2%Vo#"+r=fQBlES^Wco5.hGqr"ZOR0DHdH$MD#;jMD,AlMD5GnMD>Mp%MDGUH0,"^0`>ZMPm;4</+Q*t`isdI#.-W/GELT_\67MLSog287b!&E^IQ::23`6LBZ890C^D[h`#uh72$iC&D"Pnm0IY:Th:eQJk%'OPU5-T)+C*2tk;WB4sr5O_[8C=JKJe<&rpQRYF2Z2BL/=/`h7od/+SYJ*-sWlQ9bp#Xh5N=LAfE-trJ*DdK44AZpsaqK@>`LoqJ%d&JEherDhK"5;mged9^;&@=+qD6/@j2C8=hUf2J&?Tlb?;%G.L`"AT:K1a`][@=t1G.l?)#mII*5l1^e!Dke\#;Okb\pPKj#qTpP%3YFXnE;+o/,VNt''hNlV*,.qb[=E,05[^E=)=%C"Ol[a&!,b4L\#(</gObuK*JD,E*VJJ'M[F9C+LaOtU4=FbQNDbCdZTdB_8H>f%:o7't:rZ>_;!(UJ:^0c4;'qKa'Mm^;m4J]?>CEK#W/L0,P!6ImH[Ku=o[F+o%:kn=K+?La;b`@;2QVq"G'K\H!gGkOjc@4`eA3![%T!j0FNotq\nA&970H4F(lphJ-U^m*o$+ssSi\3Gr)@nBZ!6Z%-"cC,1e\NN)]X326*T;ORo"\oF0OA/d^l66?cK_-$!RYXRjlcgW%=?I*F+,g4>(kO>uAV4&)XCDo%TIkHLJDp.9JDrZlR*u>bC(/+iN]S:?/"e#%aZp(^0VAf^(mY9)*7=p9@&F[BefYr1hHNlROkEKq%I8Y#]FBNicHr5DkKMdOMq,g6572^fi+n_c[7Ck([cB3^<U5d%W=$XJs_GS<Mb#-Goq4q"r8p`q*,>!8%pDp%NjW5]iAKRaU+?Mgh%:^*SNdXm,nKTWirg49%HQ4cPGJQdVNJXV/$_:jJ:JJs,$,.43jbsP.(8m;WAWJ`:Wh3UaOC(j3T6(4!.Hd^:;dupR5`3b-i8D5@f%,[X_,;Pm8o1f>`&.9<I71l8#1XBJN4.aj=]>.n_UZW1gO-*(]2@hiMH;Mlcs@MeFuU)f8;N.IY"jJ7Ju)iI`4m4;CD['aF]aki3"%AXc=nQgLr]]G5:2>MAl+jqeH1ZG3gO-6(/E3+IRkW:LBdR*Din_U8XtE]1GS!`q,]R*@9%h^2K4ATrQ>F(8d"ajuWGrORT^niQ-;%XhH3TiD;mF/70;Z5ET;dKd6C.b-+'Z+\@,O50W@b3P[;Y+0tdU/S1Y&jT6a'+f1qd\VN"m;M&p%8m+Go6$_uNlIeWC"\4GFLVbs[%3DCqj-q5UUM%h9NVb$5f+GEE!-9)$DGQfCI_FH%c/IIc=W1gFA;IC[tEhO0laWi6\SeNtN$D;0&d#hXL"2.s7RC6R*hF04:d9:09%QWhVGbu@`M6=s.c_P)j:Q0#Ah-X0BTT56fA's3W6Q$0O/9IUiX18eYZaeX72EB<:uUg7h/kLrb`23G%#OuAW-XJeZ]oq\j8jd((c%a_a\;hNWc(+^KM%3rN0Li(0<q:kf-?IZ^^aBN@[.&s<^gVdsJgQ9duu_KHfA1h6kiQZa=_pg9i3A<9cQp7/mNrpm0E0DFQ\Ho^>i%@fN_".k;R#-.\eU^TBi!Hq@4o*%05bj,,"E5Loo%Wh7c\d+rFF?p@DfP]Gk>Q&1q1!ailD"3n*K.)$2cdc@QjUPNZY,@X$[dLg^g%T]ZLPjferh,cZ<ZN4%]q>aZaQ%;^ct\m\=kgH2L9<Xk6K\^g`k=9d2T[?C@FbM-Ro:Z8eN+BrSaKY[`%;U[8n>#K+hUkH*h3U3.=%f..D;%g?%"RWa.!k6I@L_30Oj];0&*eGR?Yc*$QE/%k6VDnFY?C#NoQY]7d;NSOX!mJukm2urp='#fh(=\sC)AY)P\S1[b.H@JAm%b81/FB'e:E6HN=$;DTirbs@*ajQp]OcDjBac+B0]apiKTjtF7f0arZ&'?.-P)*9ID5?G]jh#-E=r:=.fohPSe>ntm[eR*cHW]^[g%l)C[T>f`OPQKeMKQ('c9F6$\gqDjeT5>_tsqpg%\oaLj"C+a_<-$R<?&T09^=*ufB#jrEsi^t7!Wt5*geU2?7E`IjF@L:qKjG\Ns%I;0@MmlW"cNH&q`)BRi%K`YeZk'FaH.]C=C'/JXa5^]a^P)sA<qhee4SW`4"=j")B?PMC"1k,NEMms6SBs'hIn-.Hr.&N7tc1V$;%_[\5bLhhJ'dO]ca&^7t5aRgp,!MoYoG>mEM\8bjra%pAM!Gs4XE69RP\m]V,L_t/?+L"6N-NTp=mONllG:n]<lNHcQcX)45`)=65%fTK'?"4@`-!ea&DRK:MI_qZ.u`/6Kn/b+Id#fLp.'[2l.0f5=1<)itb+Ju!N%Qf6>5mJ/re<5?8RI=@5=LT#:R'!g-PpDp)57.7*%c,(U0e06pW3:"O(`H:(N!PNU0G?guiJ@'9ZV!>K52i<!dk!AdcTE>Q9ecNlbQs+cF!Q_il@H/MC7_8`ZjX]7\p`f2EM-K)6(D\Q;%VAqb]T]!NfirK:8;*kou*_sufh?K'Qd")A#\RCZ*G12ES+R@&6hVq:\g&hR"nDkC]#.P<REaU$<H:4PGlF$bUFl0E$,XkM[fP+M?%!1EK$]VpZ%ABF*?3+cgG1"iQ%E?*r'qiJY:F^R.;f@?Mr"(EKt@,4rgZYq^!>YA<dP4C,d=A]s!\q?i1[#N]JJXI$2;4n"!"GF^B%6p%Dd/-&g3/kBn3%4E/j66Yf.0.ba:C$"7(3GlZQkpSj.^a;>G+1&Y4KN<^8%#E0eJTYT;beCL+B'!('=E83)&d=X:i+j=-FJ+1h%AV6jr,%U0IG$r/=l5j(%(;]?a="9FNTo\gcko^/.^$R3=Qs;1F6"9t,7sU%$@.q9Z]8["VEK%F2?OL9G\9boE&\D"ZLqOC/"ZikQ%^l(1&.-/1TZNt1!M?l>JZmfn4a1`r+I]'tCVCV4O$_HP8oAQp#OnSRdN:*bsY!`%bL];l#]/$R#,3n04>"7!<OC*oL*;b1"dqu=$%!UAQk"E=ZM`l%p#jM2fA%G===JFt2*$47,$j8c:tr"?QFPaKgQ?SSL9A2+V'MP^Zq.,u!QQplRfkf%O,&79t@VI:YQdk-,kip?5f%lsc0`nqdR@dL"FU..YlhD@E\JE:IQ%9X4]=!1@pp#ZiFO"mEEA(@[dqNZ*Hl7!:7+NV36H!^V>\8'RQscYpr4@ZWUSbleM=QcJqh%/I&IHPm4hpd5DUQ3e03GT0S(o`.WXK*(DCt\)t8`)T]1g@[I6]#mN)%+R,0(!O2'I6IlO^O>[`eJ8LP4NWZTF`JV>pjS9/H].P>o%7\Q7e_*0[!:BEE)_iOL7+R5$i`Zaq9M%VTFjO_&\JZ$Kh-[_L.AmjW(I),dIISn!,V&GeI1fRl(bY/#Q<^8SXN.;$.jp>RM72(>G%Uc=!I'./Us%Rf=_KP8DIP_9>r+HD5-!>?4P!>>ZF,b9*6nTf^S":W5!8HBJobRauIV'TK;70MU?+GEFJi^@2Y_Vqb=3"XEbr<Z#<%W,PIaiZS;M7Oga@=8+6(6G83JrSWtC(0R!m%hlMriug!O^]YNN5kNED!Z*FJ:CtJWauf_o69>j2P5DKc`Zg?UY@B68'7`LA(:X[=%WYdt<.Iu#0_GaB`/gQS*e.T4k.%EP2lT6iIldgYA<naW!#m,meUTb;de40Wg5"ecn7KeAE3,j.p-rc@_?m-5$/h!ol(OWt/$=>GW%@PrkT4eX;+5>o9.;d,X*oC]J!Fu>^(Znr8G`A@Ymg&t$cXFOX<.KmiH&K!(56J$5;:n`t1]YSJN;?J.L@<PO&]kAF2,JZ4a=:ffk%,V4n3>):kJe1n?SDZiHQ,%M;WU.C9'!f&dr`a&W*Lik8U-:iMB1pKg^`"XC/$oON),%0/f,cpkKFrdFV8Z\^7Xo[S\KaC),bnN]\%TI5gLP3TtrrW!3)\]]$Od3^,LEt#NlJcp:[2iO8_":A18R?Hit$A/U8P+KJ`[DN:O9Y`?<,%dn\-6cpTeLU^!j(ZJ0)kJ02R9_Ei%'ao2rZ--#JR>DW#RPc6;!hcf^dNfH%-L6Og&aBZ(^l-6rE+<?$[(#SH:3lX)BORk7$:.+G7_80.Xb\H6YluN5V$+>%"CWQI"@O/?%Cq"R[Qt@WfCU-__#(VQX(M3Id:%GQdCN-!S!:31VS1]LI#kV5+n8,<)6B-u?kHh'`o7G,1647V2?so(!hpBfu>2UsJ3qBZSrW&@K%nNNQ36)2edoE:$2Zd+3oaK]\'`nsAkAB9Bg5Dmrg^<[u'PPL.;jMnQ-J>l56K`Q"%ls$?K-@j4TKG=\#4TQctla@I]$7MF's5F>O%036R,BQO^u35@9\K`OchLuHB:EJ3H=Gp=?7\?$Z0YKJ-5rn\$*W,0<qXFGcuE-S0])hQo)5Vp8D&HO+HB`"H))o7iGaE^t&4j:TL%(:l16C9/4l0F.S-jp=/1`:09t9`UJXBWialjZNSPG)O1F^f,3RN5hLL2?5)XcZiP(id$_Y-tW$*B0m_o\KQmEE67YO&?K<aIaqrb%!]Z2A$S_]PJlrbc%0IR8`9b4n.+\-F&i40pORG-2h%^u@(&?R7R_?O"css`ik#W9/Hok-^0[P_&%1E>%JIulLM,`PlL&K)P9K5Kq%YTLTu6ir)aDn/,Gc-llW)s"FSTct.Ei%'Ec/&cMP_3>o)#st!G7%dus!%,F\J0?<d!jUV?Yc#@EGFANIY3Q@bJ8@7J4Z?oYaJWEh%*coCIj*7.\Ld\Lu_d";,WuTDRM?Mh=JXKFR`#*F@"B[&u*e:\EUc/9q&iTEg3i%;?a%Q602ZUjYfM[OE$'F.K^4J^e!!\$l>3It]%(U-XHZ*OaGZG8G#V/_'H"qg()-@k\(H3+t_&@kB"W3Ka;e7&IJ8--OX1Bq5po`S6;Zf=p?f0M9Q"bnJ!QO(Etjkp9WIa!Zs=g*?>%CIkB*4Ie9;%1*1ChuJMheHD$P":E=SbIiOZ-KN!XJsnsghuYU*ps'-?'r4N21OT`),EIBsF!.\,ArQH\5_4X8Q:&5<!_.d*OG$:O%_Ett$o(9;_:)THDE*@(c@PW9oW\b)[Ur+K#@r2\WUb!'28.pWi'.Rul?cQn$BtK3]BcF+8LYLUG-W$Kr!53n-knoUd`Z>>_#rq7k%#m-u1W8L-?TS6*q7K<p(h@qPo+fK>#'#<WQeF@fLd4J-*HYed@:=ZcQfI,dre<bbN+5L+2F+Jk%d[8BLU'S^Y0mZ7'!&>H=(b3Q+%+BTFL5_Q;35j/2LE+o]rd`iFb;GnL^VIm:\ZE//,7YBlhHraFSG_6K*Mmb)i+>=Fs>'<mO``ud^+Up%*+dEj531WS@=lY_ld0-`"%M,:^I.00)e'"3oPdfQ2h)Abg^UA9Y26RJh+!l-dQ"YUW_L'rc7(1STN"@A\R1'TpN.i_hCdQ3.;QR*5Q>Mn5.YY,;Mee$3WMAJ?"%p&O^uQC'XDK9"lOM]@h)#&7rgppTQ:TWG@H8&^?5YX4GU=%(S>5ZdG-qBWBQoQ_]m/4*.jLYAkn?O%F7*+<KtJ10p6;mK1d01#>Z%@!;<o%VT:&-t&)[[toP@qL,c7X7+)`?580m499uL@pg9+XME#X;B&BR'd8.K]iqqmarDgK*$jl6aOLXe.)+"?lVf64TU4TjJ@pT5%`=a;?PXP<r!1MP07\^(p<3cl;5[:?:^s\t`ZNst&j=0']<1une3aK38-%Ze)DA)IBOcEj:Pq2tJgHo&!fM)Z/eNW#I[7rMoaOWa#%RP4pcT>n#`cOpGb(4%Gui2h1K5^ZF#3!*C*(&QeY"HgSWb=)qmp0AV*ATs5hLniNDjG6G/i\:[>^/3I6a`JNrW`Xm$+BL>F%rsXi%@)pl6([qPN2PDPl;#1o)VQ@_OB-'In4/U:+UocUQ@%lT*OK'3%oO9G07B07H5TNTmf?*UkSS//K\`,VM_OD2A'ZgY4&imZPF#3pK%hK:sJnJMNPp%So`(L*0<5U@-FoR%.$6Cm-iN]gdSQ=a8q-D7!8q;a"a!!A!P'`uVHG[;&/Z=?->6;B!S<U.GtFMUhcA=gU.R5kRC%8dY[fY7d+h8IVsm$?Nrf\KJ_NX2$9Fj(o3Rn\@nHgfPpH+p"ae"beA%5TPEid&p+13<3Q]".qi*S&EGY':!bD:]uBjWhU\f[;QX/%#UB,a0XgXRc'iT33)P5,!d/T-%B,l6Fcr8JiWQO[!/X1g@q0B@EW?R^Y%dKV,s!.R'i@C;JN\EBp;<tdmglf>8YVRa#dkJ7^/;#n%F$QlqDdge2dc`.="K2h%Un,n@j)[)`Z&\E-(7MO['LQ2#U6m[.!I/GJLLk3j5ctNM<9fSZ!#UkhAL0<S#G<LM,UecXPeCR!\2bm)%E+m0oG,HJ8e.IZc!mj:u&RqOW!#&\5i_7DQ_NG&.H^,eme++Y$J154=>WYDRGnC%e8:c$q,DuSS_h=/OKor\&7)Ga>Uk,,8ZOIob%!gqN%lVH0Uj^l:e!ceXBJnMe\d00m%='q<X6Rn`B&3h'r*sj)m`@&GP`W1N1laMf&3!9R/dt`%Z8/#A7>B;m"iaAF2FpSk_BH%*N%'J-%iH^Xp\SMscX3hW>V[FL.cMAaRXa34S.4<<h+..Tf7a>p=u#@7E&>cqUNj[,oKi9@p56]ic(LBH%?S\IQ4Mum++Z''<=2UNH-%E&n(Xl*?/6!%`2(`Rlm&Z(@kDT%_eP:;1CKobeSVe\3e9#pTG&aOQ:qiCTe4QX[=Y%O-euoi_S-C.SVUHNJg-%SU\(a-I@Z=gLq.%!3Ri0Gh,],2h5BZb(_^fY"NV+?1QMO'X$h7G_.&3G[BK1!Q_,`e47PF@PLn)%+>?(bbC;*Ti+O6$?_kS.0<[jep1%>iCJ(8+u_*o%hEZ]c.RHWuB;k.d!9BTPMU1>d!)=.:Y;l%_4adMN;DFVj(:C(i1]`,,<eH4MG$G1I=DQq;;fsE(RqN`Q6t@N/4</HghM@6TE.X18%94&F+6;/*s)l1PbT^.@Q+`]F?TX)Y;644-66TbA]/E#eu$%NV"?A8NQJA]lu$?U"a<RhC)*@.;:lBL8dS/K-md^HY6oQ_Hb5e0K8%/->J>4[<S`>4F]5gZ:&##nX]'W[_I?J^I_`)MSRBa-/taO]Ym>$<<m_\@PrA2jJ_p0&a]MfndK96BKB'B$."0]R0pZ:6Y5AOO%*@%ZW)#AmF]k'@@3^_(-0ahafR7!an$LHJ>*KEWjZOiM%&Kk(os"H<NRt%4uME$H\ag#/=Kbt?m/=dQ?_E3lR09B(p[ZT\f8[(p-Ln<%@SDb[PR'Z<\L$j.@i_2L94_+3@+bUT6^SGF1lcL&7o-oEa<sD9c?38IIJ*riDT@N]ePb[c4UguY;eYV"jq)@)3Tpt#J&SRE.fhf"%d?:>)RNU+8StS?X^fb/a85oU#-a6_:RL.at@BZV)b5`AKN]&/156NKqJ<>CZ#=4`edbtW:NHV@=#_7KP6+<cjHALXdJTFgS.?*n]%:fpZ*8(9J,"I!_i`D3iYh#@CO`ed[q1L51rI!,]Zh^T6cH:mV1#eBO8JVfQT5TL.T8?cNB\VGru4f\8g`k&Mm;SeuUSmZ8o]>b4+%$-+'[3kr'<k$hD*`rW%aPI]NDGpP/#C+$NcJiJ$,c0"'e_1F7%RY(\G2,QE,IY?@B&LaY=O[l'Nb8eYIf]C,l8Cb*Z.$uT&H=D:N%O#EOJ"%(4`3DYKk[tLD?nD7lK*0[!q4&9uR(^Uht5g5X@hBWN_0-hMr_._M8TX^rU77)t<RCELbe_\U%V0W,oZ"92BW.YlE!MuYP%e;26?8jsU&-if9,.pkhm'`g\R34qMm\3:I-V\M1n:&k?(&S<d3Y0"kpr*5I&@VQcq@&!.J*%O_CSqBRVaXb$:.M)1%7Y^X8?H@4W%W[&\FP9B3q34$InFbs1="p7[HFF6''P9q7pb**J?#21IB!QPMRaDcP_Eieb5[?S[n95!c_WYZQ^XIMH7K7+U(KK?Z_HH#uHeh)%b%]&Clc3(?)mnTCfu/#Go_],)G+EM_Gh73M[-\jOeFm>(`V^@!u-,*)97>^Aq-O!f`h%]B*3*Is7k`+BtQIS\RKX<$o6&4]c*$-77s%N6%AaGt;?l!Q0Es65V[K!VnDX&F_Yra0Bs6A5,rR(9j)Pb3;@I7E8Q3.?hgZ[&$[&-P;$H&T9>g3/j(L"L1]QG_4Rlg$cG>gsB#G%<?iW\-$8*3TBP:e:uob%37d1P1Y9rm.:(Jj5aoKtMQ,CX!^P3U*Dt[M0UKslM3.i>4$%]Z?06@jLUs!BR5_8_E9<*+M!l._^-A=/%bK0*^jQ!KNUO!q>kgKk=F8Ja(VooDqfSQT9'+&/)CX2Ki>*g83/BT%_E"K=O`YNe.k181H.U6]qFbWTf(]%rBFjnf36FZ'N>N-O*%GF9HWk>aKO_KdP`-kU&[*;OlkB+o/qT!/I?jh8Ti>1D7\]0BH)e0oS^%<@@j@\a?<+n[%Z8J@ZY`/120e&;H,[W/QC(MW+24VDja%8K+9!bp/ni3hbt;NDuN^<We#O/#G0M$Ae21=,m>fSlad?J76Ai%<_=P_63;jF>=SboLN6,o:Z'DrUY,q*+>*lcJ/-03]n"SU4os(%[D:63mZs&H\`=d2dLV:j3+!Iu%8\-#QiiIAj_Y.oi]si.c[So]NNbB>""c$V]s>3U>kJn%JI[N2;d0rL0<Lh8?j\k)1p(+EJSAOh%jZ`kTDIKcN:dCNqYj_(1R6E@n<f'-nJs&h71][rE5/!#BaU5"I;n58NG:!W<?Dq)(U6(u1<1?,b?PHBq1+UEWf*BN%j38dk:!3s$%J6'oY;SFE^]T/tA7Zflk%&s&]J=`fI>jV"aVBcr@Or-q*ZQ/Ou'TQ0V=sdTF@%p:SBTdUl+?!4H3k\%"j!8Qc,HD/(NOHhLi7aG8%o)2g11bA_6FSV;2*qdt[0qDdoG0qOlFPEa.7`CKn&Nnka&ZOs%Q,kDpB/0_JJf#fF5=_7Zdf!:t@j1?l#tO?DY%E88!/ck",to<t%^udbJ#6mA-JSX\6"S]Mflq1b=rTScA<H,bN6WQS"_/Z8O(LP5FYoQ,&"%<`E\Q2Dc]4Bh"#[$DAA5[=GL5A*Pk/n\SN?W8herO\+%@,2.M`&t)7?026("GTU:X>B@QVK'aU2B%*c^eM"h$H[7_i9p%niRfNtrb_)n%FkJJN$g1Sm#>gR-QjKkX7gP%^sgUj.;TM/fQ<_\%Jm&UnT@t&p/EN)r'1.K$g);0fkNBos4m>4_N?$*XM$E:3A:=RcJ?dHaoW"AeJ?ZXZRUDhKYlTqhk3Jm*!4r7rR1uUB-3+/H,abm9%Lp"o3D8c8O1RqM?:2r@5lrcb7DQs?f=B1s.EQnW&WR:B/IZBEM=U[\uFX<tV1jK/jO$RDL((i8tVaB&'Xk8=J0Dpp&b_g[q\`$G*%W<Nr2%S0E9=TLlk%nmUW^ODV>*aU8Z#U4tQLV7F*jE#NReW8cIQJC:K6WPLl0"6qcl3Bs15Gr1d`^=^\?u%LgbSWR)K$*$@G$>gA%1Jk_$pJo/7I_JM&itBM3W%H@l.`"C%$&'[/"G@dp3/+BC+)Q\ScXN9%<?/'3&X5;X!f!ecZAVX!.<VeJ,@03Z7*k&`<ZW+FSC!;t%#\,7bIW!N]'f0QRKkG8iJHC1uR9(5pBEMDK_'^M.*C/73;kfhed$?;AF`2^5-s\)!9uqr7A#tPCeNR@_W-VTpPCB69j_$N^NXA$Q%)\.-Ma+92g#N=po<JCH:)-?qE$1h2@0lf)f,lG.d2u$eSiT^^^PA<Zsbdd3M'P<d7gHR@`<DS3?<EU:6]H0WPD%?ltVLr)LY;adC%1lou6!,/mC]F\*ZPS[@r_Jm>CbN(u3_dOENS^d^K*+:igk3sg;dj6'c$05ToAYMgPo&4*c<_XiAqMN?:ptUCN,sBcsW-HAu2,>mF%N?MC;FSPA_Gs&E/7E'fEUj6cBQ:?:o=7t5J0^p848).+'"^<or\ocsGQ@)]_a4I.</75I@cuAFuXr#8f$8nkJZj_'7iDZ>Y:ZjJW%#apO+54DM4Dk@qPp#2R$?%%U[WN,1HNYA%F;"s4-<4*22,f'<Jgbhq6#enN+pb:5qOc*#S%6in8<7KM_Q?XMl$_NjFn[)\GH!4K8%__^D)q'_;1pZ:YG&K6]%n=83@'bU:M"Mig'KI<GRL_6RXO?OaTii.;B.Xi8A/t3,/"niV[?5)Q_:Ha?DY8S':7B>c@i-kiYY/[A\%b6%p6UapcA)*S+32)"+rJN@3eTK[G6Sd?.]q,B6,QVADgDaL;1fZBg.;Y/-68"^o:V>F7>)$jNfoh6;,Cn5kX<qWM6.uVnNRT>t-%!&3s\!EU#W!>qgA*Pq\ENisgL*M.eB#\E$jij3m/"sHbi#!On1cifrc9s>7$(>N[&a\Lb"/R<2UA<.<q]fZF"3\,A(o.J1g2k%P0%&#FX,g'<Z"=BIUp<ugOsVd%CiI<=f@pcteW%E1^"[DRNWofu"V_E9*<hA^F,^d:20mHFfTiTkfp:Tm82TFdfc^iV=-3gKC2",Oh,%g-@hcX^H0.BRQEk@M?.Wol/EE*n\@NYnY:nN.'B^%77(+M!ZaF'35U0)i.eUf&r6@=265A=DKd$9cprBX\nu$]:CI^7Q.O9?F;Zc%P_d`j%bMfQ)0tdC5_r2MOH5&,W4+J-m;Ft&_"1$uH?pg`cS51Ek=NJ9B8<[;+FJR$/_3`J%3eUc0ieeb-2QiVVg#Vt"L3F6e2P^R%7.dtkYtHt,i,^a[/+'Bb@B$reNs5'+aOmggSd$9:$<`/dr=T3]#n.-1Ei]Q=4JkB_\^i!%^/^uEpV3]m.M>4j%"S83+@IAFN-o($%JU+[=T=7^R&\`NO8a+H,h`S&o@1!r[H.#D#pq!NLkMo9aZ7B;nbh_-iY?t2efCUlm#ZW5Y.U8XEC<WB&:T&+-nu4^rJ:&C'"-=Jd%/Zm&@2'^Z^fnR4:chseqE>?.RbNGYr"OOKH`52c*eT4Oe<[RqCU&ie3kiiaCf0%4Bd6esq!Z*aZLtR9Xk7J<i0Fp<Bn66Y&iEi.J%YiZ6S8"2K\9+Y^R;!>ADGcJa7[j#IT<Y^TWmR+s[4X;R^S.Zr@Fd.1&K,=;(Mhmn:VpAs\7sB`5\n0bjoM\_\eL9i23l:R^!sT$1%7:-]ri<6DDVV67Q4$lmrmnkh!JAHgM7ZYhZ)!j8q&,_Ft!'1/@)l]])-degsSeY'`Wl7\a3K.t)Ym^9K.\=X]j/Cfdc[*gPEV-5t%:T5hW>DESb*g^@+4Zr:o;XmdJ'n#0TQO&!,gq^B$5oc_g'Cjh.bR9]#NM$T*I:B34oRaO^r?,H;K^UA\XQ"foWL"k:$<:cPHG9sD%1;QbZ9DbJRqYVNCdjQH)"IIU8:qnI$M`m=JZ:6KV5]993F>=/FB/COS$O-k4M%S:30'g9`3E`&1^jmA6*-91>d;/sJZF$UgRRSn4%L>5JdkSB0!4Kfgk6<#5b;7LC(i@HuZ!L";a1a8`^rEV*:io:l86tl6`GcJS"cN-/r3Ue&;@_XVcJQblPXH8^h$O)Q44)Yi&O\?I.%l]?LGBjVkpGp*:CF$r@8FeO6g9:kD;nJ1f//L&QkQuQ$$qGJ.dNad)H,h<!<40K`gVi4Fdq7,!<Man"NI*BB]QpSRJ-'V3='s>l=%JQ%E9Ti^Zt"bU)M/988@^_;*)WXni/h8Ld<9KD,l-^hOn_kfjd@d<=mgnKm7?K%/`<s]-]KL(p!@#iP-'1W.)d#:[UJa#_f(]p`?%\lg?;%]+h"WZYh4jYp!2@tPJ^^2mC*Z'3KDEeRZM\-iHM')a4I*;]Ld61\gp=WoaQSj^ik48Qp&!Q@kO$I#C'4NE<I+j`AcWd,7d%DS`*P%Rj5elW$Ji5IASRH&Ds,4n=!d\N1Uq?SFIemuG1r'b2'#F6-0rG#1:-df#]mm+3<P1@Om_QhLTn%UD-liI7[hJ8$LBoWQg"%Q!6I93d<dPV=<fY1C:^#]lc/a3F5ai]t"sgiS$JE_\WYdYMQ>p?[^`NbiNEFHL'O/QG#8)4-nK9eL-RKg\df1Zh`Zm5"LI,l+aIp%*HV2O]KbUSd\4>1lCZAuULAA0a,aiBomGCV"ir1cY0CcL<ns?&p>-b.ef^'>8cN<b9;a`X0'F0)WeU,'-`=<=CE0\nD-j24ZI-u2%G1)qYSOr\0*4FhnL9tB4=t9)`6t@a:cMFlro4S$<`d9Wa*Q`Y#7:V(2/;9:03ZlSS:qBO:`n90R2<nf!"u\sfj3b4u/#<R=&(bKE%GrJ*bIPXL=L;Y'kk*+9drhMV>n"5o)W]X.REB<@07["9Q>K;AGR3%"Z)Pu+jFO/G8bO\G&M<d-JV;_kmTAAhJqn:Z$>@(X!'_5Ca%2KmU3U1M.u^\KSJGdCd%HY_E`[JIf$qI"^-4a'Ie#pOi)+K#5KB:D@`UQ[pkdog0;+80)=A$fiHs()NnoW5Ec[p&$!p!,2Eqkpa5%ZUks2OMTsSJ,0c>H_OIb^$g?P>ZPX,md8H9'%t'+]!k?,G3Rk5^mA?<=6_VVQgT!Wb7tf\d_4),HhY/Dl*T=g2?rc&A+?Za`cTdI%V6Bc%]_Xpk7TfdF&QtaQ%[Df)'3SZdSs*ce<+Ji_[mdSf+.->'jk38?7Zr_M7j_fDe!e6dTsnaK<A)2?>DTb7Rg*+D,NR+8$@am-%:ZmAuj8dX0_#@\bg4uI&E-@mPWR=q?9uVB"Z6@7;Ppj:d$F(\;NKf,Jir:n_`@KcQr87CT6u:s'VkENTk%dHTr8N(sMc42!S"nqa%efAX52C]GEMaZW^S57GAVs2TCGHg>J<k3P8Z31m1@/J2n1e]jc_/`\N74RjU5]8U<]7C;,p.n22dH(#YkB+^?,%?CrO6<n2UG_\5%*WhTcc[PVpTJGra-[Q3mYo86\Is0K3YObp>Qo-:ik3Pis$V9SYqQodOFB10.CqF(RpWELY"*?pm8'%.iPW:ZR(Em7=O>WO\.j=<^%+e)ZEP)5L6V=/er:1!o=I^<E^r3M>'HXfQBdc67f:Qmu&h'ck$[)$'RG)_!a-VBW)=lhg=7$Wb-9D(^?HR5HLh2aD87`i:875`NF%l/:d<gDg)sb(jCh]U#6]UWN:Y1`3oR>=KF:<Jk.dMV(GT:ihI]\CVgE93*BHQ39jEo\iBu@\`(]g[!0EmEp#kja-k.,JROBrUH8_%E]s&78[DGQ:"^DjZHM"JR!geSW@-ebfIu!#;^u5l/_T:_?ES-J<;;GWCA1BPMY_Kh4l8E)s%dRTH[/f0>V01Kqe?"Lq9.UCqHNaH%Ec'WDrG0O1dNolL\b9TOV)%M*>5d]1cok)Vdc'OiG?dVp[%3eil"qi*Snr^H?8h>b7/tS'V"<]2Z,NA^\j_[+\S.BH25e3'Sp,t-%FE!HSdaQJ,2c!(8fch$=A'9'@Z<f")(Q$eM,BY]/4R0eV2e@)!>9lcV9LO1"VC4U]cF&rg"2AXX=t[^:)0]&_I9CY^&qNc`32ao+%eV.Adbcdk;RVCR"hYkX$oWT/#%f7'uEjkt>o`p,/CJegBJ*![s&bZTEG1N4#h!-Tg]DHc2]);H6Q3bR[ea<&+Zi98bS`1o[WFi+X%1F2%GF#(?%+Bt6?nLQC+<1c>moetX(6%>8FbLN+u.*.Z>nH2oPodo4Q.><*93+Q;nZmet@M].Fsc8tH^`tIR[*dZQ8,uXcOS]DG-%U\+2#IPG3e/RXjDLF"a/('RjpAton-j93kZhf#66LGt`gb;[)K2k6.KZS.dTQ7RTu6n2<AIG+HRiZi/l3A$TOn![ZW\Lj.^L5APl%afZNDj(sH!g$='0T2iC:LLF+fY&j,+HJ#M`VG"GOEp_$th[X^2Y#DLH[_n>(]IqSAo+C57\Rb&Im4dW/XEX%c]69QI43Tpp2j\E;%3A"=_n?O3Nac-!@gekWUjaFVU\@ZpOs2s9ec@<3]Q)eqG=kd"5MfB'X=0?u)3rRpK<q"jOjAr_&+25qTJ+1'H[M.:hEu3!o-BcRH%U:fB$Q;@KsL2P+(]%l$KbI0^'pjf5^&b9fm1Mi(@K1>[Jds%GU\pJ/O^Z0o1in+-Y5VE>rl?ujt.KOG^2Qc?mGSB])P$<<=/ro:)%6bB[<4,^P,712aW;Ah#h\N$n$BKM.GcWIPr10XFbj+h<paq^$9VZs8_41pKuG4o`bcTYT\<j$D;"SSp%%/E`efgj[d;Q_'pHmd$c%TJ-![+.%mI41-Msg-hbMN3]EW\[_6>Wm/TS-ETjc0j=;qVqmiLhF!+pah:8]X*/-blJD'$WZ/`tV[EI]J`#GL*Onot'tL3Zq%@W"%RZ?oD>G\'0pSP%rR4K49n**hVj=Hq+;pF-F[b`N[9Ad&Z-9^bA=rU+GJ(RE?qSRd(NpSAQ54rPQaq\0r^NY0mm=X.XR1Ef`r&%kn%gS1el"DNlK`hR7_S8$MsO%M,Q:ZcG1.>cbpqC[LX+1>G6;bBZ[3gVui>"AF=G\m#o)h`5p*r:=:65_rN-!o%u<qC`R]?m,@BBL)q%XCT=tfs1+K24Yd7IH2<oc4RAEXNFL>b!h+g+CkqZb=[T&5fff,Y%49gD<XE3:KLo_l0?]Cm;bBr]$X[A@K0%_3#m%t*g_h^TA!4a%MkmMX$_-ni44U!/(>bcnGF\RPNTKRfH$>eVY>P""Ng$;V_?4Aq\Pk[Roj3Z?G9>DC4$qdE+n(GQG=T`d,NO?!@s1A`9B[gCiHp-O%:Zi"oeNZ-b:X]Dn:D=qd9B.jEG%o_aNVfBs\@:^10`([lb=S-4msntAmm-*bIlY+3\j%+/ZTFAXG@rbs%UYN[p0E.AalIXfkGRh[%PjdBl`D7[+'ns7Fn'au$>(,n)_qBTeGA6;nX)n=lCm!\1jXNi*kiYq1s8!Q'c/5WAQ]!DSrVM')EiZRV7i=mt3-3d!L+Q]"q!KSL%)7QO%_lW!a1C3Q4[eNOsEkRVu90c>hBcGdKeMrZ,5>0]gYuE@G.2@\b3cZB"ktlFXP]$>Mgr'@7[L,ik`p"oTDNeA^BifN4eX\nj%\s'-L;;FeYTk*t5=*NBKST].R?/6r*l`TZ_X#p8MNU3-H\V'RIqX^?B\@WqgF]Ut8_Nh+CYKHQ$hT&toA'T"^gm:Zk(TFodIEh_0%$>`CaqoosEO3RF'A/$XmnK)F^ON`uIaMgL#(?*EVo=4^RB(%tGLZQ^j=1`ZiHt5]Td%;>%qs3%h#A+Q?H2`$pCJa.0"C9FsI&ue^%-s*@]HZqs4N^b\lmYm=raL:Q_q"T5L\KpLHcEk0WkIWh&;FWZ.ht^\_lCIAp)^2if:Ar(Zo4*1:<&qYb8+Fm(2;7esT7ZLf3OQMp%\TI:\q4QV*ohiFbTj6lrH[!?L.Ua4@6+2_mSt)?Gdo,lDD'`O68I!n"8_P]P[XA!i(;70rdSd6o]L9,JKWGJEb"BaE?$c+GV)K^0%2Hr7oO(286IWG0K-D!`jh;7Aah4'H)gT5I_R[#!Q/(]R3mo$JtC:6d[rc;d(Sb?;422b*ra<a`jOqFumc$$)>/iDC[At(UM4C/!"%UH)u]S\7qkPd/QWo&'E&jpr&]P*)Q%cVh-L?eopYE`'1$=Z:K)V5*+r6K#:@;57B/D7cN3l&-J+k*)#)+<@'QgX4^BrCHsY8FG>q%Zu!38SG+8!9h#qg[TD&&oi*W=SgER[IHf/A0+%J7h[stYSYhrLqUZ^WaI;U<pPPX<9&@ut"O0CT>E3`PYRMeJpKX?CgQ&_&<X@B<%Qub1MT$Fp"a.n+*So3(7>'(5:(Jb%cf,OIYQL+Ps2Z?k%[]l-qp$k$\Z33p8rRpH2Zi4@m]c2ulj?9?60gir,N[%?CQ'G_IGj)MF%N=u\T6Q<dkX^q=7o`o8tqGGm@qZSN^'<P(']dqiqm7,(G=gr3Cc0e3+]2Iskm.D-.`69R(49G([P)+/O=hO2C_V$4I+)2F>8lmLZ%9H(/D=j+)uQO-ef-XaQZoq1KNED"f<nfE*mb!sgUH>?,Bb<'q!P`1WHl`2a+qsg-L&+("D?,H>u-@?p0\P]o/H@Fa#?b*,iAUM+K%Y=(9fQgp?"QsI_@bP47lP'.^Mq<5>1``K<Xq(C\XIE)!n^*9:Vq8;V8&M)njnii*1:(:C'gSCrU[!"+8p],E6Ht)g;.PkOb.hOWH%EQddpMZ5CSgV1Cs1Dl,&`QmSS@cdIuo-K-,is+Yo&[\M&e(NK85JQk"`JcumoCg;!Hi!#&PsD*apU!/3Hb4+UCdm.";\8mAU4Q*4%^*P/q;XN`11E7KVl1^`bqc(;VUKP<jg,9+LdAL\"W)$:if5!.D^AN6G"'%$.S]T\i,37o`QgD8G"a?RK!/GFJ5[(=G2D+R-FERVe%IkfjYGeu+8ku_Hq^<`L]MAOG1\[oE$6)h>k+J5#scFTq<d:mgb[%^g:QmJE(KY7h3ja%b&K7B2oJb&j<)oS>:]"cS7p*,8S)7b&)%WDIXmPVL2`\VCPLC_c=XWK2PbKmW87gaeY#m%V1!['t=f=4Rn6rqI^%k55JOL),X@K]56D^AVY+)Q'"m@(FMI+r-_@8GGcJ#(1+X%r_r7_0'chlbbkH5Uf$&G9eY&">h1*`Z;>]NC[`M?%W5tk\s*-[r$!`IgR=G!%_c-<N3VWS0,6L'G)hYAI2ZZC6nAnT-7^Q[p4R,B%#hd_=Q#&t'SaS,YIU(HJQ8eA^GQ1ggNS:qg&&V64>\D^qH$@kC1==h,Fm_GhZ/>cd+%rs(]?%ho^FLW(ba1P^gL<*cD^,%U2g+j$%(@-e2]mTP2Vt#2KMWe2'ht[+USsfQ`S@*`:i)(9p^%oJ2qZRX1T%tg#lrtpbI6_>S^.mS(d[cP)KZ0sH6ssL0>]nOtd;Kq$.[$48%XXqK[74%uDkC$,Z.Of4,\T>L8O6IB$:WctY\>6KsQEEZ3[IMEpp</^s?/k5gqrP->>JD6>j#M0K8l/T\Q0m+pQT]OD\Ttg2nRFTN%Md7jj`u8X'-2T+EpD.Mu`iiXnfj?N2.BQU"LJ$/%4\P9\dN)*/re":"G36]kVe+B=/ZNWnmRbO578]1A@emo"jVtC,Xojms"l$_0%%A`@i:<H0XA[SK%<6I_^V<"__PI#;PRJR#SZ[Y/5r<^,dV`uW^c<i>'.s!37ajrhX;Z4Ffg31e"QLh)JG;"]8ehZUW+hJfE96N+W%fGM<*T#Pt4e8g?1K0cKHZJc%cD9\L955coYfuNZrLJNCL)bHCmoV[,HACS9`k<G5lP'?d+W#nO)hTJL"A.EhXnP<bqqY6u%qErjp%D@_*jA"XAI+QW=fBQsdsaVV;M'=a1=ljrIkQ,dApLS.:1D_FjT!t^%*AG#WhMGpXps$-HfREI7]qP<-#ilH6T;0?W)k6jM?rEufY%VG$9R\+%GInB7F(qR\5WO/ftmk#?[ee'lHg:lC"qL/k\u`$,Mg(BtT(_D#psoq:;i[2:O6,*!>VIL%&ZC>TFU0V/_]HuBV@!p/r3%W16l]NaXGNRGHRY^:'))i'0kS)NFUXl29Q*BVl;Gp5WQCN[rF+8bLg1l;'WVIOgqVAIA5$+2S5[P9IXgBJOq3"DdHc=<-lG2JP:B%aE>`mVg>Bu)@a!9%C'/XJ)9XVe0k_C.jI-_lgH#W0jQdZbi/F4WEUK.^!TDTD+s*@oBN+=Ykp2H<1cj1l/_^+CK7sulja6uQ^!c7%OjAQb>LfB-T%0j36$IKF%0`=e)$75/0^a70^N.R-DOu&"Vk`\<f(Ed;0Eol[GeRg:Q_4e0)8*._K4P$iW$mN#:OW1G=P=b$:h4HL%a!67Ae`T:VQp!;2L0)?r.Y".lhl=OPpo8U?Ijk:BGCdR0"D%mF!@j-!K.!O]>Mfl[Ih1W_kRd#HH&2>7YXcTXe@uh2;SJ%^$ZN4:%'"aSO=0EXq+$Y,C\6\c:VqScni&;TZ1*$$eYB!9"?3R3.Ij/58UEfRMHOH`4fRVQlVd$H)"Pu\!L`c%RIorNJ*VCk1Ls@S06tTjl%oV[+6DObZcL8.oGo[O^51qM08WI=YSoIA\pISX8e4IN,eEuki_+3gCSV^#%0T%k&@9Q?`:Pi&X-B=K0(0%jL3<3KHrYZ$3dj]3@E%-aNlsR\O;0hOeXOPWd4OpF(e%Z>5B1=)h.Xro_b;rAkr_ku![u9,JF/WN\RhE7KjTGI%_0F)K':1-)JYBO#++E0lc6%0t=k>.6^#%Pp(2LUJn!Of.qF'HIe^jB+UC\:'SV-.U`n+`neA1h1RWt=)U5r]7[,0[j?iP%71.#H_!oBXqiu*l#eAWltXW+FE37gn(Y=BO!am.%]G!.U&.'0r0+NF*&OROiOUhA5RGF:&%OCIMhuZ@L5;m2sAek?7hnmAU*VS?RW8<]$D6<Pe6?E0)ROYf#Dpm)piiq2brrUR8HnbG7%V5pgXk%TMkL%oOq#N7:T&CQPhh_S#DXX?6t%T3Ss,SGk[Eb>6\p59q"re<N+e$P9n<XqnW>-@fP?QX!4/cm!e=]5[k9)8P?I.ZF1%lI3,<#M\_al!T$%!aKbeQgRXI8::2i@pNf_mICE>F.n/!(,'T5GQ\W<E7Uk$2)i=o2,kWRG4R=O*o1rZVu#C*"B43oYDfS''aJKV%]-('4il,1'I<X;%MK*0=<%KE?NX@UoE_(^JE)h7D+"SrKT^77f8&g"6)i[2V2=`lNZP\#?F4?;qHF:O0',6La14u<oE"HJ`PP`0Y%NJXQZ,kFuUe5uRJq(t'nFD@-;RC1S+m.-:`O'"%#e:\kZ41r//#=__(rJmIE%R^4J&7^]_Ur_@IUKj\3d;'qsO-"l.G6;V#Nq<DL%ArS$To5LKA(iimi3?sgB4gW-2:>m%^7,/<sIe[M55Hsm70XRe*j+=@G8ohV(.Nkj"7d'oN<bTmuKfpD)m#aX%=%tDHNYOOS#^GaP%LoL;:[($rd'abtNLB.no#n%Z13.u<+dOm<=$8pI&=6Q?HUC)^rAuS6Cb&GjC'OhGW?_\0FnE&1l05Nh*!NWSG&!#.gR=ULJZG=n)%.IFD<BfHlB$mHVD3.]HRg-L4UFsg[>]=gCq8piOX%D,h%O70X0`_2DI7\`k#LRO497,o77IL;DbL=ftp`B0B\l"uEW[i(Y#-XOFf%-WU]IeYBnAh+9Z0WZoUYbZsf5M`($Cea_'lg"M+b8lc=QST&nFE9:PUe*8JA#G[dTmKp@KM"JE_>XS&4('El)+[HdD8cWoq!leCW%E26:F88CBj'*<nX?KL'JIR@l[XfdeoL@u4a[>(TMN4"E14Ft&62!V<=_^:D([](5d5_*AMJiZb9#g_SQG:KURG#9!Pq1#u]R]F-L%`T<"+jBJD.q#s<*X#oWV8Wj%=e\k\&lCq9+h`JRGGu'E*;uPT8??61\GFY`_L!)M)'uTV[>bn]D%hQK<!ilg)=!7"D46^6@oI-!&%"ogRqs#CSh-5VsfN@]tSdPDEHFE<S1gX@c%DQ"3Jo#>Q@;ANcTB0D^8Xq%AMVt9.hFE(s8?jl-tVc3W22D>SugEA6*I_?VE+G\FO%&r/=!gdE.>;$mN&doYeFUKA?l*"A7Bm/2Vi@dFKpYr_tDHn5S+8)$UB*l>MMUX,gsT9OpZCdFJSAO@eUBqM!qrL\ANl(EP&;7Jh^%#^+)-Sq^.kPXS`aDQUq-%K4rB13Q6Bh=PRGM;mBo&!&'n\<SH+m94Q(UF6FA7aBc*W+6!.i]&>(.;t)73>p'a,WnWDAkscPQa/nm%NQgp4=%T>o,bQCm(AuPbmU+kDPBfsF>=F=AS%6)oF@6A#HcNk\-s1ECYN7g7\qBu=-e$Q7BU0T[d@J!LPA/c.me1rFWVXMII6JTM%T6@-=FOL1R[<5mhpnldqWHKYqP>QPPX3/aFX1HiJnl0D2YpW^]!`+(2ntBB4_Jur'%Vd8UG+.7GlgFC9UZn/#0Xn(J57jpAa45h1%nE%=[19DUX`q+1N??,?M4u#7h:@NCu5Yf'qS_E[Us&`/>GK8qN/mca,<dU=k*+C<+H8;+Pk;1@P3O&?:SW3nqF3e#b)=iF(m#TTZ%q3nk]Q8c:qU/p[!W9u3j4\0.1Z#]?7+_3>Q+QMQo`%8OobG2GrT3k\.rjLH*>-n=_i\aAa^q7KUM?RFP6*-=R9>&i94]r'A(5HJ?%V)]EQl]\\Kbt!]>EPCV@c>s`5l-BnU\lb_n]661!%qe\e_6_NfZKi?B?9?)<i*]l:eYAV0VhN28Y\o\XT?[]+`-)J_2+kN@Vg!3j%iSg#X:ds6][SJ/?401Zknu:03NX+CLO&UaeAIj&AagBi$;AS>Z:L9sLBBbmg[GC/p\gRGBJ#3EsU#ucjb$d?I:BA;6\.<>!N8F'<%fmhn;_J%'<c<rJt1lQ^:[FQ$dg3tj,f%1@sNGPJE5ngO/2:)_scM:iNg,L!7Yi=U&K-dNn`naS<K@in'fMgbk\%W.B_a/L64r]LC%.&JnZh%`%/Hs+Y0VegQ&:9do^dh0"aB$a[Qqbq$ec2B$l&WpjG5l)#I@=NS5b%<6f/>:)3RYSdeqW91h*=[@"nlqhm^i6QK_B8X=%hgckuf_B0l,r>2u2e4m]/\,WZ,at$nJ.[@oI."Q!?o\pDHWrDiC8X:acF0Or0Qhrf3/fbZ#!'^:ER;/7WLdhE"28Tu+/[R+(a6;B%9D)UdhW^W/p#4)FBfN$,pBRIWmbhe?Se%^,b?_8KP#U*A-I!Us9=fl$RR:<8VK]B9Y2ojZ-69NXEiT"fj/h'h'Vh>QW?cN+?ECG_%lKsrQ6ERQ0-HZuf*%c4IE`,O:<\i9/`8tHYCro8"*OZ^.X3KgJDTd#;G.UCXp2nY'6dUG*3,]o^HjSf0!r^2drkZ<Y+p5a]f<?4t%6m/DI":6S&;XkSn/`4md-n!PtoQ<2sN=N#9<43Sn9Os@L-Dnf(FPbSRF+]o[Z_&Fe<I`Yh%gF"BrW#jtm;R2*Jn'ft7^(:_(_;M%%X$m%2.*AChq%;aT'&<<uHD`]N+n*^P^.7GG6$ENd_*mPK@;BV39hRqsN)$teN7%!sp4-e#Ar3QDGLjBBra^#=ka'bURR9<sW1(n!%^iQsqO%d;ZGM#ji8M26m`Kfkb%-H+O,cD/V:pV#G%Xt,Tn!UW?ma<g[[W!i/CSFEYPtF3I<GG*KP=]P/L)%7X8NJ!nLNNAa:(/q8%+q;@p*dmZLnkKD1H/<*m/oTI(iUW9Dq+YP+A9VY,;JsZTQXR=m?o>,^?9T>HQ*9n:dUoMgN,0Wcf+q;q>Gc(Tld*sMNDmniGPEr&%g%h<SM=+ce\)^4ZIQ6DaK*B;e+#F#Y4IN&kq)m<PeYfVIitL)#=.:@)UC?0!`o1uPL?:QYV*d_%4$%XH4<%:[l.NKN@uFZ$DE.!t%8I&Y0cI10EOlh`LDP0%9X-6W+21e]4*N']2Fu,oHq5Whd7\3r!I?jI]\Uf9/Wl(]LcYH%YlAt09kRND<YPRRmUE?*Jrd)9S]&4#M%$VQN*qL]M<$=b\X]nJg,HO.^gZpm1of/M(g3PIQpNf:NA]il8k^3[@W.qmjgGe.KX.\G_eD,Zq0kBJecR6l,F+u!C]m`j>lR')q;%FL6EK?i\2kWs=T<pn/'">q=N),>En;>t<;`Q]mr:R/1i@j<QrfH^<I&9WVAF!+Xa^eXI)%^s6T5=j!?YHJSg`R'*$!i1`<sc;kDV%hT]S$aiZ=SW6gH*?Z+XQIG$L.`$L%2qIk!cJP-P5+aMH\B>[kh3^9%8+:O%t#33hY8=R79.AL=k.YNNBIX1I`G0uknRZ>\=C33Xe%naMC7Met.o2B$KrFo\dk0&'VJ$t^^Njg!ZM\:sS[UG^UAN6PbD\G%s`(9:6BP?#JZj!N>59l#KX2t)C>?FTLDU83$i,XdX.`rVJ<%ge5sI::/<pQ\@CHrRjV`S@:Cl*04>,m[iD/NgnolY0FJuV.<?sOh)9;12a%0lVAnA)MY/Bm^Vt:_f73:Ku7O$JNgn!FRh+tH?qVW%AK5C-G]:f*Lgi/5_]W;sgt.QJ?Us/;ja',+QucPY/&Zk;%QRQg#kBq:-Vg"h)GMoX>,+H_K1Se8)(5!k^m/E_F,rie3^eFm0teOe%,-.IS'AZGUV)B0*7>s\*W?-8X3iQ.SfLr.@Qc!s9*02I)H0Vt5$ujShaJok*+85G@_sBR`'pBMNFfgq#Jc4k6:Yo,V'Cb5iYN3l/%"M!:S:DA&-Q4X>o0>J?9r)&Q3eUoGljMn6UC0.c[T^bDG6ud4Fbr%W:>VaN4>EMLo+[%l*>[^K<ck_JYF>ct5a5c%IV/_l+>*%EG%Af-G`3O&?g2Rj&.-(PG\MF,JtU@Fbm=:\fCb4A)T5q4\B`T#A;TOU/[+iS?WT;E@Bb3/)<UQs61/"QV/E%m[&n7+;S^0fq5Zboi,%=<\0qrX*Ga6OuJ[+5-b@U82C5I:`YO9..\ka-n@Is/nRk+_pj#XBIp\rp5#]EAHnS#:n"F<kIjmkL3CJ`&#TIYG,&ta.?Gi/*der%-'7fkbKgZ8kQoZGeo;!\9m3cdVhe<fGs&NeVPVa*S+JA<l!TdOa9mg5BPq6RbCbiuF%U'c8;s.7ZW`rV)/`gpfsb0%<XJirUG_mp%85J1]TilurlD)MPXI&gKjo$[Q*fYoLe+:]F+t^[8\7Uh*b1sG,i3n1TWH4u&)?.Y3<(keJH[&PX?YW;t+[lVQ<M.M7*_fru/8r44%74I#I<.]HV49a1^4!OrX<m<KCKVormnVh-@;q%j+QCFEbH<sH2]juU7@ZXDN)80@iZ:+M%efFIqPMWoj<nh&fOkahkNO]4l%]She%GBV>]Rnbm$7okO,A;B.)13qc;4&8TG[?^OF9:]UJoWSR0e3E8?R'G50'Jk!1A]SmAYFsX:B6-fX)[k^=OJN/t;PUK_PN42jDPbfb%J#KrIN:)Rg$pa?qKW&_G/!NTJ\.O.a3MTnLe.RsS'=d=N,o;rrk&":18U0jHK]:_W.W;_SgL8XAi`'_["F4a*a4,ptIlDRjYe'Cm%M+T[F*BM8,`N)d:iLcYCr`+dBWjD<(Wfi)d@"KXtX+-b>_s4W+)YL!iXP2&]mVoQq752Dn$l72!^9oFYRlD^AcVF1W1p;pJH`E_q%.<.s4:"-eof=U]3$f.o$@f"Y!:g9KME/N,Og6]jbh<L[1(7U.(kQA(5Kq-FacOmjG_j2hkQt^6A+YXTcQKm\X/Dm(#kJLBrb,X0-%L(L4GSb0rA(DQ[/oqJCoO&sn9Gh6?1*MY59Luq(Y+4I@Z\n.6aR&uLb9084EEY6[e+4Cm>Iak>C^r^1IFiL=,ia^l@md'KW89>s'%]"W,m:88T9=3a<c5Nqi^2@o2(m`9\/*V'6RqNKc)*^\"0R*KI9_l7b`ZdZ`YXPgT+mAnY67\dZ`BMg0>RGh1.g0.1q-L"lYP8P-Q%TfmTX1L)fFRmjsY`6XAX2$cLF<e''X1gDR@Nm5I/`J;t:mU1n%S/<'m0_;WSBr/$]cOF6:NLRgth0;.CIPl&6*,jD"J@hodA>_(Q%M"@AnhQ4W7>JR+:>bSMN-_l"`=8o:0Y/jYe2d+5ZN"hC%AY%ff>B*`fS>c+YVIa:$NEH93MT5#1\NO.K&0`J571!.0ZlP'B_JXQR%/C[f092/AfKjL;*gPjsSfitrSc?9QVDoFqj>@Z^TNJI1ueR`sc/b(15a^sk/N(tNYXjUu>f:+[nI4M,ae3%3Hc7uE">hY"g.^[d(%g96FlKHK&OJO#fRnnk#b^"Vb(5+=-,m8tTB((]$M/B>2%lfR")#q*JLRrFL4\JD:d^Q!oYgXm[iAtIjSIMM2FaC+\?:aSXd&m:.D%W3lFs"E,(!H?o7cBNB&^?#Q>Dam4W)bmE,O!VqJ^QLc0V)W0Vg'14^b$-kkXYgSD?0OGi[q3KC/%Y;<p_-8ptXf1Q/d!pfkoJX$p%mpIf%:.41]kJQ8Z._\Z^C-O/P/AiHJho)))>g^3_3r@Vs>_QKSLs="gXWg\S)hRlurM]P]@2uXP9Z1r%)u"qKU)W"fE,s.4FlUlo%)rI13I/M5&?[mR[f,)0Q^W?k-r,81O)Qg@,ri69r5J>fgSN/@kl)W[#]2-?9/(a_)GH^AjqXS?3n&gW:YJ._krUJ4UQ(-rb\FdgE%mE1Fam@u0j+8s^#ZL9pHS6L2E>a*>9=.7aU(K58K#`ri8'&PhIj.>.arAa^8]_M<grBE?<kXXOpRB+Vcj0VtBRnW8+4fR<Y5Q:A+%h^-`unUn#pXE?usM]^Z:?[m6&5BgErleJW"4a"N>7mj\As2F^kRepGTL%PqmA`OIi2?+fp!][VBk[6H>gmL?Y7;b;2DM]S^_dGB^%40p$AhaalQ3k_Ss>ks5EG4M+Yr>OgYk;Vhb^N*<e0))48Wci.rh\YfiGQ*7[mgn@E(Tm%u^J96)o]u7jMr'MD%rOW0]iMZ,mpA1@%W9iW322d4fn*]WZ0Db@,CQka02^r)*d/?slk2$$Z/6^^_b>,gbq.P9"U;?Z5m[#T\`J]W>^Y\b>HWa&,B:[pKAaf6Rj2""nX\Pea%h>`cl)Lh\)E,tpFP!raUmW?_q+.5QK(2MV#=2)E6IXD!oE7+On]Osmjlhu5"fcP63ON!E,G#*Sj8cEj]mf8]f^::5q?MM8Dh!;2C%(bLQlJ^[GR*e*orDUBT:3$+PXN?luYa-5E+LX28;qS-nbFhVf&(]F<%5FsK3oKd'W$ieqO?]/XsqT<a*cd1(<`J]3&]RK=Q0.m`l%(;4^#E;Q50'_Wh'8md#<oDbBr0.L;@E&rjI\8]jA3\R6]SmHY;MAE>\3M#&VlR\_er-[t`n548[U0Zs]bs-Y*?M(s1s"_8']o\.Q%p@8W`I=Cc,[HNPICH2TKo2sdJltue!WfpTXkHCG/B]$ct^WJ-3fpdHa+<?/3]DEX#)iaI[Hgo5)h'Iu6T1?)2S_obcg2\6_oiiUV%72a:rqXC]Cs8-m.phA]]7sD]>QS/,?HK7.VMk];L^[+$Pa4EO+U36=cG7W-B^\iKX>2c2?HoZSbFO?lTn,GA0McTNeC&R/-o>>e4%YDX2[nFrMurqH*Ai^LoFITEg(fOS7\LZA9(c'C'YQRC(>hgF$*?M)XYp@7V/s7T[UU;&j:oh[8urah5C5@4Q,cB:VGNLet(KDjdu%+9+@8G`p!oDGaM)/pmM8J%1`ZPJ*_1=-bE6ijmP+?[Q(fB`*,TZRc(QD'/*]/:78t][G#bULU^qM17[d1tR4@k^FfootJ(_m6R&d%"6Y`KDV&mURq>N""dapWs87e7rnU.pdHTl[?+&n_Ri=@[YPd,QjZ5!IGi:j1)T%u-l197'?kleP[V1pImRp_ldH58]'L):CUd`%<%^Y@'P_OG'*QopB.`U2f3E`$(1/c3LtdQJK-U/#URaeYMg=FS#uP$<#Hr-;LlRW!(n?d#_KZVgS>Z\jV^ddD+B7I%_\X1s^50>75A%HhZNTAQR3K#Cl*bc.*!@&#QgYFiiID#?Ph#)6Z9R.!IP-h;`/5lL\)hTU"L*r3N#QY*2^FI!GP?V,q0qX/CFu^O"c8rCbD?`Tq[8%lHcA$Y9)I9IcE#pHLg.`Nk(V==SV]UcV@7W/@dikE:q'!c_kmXm*!/,gqD$PoJnloF$I:M^p3&Mh]<5bY*5,dh0:e[HM,=lP?V+S%?i@BTq^urki;+OB^IMW^^&$pYE;X,.eQ4t[NUP-B"ccm$lJ28bg"h2,pNM4c=24FH]q:U3D!uIjEcePPm]0El55b)SV,uFE7jmQL%X5A6\I-*'E=T+-O`V%tYXp,E,p>)p>k1eMUjK@?apAOV&FgYBL3j4eZT)E[/X1GhoVW-aeC^/I4H=-["<;,L9]`DF[X)t^i*0BE!%N2D[#[u;@!Am\r#ft=WjD=R``bWh`Y[i3+E=)PI<2Y#O_14Rd+)qbM)?MA/d/`5VFn&r=uqoYKtSs,#OmX=MQ#rd<[+a!lC*D7Vp%4c5#%66?$Q*),[2=(/eKYP!46hs0)^\IR3TZh@r/7r:J#DC;&Vp<9ftdoitipc7Is^D&=N?MqHX;/d_/]"*(0VH%4h9,C$`GIhV<%T"V'^JfNHI2LaF@Z52h5^&#9B<(?n6;*W*-N;b]2pBR*TYJ61PX1`>(_0<ShMot75aeFk-6M1;i=VPPkd/)MF7=i9RZ$]E-rg,6@%fu*Ub]U79RYLHT)HLU%E7:f/$(.I'*/;l7%ZcoSL#qmr];]B_iq/c"6PB"@`08?q'0,YXVrn$W+T:W,)(S!"d;q@ZD2#g`\eoF'!%s1!6'gj*WLB^U$*'4kFO*rRain[J@ehnEg=h&B_e4]BH`g*Fi8mu=N#4k;DqP>g70*dmLU`8Y*Ds-FK<Y&51[p5NcabMR+(WGa^;%NRS"b"Qfl0C^Kk:EHfG[-s(fuZe)^0T!n@b\#4DfXD2?Co\^LfEo/5<O)Md12'kN`q&oa@@R*$TMRc)o]/%DB"c$0c%+H"N5hPlj%f\;VI:`t83Ak>E^]h0@.OKq_ESpq'@qrjpOjYr3"8'@/"--O,.r\e\B[uT_J9d*<SHi\Y&?<Km-A^=1$^Fe8-hS5i3f'hMZR_Gti%N"o3G_<^\-bh@IE7T)E!Ze1@B.jf>PCAcaf3`T`)EG&n>g##E-N*KpV1.g'q?iSiOo7_RIi9"Yuad;/&fD%B%FuA/-bF+VQ4kCKE%cgU8&l1(+/T#s+AD?'HO@P^iUS71>U1-NUhqn7tDN+28hHu?B2dPo-,G?E)$(].:"RdFZi.I1u-UqQP>HdZ^`-Ah?/q;L#%Ff`=W%h,STd:l%[.7ZJtQMcj#ULUF0tpD;%e)clcCZkYkq('\:Sd^bu$hJ+pTjnt2*<rok(>"c<gk1K'Mn`9k0"4d5)OYP.%07?$qEL.ul%P%7_F.A"c>FL%X?,i>_&T!&q&Y1qW/moF3Epr`#;5L!9tjlc'VkO)(Bp<*p2OCCL,^bT53Ioj"J^bL1'nJc;C.7>i3#109Mi1b$M%q-Kh,i?`3+h(Q_5hYiZ&1*Zb]UpK6n(8A%P/MS.#UDo+qd_!7H$JX)&]S`VP]qpa'K:($pL1o_9fi#:Yg"U+gmitULC`beTl$i)M%ekR#8ld<d5hA%H`^A2rOYC,n?iNl*H#:M/7k]lDCH^jCFAGI_XMfgb(Ad=*<.g(\]p@&">s0(f_\)PE87\>3TJ-6br:tV'rAI`dE%auht%+EZ&&OG"eO]AK7XlrSOq[,nT!Y+aHMVcRVCbL4t5#O0_K7?fpN?nZtPR$ZdS:4n6-A^l"Y$ni-7d-ei2Z:J][9oQ>Qk>T<$%.+(MSfC(C'o/T#WE*P&7?]8\>#Pf/lT=m9uYfWQ?<RAk-rjTE]E_I>&oiucfkK;;aEb#,cIPaQ_o!&9Y\HaRI^;g\-ihL#Hi6#D4%SI]@;<j?`C_PuXj@>&sEE3CH"CADH92Vl)\GO[-r@7hT2aq-#KBd+;HE]fj#@='^@nrZul<7KM_#[P1a_'c.VA6<C'C3u*S(IpV#%co1p8%lD$a_?V!2)TED[CU%;_`CC#_gi#,5Aemk(eC?8W5U\48jZZp%[&`;k!oUd/!+#R%k4L<L5l")4U^+?Fn9@FQP4u5qJ+#a&%n'*\FC?mY3rc#..,stK:=6oW<puI2'^T"C.aVh-;A9DPT7^iW9,_N01=Zes8@rZl`c'R>>6O&#?CC+.Vf'=@u>r#B+V-AVK/XGn!%)Nq5JVCa&tM3+5k#VGfUVg*GWegsNL'(>h@@?LjlQggqhGf+eueYt\+'<:.K_Ae4>c4X@n<iQSp<qj;-kgY?scce^[Pj\/E,^0bG%MYdBWL<'-?U7`Z9"5(^V;6l:Q6)<I`?qT>T;`1B\*Ae!7=XJ>HV?+jNX/>M;\0H>/kHiN!T<@\fFluc==J6#ZMiFM<+''rOnbD5B%ZfUnW%B&fQ?MQV[1.F+spVX#fCKf*/649V/g'O&$3!/$`X+bY-aI[TCbblUMqO*5@CU.L\Ft/AeQl_F!/?M@>3_3:'b5)QLQ%='$%L.8<ZPe:_mdi0n$4h0YQ(NnFab_gR=6(5WYiiR@N<q7f1iiOoe#g?B=0,^XT=dV0?J\0L9nn'qD'0;;Oc%^<!1sVm:8>A._dZ7jK%ngNOWY4nI$?SbfG+WO45LAAYSZn>CG6Aomub>bC&@G&NXe!YpKCtM&0^gK`Pj;_NZ&HT;0f/fU'R%N!V!\IH<BG]Qm#:/$BpM'c5%K1)c"ODGiRgc_-+U:p+1c$HRg=RakWL.enANYs)ZCj_*%\8q?:Y:3"!ZYO[rD.MK^j,>V<#%AB*cK#TI7[ZC5MW;'SK2sps>S^t#%AtdKg#aE^%?Ypjk9HD^=.!kQ3=Dqo$Sq5NR^a;dk>5e$di`WT)l=cT&)ErXk=i\`#JKIV1R_`=VN?i%I()k0YR+2]j1VZCd3q1).%0i6)s<Jm66,g>at\s`8OUL5(]N&,_c"HLpg:ffF@_oE(ImN'3g2;&*PC`9QndY2:].puY9g<`+:-F*"COWIhSIPJ+J\,W=@1eYb>%)R\OnOmMu=(b?(R\UFMWXA0RlWl8At7Ls2BC,$Q<')Q!oicO/S=q&HNZ1%!JESbKK3*iq#].QJXoDWQ8D&DKR:XqQ^I`4RM;N:nN%Vm[(nF_+B3ji]=rD1PLG/R'Dr\_85([_G$uXL]&-2hOiIh-s\J]\Qn0h1Dn,k-!N3pe$`?AG3=\M9fD3Vjdm_YLcu&<uoHJ.T:)X%#d!D2b$J)e[+SY&:eR:kohKsI#K;pDm!i_#cYK[gC[h)Cb`ZkBm(cjr(XoFn21mdKDHsQHCI,WO9[2I>fUkWd`*b,<c,=:o6%kg,%eE[g$V84(;rLgRnQ7-4^`pYu`WZsq@0GeM8@U61`DPrPEep8+E#M:VPnTAa:kHds*X04a*c`Q#%+/*Uj]<6dH:2ZK4LJDTh_%+%K%a3`I%FR:)j.$LRU6eD*1m%A.\(*'T7Y.]H_Fph'n6eC0\(Kc)!o[(!icir6W'D0YZGL3a>$]`_(fA8fKh1AShTkf.<H`JO^Tc7Cp%TS(O8()-Dg[<Kuk4Z9s./gs8.kqIIq\5R$W2qPi(G61d%>rkZY2U]2p]Q!aO[sk<IMN9lC1$hrkqQ1&6FH,q,gBt@eBNlj)Hs>-Q%NNr"qj'"^N@BZWYnOm/V_+stmGs*^7''AuC#&CE[lF&m8oaU5Wlb'r(jD'c`\g)WOoI2Y>4q<ES[8!X'AId9H;U\ku=gMB_"nAu`%UGYkRN`6?PojbDK+JX^ORtAY)1>'P8We7^[m7Wr5f^'AS6B2s$6qT@a5&%s&RbaF\2PHHoXP'`/5Aa1U#\gj*=pu%RVSh2Nm7K<)%cmdaeYcn6\*mE7V-"k+V+1oXr_jup[?KB6U\+`ENQV`^l@Z%j;O#hG)%eo?"ZKcJ`c5mo5SIGrHIP6.O_Be:"=1(K'@q;Za)pPP*%/hg]_<VsRdRU)K]q#1]&JKLSHmq>i'bLI_Ke_HVEg]Z)D8e9Lg0AcPK[:rN_lWQ-7pMX^SI-2u20=tWqZZcA[p@/m\_g5eGL`rip%LV]k=+aWQ4+&/:TUC9&Nik&\O%'WK_Z(Z$/h&#<%g/o1""2DstrkVc?kd4D?XKUmLl=S3L`-_gG/B@&%lf4;urGn/H)@#tc-.L!n%6[VWm`pfVHXk^VA_:`lNh[jGhlX"4:YA&N%NT(dB$p,BHm'AcRUKaeS=?H.()QmGK8Q3qNd,HrGa=u']P(p-H"t+;=m+ZjIAqmZQ%G=[#=K%c8JR2KtI>3s>r(B^N393[`':bFLJ9pGSErR&JD26IQp8jaNX#,G"88(;+P2BTgX]AJn64hir0A,kC-/\KQfAll)W)B2K0%L-uql.]u/q$&f^`$)SF/,F_7NUP(j8VA(fWE%TXm-f&o;mFCI=S)W/!<'@jg=,HrT9@>X@1(Q&_1LZQ;Z%V:%6tA9t2l&TLrd+%:%8Koq,hg[>*7)fY>e5G*W66"W<&Xe2f_9!oWd"YSXa>A%8%dVHi,=Q-Xj89EK[-)OHc@H`o_f3LB\QekN>h'F?`puK8/2u1?G;5E6%SQ@=C3tOc+:ZChue#?l.IC]>nEB6B+ZaB$k6Y^qZ[%WI^^b59f1lsRbQUYX1)^o!jm1p\m=#Y0IlsPMsp=4;ef5'cS'<S#]S\i9s%TFY6;W=mu:Cs1C-]r-KqOTMVZU9d#O9nc0fl%anp9V\Jf]cV.ao>el8LT@J-IX4'BI^f^\/4SiYCTC:&?9]DtXXE2F%fL?(-\=67%EK/id(K<cTG8@+4%p(o<PWIg$h%)I:P^ob*_Z^pY%],KOotsdXZ)4l<FL"Wt=UtjWC,M,cW3@VSagUP6'D_K+Vjb\8]RTHW9kjlK%@Y)JYh<6iDlEK+53)5f(P/^A?*lDupd)e.Aaj<of5?spKF'WiPCp;c!gh"r2n[s*iD4om6nSH99<1'mEg9^g*&iTC,7j=re.3"_l%>*"rJP@KSgGjr<q)n&l/JFCn``EGTtc=t'Rc=lRnd#W"_R7\^bep98,2KYJO,Cpe/dqUA=*]t'[k\4^=<4[*Rj7;JC$k&NMg(/?F%l;5*QeG.1r"X7F#9a;&eeWG0&j\pp]dZ,?ILKBMIKFEUBqG!e2p&3Qc3`9CVBlp.;^Y%TfWA)IO3`9CVDT>"D>iN?+5%Kc;6W6K-%10S#Eh%/1XIpt=;[)1A:Z"^\a@6K*U7F*eoiG/*ulE,$ca"9Z;[JTA:pluN"_T=TiYSljnBn`UE.f9ORE:rb+NrI]tRpd^6JNQ0-%XmtX[A$'L4'B)<*CpQ(=/a?O'"[f,W,)RBBa=p`fa`\o_0E[(=O.';bh<5(a;`JWlo,:J4Vt0aeL,V%mqs*#s*f!Zo%Q6@OUE2Pt%_Q@gYFl24B^ah$U5P_bbj7VB/XfGh.D"!V[G<bN.]_usLmeZ%>Oo.9on)O^uD>;]:mIRsap9L"q2E,s&S!tA_&)e.Q(Vd(5>5/\)%R3PI8032B1)0ea.U\(_"n#UbWrM_'GYhAE`nWQHupaeUtI_3%-F7*+.LRgW]DejOnZJPB(B]nJH>DM%OPCFVo2LY4=b=?d.9(C;D%0@of]$PA)n2S85PDgcgc@AO.ob#2HM>MQ9,1q\n<`bAA,?$>o+=n_$,;mY5j[]Zscp("]A04-VdoWS89[kCGt4__Zln(E0]8%0ST%gMK@Ir(hIq;q"7/KcP?HX+k&.ebCepoBREh]2A;B72:D%p%s39&bY]nHB)!<5H?M,+'UD_p<K9P<JB-B475pc)d9Hr5A;]8Np,_7%^S]K61V?&^)Du6Ca6KbDPXJiZAQ$F';hrnKOS:f\S)ik;*N;%tV*f@(m3]B+U2]S03gWAIl%[,4+\/Ks)g7'CCL(:kH5^g\>iY\G%mX6$tfgs`f%DQ\O1X_'71K$5+D1_ZF](=,58b5A=NTI<K0;**AoT%Bp2dRJ9e8DiY5JZ-p3PB=ANp";RfM,E`'<LcJjP=p#]l`:X%4uRW6e]$P6/+"_KV@1bf4Bm13fL4P;F[HTu+_6OL\hQ)5Lu!/qGoES2Vq+RDf1RLirTSFQeb.@5XR-n!S$"BpDJrpT?8l0GmUDu9%Wnhc>`f7&?SPD+L>q]L$C%E![dg](:gXTn/C#!U;3ob<o@G9OZFo,6=%5hQQ?$3*>G7'D]:"No[::H^q42rW3VQ1,*c&#5qRr0d9%NSI7[g1*"JDS#]$l=kIkeI>p#1?EDb\njs7#(?p8FEQRdoNnHC9fF=R18Sm"iVI+(h/me\nCIBA]'4rlE_WI$Y-++onNO\/*PaQ$%!!`1UNHB8@o.=:$QW.#Sk31ImF>eg*"6AcT9m>9LIp_$IPV+-&1[Y))R]VKcGe.-_*!oC^90jjLoOJFh/38qZd%Jb4p"VC'b*9Jp%Je#95Ko)e6V?@_lP8`]>jgHVg(K*(^Qkhfl>eAc61-phP*mpPR_*u<f;Y0#=+W$WW8*8TD=`"u29mk3V39R<:8NtEWGE')T4m^\!%eFB!>VG=:3NHC]u,hhRJrC(pomFCX@mk2)nZpq#U?#qq]U'QRCpmO:Q@G3BGS+rF6l?sUld9X6BdI2ih39NoiGnmf,@eW'ELJo^#%qYed1ggg*LR&/VBmRj+2=WY)GDJ8Fr0`$G\3cLZp,Oh6Bl+0hNcOB7rCbF`2gg=a/dSb6J64k)CV_Rf[;KB5c[`k)A/lqk+i6]un%2:nB.eWfOUI<mqd@olJ9AVb(l4a?.)-o9B"qQ\>r:hHqL(#A82bp`IddePkJ.KjW'CcMuqGJE/tSaL[')b!_L]pK!/i[=o"m'WD$%_gC'VYYL1c9m8j%)f&gY*,M^)nT0#S!lA>D\]>V%bfmMR0U')K&X>$8:c\0^f<uU_CP+'AkenFATPjG@Rqelt0"t,X1W>o44Lugn%3)oq(Zu.QSIsB\;,4<\PY=?+%\gdL\(U$PL:=(D+<Lk@n1PJa/BUhY4X/8`F'@r^n3*NHLWt(*t,@u+d=)-CWFb`G@:(d8XDn*.P%PtcJXNPU?,`>.Fi><U[LGAWn3'<n/V1qqpd.Q?Gum3h1B;r4>K7.-qbak<o[L:aZCWCq`^3&fX#h=h8#gl6d#?.W$"U&/Qp`nL0"%hTT^)?9:*sR_a`J3AXqL*P._X]Z/Z?k@6Per!<-,+4[eeO*8e`N\cFF*&o/E`gKF`kG+uF0/dpBk$H\4'@Y10@j^]V]M\O[l^F2O%<YP\Tl2Vc0?Q-3^*TC8rhRAM^9O4*S(2nW&HD3`aF_P=m(HEaalA'EWdb)Q]IAp/#HE5fg\FTJo(U!,Q`3adTB@Zbuf<<sOWJRUR%JdCd>CsfVb)2A%D_`P]6r"[,Rk-2f&"1eSD)Ek6m^#i84^jd6p7_4_bHULgkgLCK;4.>F7ZYre-EBRttRVHp`k3-9MlQ1i:Pd`hg%O/q27=,,+rlZm`9X-llKY3357=,m9s7eH<Kmoe*M3o9RJ^"iH*Df2X@GdDPcjM?bBKrmEe04*N3om%i>s4VmYh0hB^mruJkMmom+%OlF4(Y)"+i^OdfFa*4,uNs>Q%1CG"#?QVCqTrRT'[d0FO%N>3&QCFB5cMr:+*euM]dY8QDC[1lAY0Q4VQTm;aiOs1-W*.</S_pGe%XjQRe\$$]7\p47RpU06,[UoJ9f?*+dr%q-d8&NobMoGTIIug8&F?(s,h0Jaim\;QGJDf^`F$Uc%@C>i*UA*WkV[X`mXtJqY>G$<P%[b;>fWTBneo3(ZTGFr/h>PD"-pT<'U=t?WqIGT..i5=0k+5Pe&[1cM_REs0rhcJXK\-_cQ[9MtUmPd8+2P\:TA:J1_q:bLg*Ca;E%rp+UZX%BY["'mcF?*]3[4e_H%Cl&fe7G"e\dNCDQ`b\IjMqRU:aUYo8N.%b\fJGEOdbL!B=Ba67-(s>]8SrWbD&V9`F>9ne=YQL1%jCX^\Oef,Qd]1<h)n;<TI,Msl-"q.$GEn@>-g4/A;P?ZaRd!:;Q)*$1lZ5p=kdqf0QGnS-%9.%Aq5#mq8#k"+=_O:(F.@K^.2cjQ%>c5R4)5rOsLo]q;\$(M-lg;MM;oWl)bh2YO*.9sq#5`Ce>),$XXNblLiNP[.;JUNfCR4/Dp*;$5qOYWV,NHdYG,nDAO*%Pta6bT+%bMan=cilDn+gcB)`AR@I%J*a-c\cLXJEl0)@F7V?MY1q$V#(Xj--XZaI,r29We;6KlV.h49mhm;X5V[^"Z*4!q1jaln34S+W/<bX%-m8:kS<%QK1u/&:G\b&S3B11eft`"O'3r`3hT7TPO&\3g3<s"cQ2[+']5=h5U"4HB,uL\gfkS@2,IRZ&TC:.L.F5P>Ba#K"V=BZG%o9o>+]>GS13YOmB?K9aDAk!VRfI].BeaD.W_(&W"15l\0jlsM#0QT5t`eN?J1D7_(qL-7h"7<sJefeO>bV$]64b0*L+_b[&ldQ$h%;Ou[<$a=CWi*\ZmPV0bS4b3*V_pQ'r]Cl56e9^I6^joBf4NqO\ltB[T?$cPPA)hb6H@30ENNgH<e1SP>4b1gJ*if[Q@7gVbJ21J'%o,1f`jHoF[^QEAr9DQM0rkhD)#,2J)aeaC&DIf6^V0pcKdVb^OIOX0u6B+u)oh5)bmmm@10'-l_+*j<Ano_OYEfs)kA5iRVPr2<o%;)G@3\G91?aj5]f0TEE43o92Sl"m;Tn+@>eS&3iT:&"LD<i7eB]mf@XqMfVU<6`+*m89R':OMe]rT]6Cok^Q]me%Moaj[cOYIu^0%7BRuMf5Fb=f9??JXge/O/;t:iD7nK(I;+u!`Rsq]"VVc`eSgBc5\fc\CL9nDL$CYlqUN#![[h0i*AO*HAS]VD*ogSAp636r:40p*%rE9rl->Ke7h!<Q5(*;]CWg8#1g0NOg.d/VTorDkloW1")I=+uWGou9W^\1MIc9I;8rRqo71S)RSV").POZMpDIPn""\CFC3c4E]h%Y?utmU[V=!i68?dgJ];?YM[^@f;[Qkf7'cmUZ;aMokQ4j(*0@fh<X8$\*@Y3EmE4fp\M9B&1uN`h!<S/CDYmYPj[SDeil^hqtPnN%-eJ/X^5;:NF/.6jc`#Y>"8DZ"oK<Vb[QPN$?GCYV*_nhb`k?gq3rJYY-?6]tXUaL+bp3d/_dW<9[HF$s.Y@3ZoaA$1obPT]O)MBL%NTU-5VSGC`<klcFj6P.32!jjh_-2iGY2ZL*UeZ*:?P(j2\CHX$L*j[eca?BQh((PV]mf?\:'6K8I'6oSXaUqUg;Na^9c33^GctJ0%^=OghldpTdhoPQ^NR`_eOd:XoqMjA@05gFr?^^+a^VNaP][a4MPd=6UokQ5LWbAZBn+CHLFK39D`kL'.Am`KYIdQ=8FhcOHr4$<o%Z-doi)Z7_ame-1'X6s$'Z)\*[p\M9qKX_%nZ?uQ(%7B\m-bn9:]ci\!o#1;!Ko<%hl8N+3F[!ns][s@?#U14"a@TDQn+H!W_b>H]%TA7Q)"AVU6D$,:=hs8ms**Ts6Vq)DPH@NUt4hPX<d@S"NYP>&f/+nls<35:U")SP8[MRe%g(jd*Z8C^M2n*`(Q@86:S)R3q"WF]@%b9J?;Ir^]4Hp/$&dJa=A^*OTQk)<Jh0XpW@nU.^Xs#m98TV#t:rmC-1]kHZnh"pQQhccS#Ha%Sga+s6=X(t@DVosu;B,f7Tf>mWg%T)I?`k2%2/;<D5Xmk1ETNP3(J4ZRk\Sp`hJ2m\UD4agQtg=bpXm%)J!rE]AIj8&FNGJ:_7PeHndo&Oe:p3Puan+ep:QM&hD='e(?%q#1&MS,9rqmO\<!qim^)SDX:54e@#lps.m3>2%4:rdK(krpl\"=5W7Lmn^)Bmpg;!m8krJ]UnGkI(VP-Hp)hiE`4RHNHR3$DF?R9%+$YR)ZbN*(T78J[c7b&6pFi[ub`4=(UN]L>Vrc*e>O-'CHE(=YZ#+FZY+K(6rrnb6PujroH;K>!rM;I0p-4i:Nh?7SLY?#7$27$j%q&D%m]6CaaTFP+\%("a4^L1Eur*88cZ(l='E:N#Re^n_HhOaam^:s2?U;-]<qW#cS([*,m@%0OHriH+MO.fnId80+#S@c9%o&W1p%J+<dArMRCsPPo]ZIE^-2DMk;O+)_le1LdHr&%Am!bs*ul>An^\p@/4/bn%G4pTqo0?`r0i^V'C#meXnh)a!03mn^FMgf5F*g4%o8%rUG46rOom\m`:@YqTKFBf4Q_T/)PD]AN]a4pI9Z#**7:OoG:?p]n^O_Hs53P]tXgP1(/R-UBaN*X5qjh:(PXtF,JO%Q_58Udj7TF%osD2ArtR1qm+>\ks(QrEf<FSm#b:e,c-KUp-t082)D1[Ng]06Zp;NTqSaGK8@><Tr<jl$Frp23'h7k&8/q3\.-i.dbrh6teFFRDT%J*='UcRcRjXiWeUbYR"9f&\!&DglhYLrCHZ2pS).i:/Z2HaRsK&**(B?Bp$:Wk[2+*r#/Q_g$,!D?MFt52KMu;=K@n8>9JKj1RP#%iTE!Wp<hJ,_!JC-HK9<7^[CZ%7MGoLD8aJ1[pjSq*Vu'sj5W5q!H$/-f]-VJE*-dg]m1?s]`PmdW0ZS0jY[Lus%@p/AGOO,)t]C7%ORR_5nY>jOg:aE)J+pDnhOf/R8^b"VDMF0eS_(E7/FVu]X:/iWD";#,ol%BL2q#mIo-_-lhA0Je^%aD`ch?*H:F"Y]Qa*ILjMRUN%G;oO^>`YZQK9+.fg.O#ZY]V<X[TiK<%8iO04kg*Fph&>;^miC^;]jq`[PtJ7nt^2#1]2iS.JGJi6YtX>c-4MC4Q<8K,_<Gjp>*3?%qj3s;.$4DJe(@kNs0VHIIf&p;=W+>ks#7?$H-7"@7a(BlPl,d2Ye=3m)]"K@cc`!+k9\EUdXph8`#1r_\\"D]kkU:>^QtK[!&OX8%Gd@PQMVZ#[q:qaK)IU-g2T?Qfq>C(sF).UShV$S2oX^-m!\<q<Bo!^r-2$cd=ja1'N>B8+CMrt1@m..P\$j$G)Dq$9h#(2mPBHKa%ms!\#&*?p=IQrBJR%O-&QatX:qg3D9cE<`Hbmf#2jOj<9^ckD7LE?D)@J/^Bg'mT%iiO$K=@O3@LI/1%+Qj#c:j:c4+7=M[IY[(t%"(UdO+jYc=#I1MHC\0'3>U<TimoE7S3^L9qVpD'0"?UDVD:pZl16((jpGLFs&_LsH3*9T6(=Dtq]``KA^$*YfdWK(-n6^'?a(6g@%gE3WVA6-6hG84OuOjD@tchm$*HLqbnp0fTgT$c,AS%g0=aHIH`$#n]j@W:&4h-1(n7MPiK)[,(+mMcJ=h2a]18<8Tnin`MDJ`RrB%s5^BX2Eu]+G@H[1jh_Gr>`>fQ]UJ^r7le;00Vk8_V<_`/^HUVK""=B`Vc7T1`>bmsXoI^'L:ug39"HXM$4)>q$D'[n(4L.ha3Rh_%?%YN"]^nGuEW>uP0-&p)m8op_JI28P'(!_AGf#!?PEER4Xr;!DLWmoUhBibdD,#3)bpRsrB>Mt/35D.oJA&_k&4,Yc!)D_`"P@c?%i`7-Kd*HJ#AT_nprmc(oFU'^E^A?gtd!JMC.9c#MF\)JSRp%TUE(Tb9CK'%]X>sjnYbV$Wmu<$oGH7&uZabSjl/dt64jNS/d9@D?%i:?Cupqm-$Q$bp>b)ILH*_WC5\./.cY1iTiG!%u`5#sahkr=Q[lq.03d^IVdm,W*:hOU^B\e@JJ"'j*`PHVfVhNt^tLhM_^X&b\X%'/qI]eFQ$e;u;3VZLNZi&5?4W:;jelINsGIhc2H?IO!d$Nt2[=JVW3.hh]E5T[!N5QQ+qt*9,!&F#V$dit-;RTcN&Yh#MO,8b4J]%/j%`+5+Q2jB9FEu/ioX<Du+>ki`j<<a?.n&p>>mf-UVNN55itrYgj=]guK"&qWG^O>i</"F+-5T9-'VXp?Lo<(&+\+nYs2l#KQDG%KD.c8\GHO"jeP*,L%0qrVnp[q5D,RUQbguiF2;[!s/]Vpi)fFBU\!F,[pZG<hu<gXrq&;IH#si"4?3p%LMn8^]*Nk7&&pg.)30+d%bkp>E(&@IgeZ0ip*ZYD_3B@JDEqCqce^=,!,"FkMM&`)bZ0j943L=qjn,dhHm3-lhSQt#':tU&A0$K0iq:#(O1E!OZ+=/ORA,d42%,&>a@It%J`SJAiIkcJk"2J@)?@U0@9/@;ofq<)?#mBN70D;G!qn(!u\^Gi5+UmKjn5<stT>"rZdq*.jf-i\s4nP9+mrPMB+r'>QR%\,2<cMO_KMojuXoo#nXh=$5p3QZmZ)r#bFN<!2HiZe`4i,Qd"J7Eq0sQQX=l?R7D71&VS89-3*WjpF5XatEV@qeOcEq/_NIKr=kj%5(\dHk3)=A'NE;2g=(HgeG*Z@He(quT'n7PnDN4gm\Ta%AphLBAP[XI't$o;il9*\jhEahANN[GIM>ikBqD"V2s(te<NYVfjE8_O%cdsN^[_@X7%/VOF_e-)i?/N<hlE;/!2o"GbJ)>Tun)kW4r%crMGO6VPo()>M5M!AmWOu^jp\Cc&.cN.;`r5*=j6,VdKjZ#8^J+Yg%]^g@Xs5ff4AE0fGK5g")+f_%+nR&fJAq7'6EXkTi^;&s$!HsIIDg&A#lSd><f_:]q?\e6B[s1*o%hhH*8*0oWmasaOe^!JSh-,ht%8\P<*@%Y[cZF=URl\@EY?[;V9cc&sI2n/Ip+p(7(Z&3U3>o+=(]d]rOo%c@N&ErQ=2>YquqZeYH00"m*chm:66>3ZEYd.Q&:\OL(%n&O#:$PtJbhRp1umlfHeY4A1PHqN.A5>,MErV^rSTCJ&7p\3S@IKOWW5On[l^DQG.^[_8OrP.)CGu:BD79\cYld,V/3&uJ/rm02G%Ia5+AgmD6ZG<_*prVZ5%kPXE%jiRP9h"l0kkOdiujm;Znom8>Mn)#eHXcqdP?VY2f*M%Z)*L3eugf[1hUdX,s;Aa07mrJ1"hUUeu%%_)Ft%W2[-K$MrQg:IO)LZ^H$&;[hV[r;sES6PscmgJp$6T,=K-YfF98Aj&^DOm;9r7PD%e:1DRTV5SXr]&UqgNpJqmMQVBQX5G'%)8El>q#!*sO[$L*B@ZoB?F([o7&5J5O,/7lL0&bA`N3X"X&tuu?+tZP+tG1iXur:[3UT&5&$NM<%C90B6?,kr#Bi;AB^aDWa9aYe%!JjglI_Ca2Ct9ffYOq=$&p)([>fWJPCeO]0Io"Dk=Csa$4G-9,p/^tOoqaP.1@l1%"8eOBq"rV799-4o:@`^6b+m_eZI&PZ"h/EP%Ld)0UFF/)Rm#0Kp6D>CdnpaL-2nn.TJ#MiN88uI?6MHBkmqt`$nkjj_pO3Xio%+<A^IO^&C`)Kq5KHt%'7%a!m^mr7:KS-@?oobC%Xr2M3Z@UL0$+U,ndsb_iaV2"g:S4_P7Bj%H2K+&YMTGuD*VAup>(?2(4*\7g=%$/Z<89dsgFSua='04`/>1c>W^WHU)pfe*RGlK:%MB8^T7qKu:8$kdTieYbgMJ$M*]5r2djQ4tk0=U)FNNaM:3&<uoNG,5/qi=NSRCj">[9NL$,d3sjUuL&54*n<[A:Ls.`CKn(bN<1#%@TH#i+-YI@rP\'Qd35;Kq;5O9%`)BHrV7Ab!Dj/4IdUF8nGBi=rp+&F1qkYJ^OK,?%j0ua-aORFCd('E>Hks-e#\b8AKu#u+TEN5%c1e[$jaL"pb:s[Rji8e+NUJKfIiZQ&?XLIBEm+mVnm=O6S+Q:EcF)cg2tGR9=!$aVI^Dq_&g?-;;3s'#2"QGZ.3RklZ[4IMG:-b1%rn">ADnjsbH[U,:o%MYeBrhZceBKQ"?,-/_a8G2LK<7@n:S4"=h7Bpkc9M?7q;K0?^"[2kVu>mh\SQX1M+p'BOA7"knB(j?#$:.9%7P5S`mpVmNiKE\lS5WpHk3&,*_gDh5Ii2e\?>(+(f9adapq+.mLRWm7Hu$rgf9?9R'%Hh+79tn[HrjNIr:e7DmjiYfquc$Pen`]Z%/!WdL*<4Jp=ed5`)@3BNDlm5Z6[DX"b^BGqn`.d<STo#Nr\p0p>F)]es%8?s/E8n0Y!'Y%!Bg5EmOr[Q82:eYJ_.gUcf9fpG$3^`%SQ,6(/*0SF>!K-DS#aEM&f'^'Q!5oM^Y"qEnR$o'jbIc%9KCdRH)(\^dT=c#5EG.BT,4Lpr&K(LefIb]S%Ef^g)?:.#>aFml*$ZC%&F06V5K!p:9QC<&_$FM9Utj7n`FSdd,6nm/am@4=a0-)B--H][4M/V;moNQ*j7M3KQN6Vb>u4MnH7YejGMcXe1n21aA,_"5kL3cX%apj@h`mTt!,oN!.E9g"3DZ0+jEDsAiamKNW&,d?9/Na:6CK.8hknHiR1@i(,9IsBfkWn%AGup$"?>YK&=(9h60BrV0B(rol3pFrL%RX*p`GpD;iDFA%T\@maqYK,OV77o-j"jY@oL5*tiI;3063T*b[].4PJmhb**2@KSbO4GKDm&:;W!CCtc@OrAU6\Y@_dTae3W<omQ%0OQH(o]pEicRe#p)eM(68=qL?L2\CSm;9NrEhE1G5.=2mR\o^t_emN3#:JFf_#mha:9ZfNHPGqHX7*r7[P>IfY.i6+_Bdu6=5V&J%AK:0:X7(]"c`t0UY.bEoAUNsEX7%i#On[>TpE:Jf>jnSkmfOCGhtu['qm^%j=PchThe-P0'(;a!mj#NAdCgVOSZQF9#U?eg8=!Y2%QjWSj=b#JNDgpp>$j6l;#3mLA)<df^Mj3<]ib4%b&]?qg3'-ibUQWF3]5o(HYCuPl.LLT_B<V?AJ(^T+Y^]]WYFqk37)ekP\l22M%S_&oE<mV5(Gf:/SO^0^P__bC+>Ze.BA/<-LNN)`Egl%hW0QM0U09q2"\ei:<\_4V>-9U_1=t6HX"mZ@AkkS3\`h6KHI>n!6f#?<j%&s78K!?k(f@.<UDs4s9W@9.D5N^%C\r$'%J1CFQpo&Aa$cYn%NrNpS8oq.lT_uDk[T8@4FJ!'OKr&69Aj.r&:da\1c!STc,=i+fa%j5ntnc^BJ_lhA[X\,JD%r9)\X_t3o!]ag_68,ZN`[q;hid^,RiZSuK_b\X"Lk%XFbAVd=71,Jhb'@#Ais53jKR6NLZrg80u0sc[^%Glj2n`Pq2ldsI-_5'ae(RhX9:k->$fhjK;`B\rVnoAbDta1hiN5I5\0dHnIUdHhYdo(btB7Qm</l"h-u]dti-g!c?WQb=Tk3PnZ/%kHb09779otAQC!#a`WH%81")uZ$EP:Q"cC!=Op,$2%'DT.KH9X/C=Z05*A>7:q\tm-,,Z;OsGU^76RISGUhsCO]JekUj>n$_a&3;%B;q=o9CpgRhhlbP;.Krh16n;@U0`tOrCBR;NBE14U<>+Z&9uNo/6@OM8sSOSAM-G-O??F/pmQc4+t=1&`[O#[?<<t+Ih\;j!(R6V%(-+Y>?=)(6<8LQQ2L(.eq4jDG)c5*92(gNKV+G,mW;p-W4I#LqX;`9RM*kjf6>JulJON2m#ZEcYbYn_F7?lh'R4:"G,\<tEF%)VJ%'U5#*8^f05KQ%D.2BCse(_J\7!4/[,+_EZAnAG_fcjM'EL)NZR-a#E`D\WQ[MPPb/R&(boH3h/!pJbjG&3Q5rKb=J**#_-O^LfC-%:`?6",aXlmLs5V"-ir+m9h:/5M@joD0@hjq<FXN[VG)'16C]E[fh`qfZQFlZ$T8P`WMLa-,jqLC:=&"DX9$=u!+cJR&5dk/V*tE'%(5A!rl2b@Cj9Wj`SKXfY0g/IT$)57`dElobYelJW9Jjj8H4@WP,eB>3Yrr4r1Y\KjKmYB=`FUM(Z<32q1W64jRK4$G5dCfDYqS.t%(jgOmq:3<.k+=\8KS;21\71(I$]5:[5\+j>KH!0URdiWQ'^N'CL[p+P6(ZPY'JKU0Jlig_/#gMt20(#u,P@2c<2PI[F9DsUg'%3Q%A=aTKN:\&X9_a_^+[l&SMtnNMNteg`^aq2k6g:2&$Y$_G0qTE!M'@Z2cO4?Ne;Oj8N/Cr)!\+X)0$F\'.EWib(]qu]@TWY(;NQ>-%8JD6SS2lsl2A.r!Eoo,E9IU<GjFodk-'"fe#,[9``)A2U93d^7n01::1(7*G=W3HAfe[*&LaA&^G5s?>PGDZ@>bOOU"eO7im&:K'%V+`X1Qj1H2TsK8s*>89K<joPiEh^V4CUr+;'taa@X,-$cL&72Ms%2c=K4fI$Ls!%T@tC\D/GC%m-=p.H+p_:;R"-J2:8//0*^s8m%cK)24JAc/$,"/bhJ`RHT)#DZmIXQkq-#t4B+TPD-3=(G!/4GB2#%.If4"!o[>D-`nJZdP%@^M/?*$B-Lj9k'\'MO`-r*"r1@&U-U%7)MKDj6$jAj/=4<=2mWH;2HM(Ld>+^C<s_<T&fZGQ>7dDB;do?R7ApT5_5qtKEmElEtW[o):@5RGueaunmWp]7gWf&$q2k6Mc&C^%/u:h?VLYI(@mXk*,lq^k,efpYXj('2#sMs/C!7gLPQ6m0;JI,+Q%mLp)Dk3ZGRX6/qdkoubS`rLY^QTc_eH$Y&7Z!17)*>RBo4l)%?R_-$$kF]t8]cdQ]\,qX&u?k!<\g!#4GB\l!XAV#R$YXf65^>"N8^)n4ujJ&!.YbQ1*]1'WQ*7Q8YH\.`Qj:f&[7i=P=@X-N]#":%N>O#tXjHu$;Cd=Gg%YS5<W[I`J9eS6j;ER!3)l=_0d9^9aMV[<R)S9R`%5;mLgn>(@iT2NScX`XJ?4]d43JW<c9^)rV:Q\<NR/q.%elSBi^8*%\()U4(YOLI-Z_deh[jPhk1Lcma!=`5J5ZF7El7kAiB,)>+hm7uLW2@M03)VWV4-)]i^t@Cr=JWG1b?^IF+"0#Ab/98X%OKlPH5m&B*[?1CmU9[>e[;FK>"[?VuT"4P%r/W*\6_u*V)JYd@#rCA)jY/au.>jK8&Uqd%TKlr&&2V)F:]so-$o<.Q'VN2PD]4Ea%1)`<8@20Zi&'-hPY;D+Aa"iBeOqh;T_H;Q>'W>7=.mR;>`5p\<6B%:j'g].$5Vb&iPpm%t1I7t$5tI0e*&;*</e7u**g>%A0I$Ta%#lB_mI2crlM=4SgTAH>G76l321@&Q_&>4-[5&^LBSar3U%hY15KkC5p[`f_M1aDo17O-P4E&eop/Hfb+mZ3(pBDaBn2r.42"O&k,%!S]?Folujd@qIWB/:nc2^!,_8j0<<O6tnqD@\ceWc:XN<N>NKNC]HiIC96Q(S<:.02JSC$`-<%/@+7>MUe%A(iUp_A;n8<-'#gf\%%*V6s9gU?2V4/3q`rVnZTPXd&Z](K4;R6#o;rCf/["FLJU@43JC`jj%^rnGNJ-ZU#iJ\aL%0G05"cRg+X[/+_TFrI1+b128J10Fs%3>eDJ-(XAZ9T>/7cAii*"_(64?igOE*)(\"GY?/[K:q8$$K^.I#eEh$Sc\3l6"nBU$oIq5UYJ+42!pfslljANbaIrOb_Z!E8U2]g%fm&,ggaQ2a"6$G[L(9A%%`G`*7@?o)"p[]@RQjkfJIkg\7AjRrX:PSg6*N'GV+G+(_<@L:OOIhA$8#gJ8KjkrUo0Os(+tjhg]6nM%lX0o$<^_gOe)3t&!KiibK2%9*D>6<>fO2ck=i"#DZ!bXO!MdKo1.C>;#o!o3.$)GA2**_%[&A%dd#pL\N_q8Po@@T(.Esih6]@nD%P<jAt&N<I[dT.6]7!U,\+_'b"&c4"'K\p8G0cn&^0FB^R1m63dGt(OR8g:Jd:*n*g&e"nQ0d'tbfHpmETYQF6&[Aki`WENHP=,UQ%`*,ubDHs(r:BOHn(qlXfq,CcjF;deL<.LSDc7t,!A$Fp=.6+9CIO[*">`_>k&8hNo'Ztp#/n2+0$eR"!X%Niu>RIc.8g4@'b)hbd%-<7uj=qk?XZEta*P(Nk<b<Qd'#-E^r:M(\iK@[,gU*qrk1rc:%F%3)EE>$D\pff?r;$MO13)p$G=U%>l;?VS"2b8p#_DqD31]cV]%P'"hk6Uq>G]Gkj$7R4U/E\MI0bVo#g%*QbPoRf5Xd7qH'S[=b.c#k.d@/?:SU.@UA'P.h`bX-5-#DoOhQPP,030qRWh$,<cEl63p%REDEMFHe:1&-R^8b1Fj%,IU*V:(fnbp@!:agC.CXbgG#9#/2S>JL#HenXde!K.tk8CUdDaFD58fQBVD?H^NpY&ct@=/3(3DVFbmF%d0<Wbj=&4!V3-%K&dr;'c.(c)Q7T.gOU@fH'YGMD`?@R4R7XRA>]M[:auoFW?j4K8-H^Bd5`2qqP+r&DK@fNN)B_nq3Z:!sL.:51%L;HN5,&gdg)?rs(l\I:?Ef4%r!DAca1!>G0@-Q)n=-<qL2bPp7:RMN7@AKYqC8">C.*1h%)B^U,OJN=]?n=Vr9,@b"+Q@pJ$a<A6%m9/-Cd%g+^m3/'t*DE]ELKP73K0,BB;\1KcJ.>2hE#MD7M.M'"6AU'J]q"+lQH9,ROjO+4^H*m!.H,G9EjR"]UaW#F;F8Ga'r%CT%CeEf!#3KC23$SHs8c,tZ59&%t=]>V'>\\:T4?kpQF3*tbcd)\UlhO\7Mj5%*Sb+&u-4s'`XH.crA+')u&NA.-<:E1/4Ie@0+H!1a%HkB&U2"f->5g[Obc6U2a3\I6bW?>/pAg;Y_!&3306V*W`V=Z&7<abjZqN;+MER(__"*dViK@l=Y_cTFWJ':!;IS/1RFL/E)UgKSb%,<ZCH+6aAKrCD]:lO8)mHT0AkN-?NFpA$XmLTMBW!R?Po+Ql+<&A+#(aGVnF/gPi%Gh9KJ+TZ3!f@5_("js]i&40ZRd@3P@@19C)%Sgkk$WJ-j<5].=IF<UaOYuF48;C+&"1>;Ve!7?(\8KUhm`BGOW7(/VNo*1BA,VY`r;AfV"XXJq3'YlY&>/PZ;j+WjZgsF7&Bd)UR%Uc;<t*(q#X'I%X/_jV"#KSi7J`1<9>&EcHmpOo2@;/4TJP"RH+60>(E;RPX0)KY@8$A]Af*p/t`!FdG)NG\V%56:4@!mLGe6*(SD%DsSeok2E9f8q^$[pW>&.RK3&e4S-*E5]@^QN3Ea^,=9\nroM"7,MA8,\^1O1L2:P__g_[-MU7Xk=<@&bd=h]oM,&ctT7EX[M?l6Z%&td$SL34X?Os&^f(D<[LU_oeH+d!C9FJR$4"@-F$*Uc<%EG/WK!#b.bhLu)(UD)nZK;^5W9^Ee)Fb[!cI7UP&gku46*i'$##BE'5%$13t-JBCet04<9CjCF8-lX>NZ%(S/Ij[L4,L]Xk)#)GmgWe&-7c6<Ik9gN5,'17N7M\K4[+^g`S0u"MnPe'Q(TEbIZ'gP[rSFHko%I'$A8Q[hYA9`/rH"j@pF9OpHLPg@53=>)JK]VZ)MPa5*28l?rLJ\r*%!AP>rA;K/,#>5La99=Hr=V4SK5;LHAhhtK+d82TT/M8c!%)?Zf:k/cR<=NXJJ3f(YI"@<DN(5,(TM2UD98dS1/YbWJ4c!^l0N^LqVWPjPK+bsP+U``U+Kjc!uZql1?\\NQbq`'"rBqmEa_N\>&%M#b0n3Ok4\/*"41GoDLDaXMmphQ;<IdYH[h^9J+1^LnZ$TZ,5KK.*C<.a7p#NZA0'YWQduL*pB;2325X3CYJW-A@s:,lNk5^bU]Y%!AH<f@sZ=M3#`1AV!)o'o*7Gpl%3"FO\0ssg2K5Z,(5u*&Rf@,1Z8[]X/HpFaagGV!M7.Ka='fY'liPuWtn@RXRbhbkA<r4!lC)l%+SI#\@'k7>rCDHhmj?g\!#\c_6IZ>T7\p_@Ba&2lQ%ep#$:\a$M5O7hHq>bZF&Zm"K/G!W*snXe1<[?Q$,ObH8VJ7SJsaih^lO/!%YX0LArC@$I'+l(5YN6="QeEJBA7"dQJ2T;7`&PGq@$YS/Rg&M>7YCs-Kf8(Pc@ra,0QC7VIVd*s6T.P3!)i*DaS+a"-J@'>"?-qn%8^<H1CL'1@\mUK')l^'KX)MAjr'iM)02b'JET(<^M\IjgI,*B*M=_JN:*`Li<B;NW_T?Rg*0PFf+_4loHR79.=R?U>94I?Y!e.\]%^fh&W#u[!R\f-dArZNMrnk9Go'kW_L6/"(I@kf27Tiq9eS/2Kr_'6^@OiUI#kJU]&@loH=#B2lf!4N:]S]*M?k^>u4ZVI<I'QL:0%0:4&I=qVB&iQTr8.a8&C1,Eqt94I^/k$:^P+u*8.A:YP2?mXtSXV2!Aqi!rhq2>MUO@/:UKl])Q'58L;a_.tU,X>6J$STpoKH'/a%erOnt3Btr@::QF(:<ni@o6,SY?(>jY*=d`AkqM5S8;Bq&%6C!e5LSqYn0?a!qDVoHTL;;u6bFf2@G[:A0^D@M886NSj@bq%&>9G<%''?#8OT\LB?7ef!lQL8BXdEO"mnrAAK'G(]$<`u?@Z$$en0K6fXE?(a8I,Ra74Og!#d:"B&C.)$auY_?P4`*Pg?66i'jhG_'knhR%c!ng^LAkSsaSA`f6TW84."Sm(%F(_)\7iTb"H)a^8Rin_I1qs@^+mgR=\Fjd[h/"&g@qDU:E_k6(P+N5g-RQu@;Y7oF!j,h97.!9%m\C(jGL?rgS..C\iD2dL2D'PT!5Kd/bt3)U>T;nFCRQH%U^W!bYOsSH:oE6SB-QUOgQ6,$Hq2i:e;/;fCh/#.PLIsNK]Gc=Mm4FV%@C)#<!W_7C"F62VA5eK=S'3$2Su.&t#u>+`c,l?,bYG,miCt3r)p7$,bTPQ$C%"b7J0N1lHBVYf3c>Y:q?ab<j@t43d]+#YA5En/%R1?l$_q95a>t6=hr0n=NrhP<oLN5X'$"[+e6!&rfe#A"'1Sc]O*l_lqV,Cu)A'UMt;_HK>$$U!55([fuhU!t9hk$20*Q`9_>FAC'%:]R@+Qa4=j'kS6$`Xc0801#)cLG/gp$UZX-gLS':5F/3X=o0(>Lmt`!9enZ'Y&a58XYH.Y;!K&/Ii@lU3K"'XUPF*Vp+S*<mn9$f%Gb?/g+XH9RpBoU14K#1sUT]d5+RrJXjDeVf#0'P?+,\>m37%k[96Kp>.Q9[S@Zns'9-?`nKlO"QVJ)U&ej;nK$O-hAVR6Q!6@KJm%$nO3tg(pNr[gZPQ.LuZ9=W^]e\u-[m,D/YnpiC"[)AZ/3aZ0Wc'd=n>2.ci].R.>ZR^(n?.k*8[C>OZO#k2B5fN*8/]1If'%KU(a%Ad4udB954(\<Jt6W%:sqV4Dm(hJ%T;]KUp>at%H(Tdl]^4f94+8:psr@a9`I6VGB1RQ^mG%h;c.FX8_AR^3a,U%6]S0F5?K8sk6R%Oc]KuN/rem=d891;e/6^W&Qd;&Y]]P&:N]G$(k_>dX*&?L5V3OAgY[g3*0-*,YctCLJ/T"(D_\ab`bFCN$>Sk6C)p)R%-iO_.s3e%4T/2&#EAmP/hGR>))/ksbZ<jMNCaE,'*H0mR3aW0p#TFLKHd.O0QsT=WZZi;kg[C-!-(Gigti1W.2,kO%?Qr,hQ^%4UohfGANU,t%\&W)@iB5C"RB823"b[(6;hu&4+cs`'QJ?)3mU3a!C'InU^<C,o9?X[=Dl?YeT&&\a/dA9[,aK,qADds=_?"it?;D4_:-pCtUmu!k%@C+510uaH1Ar<ENAk<Qj_2qH]5p7p9,Lgk6OES'obo$P73Zq/I!m8T6_^Y74IeUkk<i/+mK7b&D$SrL'^fm-?HG=-jS!XYGnL_3i%bQOh?r+9$TjekqqCs6Q@*5`;!L@[\b)EQu#Zn+O:aNji;MC_Qb)PI_CeFKTQK_[JDh`ch8P'U4;Q:Jelr7L380I+AAB"Fc>Cfkpg%@XU:*THT#!+;b`BdQ*9=V-o.sqjWgZLR>B%J&DX/Ng=;;&i2BGK;:s;1#Na*6Qti+Em$"'4pF__?r]`7=N;<lae/N_FqLT&h;lqR%MA"W'@lL9`)AOriU_Zd?:lUJh&2JY?F'+(I7NU/Jg^ZT66G'LYU*("K`)+)(BGTm/b?SjD7(m[c$0/OMD>Ju/,K"\lQis)j,N93(%@R_*'E<jC'+rIp@']eDD(epuI#d@>r"E@@V!lR01,1A<D4Fqk)&46bPPGK**o(=E`g_\5TOYbo<a#.r*>H(N+3*F./!]:,DTWR^*%V?"HjIeRK@*\YiGZ]Dq'RMjeVpnrO2)(gOI%\DZEfCBn_`$6\j(Jn]qcTn.9)19_CpR$Wl>%W.9b+[L4C--6uTRo>SO^=VbIrTc5%cd/f$9,eiENfX4156#bN#`jiY>@fW6eS#k<!V%I'Of)eH3m")`V(eMn+mrTC%qjX0f<C@SaS&BdKgHBk"oL0p"XH\kU<;aC8*C+O%+GLCb:^X5RL]dLBLLF%%6;m$P2*?iG0#9_!o/e=dmMOj(%65WV=?uMEd0bWjTWgpR"Ual=,nM\`B8Qt1\:LZr7"hhM(++m+h=:@K%66ImpB*8cj0;^:hIk$$O9B-Q!ka:<?&5=6$ms1:/:a>dK@AGHpeO@tjLu3gn]S"QnP7lL1Sq6qZc3d`(,$J?RE5`.J8&>Yo/qMdo%i$G:=)2&iA!e<!?;Zpcnc3$6EiTF[KZmCZHHn0dqRT+a\jUkpeGlge',pcOkRi-tEo9(08eWgaKmm.=2I*Oq[AR,]nTYVL"Vc1Tm%5o>%]@Y]5$dkk!T:*"">KpCS4"iSV0,#[s8N0aU`!6=-Ng!*JmU^q!u>#Kp:j49Wd5Z.coY0<7e+P-m7UKKC':dTKT4d0m6!bgFg%F3"MK'*QRp4HZFP<&p=1!Z"]h3^@cg`VB^iPRW^*M$R<fp3hng0s*e[.`G`SW*fUjm6W#,^bmkM?IR9+)a":,,plbgr>CKg/29n`%>!/L/+X1A`mX^+$7@uMb;uqV:g,FioJiKI4@Vd5Yb0.%Q2e@+=^)@,a!J8<B&-m5=c*Amf@.F`hA2ZeZ#WrU_7BacuW0:CR5ReK@%<*7A(*WAe&!&=qud30Tge0*lRVEClmS9s9-Otk?NnSEdu5Y;;WdM,=T+_YF9>CfJ@.2_J*$0a28D+S;(Lib4ua#<<5?o\Djq[s*.%99dYXYtOR*b?6QPP#CX'X2r_0CeRnM$fVR,4dQl(VZMIi(VWE+<Kc@9YmP'7Jt+aC_(:6_fGNg1_Es&fh&Q3hR+s#Q&iRri`-sAu%:q3-_K[@s)Hal7cO(Bg$ToX86\A@`N_1*5q*l<0ZXPmD].;Y5m7O"1k5F!o]C//YL$8$Ws7XQbraHfQYU6'2IHUpV7rB3JHLl./:%+UAXFRfRaZ7OutSUkM3b6"N0p#*kL,m8MC!SH^;f3;t*22[I]/Y]HI?8I3RG^;it;O[BD]2f!:M2gA2?Hbai_!^o'TURPl@0MR+n%^4_n+.lB8UCR0)+G!gI6l<adik58>ZWI.<BF2Wmei4&Mca_ge_QI7nm&dBN='OT)TM!U=YHBFnnROo:Sm51%ogDQ:cQ"9rP1fH>6%6XpeB8l\,A#*u29'a+Y^$<@t:/4)nK9Ca[DU#LF3m?jN-]SiU2XSFCJ.J+AW!eT\N>`0OMKCFU*^R%l%]9j=tPKJ0/\!VQY(:)`?%j9&-VR3eJiO"-jGE0&2lP*j%0C99D'0.HR!q5n]<hHt_k@%)&eQ`u.NL14N<Rs'>+Pj&`$VTg?GJ^tm<F-TSsc^Rc]AtBaW(3#C2%j\lK?*N70@P^#>=Gn?Z::Efkj%,)Oi7#,Pgeo6Q]5"UAMMY,b;NN<e6&6cT#Q?,C5WIu"&`$m7!aUj&L8SmE7,G?77J1./A]Xt,m%-rsdG8/)jf8/5AhMmc[3c2MPEQ=q"Qe%2t5#^-OHPpb/<7hUK@nN;>@bBV;``_Sm'3^_!@dh!#:UjU!&i#ZcTm;^*YDEqR>@X^eg%+s8mGPL4^cU[nHo`abgQ'HJ;U%j43E9jIi'bX^]k+SUWnC]$KXcMk'6Tq@_CJ6/M9adI;kW[6k]E>2tH,KuepRSF*>SoRNmUYO$j%l=u)q<7(Mu8ULS17:bs4'u2dH4$.!NB^8+nB*/5aJ6QZMBkTA\Pb;N'SLY(.VXjde)E\a3laaM!i%QJml+g2M+BOt'HVtU8\Y0m#%JeM1YJN4c^rjE@l!b:bd0FCfgKk3Y%SPH3#1S,.2+<UfnYY"9aC_^j=E#EU;KO=fqDGP7DV]h"Z,Q^MN$&OHbk#dUs0_*U-\Yg.o%>Y(KAL6*Dq`-^D`<nQjeQEI>^#A1;G![4q14=fq9ceL"!#tY[E""OR\#Uk$*!?P]JJ9W\9@XVWHmmea!mgPlNUio9'+`/SFe%&'P%P)uS;SB3HPecdZr6*5l.hT<p)(.e#P6B:.a`D[gU7!T&(Zu=MHfo'DI'4PT*'G\DFBQ9Y:(qSHNSDmJ56BOOj0r@s)\k,mZ!W[Z(%3V,>dErr(-7<AKQcI&'hAN,QIPU&<;Pr>6b&tM)a2=Himno`:R3ToK%%^,0NZ3-=G6n&]h#'E\GiO_YVUD2pC@`=jo30c]cki8&^%bV2J'?]+e16ol$rJV'(>`02+>9lqPN.ID^#<WaD;l(fXiL4EYleM+m3Br6MC=''QMfknem+B+r$E@N+<F_0`ik2.j(p3.=S8J"3Y%%4Eg#U=N54P^!l<"8F=@4RB8*k%tYDW4Js&'oQ0K8e[?a$,*lA'+B$sau:Mn"q;E&PU2<b\6Bi/4Raf._[r!b)5*r!&5@"'r18V)%>4Nme2HKeNPhS\m.n,+<k,jI(`9J$UV]H)#$kletA'3#gS/&Pe'>bqSn:<=>&F-Q^/WFH;/,]CW2gKm1's>((MTXi4DcS*2&#&Ip%<7DLe=<3r@!@^0_-9+j*o,;DQ5/Q<Bko?,/!M"a`Y6d(D#7?^+:pq89@X*S8#6dL8J$`r0:Gn7g3#Ed[/;-JjKSA?2M@/1YX=V:a%gqG--G,@B.CbWnWd"P(@ig<U5Q:%PJksIH@j<HYpAC[.kf*69nf@e-:)5S4O;]Ef/UKA-EP8"Lh&@-T?4k_u9i<&9Y9,;Qn+KnpM%#kEZ'"QAK/m@NqRM7AI'GVP7-7-t6*+U#Rl3s>qc0W^%3$c50mjNJgG+<nRu9+(5:0gCB:G6j%-0OSE(hb2&9J@[JbBa$R`680*i%2a_M2K[1>Hga7d$1sZNp(6O$gP2f#VKGC$%U3&:DrKo,`LXO!AlaccfmhA3jqi,$7blNAJHnKB"U$</F#57eURXSbk0ePT/#UW9u%Z9B)9@m$rb4V3F0kPQ"udf=t/&"'EFfOA+*-/"kl.SoHS=Iap$(B_KUCf6G+6"_nQ3Ljh>^obol`W9Nq0.A:[&/(GW[K&meQD"J6%0c-D(VkB'G9]\g\3'%M`L\:plBnUX:S4&LEkXqP='d-)a6Eaou%U>K&;]5^)hgL/lbqLDDJ0_]O?^W)RT]KZX69+)UHU&e9r"Ok(%TVA)1Bd@eF'1A99T*ff$(b63>2R?s^IB$&`mHcQD&-%Gf4Hj4U8X=_9cq$nmVf3t.,k0^sO9s'/?/"2O/oZbZ=ir*oYgU]kRoe8$%p_-I)V7eqn,uPX-K?\>q"k=`hf>niE4=(BVAHhr:M_jKU_Ms,>`Tns7fB=ZoOMERl'p=7@&^&P'lpCpaOP%R^TT0aob!X9]9Z;\(%1!?a7@`LeL_YFf->ta-i?r!Hd;n8_\2j2(/pn#m&Bcs_?*0`DolgUK'"`9JccUA+kj'Y\lQWP)F+Nu"k=cn3q+`+.+=:Rf(&k45`%_:`dtB?AR=K)eRl"e.T!b1%;M`0:HmV5hZ6V2,>U:JFt=["jK#Z^=;dI46FiN_87]JNjuIMFu9PYEWWt.T._c7r1mRf\2QLM^_M-%\Ki>W:C0DK&KrliKEZL-C`b5pZ,.+g7=Llu@W`gBC[$h(MIF?#-RDE$oW*fa$I/5%Lq#-;A88p()aH*l),O"(P[Q<I`?^L5e-C=6%QSMbIA[cq&AnsLMgf$tB\WM+ijnFk9FV_^SY[Gsm9(-=Pbgq=-)O2L^7<0/r;bjru"H=6+7)pA.kuben>6?-\#T[@`Z$aOE%Vl5]%%]m46W6!*W/C>Yt&*[blP#0>Q#"+MT"!t9&?Vi%jDFjll+Q1bC`/G->o'AVCV!RDU$TYnuM&^R,BDVtX8\#O9`@=[i**+Z/hZ]K?%&k7T[5ZAUDcfh6hOcB^EpGf2:M%@eJXUeV+%![2$KYi)%5TMR-MWYA1d3-qMMSL)2P5%qU:>JhtpP\g/1AIFJ^B[nU/Hn4$/1Zho%Ku9u9*nrFi`/b7^LH`t6R)7f8[Dl]bKor7\:/kG@kIH-VG82]V0Ml6PLaeJq3uToo=RQUjU;4<Pp5BeVDD)oW8HiL;637u1<iBub%j<?s5(.XD;B9"Qu[8eh!dHQidAke=QZ/&G_E?+NB'feJkQfO=FLJ,'t0T46>Ki*d@aV45,9_oX-Bk/UR.l`>'c`]ns-"5/;$Qs,k%dVB8dEL#PN-C;jFQIC4L'SV`%QCp$L%GD5Sh4&q:aGQ2b-GIQ3#`_;$n'H&O+[HoF7(B/A(6S;Z_$:/Jh^^8l]31DbR&h?ZB7fen%f(]F>A?,tm#mD]mo0#MR08i2&#/EX.aJo4Gli"c1==88i(fdCW'l@[g92uVc\!#)/#;(Q_,73<SN<E[r"ceQS!Z-/7,AN=%+UL7b%WoSIV%S=J4@XcVIS_+XhIlIK2%mhc!B<X)l^hh<q#=T8_P'RTA`;31P-34H\Bpio?P"+fkd?-%S)t1#gbLm5E0aWAD[c",E#1'EW%@71St5S,*HG^ptG3Zs;C1JTX^XC@)P3lR-p*Tm:JaO2@UhM/`_ii4E*!?FPLGsja1nc[*RaWH8CGkC3-JoTiYHV;qg<7tn,bR%O!%Kb.h[P*>WOi`-:r(.q+FBi/IG!3LlOX:f&CWInj+Ua1[=N=1iBA4GWBCWQfIMiT;[l30c4;H\^<PK.];Fg)J-e,l3a%,]+sY#q\m%*98cH?VD+j;J<#Qkfc6"0/+.uO]Q64qU%rr7U_Z++Jko;UlH't$"7)>K\39#4etoABh45[k'CE$Z_aPZeAY@D\]0\@&LtP^Y`/.Z%9)*anAmo=EVF=.aAos;BqW'o1J[,.lnL<N!.<Hc0J:t/*O<>1+0_N(P4CJ>Ff\;-'kWM&Z&d;B/;,De^m#\!i.4/sZ@DXdM!Ln]C%e7IR\`9KJo]UmCS_F4`>.kWi-KA*n1X9kaQ,=u!L'.'Kf.WH9rA]C"BE-*%e6l@:!!0Un5T<Yf2ASgC9)3r&?K]t/Me-'`n%ADN9%$S4%d7?Epuk<j"UZZi^@f,%S.#(LP$i$:ui_$PlXQSBSt=]paR^k%)pV.Z4Sd;lcnY?3qpk%*0Rm`TI;`oa-\,k3D0\H)jbH^*)m%:A0Dq4Z,$'mk/U2Nj>n/VN#X_s']_()__Zc91pU4:+8G`807"h5*^XQ7biRb*<C_Tp8Nnl_\.h@ilR*=Nm9'^4>AVCP\,lRG13,u%%;f8hgEJ(Xap!G5&7L94?n42*RNh,F/ppu.X-lcHJYRQ!+h;%0b_[W)?GJQef&pH48E'A.4>]ZFJ7pIXJar7=9.RO"_Vc(XP>YA(%j11I9)rs%T,p9ZW'nf#EP*)+>&ms[<ZC"KaB`WP+\W#a=_Wp@5+[:P1HQ\iJ;g?0Aog(9a#Nn#\>#ZaT85Au$g,TC*Wtn2Ll'.<%%O6oE*+WLN8=h-(h8lp)lgbUk10k:<?N?p#01Ln6e*0CV26mXU5i[>k`C"[QhM8eF4:jYnmel;TiMT<K:"D8Q<19NK#7L^JF@jbY:%O!S2$I"C0D>)J8%Sp[E&"Vhd?/%fCZM8J(4_I=fH=WUsnSU\n"6l8*_Xd0+'#uf35L#a\R/Jm\_3_>>WMLR,9>_*tG*O&EB7[hiO%b!GC4h.p<t@rm^M$QG)p5pQ/h=29'B>bVB[h/AY'&hoZr&hqUCM6XT*:X$UcZc#P.CF5@b*d[n/M!r9/lma1TPa*D"(O-Wu8`M`r%ar\0#r[GIUI\`,G\)d9UmP+CA&eLYFG`Mr48<;,:.g!/2C)s`&>s"!+LoYk;Ygh79#;D)P$%>OHMahY36]V-0Pn"!\Tr`@@D[$am%>s^)^H^L]C&$me'dkTMZ`cr3AJas+*#Y8fBS2Bam!lo\b!KBVUm=p#7mMYZ?##QY56]-X8]A8NbdRhdk*",m6i2MrFhY]n^SPpXq%#K>Bi24Bb[nAP9@Q9q69gZ$1M8=Y"M@&O0''#c(O4['n);i$3SRH\.ujaM#(SAYhhbfo;?[QnG:hV0EGB`VOPg=LudF3&Ec%M5]D%R2Lq<T-,WkAGN,9]$N^$Pcu_i^B\OUR@KOr\;AtlKZs)<k[gWh=Xu9k>r+CpD_En0N3ueQKTXOf+I4+:-Q03mUJ^,-Ote"aQ.g3O%W;pq$'**,3-1#dnd35b``bm:3<oAML`-PR0\!)J?DK8:#(*#;uf&IKOb:4D<HS.pq77kFXTA)gp*&P+-g!,7JEtN5360BYPc-F!S%i\ik'QR%ldD'<f'm;$aK$X</b4B-iNhV=hT0!'l<kk#G+3K;"^S=5!*'#qa]0mYi154:7p@[]XS\[=Bt+s8FI`-Y5n=kn:JAb#(s%RbIuhq:o<PVd^T7Z6OWun_`rF@V6u11irJaQ$o5>)%ZZ`6*]OQVe:oW#@LeT%^LZD&-W<2(?FhU7QZkh3#NTYg-_qVW?@>F<5nP1%plqO`[%QBd_T9<ki*,(gP]5-)KCI!I8Qg>]a]9ZN37/?XOg31gU@1BT:Su3Qdo6MOkE3%T_NG]F:Z)K_#6=gV#J<VM#``"Xfsa4,%)aMc\(QciFrWEWJo'Bco.45GC7Y'r)pl=O?YfDeB%Wc5=;Aj7&^kMVtGIFO=;ZK'p7B9EU8T#Od+dfK)Njo^3:^F=,3D1^rSs2p:%cnQf7TYr2(6V5GJ8KjOqM%WNBs-+/mMai;S=&F_0_bd*B9`Rar`7MaOA.oqMX"&uTd<t836^G1B:(Enb"Kt5)Y>+&Jd5F#NG0`Hn%L\[d*o9>VTmn6bK3@0?S*:-,G)mGR3;ii<nXC,m$3]Te9mB(Q;I.8'11,&_LhLm#ik#RlT5tDk1npj@Rk/.dLBj^uh=r;tc?L"R;%S01LnC&LtLh2rFl1f@pqB&\0*W..=T%5,DTR*kCK5WISQj2QJo%L<A)T#UGmpJGn6n\K>X!(h$Q.KorS9K.@Qi$?Jb)G2`a,R!F3%!shBBKD/VHRt+?s>^R'_neF&3Z(C"0/"EH<Z,81FJ0\0t@'('Cf=OYfmiD^_hc3'UH@FaOA?44]Wfcc'I?7g3h1D'40p6uUi=t<?%Kr.)A@HBp-T2O5gF!GB_o0n+(oAO;1<nblMB.i&I$4nj%%bfV:`*C4%4?S.]4B.)47Am-gBMY^*`*;9/Rb^%1i!nPE;34"oPDn0p%`cD'KO"t;apSK0'M3&-&1YF`P$Dq<\b=DD[eIZ0l3G>3SQOobA$NRVk@-C"8&iVqUeOFc(LP-G-KEZ9[!Hj+JIk"lm_MPZhX@4c_%S8)8/U0)C,X\553;p]tlE$_8K;k`\`TSTmB$MtAp]S)hsGX-Jm&S4(K5X7/+jrVhS=@OTH!%B-.QrnhA-hMF+ar?5<W#BABKH`)[%$gfROo'I3CP_:^JER-$t1t`Mg@:m2X)g$d'Z,G5K6.d,">#WmGAD^mtKHliU*aU0qnAVBr3L6Vr4TW<UKYt)MFd"7jRo*.*J^ohh%]6"C"<X10-Z2k[ZEeS*XB-uY;b#RE^<;8$f)ClAZB*9Wf(0t@68kdcbFI"c4TN/%38or*o1Lb2\KA&LX6%3W0.T-eN/[3M<5EpE8%+nsDP@Majo0Q-XL9:-p7!!l@7gCdlqG^>NO"35Xc2Vkur73a'd@HqAU.a#U3&6'.UHW]lZN$iVO\5Cc/Up,Q6B7P1oidRU>D';:a%FHVu?b"2gsOpbEKn"j(-]3,FGcWn-'9jN"&3ne>!#AV7G_88)@*>mnWRR=!*0[_mq"JQTr:b0^%)=pM!+cKkg!Mi!'JQ>\2-8$Nu%6_W.)Eb4<NdX/'Q>eZV/#3+'V4=WGU?9oi9m>@dN8fl;XO)4*66t9shEDBdBr1:2OnJMh,Y`XYh+T.DIH^%K)kIt9.?\rE)+m)E]%h[rZY`m.NkU":\;.\@ns!XK+ubQi/]WmSlK>CB8G$@npEl>D6]0T^L;kLHIggrB:$.b27"OktbdJ?98Q>!I^FGjVRVD%@@>_F]ZR%_AU!gU#K)TBCMX3&o5Kk5KiO>O&&FU!^sA7;UWZN30Z9UYa?1j<to23A,V2_SB,6W;jnqb[-9$0NEtUs0K]\IqZO\KU"G;6,nC!4%b!IpE^tJ^_7g8k.?)Y;/!r>W$@k67--,#00UPONj!0UMb3LGk@H5N%i0Qq40pR#k=#X*"Xp]sW8Pcc9:<M0[2d<#BOZan\@B:%U\%hD1f3pK^:C%!&0VT78@R8R8V^m@Mb&cT9HE\o9!Or>^o=(8RfI`0jDT="Wc.C@:bV+YI&H]MPEA9-cFQgi(et4=JtF.J]A`06"V%%!X??8E"G)CWACU5TL66=6lKEHcLEX`<,0*fS'Ml^f4ujD>]#9A"dVn!g\d\ML@?O+b?jt&Rksf-%^+%LRc<sl4Rad@<?BhL)jqg_%_*imgVW+N>2&.gajB#HQbaJeTA:16$!0`1j5*RT\JDN"a10<'8M!Hr60UlLjj/Jk027U*!gD#ZF`a_hV7*WVc7*S(MS\`jcQLo#^%/[lqZg$*eE6d-5pb;0p4,,,8qS!`<8;S&.68(=3*"7Mls&[a`uKDK.I/W]*`HQQ+;L9O"fL`2f](oo?bL4,bLN2T;R7FXH<8(9ZF%7asQ=`af'YX\b2+cu>>N0VSdCZq[&-!.k\?X[GD`cK;UT>1Ni#@pcTTV'$iZX@,o%*>,DbkfURdjHBD5'4-2<*=+W<SC=pFP/UhK%<uHjm$MNf`877qATGr@kXuam?/j.>UMJ;)<2'E7qp@TVgVa93TU-5NLS'S[7KM@i0<ae*"cAmrX\M&Zu+1HG(@cM/Dio=_oB&dS*%JP-8R4>#S4TL:mOVF9OL2P(+9`,Qs\Bs?7<k*nB8@dtf).bL_6/##VjjZYe&2A"eEWA'nJGU$\*FqM*:(57^3AKp5QXfaeW,++r'%`m[6-*QU*:@6>"16#CFnib<[S^LuS@E1/GRcH"CSYjg?!j)>nnR)(f@5+DgT_`B=_:;^#jM]eMo+:bpoU'-!uB`_[PBb'2kBb&)/%)#l#lf>-)(GpT7r@$rhI1%8Zqb$)Im&htmgD5,!e\6HZ(E&^bP.Rd[!VCR"@a@a,-n1VMr]>UV#Mk/)UJrsHU+oWP8id&i4/,PG9%3$1;BUHo]$?H>NtJ[cTe`5R']NWurq`4TQ>UL@A3.H>)\e[g`F0KT#%R/lIh+/Wj5`p#7jEt7-gBEN!HhT_^!apLKJVZKgo>TEjE%&q.T8R^XK'n'4YDq]"IF;9/*Q4MA@#R/_.*!shaP:ijQaK'I+8gj&/C5UmE8E3Q_^\/ff,Gu=bS?[.<N>%m^GN1&-nkfLZ/l$*5f%LsSEC.m7Df4'6]$k<J%uVi/h[#^7E,(jSMM#)./lr3TkFAad,2HO_YM6mVkhO"+s";&mMAI?'2u83I+4K*.X]Vc*O9BrSuG?UC)F%]kjjIiEpOn_l5Cn5Us[6a)nW%*Lq5>K@lW3s.7SK.#!POZ5V&@05YG5$T]8QfsJ-hGb_uFQ+!bs@@_AR_+V"q:*hI2W_ruX+m7Vg%U9GN<+M4APf,%s]YDQ&t$6;qhoIfjN$,A9eb&<M:ih(c/B"42LFV"od"ImL]p+VM:!%AV=jVA7?A#QZT;jg9DnO&^%"WT%)*6Tn;%;2S\sqdcp9(+Vp=L;8s;^2OX,ei%;_)\tt[\5t?F$1ae4!=VW;&Q4phI2X4b6WXR(+?&N;*7[jk9.\De.Kb>]Xuk)=@*IQa5bb#g%$s)CW.([:SV0/-+.fn2P,q"c;hFJ/sV^`&kT;mhp=aLV6)\&(Yf">WC#\IXnT-$rh#0SC_!=C$`;T^)]/9&XXWW5W4$)9kQ!Pk"f%4&d(>dTflXLFR)N3)MB#pmO;-%-Edbm,=TKK4u]qbVA&8XR0eoiKCCJnBPuUE3d:$[5)gs5G+pVb*;>QA]MFD$_^g6]7@CIPm*,m%<!Gn0EQ"Aj1:'hFGGI"\)r=n[_'mN6PeuhjT,LdCN<&O]@JO_[fk7<fLd<(ADRb_$^G3'6msb+Iqra=FiW#L>YH?&#/3H)nHLgY)%n=LdMk;-Hu%faksm,?9_E(9]GDtB=KYNI8LQbUgAAhUmsqB(6T=7"rT$enI#B)Y#/j6Q=~>%AI9_PrivateDataEnd