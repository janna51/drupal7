%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Southern Connecticut Club logo 2011 v1-o.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Cicia Lee
%%CreationDate: 3/16/11
%%BoundingBox: 0 0 268 132
%%HiResBoundingBox: 0 0 267.8208 131.0811
%%CropBox: 0 0 267.8208 131.0811
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 64 8%%BeginData: 7652 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD17FF532F0D7E7E2F0D5A7E2F0D842F2F597E072F2F5A2F2FA8A9%2F2F0D5AFD04FF532F0D2FA8FFFFFF7E2F0D2F2F54077EFFFF592F2F2F53%FF532F0D53A8FFFFFF7E2F0D2F2F54077E5A2F0D2F84FF5A2F0DA9FD2FFF%2F2953FF53292FFF067EFF2F29FFFF2F067EFFFF077EFF7E062FAFFD05FF%060D7EFD05FF53292FFFFF5A2FFF59297EFF7E0DA9FF060D7EFD05FF5329%2FFFFF5A2FFF2F292FFFFFA806A8FD30FFA9062FFFFF072F2F54FFFF07A9%FFFF2F297EFFFFA984FF840D2FFD06FF2F06A9FD05FF7E065AFFFFA9A9FF%5A067EFFFF7EFFFF0D06AFFD05FF7E065AFFFFA8A9FFFF070DA8FF2F7EFD%32FF2F067EFF5A060DA8FF532FFFFFFF53067EFF7E7EFFFFA8062FA8FD05%FF07077EFD05FF53072FFFA87EFFFF5307065AA8FFFFFF060784FD05FF53%072FFF847EFFFFFF59065A7E2FA8FD32FF7E2F2FFFA80D07FFFF2F7EFFFF%FF2F0D075A077EFFFF840D2FFD06FF2F06A9FD05FF7E06FD042FFFFFFF2F%2F072F84FFFF2F07AFFD05FF7E06FD042FFFFFFFA80D072F7EFD34FF0707%7EA906075AA807FD04FF530659A85A59FFFFA8062FFD06FF07077EFD05FF%530729A95A53FD04FF530D060DA8FF0707A8FD05FF53072FA95953FD04FF%2F2907FD35FF7E065A2F2F072F2F7EFD04FF2F2F7EFFA9FFFFFF7E0D2FFD%06FF2F07A8FD05FF7E0653FFFFA8FFA9FFFFFF7E2F077EFF2F07A9FD05FF%7E065AFFFFA8FD04FF7E065AFD35FFA92F062FFF2F060DA8FD04FF53067E%FFFFFF5AA9A8062FFFFFFF7E59FF07077EFFFFFF2FFF53292FFFFFFF595A%29FFFFFF2F077EFF060DA8FFFFFF2FFF532953FFFFFF537EFFFF7E072FFD%36FF53295AFF7E2F53FD04FFA9072F2F847E5A0DFF532F077E7E7E077EA8%2F06537E842F2FA95A060D5AA95A0D7E2F2FFF840D2FFF7E2F06547E842F%53A95A060D7EA9590DA8FFFF54062FA8FD35FFA92FFFFFFF2FA9FD04FF53%5A535A535A2F847E53537E535A2F5AA85A537E535A53537E7E537E535A53%5A53FF7E532F5353FFA859537E535A53537E7E537E535A535453FFFF7E53%7E535AFDFCFFFDA0FFA8AFFFFFA8FFFFFFA8FFA9FFA8FFA8FD05FFA9A9AF%FFA8FFA9FD05FFA8FFFFFFA8FFFFFFA8FFAFFFA8FFA8FFA8FFA9FFA8FFAF%FFA8FFA8FFA8FFA8FD05FFA8FFAFFFFFFFA9A9A8FFFFA9A8FD05FFA9FFA8%FFFFFFA8FFA9FFA8FFFFFFA8A9A9FFA8FFA9A9A8FFA9FFFFA9A8FFA8FFAF%FFA8FFA8FFA8FFA92F7E2F845953A9FF5353FF7E53A82F7E53FFFFFFA853%59537EFF2F5A5984FFFF2F5A5AFF537E2F7EFF5A2FFF7E5A537E2F7E2F7E%2FFF7E2FA87E2F7E5AA92F5A53FF5A2FA9AF2FA9FFFF5A5A7E53A87E535A%2FFF7E2FA8FF2F842F5AFF5A59842F7E53FF7E535A5A537E2F5A537E2FA9%FF5A535A597E2FFF845A537E2F7E2F065AFFFFA85A2FFFFF5A2FFF7E7EFF%0D7E2F7EFFA92F59FF590DFF2F59A87EFF59077EFF532FFFFF06A8532FFF%A953FFA80DA8FF7E2FA8A806FF592FA8A8A80D7E0D7EA8062FA95AA8FF7E%0784FFA87E06FFFF2F2FA9062FA85AA953067E84847E2FA8847E0D84FFA8%A8FF2F59FF7E07A8532FFFFFA97E2FFFFF53A9A82F7EA92FA8FFFFFF5354%FFFF5354FFA95AFF075A0DA9FFFF07A9FFAF07A92F542FFFFFFF2F0D7E54%53FFFF2F5A7E2FFFA97EFFFF0DA9FFA9077E532FFF7E0754A8FF072F2FFF%7E842F2F5AFFFF7E07FFFFFF592FFFFF532FA8A82F2F59FF5A84075AA8A9%0D2F7EA90DFD05FF2F7EFFA907A90D7EFFFFFFA82FFFFF7EFFFF2F84FF06%7EFFFFA85A2FFFA85A2FFF7E7EFF0DA8532FFFA90D53FF7E0DFF2F59FFAF%FF7EFF532F532FFFFF06A8592FFFA859FFA82FA8FF7E2FFFA906FF7E2FFF%A9A82F530DA9847EFF072FFFFF7E07A8FFA85A06FFFF2F2FA87EFF062FFF%5AFF7E06A87E2FFFA9590DA8FFA8A9FF2F59FFA80DA8532FFFFFA97E0DFF%FF53FFFF2F7EFFA92F7E537E532F5A5A842F595AA8A9075A2FA8FFFF7E2F%7E537EFF0D5AFFFFFF7E535A7EFF2F7E535AFFFF2F5A53AFFF84077EFF7E%07AF7E0D7E5A0D7E537E07A853545353FFA92FFFFFFF5A537E5AA85A2F7E%2FFF595AFFA92FA92FA9FF5A7E7E077E53A959547E53A8AF0D5AFF840784%FF54597E53FF2F5A53A9FFA9075AFFFFFF7EA9FFFFA8A9A8FFA8A9A8FFA8%FFA8FD05FFA8A9A8FFA8FFA8FD04FFA9A8FFFFFFA8A9FD04FF84FFFFFFA8%FFA8FFA8FFA8FFA8AFA8FFA8FFA8FFA8FFA8AFA8FD07FFA8A8A8FFFFA984%FFFFFFA8FFFFFFA8AFA8FFFFFFA8FFA8AFFFFFA8A9A8FFA8FFA8FFA8FFA8%FFFFA9A8FFFFFF84A9FFFFA8FFA8FDFCFFFDA4FF84597E5A7E597E5A7E59%7E5A7E59A8FFFF7E7E5A7E597E5A7E597E5A7E597E5A7E597E5A7E597E5A%7E597E5A7E597E59A8FFFF7E7E597E5A7E597E5A7E597E597EA8FD3EFF2F%2F070D062F070D062F070D062F2FFFFF2F062F062F070D062F070D062F07%0D062F070D062F070D062F070D062F072953FFA82F062F070D062F070D06%2F072F06FD3FFF5A072F0607060D060D060D062F2F5AFFFF532F0707060D%060D060D0607060D070D060D070D060D060D060D0607062F077EFFAF2F2F%060D060D060D0607062F072FA9FD42FF7E53060D070D0653FD08FF7E2F06%0D070D062F7EFFAFFFFFFFA9FFA95A060D070D070D2FFD08FFA9070D070D%060D59A9FD48FF2F060D06072FFD09FF8407060D060753FD0AFF2F060D06%0707FD09FFAF0D060D060759FD4AFFA92F070D072FFD0AFF592F070D067E%FD0AFF2F2F070D07A9FD09FF84070D070D2FFD4CFF5307060D067EFD0AFF%060D06072FFD09FFA80D060D0653FD0AFF2F07060D06A9FD4DFF070D070D%07FD0AFF7E060D070D7EFD08FF5A070D060DA8FD09FF7E0D070D065AFD4E%FF7E060D060759FD09FFAF2F060D062FFD07FFA9060D06072FFD0AFF2F06%0D0607A8FD4FFF2F070D072FFD0AFF5A2F070D07A9FD06FF532F070D07AF%FD09FFA9070D070D53FD50FF590D060D067EFD0AFF070D06072FFD05FFA8%0D060D0653FD0AFF2F07060D06A9FD51FF070D070D07FD0AFF7E060D070D%7EFD04FF5A070D060DA8FD09FF7E0D070D065AFD52FF7E060D060759FD09%FFA92F060D062FFFFFFFA9060D06072FFD0AFF2F060D0607A8FD53FF2F07%0D072FFD0AFF5A2F070D06A9FFFF532F070D07FD0AFFA9060D070D53FD54%FF590D060D067EFD0AFF070D06072FFFA80D060D065AFD0AFF2F07060D07%A9FD55FF070D070D07FD0AFF7E060D070D7E7E070D062FA9FD09FF7E0D07%0D065AFD56FF7E060D060759FD09FFAF2F060D062F060D060753FD0AFF2F%060D060DA8FD57FF2F070D072FFD0AFF7E2F070D070D070D07FD0AFFA806%0D070D53FD58FF7E0D060D067EFD0AFF070D060D060D065AFD0AFF2F0706%0D07A9FD59FF2F0D070D07FD0AFF7E060D070D062FA9FD09FF7E0D070D06%5AFD5AFF7E060D060753FD0AFF2F060D060753FD0AFF2F060D060DA8FD5B%FF2F070D072FFD0AFF2F2F070D06A9FD09FFA8060D070D53FD5CFF7E0D06%0D067EFD08FF8407060D06072FFD09FF2F07060D06A9FD5DFF2F0D070D07%FD08FF5A070D070D070D7EFD07FF7E0D070D067EFD5EFF7E060D060753FD%06FFA8060D0607060D062FFD07FF2F060D060DA8FD5FFF2F070D072FFD06%FF2F2F070D070D070D0684FD05FFA8060D070D59FD60FF7E0D060D067EFD%04FF8407060D065A2F0D060707FD05FF2F07060D07FD62FF2F0D070D07FD%04FF5A070D062FFFA8060D070D7EFFFFFF7E0D070D067EFD62FF7E060D06%0753FFFFA8060D060753FFFF2F060D062FFFFFFF2F060D060DA8FD63FF54%070D072FFFFF2F2F070D07FFFFFF7E2F070D0684FF84060D070D59FD64FF%7E0D060D067EA807060D065AFD04FF2F0D060729FF2F07060D07FD66FF2F%0D070D0753070D062FAFFD04FF84060D070D2F0D070D067EFD66FF7E060D%0607060D060753FD06FF2F060D0607060D060DA8FD67FF54070D070D070D%0DFD07FF7E2F070D070D070D5AFD68FF7E0D060D060D067EFD08FF2F0D06%0D060D07FD6AFF2F0D070D062FFD09FF84060D070D067EFD6AFF84060D06%0759FD0AFF2F060D062FA8FD6BFF5A070D0DFD0BFF7E2F070D5AFD6CFF7E%0D067EFD0CFF2F2907FD6EFF535AFD0DFFA92F84FDB6FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: 
%%DocumentCustomColors: (PANTONE 280 C)
%%CMYKCustomColor: 1 0.7200 0 0.1800 (PANTONE 280 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic CMYK</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2011-03-16T10:32:42-04:00</xmp:CreateDate>
         <xmp:ModifyDate>2011-03-16T10:32:42-04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2011-03-16T10:32:42-04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>128</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAgAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYqhNW0rT&#xA;9W06fTtQi9ezuV4zRcmXkAQftIVYbjsclCZibHNEogii+a/Kel2nk/8AOq48r68rXWnXyy2FpLMz&#xA;09O9SkLbEVLq3pN4Enwze5pHLp+OOxG/y/FumxDw85hLcHl+PsQOr21l+Wv5p31vqttLqGhS21y1&#xA;jCzyVaG6hdY1DchWjVhYntU5OBOfCDHaVj7PxbCR8DMeKzGtvx9jKL/yVZeTfydnudQhefzb5iWK&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:1A05FEE70820681188C6AF33B70074B5</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:1A05FEE70820681188C6AF33B70074B5</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:1905FEE70820681188C6AF33B70074B5</stRef:instanceID>
            <stRef:documentID>xmp.did:1905FEE70820681188C6AF33B70074B5</stRef:documentID>
            <stRef:originalDocumentID>uuid:E3B705F59336E0118987E9F32614B546</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:20:43-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:20:57-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:10-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:28-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:53-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:25:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:17-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:45-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:008011740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EC80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:14-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ED80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:22-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EE80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EF80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F080265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:30-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F180265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:41-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F280265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F380265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:10-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F480265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F580265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F680265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:30:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1405FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1505FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:26-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1605FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:34-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1705FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1805FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:11-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1905FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:33-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1A05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>uuid:E3B705F59336E0118987E9F32614B546</xmpMM:OriginalDocumentID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>8.500000</stDim:w>
            <stDim:h>11.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>PANTONE 280 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Red</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Yellow</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Green</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Cyan</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Blue</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Magenta</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=90 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>14.999998</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=90 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=80 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>80.000000</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=35 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>35.000004</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=5 M=0 Y=90 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>5.000001</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>19.999998</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=90 M=30 Y=95 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>90.000000</xmpG:cyan>
                           <xmpG:magenta>30.000002</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>30.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=75 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=10 Y=45 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>80.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>45.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=70 M=15 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>70.000000</xmpG:cyan>
                           <xmpG:magenta>14.999998</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=95 Y=5 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>5.000001</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=25 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>25.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=100 Y=35 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>35.000004</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=100 Y=50 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=95 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>19.999998</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=25 Y=40 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>25.000000</xmpG:magenta>
                           <xmpG:yellow>39.999996</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=45 Y=50 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>45.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>5.000001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=50 Y=60 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>60.000004</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=55 M=60 Y=65 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>55.000000</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>39.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=40 Y=65 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>39.999996</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=30 M=50 Y=75 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>30.000002</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=60 Y=80 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=65 Y=90 K=35</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>65.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>35.000004</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=70 Y=80 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>70.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 282 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>68.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>53.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 280 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>72.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>18.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grayscale</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=100</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>255</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=90</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>229</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=80</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>203</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=70</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>178</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=60</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>152</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=50</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>127</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=40</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>101</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=30</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>76</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=20</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>50</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=10</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>25</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=5</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>12</xmpG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -131.081 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 131.081 li
267.821 131.081 li
267.821 0 li
cp
clp
[1 0 0 1 0 0 ]ct
78.2153 1.61475 mo
77.5405 1.76172 77.2163 1.99658 77.0107 2.26074 cv
76.6885 2.73047 76.1895 3.66943 75.3965 5.51953 cv
73.9585 8.95508 70.6401 16.2661 69.2012 20.0835 cv
69.0244 20.23 68.6138 20.3184 68.2324 20.3184 cv
67.9097 20.3184 67.6455 20.23 67.4395 20.0835 cv
67.1167 19.3779 66.6758 18.3218 66.3237 17.4995 cv
65.0903 14.7104 li
64.6802 13.7705 64.2974 12.8892 64.0337 12.4487 cv
63.7695 12.9482 63.4165 13.6538 63.0352 14.4756 cv
61.6558 17.4697 li
61.2148 18.4097 60.8916 19.2612 60.4219 20.23 cv
60.2754 20.3765 59.894 20.4648 59.4531 20.4648 cv
59.1304 20.4648 58.9541 20.3765 58.689 20.23 cv
58.2192 18.9966 57.0454 16.354 56.0474 14.1523 cv
51.2314 3.64014 li
50.4385 1.90869 50.2627 1.76172 49.2935 1.55615 cv
48.5591 1.40967 li
48.3247 1.11523 48.3545 .528809 48.6777 .380859 cv
49.7637 .44043 50.9966 .470215 52.4946 .470215 cv
53.7866 .470215 54.9316 .44043 56.0474 .380859 cv
56.2817 .499512 56.3994 1.23291 56.1064 1.40967 cv
55.5771 1.49707 li
55.0488 1.58545 54.8428 1.73193 54.8428 1.9375 cv
54.8428 2.14355 55.4595 3.52344 56.3701 5.57861 cv
59.2773 12.0679 li
60.0991 13.8882 60.3921 14.5044 60.7451 15.2095 cv
61.0972 14.5635 61.5679 13.6826 62.1543 12.3613 cv
62.5361 11.5098 li
62.7417 11.0396 62.918 10.3945 62.918 10.2178 cv
62.918 10.041 62.8589 9.71826 62.7417 9.4248 cv
59.9233 3.22998 li
59.2476 1.76172 59.042 1.55615 57.9258 1.43848 cv
57.6323 1.40967 li
57.3394 1.17432 57.3975 .499512 57.7207 .380859 cv
58.9829 .44043 60.1284 .470215 61.4204 .470215 cv
62.918 .470215 64.0337 .44043 64.7964 .380859 cv
65.1489 .470215 65.1196 1.2627 64.9141 1.40967 cv
64.4155 1.52686 li
64.0625 1.61475 63.6221 1.73193 63.6221 1.9375 cv
63.6221 2.17285 63.7402 2.49561 63.8867 2.81836 cv
64.7671 4.84521 li
65.0317 5.46143 65.3257 6.10693 65.5894 6.63574 cv
65.8828 6.01904 66.1768 5.43213 66.4702 4.78564 cv
66.7349 4.19873 li
67.2339 3.08252 67.5273 2.20215 67.5273 2.02588 cv
67.5273 1.8208 67.4102 1.73193 66.9404 1.61475 cv
66.0596 1.40967 li
65.8535 1.20313 65.8828 .528809 66.1479 .380859 cv
66.999 .44043 68.0557 .470215 69.0244 .470215 cv
70.1699 .470215 71.2568 .44043 72.02 .380859 cv
72.2544 .528809 72.3135 1.23291 72.0488 1.43848 cv
71.2271 1.61475 li
70.2285 1.8208 70.0234 1.9375 68.9956 3.69971 cv
68.2905 4.90283 67.5562 6.25391 67.1753 7.0166 cv
66.9111 7.54541 66.5298 8.39697 66.5298 8.54395 cv
66.5298 8.63184 66.5586 8.80811 66.7642 9.27832 cv
68.144 12.2432 li
68.9072 13.8584 69.2598 14.7104 69.4355 15.1216 cv
70.8452 11.7153 72.2256 8.07471 73.6348 4.49219 cv
73.8398 3.99316 74.4272 2.31885 74.4272 1.99658 cv
74.4272 1.79102 74.2515 1.70264 73.8691 1.58545 cv
73.2236 1.40967 li
72.9888 1.14453 73.0479 .528809 73.312 .380859 cv
74.2515 .44043 75.4263 .470215 76.3066 .470215 cv
77.3345 .470215 78.1855 .44043 79.0078 .380859 cv
79.2725 .528809 79.3013 1.17432 79.0962 1.40967 cv
78.2153 1.61475 li
cp
false sop
/0 
<<
/Name (PANTONE 280 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 1 .72 0 .18 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
86.4951 8.10352 mo
86.4951 8.92627 86.5239 8.98438 87.3174 8.98438 cv
89.3428 8.98438 li
90.8696 8.98438 91.2222 8.77881 91.5156 7.37012 cv
91.6626 6.63574 li
91.8682 6.40088 92.6016 6.40088 92.7495 6.66455 cv
92.6904 7.60498 92.6611 8.66162 92.6611 9.77783 cv
92.6611 10.8936 92.6904 11.9502 92.7495 12.8892 cv
92.6016 13.1543 91.8682 13.1831 91.6626 12.9189 cv
91.5156 12.1851 li
91.2222 10.7754 90.8696 10.5405 89.3428 10.5405 cv
87.3174 10.5405 li
86.5239 10.5405 86.4951 10.5698 86.4951 11.4512 cv
86.4951 14.9448 li
86.4951 16.2959 86.6133 17.2354 86.9644 17.7344 cv
87.3467 18.2622 87.9038 18.4971 90.0479 18.4971 cv
92.6016 18.4971 93.6006 18.4097 95.2153 15.0918 cv
95.4502 14.769 96.1841 14.8862 96.3022 15.2378 cv
96.1841 16.7651 95.4795 19.1436 95.0688 19.9365 cv
93.5127 19.8774 90.6938 19.8486 88.2861 19.8486 cv
84.4692 19.8486 li
83.0596 19.8486 81.6206 19.8774 79.4185 19.9365 cv
79.1836 19.7603 79.1836 19.0552 79.4185 18.9087 cv
80.7988 18.7036 li
82.1206 18.4971 82.2964 18.3218 82.2964 15.6206 cv
82.2964 4.66846 li
82.2964 1.99658 82.1206 1.8208 80.7988 1.55615 cv
80.0649 1.40967 li
79.8003 1.23291 79.8301 .557617 80.123 .380859 cv
81.5039 .44043 82.9419 .470215 84.3511 .470215 cv
90.5767 .470215 li
92.4556 .470215 94.1289 .44043 94.5103 .380859 cv
94.5396 .851563 94.7451 2.96533 94.8926 4.93262 cv
94.7749 5.25586 94.0996 5.31396 93.8062 5.05029 cv
93.4834 4.02246 93.0718 3.1416 92.6904 2.73047 cv
92.1323 2.17285 91.2515 1.8208 89.8125 1.8208 cv
87.4639 1.8208 li
86.4951 1.8208 86.4951 1.87939 86.4951 2.96533 cv
86.4951 8.10352 li
cp
f
104.141 14.9746 mo
104.141 16.354 104.259 17.2939 104.64 17.7637 cv
105.022 18.2622 105.55 18.4971 107.693 18.4971 cv
110.366 18.4971 111.188 18.4097 112.919 15.0039 cv
113.155 14.7104 113.83 14.8276 114.036 15.1797 cv
113.889 16.707 113.185 19.1436 112.773 19.9365 cv
111.217 19.8774 108.398 19.8486 105.991 19.8486 cv
102.056 19.8486 li
100.706 19.8486 99.2373 19.8774 97.417 19.9365 cv
97.1528 19.7603 97.0938 19.0854 97.3286 18.9087 cv
98.4453 18.7617 li
99.7661 18.5864 99.9419 18.3516 99.9419 15.6206 cv
99.9419 4.69775 li
99.9419 1.9668 99.7661 1.70264 98.4453 1.52686 cv
97.5933 1.40967 li
97.2993 1.23291 97.2993 .557617 97.6523 .380859 cv
99.1792 .44043 100.647 .470215 102.056 .470215 cv
103.465 .470215 104.933 .44043 106.401 .380859 cv
106.636 .557617 106.636 1.23291 106.401 1.40967 cv
105.639 1.52686 li
104.317 1.73193 104.141 1.9668 104.141 4.69775 cv
104.141 14.9746 li
cp
f
121.699 14.9746 mo
121.699 16.354 121.817 17.2939 122.198 17.7637 cv
122.58 18.2622 123.108 18.4971 125.252 18.4971 cv
127.924 18.4971 128.746 18.4097 130.478 15.0039 cv
130.713 14.7104 131.388 14.8276 131.594 15.1797 cv
131.447 16.707 130.744 19.1436 130.332 19.9365 cv
128.775 19.8774 125.957 19.8486 123.549 19.8486 cv
119.615 19.8486 li
118.263 19.8486 116.795 19.8774 114.975 19.9365 cv
114.711 19.7603 114.653 19.0854 114.887 18.9087 cv
116.003 18.7617 li
117.324 18.5864 117.5 18.3516 117.5 15.6206 cv
117.5 4.69775 li
117.5 1.9668 117.324 1.70264 116.003 1.52686 cv
115.151 1.40967 li
114.857 1.23291 114.857 .557617 115.21 .380859 cv
116.737 .44043 118.205 .470215 119.615 .470215 cv
121.024 .470215 122.491 .44043 123.96 .380859 cv
124.195 .557617 124.195 1.23291 123.96 1.40967 cv
123.197 1.52686 li
121.875 1.73193 121.699 1.9668 121.699 4.69775 cv
121.699 14.9746 li
cp
f
139.404 8.10352 mo
139.404 8.92627 139.434 8.98438 140.226 8.98438 cv
142.251 8.98438 li
143.779 8.98438 144.131 8.77881 144.424 7.37012 cv
144.573 6.63574 li
144.778 6.40088 145.511 6.40088 145.658 6.66455 cv
145.599 7.60498 145.57 8.66162 145.57 9.77783 cv
145.57 10.8936 145.599 11.9502 145.658 12.8892 cv
145.511 13.1543 144.778 13.1831 144.573 12.9189 cv
144.424 12.1851 li
144.131 10.7754 143.779 10.5405 142.251 10.5405 cv
140.226 10.5405 li
139.434 10.5405 139.404 10.5698 139.404 11.4512 cv
139.404 14.9448 li
139.404 16.2959 139.521 17.2354 139.874 17.7344 cv
140.255 18.2622 140.814 18.4971 142.957 18.4971 cv
145.511 18.4971 146.509 18.4097 148.125 15.0918 cv
148.359 14.769 149.093 14.8862 149.211 15.2378 cv
149.093 16.7651 148.389 19.1436 147.978 19.9365 cv
146.422 19.8774 143.603 19.8486 141.195 19.8486 cv
137.377 19.8486 li
135.968 19.8486 134.53 19.8774 132.328 19.9365 cv
132.093 19.7603 132.093 19.0552 132.328 18.9087 cv
133.708 18.7036 li
135.029 18.4971 135.206 18.3218 135.206 15.6206 cv
135.206 4.66846 li
135.206 1.99658 135.029 1.8208 133.708 1.55615 cv
132.974 1.40967 li
132.709 1.23291 132.739 .557617 133.033 .380859 cv
134.413 .44043 135.851 .470215 137.26 .470215 cv
143.486 .470215 li
145.364 .470215 147.039 .44043 147.421 .380859 cv
147.449 .851563 147.655 2.96533 147.801 4.93262 cv
147.684 5.25586 147.009 5.31396 146.715 5.05029 cv
146.393 4.02246 145.981 3.1416 145.599 2.73047 cv
145.042 2.17285 144.161 1.8208 142.722 1.8208 cv
140.374 1.8208 li
139.404 1.8208 139.404 1.87939 139.404 2.96533 cv
139.404 8.10352 li
cp
f
156.463 20.3184 mo
153.762 20.3184 152.087 19.5547 151.471 19.2026 cv
150.914 18.5562 150.532 16.4429 150.532 14.4453 cv
150.738 14.064 151.413 14.0347 151.647 14.3579 cv
152.235 16.2661 154.202 18.9673 156.699 18.9673 cv
158.871 18.9673 159.869 17.4697 159.869 16.002 cv
159.869 13.624 157.637 12.2139 155.875 11.3335 cv
153.762 10.2759 151.442 8.51514 151.442 5.60742 cv
151.413 2.28955 153.996 0 158.254 0 cv
159.222 0 160.426 .117188 161.601 .470215 cv
161.983 .586914 162.247 .64502 162.599 .70459 cv
162.835 1.35059 163.127 2.93555 163.127 4.90283 cv
162.981 5.25586 162.247 5.28516 161.983 4.99121 cv
161.484 3.49365 160.222 1.35059 158.107 1.35059 cv
156.169 1.35059 155.113 2.61328 155.113 4.08154 cv
155.113 5.43213 156.317 6.66455 157.785 7.42822 cv
159.722 8.45654 li
161.542 9.4248 163.863 11.1279 163.863 14.3579 cv
163.863 17.9692 160.897 20.3184 156.463 20.3184 cv
cp
f
171.82 14.9746 mo
171.82 16.354 171.937 17.2939 172.319 17.7637 cv
172.701 18.2622 173.229 18.4971 175.373 18.4971 cv
178.043 18.4971 178.866 18.4097 180.598 15.0039 cv
180.833 14.7104 181.508 14.8276 181.712 15.1797 cv
181.567 16.707 180.863 19.1436 180.453 19.9365 cv
178.896 19.8774 176.077 19.8486 173.668 19.8486 cv
169.735 19.8486 li
168.383 19.8486 166.915 19.8774 165.096 19.9365 cv
164.831 19.7603 164.773 19.0854 165.006 18.9087 cv
166.123 18.7617 li
167.444 18.5864 167.62 18.3516 167.62 15.6206 cv
167.62 4.69775 li
167.62 1.9668 167.444 1.70264 166.123 1.52686 cv
165.27 1.40967 li
164.977 1.23291 164.977 .557617 165.33 .380859 cv
166.857 .44043 168.326 .470215 169.735 .470215 cv
171.144 .470215 172.612 .44043 174.08 .380859 cv
174.315 .557617 174.315 1.23291 174.08 1.40967 cv
173.317 1.52686 li
171.995 1.73193 171.82 1.9668 171.82 4.69775 cv
171.82 14.9746 li
cp
f
189.524 8.10352 mo
189.524 8.92627 189.553 8.98438 190.346 8.98438 cv
192.372 8.98438 li
193.898 8.98438 194.251 8.77881 194.544 7.37012 cv
194.693 6.63574 li
194.897 6.40088 195.631 6.40088 195.778 6.66455 cv
195.719 7.60498 195.69 8.66162 195.69 9.77783 cv
195.69 10.8936 195.719 11.9502 195.778 12.8892 cv
195.631 13.1543 194.897 13.1831 194.693 12.9189 cv
194.544 12.1851 li
194.251 10.7754 193.898 10.5405 192.372 10.5405 cv
190.346 10.5405 li
189.553 10.5405 189.524 10.5698 189.524 11.4512 cv
189.524 14.9448 li
189.524 16.2959 189.641 17.2354 189.995 17.7344 cv
190.376 18.2622 190.935 18.4971 193.077 18.4971 cv
195.631 18.4971 196.63 18.4097 198.245 15.0918 cv
198.48 14.769 199.214 14.8862 199.33 15.2378 cv
199.214 16.7651 198.509 19.1436 198.098 19.9365 cv
196.541 19.8774 193.723 19.8486 191.315 19.8486 cv
187.499 19.8486 li
186.089 19.8486 184.649 19.8774 182.448 19.9365 cv
182.213 19.7603 182.213 19.0552 182.448 18.9087 cv
183.828 18.7036 li
185.149 18.4971 185.326 18.3218 185.326 15.6206 cv
185.326 4.66846 li
185.326 1.99658 185.149 1.8208 183.828 1.55615 cv
183.095 1.40967 li
182.83 1.23291 182.859 .557617 183.152 .380859 cv
184.533 .44043 185.972 .470215 187.38 .470215 cv
193.606 .470215 li
195.485 .470215 197.158 .44043 197.54 .380859 cv
197.57 .851563 197.775 2.96533 197.921 4.93262 cv
197.804 5.25586 197.129 5.31396 196.835 5.05029 cv
196.512 4.02246 196.101 3.1416 195.719 2.73047 cv
195.163 2.17285 194.28 1.8208 192.842 1.8208 cv
190.493 1.8208 li
189.524 1.8208 189.524 1.87939 189.524 2.96533 cv
189.524 8.10352 li
cp
f
210.605 15.6206 mo
210.605 18.3516 210.782 18.5864 212.103 18.7617 cv
213.277 18.9087 li
213.484 19.0854 213.484 19.7603 213.277 19.9365 cv
211.37 19.8774 209.929 19.8486 208.522 19.8486 cv
207.11 19.8486 205.643 19.8774 203.911 19.9365 cv
203.675 19.7603 203.675 19.0854 203.911 18.9087 cv
204.909 18.7617 li
206.231 18.5562 206.408 18.3516 206.408 15.6206 cv
206.408 14.1523 li
206.408 12.6841 206.376 12.2139 205.614 10.6582 cv
202.119 3.43506 li
201.534 2.23145 201.269 1.76172 200.24 1.58545 cv
199.243 1.40967 li
198.978 1.17432 199.007 .470215 199.36 .380859 cv
200.68 .44043 201.767 .470215 203.5 .470215 cv
205.291 .470215 206.789 .44043 207.786 .380859 cv
208.051 .499512 208.11 1.17432 207.845 1.40967 cv
206.847 1.64404 li
206.318 1.76172 206.142 1.87939 206.142 1.90869 cv
206.142 2.14355 206.289 2.58301 206.907 3.96387 cv
208.285 7.10547 li
208.726 8.07471 209.284 9.24902 209.636 9.98291 cv
210.487 8.54395 211.31 6.84131 212.103 5.34326 cv
213.218 3.25879 213.629 2.28955 213.629 1.9375 cv
213.629 1.76172 213.336 1.64404 212.631 1.52686 cv
211.955 1.40967 li
211.722 1.2627 211.691 .528809 211.985 .380859 cv
213.159 .44043 214.216 .470215 215.274 .470215 cv
216.388 .470215 217.299 .44043 218.15 .380859 cv
218.504 .499512 218.504 1.20313 218.269 1.40967 cv
217.506 1.55615 li
216.977 1.64404 216.419 1.84912 216.096 2.26074 cv
215.657 2.81836 214.92 3.87549 213.511 6.42969 cv
211.663 9.77783 li
210.899 11.1567 210.605 11.8911 210.605 13.5649 cv
210.605 15.6206 li
cp
f
139.502 54.2432 mo
144.69 54.2432 146.479 57.6206 143.593 63.3003 cv
133.562 83.1738 li
123.532 63.3003 li
120.645 57.6206 122.419 54.2432 127.606 54.2432 cv
139.502 54.2432 li
cp
149.631 114.964 mo
138.286 92.5225 li
153.332 62.8135 li
157.714 54.3403 158.785 53.8535 166.187 53.8535 cv
166.187 49.5688 li
100.938 49.5688 li
100.938 53.8535 li
108.339 53.8535 109.507 54.3403 113.792 62.8135 cv
128.839 92.5225 li
117.494 114.964 li
90.9072 62.2285 li
87.7905 55.9966 88.5698 53.8535 92.9033 53.8535 cv
95.6792 53.8535 li
95.6792 49.5688 li
65.4897 49.5688 li
65.4897 53.8213 li
67.0474 53.9185 li
76.7861 54.5029 77.4683 55.0229 81.9478 63.9819 cv
115.936 131.081 li
118.759 131.081 li
133.562 101.857 li
148.366 131.081 li
151.19 131.081 li
185.177 63.9819 li
189.658 55.0229 190.338 54.438 200.078 53.8535 cv
200.721 53.813 li
200.721 49.5688 li
171.446 49.5688 li
171.446 53.8535 li
174.221 53.8535 li
178.555 53.8535 179.333 55.9966 176.217 62.2285 cv
149.631 114.964 li
cp
f
9.05957 29.7681 mo
9.05957 30.0386 9.10449 31.2388 9.23975 32.1079 cv
9.17969 32.2886 8.77441 32.3481 8.66943 32.2134 cv
8.26465 30.8188 7.30469 30.0688 5.84961 30.0688 cv
4.18457 30.0688 2.3999 31.4937 2.3999 34.478 cv
2.3999 37.4634 4.12451 39.0679 5.9248 39.0679 cv
7.73975 39.0679 8.57959 37.7632 8.98438 36.7437 cv
9.10449 36.6235 9.46436 36.6685 9.55469 36.8481 cv
9.44971 37.9585 9.19434 38.8579 8.98438 39.2026 cv
8.17432 39.4282 7.10938 39.7583 5.93945 39.7583 cv
4.46973 39.7583 2.96973 39.4126 1.90479 38.6177 cv
.824707 37.7935 0 36.5483 0 34.688 cv
0 32.8579 .779785 31.5688 1.81494 30.7134 cv
2.87988 29.8286 4.40967 29.3784 5.96973 29.3784 cv
7.49951 29.3784 8.60938 29.7388 9.05957 29.7681 cv
cp
f
13.8149 37.0278 mo
13.8149 37.7329 13.875 38.2134 14.0698 38.4526 cv
14.2646 38.7085 14.5347 38.8276 15.6299 38.8276 cv
16.9946 38.8276 17.4146 38.7827 18.2998 37.0435 cv
18.4194 36.8931 18.7646 36.9536 18.8696 37.1333 cv
18.7944 37.9136 18.4346 39.1577 18.2246 39.563 cv
17.4297 39.5327 15.9897 39.5181 14.7598 39.5181 cv
12.75 39.5181 li
12.0601 39.5181 11.3101 39.5327 10.3799 39.563 cv
10.2451 39.4731 10.2148 39.1284 10.335 39.0376 cv
10.9048 38.9634 li
11.5801 38.8735 11.6699 38.7534 11.6699 37.3579 cv
11.6699 31.7788 li
11.6699 30.3833 11.5801 30.2485 10.9048 30.1587 cv
10.4697 30.0981 li
10.3198 30.0083 10.3198 29.6636 10.5 29.5737 cv
11.2798 29.603 12.0298 29.6187 12.75 29.6187 cv
13.4697 29.6187 14.2197 29.603 14.9697 29.5737 cv
15.0898 29.6636 15.0898 30.0083 14.9697 30.0981 cv
14.5796 30.1587 li
13.9048 30.2632 13.8149 30.3833 13.8149 31.7788 cv
13.8149 37.0278 li
cp
f
20.0547 31.7788 mo
20.0547 30.3833 19.9648 30.2935 19.29 30.1587 cv
18.915 30.0835 li
18.7949 29.9937 18.7798 29.6636 18.9448 29.5737 cv
19.665 29.603 20.415 29.6187 21.1348 29.6187 cv
21.8696 29.6187 22.605 29.603 23.3247 29.5737 cv
23.4448 29.6636 23.4448 29.9937 23.3247 30.0835 cv
22.9648 30.1431 li
22.2896 30.2632 22.1997 30.3833 22.1997 31.7788 cv
22.1997 35.2437 li
22.1997 36.9985 22.3945 38.9331 24.6748 38.9331 cv
26.5947 38.9331 27.1797 37.2534 27.1797 35.1978 cv
27.1797 33.3833 li
27.1797 32.1685 27.1196 31.0288 26.9546 30.6382 cv
26.8198 30.3237 26.4897 30.2339 26.0845 30.1587 cv
25.6797 30.0835 li
25.5596 29.9634 25.5898 29.6636 25.6797 29.5737 cv
26.4897 29.603 27.0747 29.6187 27.6895 29.6187 cv
28.2446 29.6187 28.7993 29.603 29.3696 29.5737 cv
29.4595 29.6636 29.4893 29.9634 29.3696 30.0835 cv
29.0996 30.1431 li
28.7095 30.2339 28.4243 30.3237 28.2896 30.6382 cv
28.1245 31.0288 28.0645 32.1685 28.0645 33.3833 cv
28.0645 35.063 li
28.0645 36.4731 27.9297 37.7632 27.1045 38.6782 cv
26.4448 39.3833 25.3496 39.7583 24.1348 39.7583 cv
22.9946 39.7583 21.9746 39.5776 21.165 38.9185 cv
20.3848 38.2729 20.0547 37.1636 20.0547 35.5278 cv
20.0547 31.7788 li
cp
f
33.5244 36.9829 mo
33.5244 38.1528 33.6743 38.8882 34.8442 38.8882 cv
35.9546 38.8882 36.5396 38.0327 36.5396 36.8179 cv
36.5396 35.5132 35.7896 34.5981 34.3496 34.5981 cv
33.5244 34.5981 33.5244 34.6128 33.5244 35.2134 cv
33.5244 36.9829 li
cp
33.5244 33.5181 mo
33.5244 33.9087 33.5396 33.938 34.3193 33.938 cv
35.6094 33.938 36.0894 33.1138 36.0894 32.2134 cv
36.0894 30.9087 35.2793 30.2632 34.2446 30.2632 cv
33.5396 30.2632 33.5244 30.3833 33.5244 31.0435 cv
33.5244 33.5181 li
cp
31.4546 32.063 mo
31.4546 30.5483 31.4243 30.3989 30.7944 30.3081 cv
30.3896 30.2485 li
30.2544 30.1733 30.2246 29.7231 30.4497 29.7085 cv
31.5894 29.6333 32.6846 29.5737 34.1846 29.5737 cv
35.6245 29.5737 36.5845 29.7388 37.2441 30.1284 cv
37.8892 30.5181 38.2793 31.1479 38.2793 32.0337 cv
38.2793 33.2935 37.2144 33.7886 36.7495 33.9087 cv
36.5991 33.938 36.4492 33.9985 36.4492 34.0737 cv
36.4492 34.1187 36.5244 34.1636 36.6592 34.1929 cv
37.8442 34.4487 38.8491 35.228 38.8643 36.6831 cv
38.8794 38.063 38.0542 38.8735 37.1094 39.2026 cv
36.1646 39.5327 35.0396 39.5776 34.1245 39.5776 cv
33.5845 39.5776 33.0146 39.5181 32.5796 39.5181 cv
31.8447 39.5181 31.1094 39.5327 30.2544 39.563 cv
30.1348 39.4731 30.1348 39.0835 30.2544 39.0376 cv
30.6895 38.9478 li
31.3647 38.813 31.4546 38.7085 31.4546 37.3579 cv
31.4546 32.063 li
cp
f
49.1543 30.0688 mo
47.3091 30.0688 46.3193 31.7935 46.3193 34.2983 cv
46.3193 36.1284 46.9644 39.0679 49.4092 39.0679 cv
51.374 39.0679 52.1392 37.1479 52.1392 34.7183 cv
52.1392 32.1538 51.0142 30.0688 49.1543 30.0688 cv
cp
54.5391 34.5229 mo
54.5391 37.7935 52.3491 39.7583 49.124 39.7583 cv
46.1094 39.7583 43.9194 37.7778 43.9194 34.6431 cv
43.9194 31.6733 46.1392 29.3784 49.2739 29.3784 cv
52.394 29.3784 54.5391 31.478 54.5391 34.5229 cv
cp
f
59.2192 33.6382 mo
59.2192 34.0435 59.2339 34.0884 59.6392 34.0884 cv
60.7939 34.0884 li
61.5889 34.0884 61.7539 33.9829 61.9038 33.2485 cv
61.979 32.8882 li
62.084 32.7534 62.459 32.7681 62.5488 32.9038 cv
62.519 33.3833 62.5039 33.938 62.5039 34.5083 cv
62.5039 35.063 62.519 35.6187 62.5488 36.0679 cv
62.459 36.2036 62.084 36.2183 61.979 36.0835 cv
61.9038 35.7231 li
61.7539 35.0034 61.5889 34.8833 60.7939 34.8833 cv
59.6392 34.8833 li
59.2339 34.8833 59.2192 34.9282 59.2192 35.3335 cv
59.2192 37.3579 li
59.2192 38.7534 59.3091 38.8735 59.9839 38.9634 cv
60.5391 39.0376 li
60.644 39.1284 60.644 39.4731 60.5391 39.563 cv
59.6089 39.5327 58.874 39.5181 58.1543 39.5181 cv
57.4644 39.5181 56.7144 39.5327 55.8145 39.563 cv
55.6943 39.4731 55.6943 39.1284 55.8145 39.0376 cv
56.3091 38.9634 li
56.9844 38.8579 57.0742 38.7534 57.0742 37.3579 cv
57.0742 31.7788 li
57.0742 30.3833 56.9844 30.2485 56.3091 30.1431 cv
56.0093 30.0981 li
55.874 30.0083 55.874 29.6333 56.0391 29.5737 cv
56.6841 29.603 57.4341 29.6187 58.1543 29.6187 cv
61.3042 29.6187 li
62.2642 29.6187 63.1191 29.603 63.3291 29.5737 cv
63.3291 29.8286 63.3291 30.9087 63.3589 31.9136 cv
63.2988 32.0786 62.9688 32.0933 62.7891 31.9731 cv
62.624 31.3579 62.5039 30.9985 62.354 30.8032 cv
62.0991 30.4888 61.6489 30.3081 60.8843 30.3081 cv
59.7139 30.3081 li
59.2192 30.3081 59.2192 30.3384 59.2192 30.9233 cv
59.2192 33.6382 li
cp
f
71.0088 39.7583 mo
69.6289 39.7583 68.7739 39.3677 68.459 39.188 cv
68.1738 38.8579 67.979 37.7778 67.979 36.7583 cv
68.084 36.563 68.4287 36.5483 68.5488 36.7134 cv
68.8486 37.688 69.8535 39.0679 71.1284 39.0679 cv
72.2388 39.0679 72.7485 38.3032 72.7485 37.5532 cv
72.7485 36.3384 71.6084 35.6187 70.7085 35.1685 cv
69.6289 34.6284 68.4438 33.728 68.4438 32.2437 cv
68.4287 30.5483 69.7485 29.3784 71.9238 29.3784 cv
72.4185 29.3784 73.0337 29.438 73.6333 29.6187 cv
73.8286 29.6782 73.9634 29.7085 74.1436 29.7388 cv
74.2637 30.0688 74.4136 30.8784 74.4136 31.8833 cv
74.3384 32.063 73.9634 32.0786 73.8286 31.9282 cv
73.5737 31.1636 72.9287 30.0688 71.8486 30.0688 cv
70.8589 30.0688 70.3188 30.7134 70.3188 31.4634 cv
70.3188 32.1538 70.9336 32.7837 71.6836 33.1733 cv
72.6733 33.6987 li
73.6035 34.1929 74.7886 35.063 74.7886 36.7134 cv
74.7886 38.5581 73.2734 39.7583 71.0088 39.7583 cv
cp
f
81.2837 30.0688 mo
79.4385 30.0688 78.4487 31.7935 78.4487 34.2983 cv
78.4487 36.1284 79.0938 39.0679 81.5386 39.0679 cv
83.5034 39.0679 84.2686 37.1479 84.2686 34.7183 cv
84.2686 32.1538 83.1436 30.0688 81.2837 30.0688 cv
cp
86.6685 34.5229 mo
86.6685 37.7935 84.4785 39.7583 81.2534 39.7583 cv
78.2388 39.7583 76.0488 37.7778 76.0488 34.6431 cv
76.0488 31.6733 78.2686 29.3784 81.4033 29.3784 cv
84.5234 29.3784 86.6685 31.478 86.6685 34.5229 cv
cp
f
89.1284 31.7788 mo
89.1284 30.3833 89.0386 30.2935 88.3638 30.1587 cv
87.9888 30.0835 li
87.8687 29.9937 87.8535 29.6636 88.0186 29.5737 cv
88.7388 29.603 89.4888 29.6187 90.2085 29.6187 cv
90.9434 29.6187 91.6787 29.603 92.3984 29.5737 cv
92.5186 29.6636 92.5186 29.9937 92.3984 30.0835 cv
92.0386 30.1431 li
91.3633 30.2632 91.2734 30.3833 91.2734 31.7788 cv
91.2734 35.2437 li
91.2734 36.9985 91.4683 38.9331 93.7485 38.9331 cv
95.6685 38.9331 96.2534 37.2534 96.2534 35.1978 cv
96.2534 33.3833 li
96.2534 32.1685 96.1934 31.0288 96.0283 30.6382 cv
95.8931 30.3237 95.5635 30.2339 95.1582 30.1587 cv
94.7534 30.0835 li
94.6333 29.9634 94.6636 29.6636 94.7534 29.5737 cv
95.5635 29.603 96.1484 29.6187 96.7632 29.6187 cv
97.3184 29.6187 97.873 29.603 98.4434 29.5737 cv
98.5332 29.6636 98.563 29.9634 98.4434 30.0835 cv
98.1733 30.1431 li
97.7832 30.2339 97.498 30.3237 97.3633 30.6382 cv
97.1982 31.0288 97.1382 32.1685 97.1382 33.3833 cv
97.1382 35.063 li
97.1382 36.4731 97.0034 37.7632 96.1782 38.6782 cv
95.5186 39.3833 94.4233 39.7583 93.2085 39.7583 cv
92.0684 39.7583 91.0483 39.5776 90.2388 38.9185 cv
89.4585 38.2729 89.1284 37.1636 89.1284 35.5278 cv
89.1284 31.7788 li
cp
f
102.644 30.7437 mo
102.644 30.3833 102.644 30.3081 102.284 30.3081 cv
101.354 30.3081 li
100.259 30.3081 99.9438 30.9087 99.4937 32.0034 cv
99.314 32.0933 99.0288 32.063 98.939 31.8687 cv
99.2539 30.8335 99.3286 29.9038 99.4336 29.3188 cv
99.4937 29.2739 99.5688 29.2437 99.644 29.2437 cv
99.7188 29.2437 99.7939 29.2583 99.854 29.3032 cv
99.9287 29.5581 99.9736 29.6187 101.114 29.6187 cv
106.693 29.6187 li
107.684 29.6187 107.909 29.603 108.043 29.2886 cv
108.104 29.2583 108.148 29.2437 108.238 29.2437 cv
108.329 29.2437 108.434 29.3032 108.463 29.3481 cv
108.313 29.8589 108.208 31.0737 108.238 31.9282 cv
108.164 32.063 107.758 32.0933 107.684 31.9731 cv
107.429 31.0132 107.218 30.3081 106.094 30.3081 cv
105.193 30.3081 li
104.833 30.3081 104.789 30.353 104.789 30.7437 cv
104.789 37.3579 li
104.789 38.7534 104.878 38.8735 105.554 38.9634 cv
106.153 39.0376 li
106.258 39.1284 106.258 39.4731 106.153 39.563 cv
105.179 39.5327 104.429 39.5181 103.753 39.5181 cv
103.034 39.5181 102.254 39.5327 101.204 39.563 cv
101.084 39.4731 101.084 39.1284 101.204 39.0376 cv
101.879 38.9634 li
102.554 38.8882 102.644 38.7534 102.644 37.3579 cv
102.644 30.7437 li
cp
f
113.204 34.7632 mo
112.588 34.7632 112.574 34.7778 112.574 35.1978 cv
112.574 37.3579 li
112.574 38.7534 112.664 38.8882 113.338 38.978 cv
113.818 39.0376 li
113.938 39.1284 113.938 39.4731 113.818 39.563 cv
112.963 39.5327 112.213 39.5181 111.539 39.5181 cv
110.819 39.5181 110.069 39.5327 109.304 39.563 cv
109.184 39.4731 109.184 39.1284 109.304 39.0376 cv
109.664 38.9927 li
110.354 38.9028 110.429 38.7534 110.429 37.3579 cv
110.429 31.7788 li
110.429 30.3833 110.354 30.2339 109.664 30.1431 cv
109.304 30.0981 li
109.184 30.0083 109.184 29.6636 109.304 29.5737 cv
110.039 29.603 110.819 29.6187 111.539 29.6187 cv
112.213 29.6187 112.963 29.603 113.624 29.5737 cv
113.744 29.6636 113.744 30.0083 113.624 30.0981 cv
113.309 30.1431 li
112.664 30.2339 112.574 30.3833 112.574 31.7788 cv
112.574 33.5181 li
112.574 33.9536 112.588 33.9683 113.204 33.9683 cv
116.323 33.9683 li
116.954 33.9683 116.954 33.9536 116.954 33.5181 cv
116.954 31.7788 li
116.954 30.3833 116.878 30.2632 116.188 30.1587 cv
115.784 30.0981 li
115.664 30.0083 115.664 29.6636 115.784 29.5737 cv
116.608 29.603 117.343 29.6187 118.063 29.6187 cv
118.798 29.6187 119.488 29.603 120.178 29.5737 cv
120.298 29.6636 120.298 30.0083 120.178 30.0981 cv
119.878 30.1431 li
119.188 30.2485 119.098 30.3833 119.098 31.7788 cv
119.098 37.3579 li
119.098 38.7534 119.188 38.8579 119.878 38.978 cv
120.238 39.0376 li
120.358 39.1284 120.358 39.4731 120.238 39.563 cv
119.488 39.5327 118.753 39.5181 118.063 39.5181 cv
117.313 39.5181 116.579 39.5327 115.858 39.563 cv
115.738 39.4731 115.738 39.1284 115.858 39.0376 cv
116.188 38.9927 li
116.878 38.9028 116.954 38.7534 116.954 37.3579 cv
116.954 35.1978 li
116.954 34.7778 116.954 34.7632 116.323 34.7632 cv
113.204 34.7632 li
cp
f
124.889 33.5181 mo
124.889 33.938 124.903 33.9683 125.309 33.9683 cv
126.343 33.9683 li
127.124 33.9683 127.303 33.8638 127.454 33.1431 cv
127.528 32.7681 li
127.633 32.6479 128.008 32.6479 128.083 32.7837 cv
128.053 33.2632 128.039 33.8032 128.039 34.3735 cv
128.039 34.9429 128.053 35.4829 128.083 35.9634 cv
128.008 36.0981 127.633 36.1128 127.528 35.978 cv
127.454 35.603 li
127.303 34.8833 127.124 34.7632 126.343 34.7632 cv
125.309 34.7632 li
124.903 34.7632 124.889 34.7778 124.889 35.228 cv
124.889 37.0132 li
124.889 37.7036 124.949 38.1831 125.128 38.438 cv
125.324 38.7085 125.608 38.8276 126.704 38.8276 cv
128.008 38.8276 128.519 38.7827 129.343 37.0884 cv
129.463 36.9233 129.838 36.9829 129.898 37.1636 cv
129.838 37.9429 129.479 39.1577 129.269 39.563 cv
128.473 39.5327 127.034 39.5181 125.804 39.5181 cv
123.854 39.5181 li
123.134 39.5181 122.398 39.5327 121.274 39.563 cv
121.154 39.4731 121.154 39.1128 121.274 39.0376 cv
121.979 38.9331 li
122.654 38.8276 122.744 38.7378 122.744 37.3579 cv
122.744 31.7632 li
122.744 30.3989 122.654 30.3081 121.979 30.1733 cv
121.604 30.0981 li
121.469 30.0083 121.484 29.6636 121.634 29.5737 cv
122.339 29.603 123.074 29.6187 123.793 29.6187 cv
126.974 29.6187 li
127.934 29.6187 128.789 29.603 128.983 29.5737 cv
128.999 29.813 129.104 30.8931 129.178 31.8979 cv
129.118 32.063 128.773 32.0933 128.624 31.9585 cv
128.458 31.4331 128.249 30.9839 128.053 30.7729 cv
127.769 30.4888 127.318 30.3081 126.583 30.3081 cv
125.383 30.3081 li
124.889 30.3081 124.889 30.3384 124.889 30.8931 cv
124.889 33.5181 li
cp
f
133.918 33.9536 mo
133.918 34.478 133.963 34.5229 134.848 34.5229 cv
135.388 34.5229 135.703 34.3882 135.988 34.103 cv
136.244 33.8481 136.528 33.3687 136.528 32.4829 cv
136.528 31.1333 135.733 30.2632 134.563 30.2632 cv
133.948 30.2632 133.918 30.3081 133.918 31.0288 cv
133.918 33.9536 li
cp
131.863 32.0483 mo
131.863 30.5483 131.833 30.3833 131.203 30.2935 cv
130.798 30.2339 li
130.648 30.1587 130.648 29.7837 130.828 29.7085 cv
131.953 29.6333 133.123 29.5737 134.548 29.5737 cv
135.824 29.5737 136.917 29.7681 137.488 30.1138 cv
138.358 30.6235 138.808 31.3735 138.808 32.3335 cv
138.808 33.6685 137.908 34.2388 137.218 34.5835 cv
137.068 34.6587 137.068 34.7485 137.143 34.9136 cv
138.132 36.9233 138.748 38.0483 139.468 38.6636 cv
139.858 38.978 140.248 39.0679 140.473 39.0835 cv
140.608 39.1577 140.608 39.3833 140.533 39.4731 cv
140.292 39.5776 139.813 39.6079 139.348 39.6079 cv
137.968 39.6079 137.098 39.1128 136.438 38.0327 cv
135.958 37.2378 135.613 36.5034 135.268 35.7085 cv
135.087 35.3032 134.848 35.1831 134.473 35.1831 cv
133.948 35.1831 133.918 35.2134 133.918 35.5132 cv
133.918 37.3579 li
133.918 38.7378 134.008 38.8433 134.683 38.9634 cv
135.087 39.0376 li
135.193 39.1128 135.193 39.4731 135.087 39.563 cv
134.293 39.5327 133.603 39.5181 132.883 39.5181 cv
132.133 39.5181 131.473 39.5327 130.693 39.563 cv
130.573 39.4731 130.573 39.1128 130.693 39.0376 cv
131.098 38.9634 li
131.773 38.8433 131.863 38.7378 131.863 37.3579 cv
131.863 32.0483 li
cp
f
150.119 36.9683 mo
150.119 37.9429 150.119 38.8882 150.148 39.3833 cv
150.042 39.563 149.623 39.728 149.263 39.728 cv
149.248 39.728 148.753 38.9634 148.048 38.0933 cv
144.583 33.8032 li
143.713 32.7388 143.218 32.1079 142.949 31.8833 cv
142.873 32.0337 142.873 32.2886 142.873 32.8433 cv
142.873 35.7534 li
142.873 36.9683 142.933 38.0933 143.098 38.4985 cv
143.234 38.813 143.578 38.9185 143.968 38.978 cv
144.388 39.0376 li
144.508 39.1577 144.478 39.4731 144.388 39.563 cv
143.578 39.5327 142.978 39.5181 142.378 39.5181 cv
141.824 39.5181 141.269 39.5327 140.699 39.563 cv
140.609 39.4731 140.579 39.1577 140.699 39.0376 cv
140.953 38.9927 li
141.359 38.9185 141.658 38.813 141.779 38.4985 cv
141.943 38.0933 141.988 36.9683 141.988 35.7534 cv
141.988 31.9438 li
141.988 31.1187 141.973 30.8784 141.883 30.6685 cv
141.763 30.4136 141.553 30.2339 141.029 30.1587 cv
140.609 30.0981 li
140.503 29.978 140.519 29.6187 140.668 29.5737 cv
141.374 29.603 142.124 29.6187 142.738 29.6187 cv
143.248 29.6187 143.683 29.603 143.998 29.5737 cv
144.148 30.2485 145.123 31.3882 146.473 32.9937 cv
147.733 34.478 li
148.393 35.2583 148.828 35.7837 149.173 36.1284 cv
149.233 35.978 149.233 35.7231 149.233 35.4536 cv
149.233 33.3833 li
149.233 32.1685 149.173 31.0435 149.007 30.6382 cv
148.873 30.3237 148.542 30.2183 148.138 30.1587 cv
147.733 30.0981 li
147.613 29.978 147.643 29.6636 147.733 29.5737 cv
148.542 29.603 149.128 29.6187 149.744 29.6187 cv
150.298 29.6187 150.837 29.603 151.423 29.5737 cv
151.513 29.6636 151.542 29.978 151.423 30.0981 cv
151.153 30.1431 li
150.763 30.2036 150.478 30.3237 150.343 30.6382 cv
150.178 31.0435 150.119 32.1685 150.119 33.3833 cv
150.119 36.9683 li
cp
f
165.267 29.7681 mo
165.267 30.0386 165.312 31.2388 165.448 32.1079 cv
165.388 32.2886 164.982 32.3481 164.877 32.2134 cv
164.472 30.8188 163.513 30.0688 162.058 30.0688 cv
160.392 30.0688 158.608 31.4937 158.608 34.478 cv
158.608 37.4634 160.333 39.0679 162.132 39.0679 cv
163.948 39.0679 164.788 37.7632 165.193 36.7437 cv
165.312 36.6235 165.672 36.6685 165.763 36.8481 cv
165.658 37.9585 165.402 38.8579 165.193 39.2026 cv
164.382 39.4282 163.318 39.7583 162.148 39.7583 cv
160.677 39.7583 159.177 39.4126 158.113 38.6177 cv
157.033 37.7935 156.208 36.5483 156.208 34.688 cv
156.208 32.8579 156.988 31.5688 158.023 30.7134 cv
159.087 29.8286 160.618 29.3784 162.177 29.3784 cv
163.708 29.3784 164.818 29.7388 165.267 29.7681 cv
cp
f
171.823 30.0688 mo
169.978 30.0688 168.988 31.7935 168.988 34.2983 cv
168.988 36.1284 169.632 39.0679 172.078 39.0679 cv
174.042 39.0679 174.808 37.1479 174.808 34.7183 cv
174.808 32.1538 173.683 30.0688 171.823 30.0688 cv
cp
177.208 34.5229 mo
177.208 37.7935 175.017 39.7583 171.792 39.7583 cv
168.778 39.7583 166.587 37.7778 166.587 34.6431 cv
166.587 31.6733 168.808 29.3784 171.943 29.3784 cv
175.062 29.3784 177.208 31.478 177.208 34.5229 cv
cp
f
187.812 36.9683 mo
187.812 37.9429 187.812 38.8882 187.842 39.3833 cv
187.738 39.563 187.318 39.728 186.958 39.728 cv
186.943 39.728 186.447 38.9634 185.742 38.0933 cv
182.277 33.8032 li
181.408 32.7388 180.913 32.1079 180.642 31.8833 cv
180.568 32.0337 180.568 32.2886 180.568 32.8433 cv
180.568 35.7534 li
180.568 36.9683 180.627 38.0933 180.792 38.4985 cv
180.927 38.813 181.273 38.9185 181.663 38.978 cv
182.083 39.0376 li
182.203 39.1577 182.172 39.4731 182.083 39.563 cv
181.273 39.5327 180.672 39.5181 180.073 39.5181 cv
179.517 39.5181 178.962 39.5327 178.392 39.563 cv
178.302 39.4731 178.273 39.1577 178.392 39.0376 cv
178.648 38.9927 li
179.052 38.9185 179.353 38.813 179.472 38.4985 cv
179.638 38.0933 179.683 36.9683 179.683 35.7534 cv
179.683 31.9438 li
179.683 31.1187 179.667 30.8784 179.578 30.6685 cv
179.458 30.4136 179.248 30.2339 178.722 30.1587 cv
178.302 30.0981 li
178.198 29.978 178.212 29.6187 178.363 29.5737 cv
179.068 29.603 179.818 29.6187 180.433 29.6187 cv
180.943 29.6187 181.377 29.603 181.693 29.5737 cv
181.843 30.2485 182.818 31.3882 184.167 32.9937 cv
185.427 34.478 li
186.087 35.2583 186.523 35.7837 186.867 36.1284 cv
186.927 35.978 186.927 35.7231 186.927 35.4536 cv
186.927 33.3833 li
186.927 32.1685 186.867 31.0435 186.703 30.6382 cv
186.568 30.3237 186.238 30.2183 185.833 30.1587 cv
185.427 30.0981 li
185.308 29.978 185.337 29.6636 185.427 29.5737 cv
186.238 29.603 186.822 29.6187 187.437 29.6187 cv
187.992 29.6187 188.533 29.603 189.117 29.5737 cv
189.207 29.6636 189.238 29.978 189.117 30.0981 cv
188.847 30.1431 li
188.458 30.2036 188.172 30.3237 188.037 30.6382 cv
187.873 31.0435 187.812 32.1685 187.812 33.3833 cv
187.812 36.9683 li
cp
f
199.257 36.9683 mo
199.257 37.9429 199.257 38.8882 199.287 39.3833 cv
199.182 39.563 198.762 39.728 198.402 39.728 cv
198.387 39.728 197.892 38.9634 197.187 38.0933 cv
193.722 33.8032 li
192.853 32.7388 192.357 32.1079 192.087 31.8833 cv
192.012 32.0337 192.012 32.2886 192.012 32.8433 cv
192.012 35.7534 li
192.012 36.9683 192.072 38.0933 192.238 38.4985 cv
192.373 38.813 192.717 38.9185 193.107 38.978 cv
193.527 39.0376 li
193.648 39.1577 193.617 39.4731 193.527 39.563 cv
192.717 39.5327 192.118 39.5181 191.517 39.5181 cv
190.962 39.5181 190.408 39.5327 189.837 39.563 cv
189.748 39.4731 189.717 39.1577 189.837 39.0376 cv
190.092 38.9927 li
190.498 38.9185 190.797 38.813 190.917 38.4985 cv
191.083 38.0933 191.127 36.9683 191.127 35.7534 cv
191.127 31.9438 li
191.127 31.1187 191.113 30.8784 191.023 30.6685 cv
190.902 30.4136 190.693 30.2339 190.167 30.1587 cv
189.748 30.0981 li
189.642 29.978 189.658 29.6187 189.808 29.5737 cv
190.513 29.603 191.263 29.6187 191.877 29.6187 cv
192.387 29.6187 192.822 29.603 193.137 29.5737 cv
193.288 30.2485 194.262 31.3882 195.613 32.9937 cv
196.873 34.478 li
197.533 35.2583 197.967 35.7837 198.312 36.1284 cv
198.373 35.978 198.373 35.7231 198.373 35.4536 cv
198.373 33.3833 li
198.373 32.1685 198.312 31.0435 198.147 30.6382 cv
198.012 30.3237 197.682 30.2183 197.277 30.1587 cv
196.873 30.0981 li
196.752 29.978 196.783 29.6636 196.873 29.5737 cv
197.682 29.603 198.267 29.6187 198.882 29.6187 cv
199.437 29.6187 199.977 29.603 200.562 29.5737 cv
200.652 29.6636 200.682 29.978 200.562 30.0981 cv
200.292 30.1431 li
199.902 30.2036 199.617 30.3237 199.482 30.6382 cv
199.317 31.0435 199.257 32.1685 199.257 33.3833 cv
199.257 36.9683 li
cp
f
204.777 33.5181 mo
204.777 33.938 204.792 33.9683 205.197 33.9683 cv
206.232 33.9683 li
207.012 33.9683 207.192 33.8638 207.342 33.1431 cv
207.417 32.7681 li
207.522 32.6479 207.897 32.6479 207.972 32.7837 cv
207.942 33.2632 207.927 33.8032 207.927 34.3735 cv
207.927 34.9429 207.942 35.4829 207.972 35.9634 cv
207.897 36.0981 207.522 36.1128 207.417 35.978 cv
207.342 35.603 li
207.192 34.8833 207.012 34.7632 206.232 34.7632 cv
205.197 34.7632 li
204.792 34.7632 204.777 34.7778 204.777 35.228 cv
204.777 37.0132 li
204.777 37.7036 204.837 38.1831 205.017 38.438 cv
205.212 38.7085 205.498 38.8276 206.592 38.8276 cv
207.897 38.8276 208.408 38.7827 209.232 37.0884 cv
209.352 36.9233 209.727 36.9829 209.787 37.1636 cv
209.727 37.9429 209.367 39.1577 209.158 39.563 cv
208.362 39.5327 206.922 39.5181 205.693 39.5181 cv
203.742 39.5181 li
203.023 39.5181 202.287 39.5327 201.163 39.563 cv
201.042 39.4731 201.042 39.1128 201.163 39.0376 cv
201.867 38.9331 li
202.542 38.8276 202.632 38.7378 202.632 37.3579 cv
202.632 31.7632 li
202.632 30.3989 202.542 30.3081 201.867 30.1733 cv
201.492 30.0981 li
201.357 30.0083 201.373 29.6636 201.523 29.5737 cv
202.228 29.603 202.962 29.6187 203.682 29.6187 cv
206.863 29.6187 li
207.822 29.6187 208.677 29.603 208.873 29.5737 cv
208.887 29.813 208.992 30.8931 209.067 31.8979 cv
209.007 32.063 208.662 32.0933 208.512 31.9585 cv
208.347 31.4331 208.137 30.9839 207.942 30.7729 cv
207.658 30.4888 207.207 30.3081 206.472 30.3081 cv
205.272 30.3081 li
204.777 30.3081 204.777 30.3384 204.777 30.8931 cv
204.777 33.5181 li
cp
f
219.702 29.7681 mo
219.702 30.0386 219.747 31.2388 219.881 32.1079 cv
219.822 32.2886 219.417 32.3481 219.312 32.2134 cv
218.907 30.8188 217.947 30.0688 216.492 30.0688 cv
214.827 30.0688 213.042 31.4937 213.042 34.478 cv
213.042 37.4634 214.767 39.0679 216.567 39.0679 cv
218.381 39.0679 219.221 37.7632 219.626 36.7437 cv
219.747 36.6235 220.107 36.6685 220.197 36.8481 cv
220.091 37.9585 219.836 38.8579 219.626 39.2026 cv
218.817 39.4282 217.751 39.7583 216.582 39.7583 cv
215.112 39.7583 213.612 39.4126 212.546 38.6177 cv
211.466 37.7935 210.642 36.5483 210.642 34.688 cv
210.642 32.8579 211.421 31.5688 212.457 30.7134 cv
213.522 29.8286 215.052 29.3784 216.612 29.3784 cv
218.142 29.3784 219.251 29.7388 219.702 29.7681 cv
cp
f
224.427 30.7437 mo
224.427 30.3833 224.427 30.3081 224.067 30.3081 cv
223.137 30.3081 li
222.042 30.3081 221.727 30.9087 221.277 32.0034 cv
221.097 32.0933 220.812 32.063 220.722 31.8687 cv
221.037 30.8335 221.112 29.9038 221.217 29.3188 cv
221.277 29.2739 221.352 29.2437 221.427 29.2437 cv
221.502 29.2437 221.577 29.2583 221.637 29.3032 cv
221.712 29.5581 221.757 29.6187 222.897 29.6187 cv
228.477 29.6187 li
229.466 29.6187 229.692 29.603 229.827 29.2886 cv
229.886 29.2583 229.932 29.2437 230.022 29.2437 cv
230.112 29.2437 230.216 29.3032 230.247 29.3481 cv
230.096 29.8589 229.992 31.0737 230.022 31.9282 cv
229.947 32.063 229.542 32.0933 229.466 31.9731 cv
229.211 31.0132 229.001 30.3081 227.876 30.3081 cv
226.977 30.3081 li
226.617 30.3081 226.572 30.353 226.572 30.7437 cv
226.572 37.3579 li
226.572 38.7534 226.662 38.8735 227.336 38.9634 cv
227.937 39.0376 li
228.042 39.1284 228.042 39.4731 227.937 39.563 cv
226.961 39.5327 226.211 39.5181 225.537 39.5181 cv
224.817 39.5181 224.037 39.5327 222.987 39.563 cv
222.867 39.4731 222.867 39.1284 222.987 39.0376 cv
223.662 38.9634 li
224.336 38.8882 224.427 38.7534 224.427 37.3579 cv
224.427 30.7437 li
cp
f
234.356 37.3286 mo
234.356 38.7378 234.447 38.8433 235.136 38.9634 cv
235.556 39.0376 li
235.676 39.1284 235.662 39.4731 235.542 39.563 cv
234.731 39.5327 233.997 39.5181 233.292 39.5181 cv
232.572 39.5181 231.822 39.5327 231.011 39.563 cv
230.891 39.4731 230.891 39.1284 231.011 39.0376 cv
231.431 38.9634 li
232.122 38.8433 232.211 38.7378 232.211 37.3286 cv
232.211 31.8081 li
232.211 30.3989 232.122 30.2935 231.431 30.1733 cv
231.011 30.0981 li
230.891 30.0083 230.891 29.6636 231.011 29.5737 cv
231.822 29.603 232.572 29.6187 233.292 29.6187 cv
233.997 29.6187 234.747 29.603 235.556 29.5737 cv
235.676 29.6636 235.676 30.0083 235.556 30.0981 cv
235.136 30.1733 li
234.447 30.2935 234.356 30.3989 234.356 31.8081 cv
234.356 37.3286 li
cp
f
245.951 29.7681 mo
245.951 30.0386 245.997 31.2388 246.131 32.1079 cv
246.071 32.2886 245.667 32.3481 245.561 32.2134 cv
245.156 30.8188 244.196 30.0688 242.742 30.0688 cv
241.077 30.0688 239.292 31.4937 239.292 34.478 cv
239.292 37.4634 241.016 39.0679 242.816 39.0679 cv
244.631 39.0679 245.471 37.7632 245.876 36.7437 cv
245.997 36.6235 246.356 36.6685 246.446 36.8481 cv
246.341 37.9585 246.086 38.8579 245.876 39.2026 cv
245.066 39.4282 244.001 39.7583 242.832 39.7583 cv
241.361 39.7583 239.862 39.4126 238.796 38.6177 cv
237.716 37.7935 236.891 36.5483 236.891 34.688 cv
236.891 32.8579 237.671 31.5688 238.707 30.7134 cv
239.771 29.8286 241.301 29.3784 242.861 29.3784 cv
244.391 29.3784 245.501 29.7388 245.951 29.7681 cv
cp
f
248.487 31.7788 mo
248.487 30.3833 248.397 30.2935 247.722 30.1587 cv
247.347 30.0835 li
247.227 29.9937 247.212 29.6636 247.377 29.5737 cv
248.097 29.603 248.847 29.6187 249.567 29.6187 cv
250.302 29.6187 251.037 29.603 251.757 29.5737 cv
251.876 29.6636 251.876 29.9937 251.757 30.0835 cv
251.397 30.1431 li
250.722 30.2632 250.632 30.3833 250.632 31.7788 cv
250.632 35.2437 li
250.632 36.9985 250.827 38.9331 253.107 38.9331 cv
255.027 38.9331 255.612 37.2534 255.612 35.1978 cv
255.612 33.3833 li
255.612 32.1685 255.551 31.0288 255.386 30.6382 cv
255.251 30.3237 254.921 30.2339 254.517 30.1587 cv
254.112 30.0835 li
253.992 29.9634 254.022 29.6636 254.112 29.5737 cv
254.921 29.603 255.506 29.6187 256.122 29.6187 cv
256.676 29.6187 257.232 29.603 257.801 29.5737 cv
257.891 29.6636 257.921 29.9634 257.801 30.0835 cv
257.532 30.1431 li
257.142 30.2339 256.857 30.3237 256.721 30.6382 cv
256.557 31.0288 256.497 32.1685 256.497 33.3833 cv
256.497 35.063 li
256.497 36.4731 256.362 37.7632 255.537 38.6782 cv
254.876 39.3833 253.782 39.7583 252.567 39.7583 cv
251.427 39.7583 250.407 39.5776 249.597 38.9185 cv
248.817 38.2729 248.487 37.1636 248.487 35.5278 cv
248.487 31.7788 li
cp
f
262.001 30.7437 mo
262.001 30.3833 262.001 30.3081 261.641 30.3081 cv
260.711 30.3081 li
259.616 30.3081 259.301 30.9087 258.851 32.0034 cv
258.671 32.0933 258.386 32.063 258.296 31.8687 cv
258.611 30.8335 258.686 29.9038 258.792 29.3188 cv
258.851 29.2739 258.926 29.2437 259.001 29.2437 cv
259.077 29.2437 259.151 29.2583 259.211 29.3032 cv
259.287 29.5581 259.332 29.6187 260.471 29.6187 cv
266.051 29.6187 li
267.041 29.6187 267.266 29.603 267.401 29.2886 cv
267.46 29.2583 267.506 29.2437 267.596 29.2437 cv
267.686 29.2437 267.791 29.3032 267.821 29.3481 cv
267.67 29.8589 267.566 31.0737 267.596 31.9282 cv
267.521 32.063 267.116 32.0933 267.041 31.9731 cv
266.786 31.0132 266.576 30.3081 265.451 30.3081 cv
264.551 30.3081 li
264.191 30.3081 264.146 30.353 264.146 30.7437 cv
264.146 37.3579 li
264.146 38.7534 264.236 38.8735 264.911 38.9634 cv
265.511 39.0376 li
265.616 39.1284 265.616 39.4731 265.511 39.563 cv
264.536 39.5327 263.786 39.5181 263.111 39.5181 cv
262.391 39.5181 261.611 39.5327 260.561 39.563 cv
260.441 39.4731 260.441 39.1284 260.561 39.0376 cv
261.236 38.9634 li
261.911 38.8882 262.001 38.7534 262.001 37.3579 cv
262.001 30.7437 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Cicia Lee) ()%%Title: (Southern Connecticut Club logo 2011 v1-o.eps)%%CreationDate: 3/16/11 10:32 AM%%Canvassize: 16383%AI9_DataStream%Gb",KM.4rRoC2JUIKr4Z#_a*9Ws]:4Hu]B]'51#f9q>B0/ro>qi:oP82m]is>06?#UoaW\2TKL=4#8tmNo[=Eg0iY'FSkNAK26^6%G2STR(m]l[bJ%JO[^I6"pZ$7:9Z?OU**@2s8&/f=@YJ.A\"efo\K9PW(`Z>tir3J,1cUN9j8,E-(le!K[]5D%_cF5_[g&V6p7uNZ%'aoT$F'+oTH_'?KZ_MbeVsHkbK&&e>j/[1s?$rP$IjaaGrc)l1M>)>`j1+^U$ndV26?"?&5DU[#^ig-r)Q;/`j2p4Q@8bt=X$2%/%id%lsKN>X4"3/l`]ma^TJXah`"o)NB%m/"GiMIURLN8%qbRmT*V9&b.PJ4K_m)SS+j2n5_kmmQ.D^]?jKAfs[oH*LS3J!et3J\Zd%p+efNp=b^4mX]0L'b@h8iV2DW2%o[W3s?R;Q+]_QK0[ekA7+=,h>$$$ntW_NM+=p-e^<HNqgZCq)g9`*mrW,jg5AJ)qV;HeL7j?G%k1QC@p[47dI=J<LI]'EZO?NN4#/"c5hSg->W'P?ZFPeO&]E7HtDYnK;U.rN/?4>lnbJDL;b<Q&a^5(U:EX8u6#<%a#F#sl5i<lt>%X_6+,RMmQjBmBUWG%M9'jMe(pY1p^dYR:p_Nk1cLFC=9!qBcNIKZ=$(s%f!`d?@/W=."Ukf:OA\=B=P:!A3g3'Z@W@mK1FF-S5.h%*!.TI&;5M-4__g&^?<:lHn*`3:Jdc;puf6`h=pGd']Je4SY<3E5@#)/\h7<3?+Sa)iSAUBn)GhRa1m!D8,5?/o)2UIkDUT)'1Fl-%MGX3>-]X'.*/2/dG8sVdj/@8En#Y.29"g6p=tRD@CAC'Mh.kpA<f?AhN!Wk.LK:4OGUHjBh9m'fa&,A@I`G;V'2qNTO<XU_@uqo4%Nc[')k[(%k^Z/Zl&UqcgLefi`;M<qiDZ#>fU^>WuDUSA@$L,Fr32Y4m)".uE:-9jU&sr)Lh+<hEp4PNd7]Rcr]LP)9ro#9$&&7-u%["Cb(?)&FXT/[2BiuKJLd(MslI`K3b3nf)]:7*7/^Z-`<&&6RGP*?MbBmj6KAH4Gtq;FI]r.sYuMYP2=+j(+<`16=kF_PIE0,h\,%E"#XbP)7]Ih*a,+7JcL8N["9gqM6M@07Lqr86oqf-(B%43(GK\FL)C^XK]&Tjs2B$$`k/WVo3erNjqjM'&O7Ah@ZWEE5thg3mCFo%drkLWR$2-F1t/$0DeOlkr($=IBKP$Kg1"nn1lM0oa?E0SbC(RaG]t?!XQdhZ1RF;R5`D(oG^%"6`g-)UF_P0ne$^k(%tBaB[+.Ap%rpjFePQ%9A_LK['qH)DA4G"hCl!G"KhoS[j(P_R+)"QCSqH'fIQ/j=kX4?G&j<smVD)E478Uf+&As<3hIaUGRs!)lNH\^Km?g2M.%Mgb_UNi3>heZa[,bB'5?eHhU0'7Y=.q?d/-jg;ZKBNfubXbu#:@28JNJ&@DNL*cVD]LK6VrUM!1$u.!1MstY8aF0mH4EoX&\/,&a%ip?71C=IjM&T\d(H*3Y^6AXa`$4+V=*;)8+jiW+e&"'a);bqGS7nW#!Sq5IS3(E0S>d'D5Mea]8ECK`9)Ho=$dVscLeHjd%onaad%]dgF@mNVS/&Q0DPU_D>K$$W0Yf0d3%^N(=R!]sFoaqT8C&(>*K%]^2D#W.2o-W0sDb"6i11XT4X#Q!VoF:G'sBp(Obo-<BO?]aaY%Bu;Z?DrGV>T6Cr\%tHPq(3hH%LOqu?T5c^U\`B2HqbK!L<<;WH7cW44s&K,%.p6&o1R(G-acY#'X+s$`7UU8\*(qdq[p25kQF;Al%mO,.Hf)q=^^cncQ?IarH:(]B2QXIjq:U#1"dae(MR.iS+praY2OV*X"3QF!_]t[J2Uf>GnKTmh*-e`X)>f6g->gXK/'&jP<k'0D\%M&[Hhk,(8g8dZcIWCFsO7qnHg7WTniP+8;3J`MQe%6+I\96!MiO/[a[(L@j?Nqb)`A:Bqj&1.*5CP7p,P]L2kW"O6s:Y81Z3Kujl%UkZ0@!QmL\%6GS&C%61<Z@06(\2mN>pTTl3q'5;n\j>@r^\JA()j#)o2qTs`9?]Pr7WMaqQCsJhrsDC80ql?ZrpUj)9iph.rgW>A%4Ecj!r#P3]k25,(iZ\;\qi/s'UP7R4;732?BsG%4;BpZ@R6o(rPo?[*'%FEYhq?G%VIrNh%Pr1,]@[25D"=K-)oo1aR<-g6A2OZg%GE^7Oht,H[*4_u@5gJ>5iZrQB)ERF:cS'PbOo42;GS/[Ipq9:_8\.LM!i:ocpcnQeZ@N-E.?etfF:[rn;-;kKKE^b-H$;nR2;["a%GVH"0YLU5^P<=tj[Kn$)d3a$nmM#!p%7h#^Q3Peb0oi%uDb/S,nd4fpe6Vc$kTB&589#l;:=9WH!UU$/#l$Jf6VE.p.5`Ishh#*s%Sji4onql7ao!sQ.cAa_1'W=;'_k.dhOL,S.&7a48`X1lP4s7in+\5lr8g52'(QpZRXX,\g>D?10rN2;Cq%LGjU>ncLhG(;.q`nps%,PL0g:<>6-#BB><q$=8cW1b[^X0TEKS&omgmi4cg<s:*#r>+f[g+2F2)PfO/H\ee_EKjGO>kBt#:!:Sb9kiOX,Rq8AKJh%C;TH)Y%3l[>EP(lNP("'TD$PYnsmjKc4(&]K!96/"%Z'=*>ia^%r83V[o-80o8n_@rG.8EcCL'\U%01Z,_WAH9O3a5G/EiF0nnJHPrnq(Y>%9dL9pb)h`LP/U65QS!qrQ!26`/'<.F763]*#Nm:f7E[8?..Nef)61&"Cg0"NUJcsoZ6Qk;q)[c>,#=:pW@Am-rD:WsX:^R(;:m<(%9dili1h:sU5F"rC2VbOF+o>]s7MC_3VfB39Il6O4(ae92Z50f_TeO02=s<9eZqj?ReOhMSnI#NL8D#HM..NSX6&Vgob5IX@Ymb/5%/G^ga2Bh36H$;Yi)^1ed-;cBbQErdr[R._)IqB[(L\r\#dnplBD[)6+0q*9^/CImm&Q#Q%s!P75i\%f;q3_#NmKh>"JU'1]kErJ'%FZjlV0nSC7iK2&*ZcQ<'jL@q4X_=CgQ)$f"*VmhCJ]]l;dK+sHg0Q%+$98_g*9>b.[#&43j_?OXoipPlj>/Xl*mUXiQ<'0T<QWN"%[PG^#ZgfHC8\Cq?=O]>iU\j7-br(K[b^Fl`+i716-0]3P=pEd`NBt0K0KF2FHa!#[3AXhm`I!Cn7?bB88M+q4q'%O#a9NPA.aF0P%;GJH?Xk!oAW[WDl>1O85P$Eph4[a$JMkZOpNt`TkZU`ST0onFYiR'33U^s:mIgM/uB9kp5.RjW'Papn+.,b_?Dl)?t4RuK_WB!Au%eZ?t8nck$I@nKNS_jLN'2pC85iXP]/U5\3$GX=NZ>k+0&c)dcgej4=$R$AK1IM4<b49uVd+Lr%5N:M4T90:r]BofcQO[o:"c"%h?%c.*NQDK_(R+@Kj:<D6;TC.mOWC.P*c@@\hmT!LnU2N4b,7d_3BI8\)u9+Vs6+YY?5LtBl!7o]qNRJ%b>'/FZAp"q..1HXlC*Qk#k%YkG3cNl'MeUmJ*A&rV9MAsR2Ahb!8dh9EO5Zm)c8*3U:1qhC];:$()f_2hWtQ.>[e%t)S8L%HZ#Nf"J[n>a.mWnM-,6)[tJjo\Yp%%!`VG9&0@n_Z=-/R,W\h1C[W*9s(6P7?hRnQ5Z4cOhN:'.9ZgV7ks]Qf4MQcmlKIrVf^LSBqe/QF/5XIm&"^rDa/r"<PrLjU9sns%Ku^B23C)qG$$Hr^\r,nnT/ou*,o/7/P'h20]gpbXaipWh[FOVfnFW&rWt3MFG^dm"_L&%DDt&dil/1TfK6T-ldK-iTqsaC]7X+`S%ls+ihYCq[X]d[343#YJGO8C;WdWW#S3/Ym48*se'<do&\=+!-@;;P?(jL9bUG7n!2h;O?I'=E/R;-]uVE3oJ+IkJLJ&YBJ$B?BND%D>$34]tr'_<^YU>:AL7MBXiHT]jA>.*gJ$Vcb/$2!*@miUL`cq[_ej1BKQEPa]mhfbQ8.V(me9*W'*-mf6VGO1Y-WrT4u4M[X>fA%@r+sYQ#!/ZppBs>0^.b8e!K^n$7ql1^)1YPaW((0qS]&[Q.1?N9%D=bE3$e<q('8",0sS6pNkY>U\=2aH^qQ1c?6f5?!Bh'5+`i)%HJS*o,#8DRY<A=rO*gE5kOBf]>;R:>j.tGuJ07JMQ=)d6)e+G(q;AVCN9-Rne!:u!TI9@A_#g)aG%YH=nJ1.hhmiT'eF%FpXPZ=O%mDmX/&Ys7#.-87KXf5RkPhqXR/:j.$as'7`4E/dW>=$GNGqIEa_8FnWX4_5GRuM$n=_h'-;)<m(gM_C4d<(jQe&I8HUY0<;lA\uB%g5$YUW=^t7#k(1!D)_tD>ueR@Dq++G>.n+#l<uiSqfT(pl>GFWgN@IX[:ZO<X4M*oC+ZH>[@l[6]UGe025b'<XAZH+D,qV+HF6e=%7mkh"l;t[!W4H!,C0/777a7kDeY=$nePR#M60(OB,U,0f,!,k`*B(f)=:]1U22oDV'F(6QHD(W#cj=POTS$LD&_)G::^s-A%"c8*%]KcU;hukrk'.pu`K+IZkIasMWcjtN]pO(r3^>mt^<Us="dt;&\X'o_t$ba@I4\ljK*7+=$WY%r+BsjmrWedn!/:?C_+^Et3>?Gdd%D7U1cmag0n)nBD!%:%f`>iE8sj4^X>^:rhgS@VX?W_VW.:>ko-k6T+N*634R]4EqgL0_9(G1DW>cjjmLp2"0L[U\(#<O-!W+a=!)%>JMqN_DOU&K"3ILHamFgb$0Y/&]b)t\bTeIITR5/:tdtS5\oDCSNuhG'F`"2)Hs^Tr`0\;-V&+r'\jfW\4nEb.)%+F.)ICN.)m[V%.*<s^.*a6fXpfAg'PmW0[l:..K7K;aN7XkqUSOZdLJ9hmo;0[+e-d`$./PFkpgm#;BLt@#b'o8[r2Q#I,u?$e/as-Y&9K.YqVb'f%5qN[H;d?:RNmnpDZD??aV!^(9rkMT,W_m'%;GF/i<N6a]L%6`j?bZC-e<a!=Y532.X!E2I`g:7ceQVSK_XV+bZp7VVnj$ml.$"m2%'S85C6*'99=Yjk_(200>=slT4I*f_A['9sA=dSb>UK5nHI<@en7F`o>&dP]P)duYQ:so?X[q[%ZT_/e.^Aoba.L5Yi"M7Kq9eLQr%BsZBRpt:20$R?m@IQ])NqBOoh:%G4`C]akC.rEC1(Dr,_pL+/C.jDM]29FMUll>@7lm;(u,Bm7S@&lH$omme\'T&h(&DWG'PaiL)%lJW+^$=sTV$tTlZ%V6/^&7lGb1+Glc,bEHPP2J1IQhlKK#[]LSUCFlVN[2tM(\H7A#u1ae>QmmQ5u*lQ3]8NLT^2`Eh?W-Q_$F#V%(uUuDJ>AK@JXLJm>R3#&IL5@2#^3!Np7r22JP<t8ftl)r?uZ<O*Zlq0#c=O--4/e1!?>e[$]L>Q7SA:%!qQY//-L#p't"[1<^S?,%bHo"D3V'[GJ.;.e(?0m#*[fNHV]^DS]Wo7k3ab3m*Y6J/!+n(kj''DBpZj,%OJZQ]"Vqs%"^;DYJQ;ECD$oWO"P+KE6d!$B#"`E2%C%b-77F>]*7I`eI7M/*5%V2nG,XiT)\L.!J+[rsk\'C.gNM;ELm?U#O;8Q2M;9Db]6eO\+Q-s!&l:;QF`-hli8%D.38(gDs(W[(_%!*"NBUpM8=p+E<PW"#[99dqfm';uYE(T84M)lt'Y+/g?],>q0,dQB@^W\gQVOh01Ch-I!:X>[f"(8NsQZmR`557M=Q5YOgaO/-&*%7<56T,%^>A73dLqQ"$S)8<ZT%`Mt5LX!I)2Vq&si0N5qk<jIn>10-,10;VcK.Q5]"-JIEl-SZ1^q^F*Jg/t_fBP5H8U9,_W9D4Z&%0&'X:\nlSUjXk3,gX*sl1r!FKQ2NQl0\KjB^aU4-6Cj`'_JFt7&XG>bOg2a5(:]Sa^heJApt!RX._G"]Ri<i(9=C/Qm#NH'Q.o2D%:%^sF%#5bL@_'qV\WQeV.icV`?[d:k$V>A3Z:3Z5Ee%M;5@b"4;p%KqaotC,9hIoUEY2jcV$,nuQa24kK(@oe<6)/$Jg3^^7:D\@%S@TCY'I+<f8.$#f;]p;5P<pQ$':]%]]S)G7iM.*m#),ZIe54dA.55j=kt<ao4HcH%827HH!8<88>1-'GTU/;.do=Q>Gr0RXX_%3H%Y/SW=9P$(SA2\!Em&Tn_=\ckXZLqc*aVNB+d4/9rBh(h=P`daIF%QY%9WB<XVhJGCg=:q"Xu0cr,O'LVBk,9-MNX3'7iGT9DJ;b4%gno2XF_Q)9da_Eqdgr8]%\t!9AQU)9(We^oAr-X@,2&',8qn*U).YQPCmT]C/Zbs*3@d%?b92MQA<9cRp7/mNrc3uO-hCoqHs+Qm%ao#Z*='@L)9<88fIKW<?Hr3iL/BcWoj+8G=5?9o,WZ+qhd+r^J?oO%'P]G_:Q&-giKNIl<$>>G[7K.G>QR919*(<]o/J0=?bT29/%"+#u??M5nB8tt[La]LT!c'92V=28F(ZL(]r5*BMO[:kqtaYj>_^bV"cZB<Ao?X>*ihhU+C]l^5f('Y._8kkf5CJLjCPnMNFjf!5.%Y*1*?%LT?g2/W9L`XgAdK*;_?2G).?WVMU=RSDaX;g@%2hDVXrgqqh.@,lhD)k-rVblR#eDufas!l^,A/>uf_RHK/JVi-eO0!FJ^%nH.Y(N.%7'./D^KC1a<V3QU\sS=GPu8bq<5BmUPT\Y0M]r&GQ=L7VJOK$]fJ6d#]+Vb4ITS%jE<Im/EjrrV-!Z7%pf^NjU[3thPY%^8aeqae*=6nh0j*R5kGWjBn5LfpBIg:_6n/r?][6!rr9SQ+Pb3]4-Ts2]/&8^2D'upBi-b,mT.SKmdtk0"?A@.`4NVKPLa37^mt5%2%RWLmcMa5\6'@Q#B4g5!A[NW*EOlT<PliJ)7#_s>c/biT4m<_nmKJ.P3>t]b1#sSjklFaIh!C'\Fqdo[RJDZ"k\DLUm4?eG26!4%Fq'fE/$<g>/:;@Wbe1F2oI5%dUg4LT;rE#aE*k3?NG)AoD(EO`l;`Flk_@2204;k=!eDZq0_,K4F^H36\8t-PCs/$G068>U-'[Bm%_A;q[)it7g&g0:<d.BlK(hQhl,$)>_/!9.CGp'hB2eTS+N1nXPTW/E&HQasEG1c@*%GE[)U(V_sb^A;!`4.Bp_G%A^X<d%`rJBHV%@ho7p9?j2pK<nn>;G7n0mEqEa>g$15$qLafMTUqgEhg^".Lq-H%,*R(I`8X`LoHXuk(&C0B/Uf?B!a)X?,"pPKJ*=d&_UapH"Ok?%B$/P3G'!)@0ciS6(aV!ni8Naui,&Hs#43>%MX<nGCH((:"#=afmk*r1W',+8!`+87C4JC>+M.qJ>*"1J6f"%11@FIpntbKg&j&gG%Gp&;'R27`cK$7@\#KQI1)(&Q&2[ffDEYgK5\IRsqB\OH4Rt0-^m2C32_9?*s.BZ(I)bBc>;5gGc8_q525h\\DLVV+;Sg_sg!<PSS%2kV0k2s,XL)eYs*PQm?]-_ZWEZ=aAXRC)PRbFEamE9Sc:\\KOWrZAGZJqR0WFqYFV_d2<J4ICD0T$>EZE&Qn1]HqSPah]oUN7*9'%G*rf.ZAF[Z-a6kY``@<8\2Oq1hRcUXS,du5@n?nS5j_91RDn6'c3bI'+?RYRS-(S9c.["kfTDGd9CT>#<e.5p.i>NaeV;]q&QYQ1%!sH7B4buFJNB?`>`iY'4X&>/@Apis'@c2;2hB?0e:L!<NgTUJPp0$20#;b(tZFBr";\f<3oj_]>8k%8*n[+7PG9FX9Pq[=918`f6%brjLjSH.XZ[#C+JhT^Qk%N<cZbQ7$$qBZgiFN>M,/bgWr6Rab($bp.I'?FW(C_]\'K2KW;+>=0c+jgZbO!(S*ZVA>*#c:f-ji$EF%"kgjUA*"=432P`9YsI<H=mZc*<USl>dYVK:Mub]uJe5@e9_6VL9.]![$QM#*I>I5t4rWau^''#f"dYT;6D%VO'8.KL@%.Jh3Auq@%Kj"moKea+E7B#GC/O5ioO!)<H6:/Hl%O2^S?*S6;%HQ/<1!B]k"9Y#MORu0%!*H`t+m\p;:E'UJ^c"`)`r]C_6H*7aE*NQgD4?Zq%"(0<2@$_bn7\1OaJ=05!e0+u(IHGeh7*,Rn?h4JKNZ&:qE-[%sJW\4J!WT4t70SU6C1u\T:k9cG1B@V_!Gu0t!Z(9p-]eWM:#JNm%iXEth+"<4S&<.nGU)h9P&geTZ3:6kQ9N^4u9Gi;BFP=jXjU!-i0b=F6"cO;'KJ:b(/c!gG+qS,Im411(,D?j<LVpu;5s.s;7j-L!%_DMs`LB)E6W;m*/h62J>ocho[K3RnKA8T'<O6D%OK,dYf,@in;d6l(`Cp`+_5nF5Ko*?$Bm>M9BmY2&c$9qA"%NSnP!#!CX?q4b-%6@:M5i2YmlUS\#sL]WpB-#Nf]=J!C\[6gJ:Y'>DoZrog1"SP2U@3HhoNsL\LQDDk<#RCI8BCc7WY9XFj67CQ(:gQ"4pjOA#^5a"`%C'oN=6;r,HTR]5'Zo!?ol=p4hC,E&N06S-9dg5/P'.=<r!]kn7&0PaY@'KD5?-<_+KgK>?#2:1j%?.Y_ZBKn)7I.`.!OdR!K%LGa%@UW6c6Hfq:NiD\s,9Rm:5)YdA"DVc2=j1kBmKsd8XCJt!60,>F$!fk?U_&r%W7_:f*nu]'@bjPYD(4;%67"Kt"W6FJ9]/!KVEcn"%4b6"`<$rs_#=&R9D3b9Z2Ba96PAm!<Li=/U_oR[*TO?<8.B+Af0F5H<km:Tr3uf?X"SBAM@)cqh,QcP&blWE!N`I.-i=U*ofjus;%TjXc;g+5[SR7L2Q=X0(R!%)keRR@5"A6k<IHp*#cGk"lKDG3`Wp,3E6.0nc+n,&!G&6+m.UlB;/=&c_f/N<ba--0@9#U;nb+OI@2%G&+"/Bia<$-G*et!#R$YU21pI8M8S9':`_;!8@N)VbLS-!Zfi.4PMC$<au7$q<VhF]V';*ciP.9(`6f72mbEK(-"skN]aGXha;"O%]T6QKd(m*m4[EVhXRi)IE\-"#n[B,3)=eos%0Er%l`pf3A1f),\M:5J@4IIPTa.&)\qVZ0$",MQ@YI*8:Vaco\o%8W!X^I>^N]h;%#o0ih)P(.;p94rn@6bM^@efM7Nj*=_DkJ<jS!=*=[97%nh`JO^Q':\ClQ766*$/hFqI"M,cj[-T7)6SNg--q9#-apTEfO1=#BT?q%L!KFH)XI/<b^od$GliaG0g)@6'7f0Yg8g',Gn0n-h.!VWnIurnU[b7l%=jT71CdH=Ghsh[8f:pYR1KX4Y0UQ1CpJEg"D\j[?ZhaF%!"K+W5`C5E@+KR;_na8q+hKBh#ke.h`6=XbkPGqED@;6)$=)s`PJ+dpcsaTgk*HeoHok,31!g4/%J2eH5pG;h'WB(b$i>Jq,iKTV%^j`ct'+*ka]]B3c2,EO@[[5[9Ll+k_JZB2'X9@sHK./n3'DOK?#uAMU!/t/e!I[d8"Cf'\@S_\jmkb&qD;,[c!SMPt3k!@JO\`g[%4QMSo`pl0B&<UE&LUf%'=#lcY'FCpJ!AgW-#Vk23$*[5u4905>88eKA7;V7#F[uO=LR3$aDZG_LN`V$j&Wtug^4J^e!.'66RdX?n%(U-XHYd<jdZG8G#V/`)e"qbOT-@k\(H3+t_&@moFWNfj<e7'Kg8--OX1Bq5po`S6;1ZM?aeNl'O"bnJ!'+)LFjkp9WDTI\_=g*?.%CP].q4Ie9<%IjT,huJMheHD$P":E%KbIiOZ8]ZP7">tbW_$+43nXU'Y.nH)DB"AoE"qC_Uk(%)(bRj19Xo\ut/VeFX":PD\+VC,1%K_^"Fi94m'SMDrhi3_-OKk0m^<,!,@5_hub`nDC886I(.(I\[Xb?*\`^5g`'cup(BdPb,N&%C4U:S:$o!'2/kdNKsBN'.SG'6)N`%'6m3a:r/-]5RX%kN<&>"]I@"gI8F:C-%O6mYN'\bU0F33FP%_2S>pE,YY3,iW@nF'0"SI+j8o?6V(mE3M'<XX,gdh<HB?N&_,*,r%!5Z6#!lDG>"@<@'JkK;RQ>W;0JWf#C2Dr/WJRPBB1`AK[jKm9\`>`ol>-q:d!J,gKe?Z,A0]qY`#\e5i#cYI-K[U8BO>Td)&krr&%S-XgQR0%=l,%;Lj1+`J5X`6YB+ds>f3Fnom.KBm0;".qFA@SilAP$^6S3Y/Z8]JOlD"4jNF?$1?%Uh7g,/gp-Edu"[`CF-"5Y!>2%BT^pLd#D.:_N53fJpf7l5jIU5Z%;),[[VfQ_PS:f/"XN`6,[(A<EfK@_7SoobTbEqOcZgR4b;p7[n;)i?sI`*Sb5.?^d1c<4q51.%h=#mIiVPX.Ka@gA4c8#=!_2DJeOm9a*ufN+'Vb.$!"+L4Ts([%0;D-V3%7p^"<R;PiBf'$X2(DFZ1fAB/&7pi/k`9=V,W"PJnkJZ%(7H"3JF$,Wjei*G`&9@h-(q0!>sJDL=u?>H*eg4U!(/,($+HZ:<Pm5L]'1UT*,0GgJ0tVE%-+C!&V/LLb!O$a8t`/,))&(.W`abY%-M#N:1#Vg`ZrMC;0X.t3;]u3T`H)7CMb:huBJZgDkGBU4/='EkH3gnHg)qlWK-UR>[<b#,>QPHI3Oj*`_A5hBA[,=U)E\&2P(A(D%_f5f`Y#[WF-h+AI7B)'j0:t"2,mH!n+MchgFXA5J`NB7M'mKLReKCLuE_.fYQ$NSuE*BhJSlb,D_c+hqc`n\N*7(BN:104*EXeG3%$*a-+j(X:p0^u$]S^G*sW9edZW;rUOEZ!m'*.N.u/q^PgbBboEh2'<'=1J@q=a[7-@;a-W-BTZ;#/n@@U`rX3/mM!b*2Q<j#oo;"%'4I]40[TeK;Q6)&5V&X$mMA&',WKfZR"]OMc(Qd3fP-Bcl3'LC?rab1&;1ar,L@1Z[Ac:o@-DXhj(WEF)7a1OnnnF7:[hJ/'I9pV%/V4jK"Q/EuVOjej,;'3k.M+k<NXhiceJ$S9P`\e4+OhGTdV(XWXHU48JA$bSg:UdT%`gq)<)H+m:S3[G0WX10II0Fs+CkV&m=hBT%<%GL!OR(7t,iq($oTX:r</5bIc=h1VF#C7sNq3\q-=m9.L:imA0kEU5nCZG*bLDQ&>T*15e0?=@0I2_%8oWVs^n_eYTgTMip5UT\%k*Qk!INmXS3sEGl*AN[E!'81K6B'Cr@)@b"S7sug=H['8Y>SnU>!?I!0LZGBD8p6=0*374.57r6A2-?RQnU;'0N,?L8=25o1sg5a%[\:T)!4-ulr<Z]=S5e-15YaUEnBA@3\j2tblKT"q:BbhAiWoHo,9[2jp]Qu'(]_okrO/sLLHqPCHCrJ!B`bADCMlXA*;!4W/qH>(%D*:[eK)'M):D9Cso4BLRHdjmG[TYC^0gciSO?%iZVkmZ97D9'"3JS@7^^G[Qc'8^>>R8jp4MB@g:aCq8@1RKak:Zi@UAu')W8ntd%9sb*cS5'*KF?,2G!%`2(`E;$XZ&YT0NnW*8:;1CKobeSVe\3e:#pTG`^t+Mji^nbnQX[=Yp&^->oies7C.JPTHNJg-p6+'YN\)Q=%ZY#o<!*iS:n>s@TD?,GSPRXOG?'j96g>o:H-u@AUn-#=)n\!#B!g$-5YE+^WaC))3(o@W/QpiC36D]tJ($[d1:^"/\XRhHK_@c%$%7:o_`]n$BQ<;;cF:1)W5!Q[-*'q`SS!$"EI??+un48KB2Vd_I`%;Ja=BEA17X9K9#mC3FFZ.?oVVWpi/2UXM#$ckg4GW9C.]E',!%i<2=lQ`_f%q3WW;2FrD:5hkrl6KDk]5\6'TKbbBLqKN&c=MWIt&c`$X]FkQr!Y/.W.aY.$<)pu:FHD#.W`+Y-F(PQU8DE'sd-#P#%7F`]4@1]*Xmf=nreV`5rh_'+59n:UP<`Kal#nkL*W*u(/Hp!fF.2&[s7D=ZO&QbGps%2;nQ](Vm<]4FV]Fa/pR@1?p3%pm)WRGCj%h<2*[fdp-qIlk)\E#9qcW'q3'FE/lEXQ4X:;*`N`,ZWSTPskK>4H.h6k,Oa9BqO[3e_S7e$PlGgDQo4t@nSq(jn0j(<:j<K4Pc!\%'_Zo:qI3,3V^N,_FE1%:+3.P;CR<2DI*]##6AI6Y`b?FM\sAq<7?C<&E1CdOC:`aDk1u%.rMl^D$+oZjo-`GN!R)_>89</FU]1[<%"'5Ob2PVQkV_it.%m>>hE.P?Mg5r67*_p+IcqYplK8@483\:H,+'@6YnGNp"0ER(>pc8\t`0CgN&=@.?b(]o[\K#]Qg9:BE%N@B3%eW]nr*sq`XFaHB%,DfgVmBYBd(5)KK!6R:+$=KaSNh4SB!9b=i_FRJE4Vg5*Sfodc;XLG.5m.KP/2m7lE3VnJ+8es%epJtB'@7=B%%<C'Fi@*]q_cQ$1`kl!Io$'-:WQCrRG?nM]%&2G^Y,EI<%SLk`Ee%Q6Q6+;eY(@ut3hLlrfUCbJW]6,2TO'-/PX2OuNJi@fCEZM.%>M/S$qG85M3]@9<Qj%Q&&glHJJd0&<VepHFITl,$e\toA814QpBB"4,Za\ViE81SkAYXh9U2h%^2&`:M*h6;Y4'S':!=Zu6<RRTS%P)fj4RU0>G-JL$cAK7?C3)H`)535cIo^0TUGm_Ra!T,l=^hIomi!G%?,W"DJ]NiY)7!UtnQG*Pm$Eq6#_DL[@#ZR/'_TOD"5Z_fu%Dr0sX9NRlZnc:o\_QJSK/"BS*GQh_6!)8-,&*Io[LkA*@E^E#e)hg\qE<7^I>b;EU,CENDV.!c\=Zhi3p^%-ocL1;?5)cptS_R[;%A!]^O(-<#^E+Wo+,G3$Og=2f2;C.I]$]Y\+;XUKX&--"lU$&G!6i[QqG8t9.a*C$)4[d$%'8/9!;gd@1^qfZ\A/jc^8(WEQ*HR/N%7oih#aE=nTa<[U&T>FD+qApRYhm7t;nmN@Xi,ID1A+c/0R\X-2@kEb+dgNC<NjI<49Hkk2Q:eQV";(P:]Y1E,0N+JRKK?Br#t!6U%^LM&"rM7T:)?CF%TaMD-6l3o?,#]i(Yr:4%\UKQ3l)MH#dKH^M9]_!E!%.*\!TfjXZahV&,uO_N91Np'c2<T,?^F\>o>[%XcCE8b%nbp>UpIB=M)46tRHor0P<3P<dI9HYZDZB7kFBJVJ4#,9/,%5;"PI!BAen.E&Mt4Iem.kIsYm"Hd\M_s9$C@2JSKS[HKg&^>h=S(;%cu$>WQ?Ymc?"O>YGnnUAE?7^q8q:%V7t-KdfnA+J-g\ZhGpbAA(:A>,mSDCb2+e?KKA<2^(obB=:VDR!dRY`H@?f."k[K-%gUL@Y%M_oPT*XFg@,Rr-!k(1k_*FJQ=#-(HTXT?;cQ)$8`n;-Ru<t7>uSlad?J:>:-ol]p9_04g`k[Z14l&iK?k<]!gqrd/k3P[+aR'lIU%EHi[,713g0C4W9EgasnoElm';V&pN^EP=&u-:!!pO;s&Z.W6Q9'7-*QI/]nXCkRM))JE4rm$6*qi2XO?n8q3k1pmLYp<r6:$)W4T%_5-`3-V.DX<;@&UJm0'#/*%<*#jba-?V-k,GH1k\&OFO9"I]=E8"\Xnb%1=tWi=dI`B+`Y3\Su7;LqV>FK/'.LbJ7s)OV@OM!I39%CuW\@_bJ;_Lk%t>5#As=0YC.Y!=]*Y''W?d)$(a^]=?5M$'LI=Vb:JY6-+)f7oD<Iok5ZI.KUi#b!D60'6mq`AYRY#`&<R[VE?Q4%i6l:S$p:[uffn<>e]+C2!.d$Mo?3n8\j)uhm*I;0"G(G09q"q!UfIUgG=;Z"\SWX5b4-dGK5Ns`,2Jldc3ifb/F'JO\E\_lZq+7s%5nsBRc^b\?*?)`8Gr-'(>h/s<\N:AXmp`OP%C,Q'qiOmp!Uobc%64[6O]l$q*Lhgr"=Xco4ksTf0pQO<JHI$&Xo"5P]`I=eqCJ'c%G;qDb\4p0l[Xj'R-]f)6X@__5+&F3/B=_WEJYu3\V^uDS!>p.<oGX]j$qCZmrXL05I7!;XjrRl:*DhE6_SXXUaJO%\nr^7n+/]Db%rN)4"G#s6Yc8/NuX't3igEMWRS.]3rkR^p%6Nk%!*1<lUm4*'!LU(ln_7Cq\T)\q#.!-!5l=L)?ln4JK=D1'<!+_D+\u?1T[`;/j%H)e.V5YjTNVCX3kC\'n4TmjccVq&IZgl<=77T#.LC]OfBPp`g&A-03hkkYB?_oCb?$q+*<-)a<jGlmDp6"`_(&M[+[6J1\-fS(>!%r/dJnMKs]^iDOWo"qaZA85O;/!I\/_N2#B^rA9?n]MR&8"UY88HdrDCkO-3c+3A.H\[u.%X@a=HDBY@s&!g%@:,.#4&&B<>NQ%&n%`qXNf<!J8igV<f]J`=YYY9L@Ho4<LpQV]S/D1R.6#mT+L0+?5P+RGc<a]HacBHq>B(*i'G`Nf7W6(-1OT[.p7]/Z(<;WhdSdWQ:n%kd\:]aoeE0'DaE`OVg]OT,Vlo`D"umi>>e2X2'a1jqW_I1k@46i"I<b%Nru_.FLsnBM0.p\i2hWPV/,L8]ZN3A#tPCe_XjZW-VV&%,lL-Ob0OsE*>O+52B;:$NWU/O&&Q_fWs\l419^oR,3H#o@cV4LMth9@DXbL/_q#Jh8Zj*/+lg]m:mbsCD#YL4<BUXD<Fp$so/\-K%ZooBk-QUuoHG+U\7.^1i%=eb/Po%<[K(?eD8Jj'^E1'tp@lQ#lW3[BbN$BlH`uH_ND7[Z\3e:Q&[#B)U7R!=n_5`=p94%];"IC&]%Yb\1#!u2?WU?:[Y\1n,%JegSB-BDe_W2SpbSP1)/OJPg@k>cr=!;)dHaUr_3A&6aiR4d=jKI'u*ol5-=$Hq&d3AfOgJEt1[QU8rs%%kTpbGdruNma/M'n9ehWU_!B&q:hac<dcs+@TSm?FfHoP]&U`*,Ld_p+]WAH/d_$-4Ele7!J2i.*Bm0)<93%:EJ%&43>H[ZO!PhQ%LVdUL3'8c0?(P*KcL=N\@m8&1f,]/5S-TQoH?`2%Z&/g80EPYM>f%.NEl85_,tOA`,4SXhpD(FUZS%^Q*!LL1eQrpQ3);\i]qZJZ%*(?pp6/[1qI]g\eF3@hmQD?$WeJUOP6T$O["eIb`-_NYE_O_&Ke@AO9glY;MM;J#"ENt]p4f%3e#99=]TU"qHRA;3P):qI6(gu[Z%6a3RtQ!7CeB%"'O6ihgh_[+np5Rp%d4m31>5HnBUJSjo[HpfA%D^(Oe9/Qu83\bTQ$%aLCFDc\q5dK<;j%jt&95*R!4"#B6=R+uk%^t`(t>FB\4G.l9+Q@:7<dFR0\%*-65+hQ`9mi:.u(?hMt=2tP4oku6";Qh)FN3!7FC(SKS,3liB]*^+=PLkh4!"c<9(VB<c"9Jqh%WsOqA7TZLnY'p@J,d0+fO&%9ng^RFo-\p>B/Qb.eoqVidE!Ip_ncWGm[VLMWC)LJBMr9DV_r_/4>IX:9jP:P)#QiR\c.Aa%h5/]$%*SK8o(#228Z0>T&27Sm,dKC?<*S)*Rnjbs$:DAnOKFt/ld*qB#33UBo#.Ai(,LXml\^]e65i6..YBqBsI$?54:aunu:aBMO*WV)i%dB-(1DPIM)rP5D%4KB+Aiss![eR4$UeKe72?f_V^m=g!?L`]%)Si-'qpo'A%6KIBt)":1+8Do_B7A/Zp"Y.eT*eA?k+pG^\9iY8W%0J[5?j@9=r$;k9n$=aU0B3XnO.s2]f-;Puqh>-@`O6^2@_M2-`FOLAqmcnigGS?_9o%4%c\$t\gQ^"uprJWm+eOb?"([.iejNt]=%;n!eCe/`0eY)`/UaGohHf&Ms_!GdI,6f4SMIau9E$Joseo?hpekSR*)iIg=Y3@Fm.P5p!XJEe;"oEh+[4Nd$;6QU7L)`HR]fmg$b%&J8\2%in10>8?ql?C.7fjp<##RlJP`&=/-Gcu3K7</[qq7*[co.N1D(LPda3Lfh#D,s\-g.!(=P0CV+?!BGKsT?Z)UmLF5YbJ"_U%Vl1T1;;@%NK^7h,$kT@p^.Ali'85),C>Xa6#Z7S66cFje"q+$?*BO4.Y[d2en2iZ2BR,PTTUHq(8=pq_7R1gi(,lQ^0ZHH"0%_hX%GT'qKUO'Bhj"Uqbd\gP,V5j0**A1#G>`-MpnAmCX`EVG'n=;dK,&k)6"5aRkEKjp-^i'HM?DsZ9"ARh>'2tHqkIbs$BDFS4Hr#l7%'Fu0R]d-0GW']OpqfU8O$%;q]g)i3#jVL3.NA<7\YW9u&op_,7cqt)nC\0.^oVNm--R2uB7\^PYA$Dl'(f;==ZMpnoP8.g<oXHWq%8e+u+RZ5*fQ;6_S8L##QI;UC=FGiVM4Kn2=6<#)^;7LC(i[d)W!L)[31r?/WrLGZ&i8YZ6KQ$KQ33'e7cN,$R3H-Qu@Qu[;Y$+X=%XH8^h1Be814)a'IO\F\Ql]?LGBh'0X3BdPuEs+hMFhW;/9:kD;nJ1f/bp$!9QuQ$$qGJ.dNad)H,h<!<40KTbV[QB9q7&>.(68s&%pm?UC0nk(sM_C]Kb?^_P"/ccP6a,9r1BuTm=C?-0JKss.<$1P]\r0FWQu^3=S7LoV%%A=2#cY:'E/R%pH%f>"?,\%a&-c9tJlt.p%O":`>5r1FHGY(C\`t2>nd*4$]G:5oP:^&#c.=^oQ5;l&PkrXN_&j,pU+BOr,NB:'H0@GnZKYFK/'22`7+=dT,q3.c1>t_rbbG,p>%9S(m(-dQelHO+^(RVL\IR%<gsX@6!NdWuX+RLcOkES`5JC6'@dGcjdGk%>*_oXc@;=bU,cLKqBR^[:/ZJonc%2u>K0S^`#bcLZKM%gS.=G5<it,HSA1Y[f3[^Vf_gfB=lIpSJZh35*<W"jkC"RR,_ItqpS]O&(c!o)no/<7ep(6s6>A_D^mEpjkGjnPOui9kFoP3]/gk<%5A(dl?VX*]dpCfoNrOg0mj?YI:V4<c..5:ENUH>446X.D=o;rfgTUJ0@t6*sDgPq+ZJYqHZ#aUr)hUCV7bsj(,Tbu"\=dIkW9R1)%?5ubp+)oS!ZoNgaa[A?ffMQu8[mooF;qQiN/(01*Bq`Vk&<Wi/4R#V$:LA9l/+6bnE$4Tu'TFOsdM.`$n[(5X6g4qH(h8&2dAU7e%)d"2P%0tq]UlZq-gL$]R`SCrZqQ1/`.hZnWR#[3eLSOS4[!Q%3Wj5#%L@M3*)2qTAD&El`AU5!UQRL,4U3df&hjpob8o2]).MQ5,%qt+3Eluj^KCjC"l;TPab>1lahMj>74r9;D#j3rsDln!-DgXX?"e_]f&I:sFS&k)Xu:/1m.:0*@?#"O0^a-54bg@)hMg0i%"rlZ"Q%kZMRND`?[>o%d$KpJ5@I-_iSq+MHrjmeA<VpI(]G]'OgJ=B94$mVUCc!nk@`]!k9*2X0(J^m@d,=6MJTPO>ghM\R"Fd_3MqHOnl[%n[R?Af6YnqA+?ri`d#pG`#lR-]_Y'o7VMoV&6U+&%Mac),dP-L4=ABSTu`sADN/1X4tsU)b-RC]%3uh!Y>!(GV_tg&6>+hnX&t+Y%1D=\L<XlPG7`_Jb(&hSX+&@7Nd4V9uJGm7N[.ad\ra]*,;MDG<X,?KYA4)Y_-rDsJ$F/V+NKfh^ir<%*`@9TNr86U;,1^do@o2q:%dj:bJIdrU"i`MW%qOg'E[/2A?N=&,*/.iaDVk]ILEI;`\m]Cf><NKN:1]dD6f_dQGo]+JGYZTIhQAY#8d-$\gY,=U@S`<"S0Y6lG%Pg1*Q6nArAoph=q[>'.\6_NH$g#kR-.cNX?Z_p&qX"ig\-[Y7K19^A)=bC0ucK8(cLU?cR4#oH^-O$9gZjS4'n(fWP5Y&1;KIeQJ%-0L$%,"0WdZ@p[q-,cAuA6%qr0[XploUX=fdCXnGDs"-YIhpFAYNuN%H@3!kC!tV<)hj6A<nN=gY47SI7#?LQX'@te<7+7J:f#T$%;_Vt3J##pu9$Z$)<Js)[]n=dWBCN0f&&Wd?/ORhgUZ(I12gG)-Lb<GE'Yd`bZ*1a4joUBYVqYu'X@tf2$'lq&bEKTl7a4fBe"*Yq%UM3eep%etaI_EPolS31oHKaC@B!#I0Z8#r[Qa_r/qeCFTO,=[W?aT!n:rLR]ZISW]=PGU3n11utmM)`;p%+Vu^3No^TAG`(H!7sb%/R+S?[!o:XjlU:U2>h6p[dKmh[:!n:!Y2Y@qm*S,R<;/^mWdB"+3/#6J+B[(/>@&d:J[;K2AAPT<]qc_RWr,2s5to\q-qIuCf!9$%UIW""[#FUFdm)AYg\lTV4,A7Rn`oe:rBa@>917ppnpEi+$Us,-&SlQcp'.:)D&DoELlQ/.,jC8E.*g]1V+9j^em`4K(C`ZgAb[n;%Nf(4tZgL@.Y\FqdQ2.ICo;eGY[89gYNGI4ZJ,,?Nk2PcWpT.ZEf)LqOYIAO(.ZXP4=B-cdI`BT,g7sp;*I8g^T9lM"^MdnEJ2CR!%:8^2<ITY,LNaeDk(5fDNKT'r3#%q:R.l/??-3f(ej(F"iWr(<3p>^>$RWB,L11a;[5aGD59<iS2Tq47S=k4:X'WR'[NC5m=*I,eL%M=YHm4g"VpWINYtUl!2iH@.h<RkF.F0M9moJseoWJi%>._&%B;JnSNbRjcSPL9k@bL<Fq]=g9m^U8_P:&uZ26K#QH1[8/$]P%L*A%@]B=')5`MMEfjt$YY^R#RUNqUAse1`hIlF_Kq!6&2W_n=(VcVu/Xg1\J;Z#1^3oP>0ZV-njgo+e9[UfE!pq[KOj4b9`\,gP;lmc\%dgi]uLY9&Pr$-Q0iHCUK@T<jj)M/aKLgRq<'l.//],eoJ[);fC#&eS^UNNY?Q'7-[^4KLH$eW1&mE=5JpZAl0kC8UudIt;(T"Y0`%GG/[tYi"Rq'_+mC([jf'ghrErrb[C5_+;/igC0"K5o9<HVIC-X^6]_g#D6?bGhqVRc["?Z[.3$n_-c`urkG*BK<=f1X^[Oq=+$Lg%q@^Guq/48*4tII>2Qrh1=L=&V>K<K6Kd*K%(9L[YfiYV@7Jg^K>!*]SHf"9c1hai88H)P?f#/Tc6tdNd[]sIPY!":93)Ta'<\/uQ%WV5[/lm+#\O$^:=j?M!-F,pii`LW"B'Llqk64$-/e>?@'q(gL_lZeWE-pAS$H]ce>9j3kp@X`B:dTW^-fe2$'*NO"'nD,S3s**FG%pj!Z.PRBotdc#S)2f4P0po^_cdC"8Ker39<N1<OeeJ:0grFN">H-b'<OuN+u>@>n>p8"t!<-J/0pnZ[5(@9]!+QH[Up7ka+p#Wma%X(WU1rlog-lftYS/(tc@r?+XZE&J\p]>[IEepCAR.=!XRE_A^JB%;)['`"up!hW@g37YS'ajDlls2/?ADr)TNlg`?FYm<ejU_e8M%92Wt.L$_3Re=E,$`KPlkms2srn!A-B'_IN'6p!cWP-_0aMGbul`!de^3*fKMlkr,j2/i^4/S@d"\p:m`!`)l6enZ)nl-bjB,58[@%ine"FrV<[*/H+.kP+*b?BjE]Dn%VlrMIk`U$9#rHQY7p/a2sh2jF</p90#b5[L!J/*U@V5m*qjO+`BQGBles?3C;RB+`EC&2b1sh%nA]:)OQXthgqrdo8`.f*Ehdu%1*+EIpmrm!IZqccenidE9cEapV/`-f?>o?'m^l=9p[<]FMXNmqdX='aqk6+8`KRp/\8ujJCA6U#%MtTkopW_cC?g"?Wp6>%$3Q=i=-kqB),k'J]netg'Pl8_,H?X)^JucBd/$+llq8FgT)X(g5lMnG.e(*?X)A\5^NW!EQEk,6)gS'S%%:n5)[B>YK;9g!pJ>K#pNq(Sl6kQHM8K/GjAW`ZGM:D8gk79YJT@PnXkn5#7V:+VZ%HjW;OQB"Y[9KH,poVJ&V+uaLrL:%)IK40-9%J_Oj:GM:Q;2KboN]C)Jp9N64674;;fg=2ZOFf.siBiB5ud^lD>D<amr;'Yt<=`/0RVuHVW3UWc#<o+P<k&=n5nuJKJO8&;`d[9Xl%-MPKBi`R``>[OhPS,sX.hu#<acsu`3//X's<*Vbl%?e7g&NO'/>9dDKH6/FQdd6qAr31QGpM0:0NN^PSoX^7"G'BAOqSFdM+jV5`%?k&"kJtNM*K<Ot()8us52t,$?g<o*fhORNJ*Ei-m).0$)/='gPe9MfgoK9kj/S(*PnXX$AV;D!mU(O\Vn'jSg2o!B,:)25^IhhFB%>,$HFq'kOiSQ#,ARLAjBQS83+;d\Xu'8iXCRs-52X:c<=*+[;BkJbQb3%e`[cs#utOCY")(r`'*D9LPgB$pFe+t^e1bY(>c6cbG[%USring8$\->'a+dCU:G_pc<SpkU1R]AE%lRg?oA5DVfL5he&FKe>rYL=g:0OIZp4;;R9)4p7Fu^iO%bLWEE=O68"@g'o\5KC:6^Y%2Q>@V2-ZWVVt'?@*KtPff@h\g:Ds&:/:[#0<e#p%'T=;kI%$d0rT]F1'oSLucap,d/K?(/AcfG!MAjGpCYKO\$=D;-3?9,7HZB)\%hi>u?mmm6;6uqmJUj9TFjh)]"A2H8M[CrkDXJ^XVoe\[9mn8^BInA#=q2V,Cp,HrLikMDL7$`LeRo]_u.X?)B&MtB,CcRCG_)@*o%eoQ7LD`_,a=s7EX@a<)oI6;6<Se&C9Hb*5'B[G;%T"P,?5HNXu>-RajR/!R.>Jjncf#ME:8/!tSF=5,,0>"o_pT?_?OS9HH`Y9:,%30$*R<`X[cj.YLb2,;@8%^#X5[Y!nig)mCrkXT'rm2)u@9shXbpTCSN[OW(s-gdWk27k<FDG%#IZI`lf&JL@iiX!W%,SA#\Zaf?A%_V-7I?YU4)8lmFXOu-V]Z5."I/eYH*:;AbRlT`j&@hl'WjUulTMFQ$JH><jWbIK]M$:`)3qJ)1drG]mULGfIr-K4ho'>C[Igo+=N%4^WBT="NVp);ce$/!(4qA:+P*As;b%1;5E)UeSj14?>*bnJ/*.^<--WTCI>`YD=T-rigZ:`5;;V\<!DVX$Ne*S$[?sf&hZ&?\%PY%:X%+f1'8<%!`:`e[qsp&p`C0Tmcur<]tn)Zls+og<kJqtT4>B3DI>(:6*n-dSpXl?o35!ebiiOpmi;#Sa7&J_#rEL-O1UV%GD]GH%<lBDL"jq63.Tj+>>B'-ce=Ku/_snJ.Ia;T[a7=p*p#9i<\g^I.5#$*"I>[U1?B])Fji<;JWe,NT9^^%9+[:an@*b+^\GNc@33;]U%dUGAHBqV)qX8RP(Zg$bq'5k'I`u=iu5)3;l?7=grl>B3!L#/DkHt#,tBckA#a6f/@MIPgZRXi$`p,]PqlXAQ_rb9f,b5^q3&:80W%5+WPW71NHU1A)bfU&(E8@u`3_%qfQX/)!']+9/nYpF[cI/!OR\U:j:.[sGD_e.701qBJ2dr"naTAr6;;i]nj)q.VhPa/eZ:Z-;Mb%(#MPQpe@=aHti<R>OMDAl<\n`VZ>VM;;b5E0@[.0e05U4:j)kTn0R`;Y%\F#U[I48/2#Z2Rc^.N^0gGiERJQ.-uomd$mA:?1l=n]%Qm$!3<`IH4$.7$0ZDr$tfT%p1hcZcR\>\jIDWH(ls&mF&g:5E]_bb8VB@-uF^[!G<BW^S]2]pJ8o7DLrV-3FQZLGj%8qB.s`D>XI%fZh[1M#QX5h0agn1?(2FTDeLu]W>0H]e&:bT.f;ol*%m*bGPK7[:.F[0AO:60bMCXNBGCuQL[-@7)mF)'YZ-S.B#\&Xa3M@<d)8i%97>q#VBLX;R0d-A@Vf@MnrJ.S96sH,@8k=.o.>GdYP<?>liP01V6-tDbrVqk?]MBiXF0:7Do^KZQL/#Uob_&^R3PU]](3.?Y6M](%\RWJ#gI7,EMj[pg>5>n`5hdpD8'tXHW,3Hf@Qe@R_<@f$<rF#'XttBii8pon+.rH9YP;p.qoAS&eDrKeCm4Qi_7W3CO\K<\o/btP%Vd-;*PS=;e]l4FVm,:FV$7TPOTPTmO7G!7SXL=7t@`k,;"e2iJ5#(tj]RQtD.b;mP0Mj9?.eh3=6`<o]`JE5ocSZL0WLrbu6OITH%2YE/+O6Hh[)%18>/uto?gkK##E4+:J'N\?5^pLL0ZehTEGm4(ISkJkNVkT;qThg0lYmX%G\Ng+nE0Qm]';0dl$p*iHm=I@Rc,W$p%6e04AD,h\4emYoBd2rIE+:fWNcNjD3TLceaAV\(/pg(@I?77rYauKT13r")G2!BJrN(/G\2bI,]$NL/&Yr%_Q<r#2+We>q?7A=Tu%4NA1S./Uj;Q]`u+?U)FM:Z.SS!;*NIb0S4KhHK"NcEps4nLB*/D80mg]MM"Fq()OM(#Sa:;;Nlb:*kS:Y_ZldU$DeOO4m0[,qto"%@!ll6bQ)5EfI`YY[LQ^r-`PqU3o&RX/F]:*342r_piq+n5FCY%Q`WX-Nl0;G;H2Me;?$6Te8MlRZV1E"h*'EKGgsbM"cXi^Q!eGL%HF$!4@ACi+O^'g_BU*Mf#(p6.Z9FR)*_s<fOrB#tA!P+FmJ;)2-_r8>]d\>Y+a"0gV_^;ibI,`>Hs2!Mm^M)mU[j=?-Q_)GI'$'Y%lg8#^qi7s;2=`&TG.[++LQb?@eS@ruX.d>X(O_tM'ZSrWn!(8E_=c:Nk]kJBh7cah&>h]r$I;ABG7N=l=+^/UCp<Qi$PatNs/E2O%$VQ[n#)^X,)gI$T]DS[i#.()E_!nY>?03e>p"O'Q#%&+ckRYYIj=V#=T:da0.mV&SIdk:cFSfd%n?FYH5_i2'b<t(JJ3=h-KC7Es%(\:Y6?[uo<OP!S"Ye7YNIK&fVo4HY^X`F@EJ3U/Pa`-%=S^MBNGSQTTrJ>o9N"4oQlj]Jb?irT+S8QMB&U5Q!+b$p;h0tar[+)#K%+Zd*_&=J7Ng`:T)\T,L>)%J"\j7d?5:hu-(a6)ca_>AKMq]0sUpL9q9b]l5mI5'?8NsD??*P!\@R,UAV0#)6RbA^*0>dCnF.W69t%YZ$3dj]:`U8!=q8l@XOug7><3PW?q+pF(Y!Z>5H3(NE@mr`A-iq'#1@kYRLs9-c';;.=rYi2UE-DPnATk?O/*A9&T`_6D-u@*^3A%)[Fg$9"R.fPp(2LULU,_gSq`$^[+^]1Pe[>8%j@APq\#&_ff,4DZ#@tbI@6+G-A"(D$_ClJ^?Zu5/\\6X*GIJ3pk=AZPmjH*Za:u%46CCXK@0_\mmP.b6j*_8$%3V=KFioHUk=/&A9Z&64c)6;3003;Nt%Pa=o#gE\$4GAqjg@me_>,M[Il_W0Y)Zc9r6Uh:\!rhEL:[.%hZ1#Hm7lFiF;:[mm$IKELo2ab#^_SaODYL)?K/nhHG[@=08>Q`,-c>;B?%.B2eFc=(3eomE@D8Im2[.QD#Y\d+.3+G"P3(KVA.CC%oDu2qm.JiuIb`>':&+%af>AR/0%lXc%nA?"5((=)Y1,\Fq1>0K:r>,JQT$Q[K*\_HC"'JImG[.6.Z[!0ILdRImb*n+IXM`YWMf59%@k1''Ssnsd#SiAEI1JS=mj4_q*17][b/r),4ADIgio(GReK!Uq1CF74]jSgBYohspUC_j54:cH@L>Hu&2'fS9`A>PZq.#$+TYS_k%KG[eOIP=Pbii+!@4I$n/'u)4N%?;^)RUpAOD=o-eHslLiPfm5FTuVj&Y:e%M6!8*?V5KNpOM<Ti(o&?*Ejq3/2H+#J23H0s8AOP<%ShU^F3Z`]*`f[bk37@=0Ebtoh6n6Z4ArQ8]gbCF<\EbI<i?knAT",qrTg=ARkG:UGP3\oC!GQ[S6K^)26Alm;m,1ECNYH6C.Z0('%XM@tma(p$YR*,GWK8Z=%+l>&#kj^p1Yb8ggK.dHSm377e:kK4!Kc[6SW_`spQ>.+c'LuFu+Z/\22%!b!?XB;q_W6@<YtDXji'?[2%1,)8+bVM([8p_t9-6*CM"p#18*C8o&^"_qpm1C2kG,G_F&tdEY_etg)a7nq@m2a87X]ETT6d<VWU3;D-n&&^m+kE$*p5\r^3btMT%XG5m.M.c:mM,f1Uq;C^UHPDOaWeb[?2&C\S0d_?R*mVHaXc5!7A/.n-$)bZIB*Q@7/^@6M0Y5BmT!6Cb8FO1=2N"uP(g+iL#o[MX%!gr?d0[uPA,@(?T>4W=C&^X>7<W9,^f/M:-l5CLTBHIg)CH1%i(i(Cga%L:tNS:GtY_f-MFXdX.&0RBlTMF!L_D=4C>X_Z9/?7\d%s%c]s1UT0Q3.DNoHt.+X4TgOXZmT]A.IuB%RWpnm>r:j->DLtjFk#%iec2bh,q$K4LXC]O\?'aL0g(B1=ZgDB!:bslYilXE!<O@s%UFm<M%q9ffn=LrqTB#EZEad8@aK4%>4nHH^[q9?b1N$^^L+;^HDsYUlV(ou:QD;!=XZo!3SrP1NZb(8_)`TK3Sb`T"JSCM-%XI$Y%LXjHJ3?/j#32GNa.cP\J.Hh5$hoEp#@UWMkd%Apqo,k8oZ-Uh<p'B1;\KkQ#D+@lW#\t6;5*LkR;@;!Z"[uIX'q(;`I=1VU5P'Ec%?MF5qE.=#^lA1We%>CT,NO!HX>)]BH]:mDZm",Lid^PJfML2hH4IUBP<gKQ-9?GinK#fS^3M1AfOqgLo6a'mnI**\qBJ>"!E&TtK%]GPeKaTejn1<7F@"ef[sJ:]a_n4-iqJ%[rlF%OFl7>JOF\[gsL5R3W[LTY2;=D-9gA3-46^$[j)e)TCpOr8Dn*ktd?C"kI\G<-YA%lJlo-3Z41VgZ(jflMdF03oBPaUt[@K[muXW6$q*1bKi!qgZ<YM<,8nH7p94]7l]K*Th]mOEO9`rC*]-hlL"S+p@pnJBdF3sG$3FH%+BY0EbId0@]4q.J>i$D.Vo,mSin>&n@XQfLiTi[YS8P5e2Ws3$Z)Bd$&*"7,4Ic&'p,9HA`)%HG@QGB%-^p$8@!OsX%sl^cSu%rL%aS/T=5E!R[9BJ-:hX!"U>.G$9g63BI+I;92_SP^<ON@o]N-D#tZY]N`ZaeJTSf%pMSa@'7gAl'[R`'X4h;0R"JoHl=/<p<)]U"R@%RL.PWLS_td4rOj1UUX%C8$gT_[cap<F61(!0-SKIYsp<hD/[eg:\Ni*bJ?BqFUU.:p[B%[QrdU:kU,P.+`d(2)s-#VBeLNq:;JCb%OgFWNG/cF&*]"D.aSXcbM'Qe^ebq=s)VsqffDb\A20]u3O=-5cb:FrN6#QM^6X5'XJ!uUkSaN;%eEqB+C9Z_[[SX$k`?Y9p&DW.u%TSA6c%3HqomlH"AbSf."%0iS2@U;C'20kBD5>ANX[Cpi1lZ'+0L[7;9FM,/*4rSr0%f26F3-bF1M<^"-qcNG4Zm-O`<7om+cbk17%fC$[4#=CM/WJs5k!=ojX/7md(gDu,L.$in85cqaLFQV#cNsmeS*s<]1Eig'Is1-tSN__soN5_kYe/2B\\DN--*Q6!NIV2B(96>4l%0'6+-F#X(((t+2!+3/.P;f?VLL4dL/MfqjiBda<*&Qm??SuWTl6W#eOAQ>nA\tee+9c=\Bc4Cli_.qC@kEmJ(g@eY1'CC%[Qh@rg%\3'd:V"Sc1hTO#FmGk_1J(I=3c=udchVb?ggQ.-=hUlq\o2SDG.U0`bfgC1EQZ-)KBW^%]DW]e5h]U%:_mDp7H,m7mV0`b`'_EQ7%7*aJD72A_5*Krgg75d,^nq7e`o:1N)e51aNbY9YJHndmpA>I!LgN)K-k&W_qjgZ#:m5ZqKh!5FnBYe2K:Cn)O"*%7jIUG;<@,<W$%J`4lZ=:PBVOOM,N#pUWlnJF_I5>Bl\-fs1Z6ekn)%]drY[MLGfA<Z.*VC%GiXKC0a]o#fET-APfIGC:bH5oBQ$r[2oE-3me6]Nu-%+6(ZZ%uSDc70+JY8uDdE&]oYN\Fg7%:2g&(hOR8e&)uH@p&kYRM;lqC`n1Qdk)A(9*4L83UR>W:!AEue&m&Z4/9feFal5;-D5.b%%K7:7+23X#MkAK].,lJqSIRiKIR>f&u=1X/BR+jihT[le&9kP_2pk9?nQeHW;F2o8f_Ds]ZN[e%1.^a2pe=>kPQ.Fk%$Z_X\l%&ON%dchPc0h`mN1^&/NnC\Js3uK/RH'd[']P0N`b?J$.2kdpHh5MQ=\Lg<WK\:Bt`Ont:o)9b/q/WqtD5MX&a9j]94e'UM:5Us=ru)kW%3/&?[qsQ;0SK02BB_Qh#9?%*GLI4hjRrRfJ5pJ)/UN&DXc\!fSIJgf@4G(h+^D`7l.Ui8!3.)2fU%tidl&a:g#"OaO-\HGKHIa[b%R%iai2sbZO`BCG.-h6^P:NK&==&>Hhe]B<%'#DZDNoRGQ]:$LrFO>7K,EL/7^JF`pbWnEBem[&$X3*`)r(DD?\c\\S.K@,1nB6a'%hf"`DjLi<?B$%k\\$nUl@EdDt1NVbk%KSR3=/a1!`[VlNa1(sE6"2H[Y@\!DY9#@D$5tnk+"nKEbGR<]ldVfU3Bdm&8YJ4a&K!2=%G,@n:N0he.4IEl"0E>Uq`<-<mI*dV"Y(^YjO\(9P>t<bmGGC+o,k^9CaAI,Vp+2V_WE:rX!/@lZM`2^^JXoSt1R(*coX#&C0jZtL%cUN-*Sh(ia]UR!&P(dDk:n_O.^<F*9r2uSi'B]cblCug+"O9:q$-Dcc3U'<hj6=s9!F[s`di4<B#28/"8Jqt1XFd(fmWW=4.qe7s%qsiV*UdCtZ.h<^JFg2ZN:Bn_%a7^YLc=ED#K>C7"SLi>B$obCs@C4%#Ks<).BD3Ifb$t$@HaH>RESSW[VJ4.Ko]BHKfZR;:)3j1m%ObBYfpc-&OJiiK/`eh]<qRdC&W&m"T&$si!M;s_6^tfZOhJr3MaL*=3E\<biI\^ktR$8Q4h>6//Vh3lAY<At7=E3*tDW.fk\#3#@%Eh,=O)'9sp(E!Gr1[H-''dDPZdP/`Y)>Buf:7'?fHFKCT0]l>9hK!TXW^Dfc'S?5lq2*SrUBVseVj?PnEGnh(BuZ9_0Q>uQp>!PO%[LSE?R@)hGEfn=<9+p'A8YoH)C.+#+nYmRRUcPIj:"Y<Ch08g/S/`#/'m])U8.9Ial+j51c6)b"[:*[>dXoRRCUMuS:V_F%b"&)I%N=ksXS6,9X/-=UulqcP"\X!g3FjIi=Vu2YnM8b)VDe+W]LMBntCgc7XoSMSo:m5[>Z8lQb_6uIiKL7eBi4-Rs_Orb!O7B$DL(B'1%q+Ka%[Bq!a_TX\L'shQF_lRej.S;hgcP2)q+[k?NM_Q9g?BjU^HG*EmY-Z*Fq*E&C*(,Th_`s>c'I06Rnr6+.^T;PJk&IR`Q/Tbk%<5)Vu&[T/?lVJc6ao2?Wb<u"hVB;9.cE*h=Apn@rRWBjqB?0:/kl8$E?Qa+[-ELB:o)A3%H?ReVGC'_A-<@bJSlarSDT#2c\M'[X%<QADah(-Y\dj:+;o?5GiXm$,@nWn/$5>?=0,:AOO^j.mrJu6*-^)V:AYj#PXUIYcM[V0i%:<S8#+ENDf/P(iod94^i`"Hrq'%o-H%(D[>Xn=q`5fVbWd&tt_Ge)I.F`N5F'Pihogbao:?KB(G.i%30k0>D+\=t7("?GUI^2,`U4$T%^G];aqo]CbSB2o!k2,"%5'0WI1&%HlS+%f*lR\B149)HW5TDgcl"l-p&Z">uo2r*e^F6Wpu%H5>fl]23t;6*'-i$4?[>,+(LC/4W8]M]Wss$@++Ieg7ur=332GN=@mD^%[`7*S</&iqW'/gNIu[#LnKY0T/$^DYj?.]pO$!51ppHF_i(KVOL@htX@amR*EgX,]R,g&JTk-c9.]]6.QY/*L%N>f:&Wi[jhHZh\%6BgIS;/X>48[kn7RM+Ek$Q4KSGl^cF_cJ7KQ>n/G`oN))&Q*UCMFla#gQc#O7[pf"\L$4b)\_dXc\oHd3c9^QhhY49"VKgphB#Q>%@eY9<@!?VP0botTi&YtAJVmMLZ,47<"oQOTh3B@cEEORsA\\F?(mdIY`r5J<r;lShh(P8F3::ar4[q-=D[[E.%DJ)_7%6.^Hr!Q3%Gq^f\@=-.i1biuB/ksg._q2MC;[_D2_d`Jn5#>IT$uh*a\D3@iZ0cS8r>D)]+m9$5+b^n3O&$A$a8L`D)'m\XC40J<A1ZiY8[<_f%>b:ZHj"%/[Wu46kqKUL1Y$=faqp^Ou5!NCVCZ/QOd:S=uV]_E;Bn(uk[d/ZV8n#.rqC_,"<ld]p^OM*$Yk_.oQ2i;%?.TsdSqrGU%&)&,bB->T-;![DjM)gQal!?@jI!jH2A8E=@rQLDqYheIEPiX:+ZTNo*ZT"ITi.k<HpEmqoO]]EhA@/C,].8kad\B76m%f@Tm:]-I%3>oec:Qs!VD[Xh#e!]0hWU2Or\L2jJBMj<lA8LlS/jdIqdblg)GUWTRg>!]"YpLj<Gr<h4lq:M2bfMZYQXOB:YZWm@c&?#R)_8gq%AJ/CS.fno!o+L'LBS/7eY]49ZWT7,/:!#u+?M9XK9:.6Xeac]UE`XJSA4]q$\AD5#`A/ejh/UjuZCJqA!9HXZk31$\/J\VS&W"(&%/N)7@79<p,]c%[O/;9oIaK7eTcL.dRDStfmgNRErKlYf)T=_82EO*U%GgGZf40k/s($B,6p5K9s&>#3P[@#-3>G?NRV"-Kj`+GEI%=Al[d&N<^'WD,6W(V^;AS@&EL/GJ5[5*pW(`<Uf<>LM617)TKT0!e]HBsX,M]*8mKG'@!G,3s7q=>kUK$+JNk6^GhV]q,'Nf&`%1%i_uOMN06_B-!6nip:1H8/XCObmT7f;hK$6`4s_I-'/hosCo[^"/+-T\Hh^6]PBAL4Y%A?KRH.bL'h_uL3#ZiITii?:4)'>VE)'>/%QgLGmNZE4BZZ,*3(IBLDnr30[s*Ybl-Wi:!PaIeGp:5,$mVK%n]Vmmig-Jtt?:TgraF(*8;e-Pnq.KAnrqLKs2.B7tERpWR]g%.=%%t6^RD;Dr%m+0DdV\9krF2X,(h/W+ATCd'm_HloPb=SgU&j:XBke$e?mDb"UqS']/gq:,bT3f(e5.YrLkP"TIdaj\QpYZ!qji6oL%U+<]J]5[#\PKK/[dlRe9DE[m)EFm1:k#f+]^##'uHWTJkIM-.'r!\[&]GD)br-@2%Kl6,Sk+DVGj3F:!61BeJFcrfVUVjTJg)>t=%h`Ijp)ErZA^SfKSIe`-I?Ri1oDrTsBkkEu9`c&!203e1NpQ"V_W^1!oidUpVc2,]rqlnq[5EB%nW8d57hZLo2#47F@UV#QQYfNre%enoClA0dP%_q*m]kE!IVCKBVe/Q[C`9KRQ9NIQVl_s,GC&$K6%KZedX]W^*3LCZiKpYEUBc\FZnqfO-skjP:Uc[PmCJ'j%f+5WR/%IoLG)rT!e<];;XRZH8hipZ]Str'c+JZ99,\>GM*bp[$eV<ThX<aeGW6AD-MG>L.KT/F&dD\$*PajtA3%r-n6-k?U9J='L01daiWG%L:uD*>-1iml2Tlsl@8PVIrs`-S4-fb@C8k%+!caG/]P(,YP`XiIWG3=GL;2,S<n<Mlhkr+je$QjON!u,H;B"k8cF-aIi"Hb0tXL@%YMD-#qZ\T$"uE!\CXpq/He5H6(A5>H_dTia,0@4YiTTZCs5fb>s4?ssf(X@UU45<#F+<&@O%NX6]A%OZc_pHV.rWJcS]:R&MuH\j%EW>LrcZ\mq]m7)2kC0]blq:NHIX(A:s'Fb>.UKlu>*8J?GL<InGJX%NB?lFJ78$iclg<HX**W=0[bgbNe`SO<[N=<%oB6$?+'R4\%nTOD*/m?uO13iBGXTrUgf/q_)#![>bmO@ifIt-?J/c+4_eo%^%j.\bK(+jB_Y<IgKrdK47JRsIB<do8Mr77IGW;g/m^=2pghP(JF%fai!G\L>U&L=XCphtc/:UZ_NbM]UZem`o,1BmeiBH&JEY(N4JuK>SX0o4T.OIJP@@roU[/gUW7AI(fPtm\0ra5Q,jQ(G0LKde`+"%p%-YkO84_%\m)@As82=mrh@:X=7[12RuGPiI/*3rA.F7L]Wcj1n?e=mkd102_`rTrq_iZG[kHT&QA_JeRAKS[f3Y@4B@5U(lg;3k%PJ?>Q^P6ASU<q.9$EM6Z%j194k;%:hF`?rpS4-f"ZC9UU-b5.icZcNuq;9pIY[ap(S\ML'1Hc-VeY5S%NJu<@phdM=K3Zp:IXh5l%RaPL-cQDRSERA"4U9FtW$e,+J2]M^BU[4`8_6nW)dE.$1)+q+1hL9Nu(9P9Y+/]S,XjQpor@>)Z/6eOM8rn0AXfuJe11LY5?1hpZ%#PQW;N$5hk'[OnM\DQ2C5F%/d.VdZ*8#,cT*uD=?MiL9WGeinIj@X%3Z1lijj_5dkq5KNcn's`%kKB$G+6*!fT18+nX)!1nm``B@%qBu1,kBU-)X[dkY9p;V6Q6/e=j4^$8@1TNsX>=14`BiXd+52K'e^a3eE(2AVroqs?o<+9Sgj=G3pUO?mkD0"#k?gAhs)D=cD"`2*%\b=eJgoJ%Gq[]4m=-$[XgeFq`39G_bip-']UH*ORO01YBn^X#0Sm;:Wb1umZAs\/!'Dq'c)32BkH?.BY]1uD0EV'-BmaY[QNc&3l%J+`QUSU8ScSEkZBr=OEApZc+L^#>`s=5X&Ee:(#mc>`.:II$kSoBlgII_+ji^&#YZpOAa[Z*!'cdD>7`]<>MNpA"A(k$Dn*T,kml%Y<HqI>d`a9XEqk]rl1Kh=1q+)oA1!Oo:>9\RB&8Rr\T(sY1>*fB!q3Wb<I*J:ee*NZ+.36cG8^GkPC[ZZ9NhVp$h6CV5(.[O%`>d%0Rcd3V<jR*q&V?9qN[U!d;-fWs*BOZ.L9fq\^f?9j0rB+rhd"\Z4Uibp3quQhrq(]rSHCkZKI>4UuJZVhmq@t`[>Cs2_`]81ue58%Y^[\afO(Oa>-D7bohKtcl[<uhHgg/&=Jr4EdIbc-:<M@PY*QMZAS%_pB2S[jb]DY%0.L<.2Kr#;,(J:6Gg)s`AiauL7@/3\DpaTU%W&T;IfiU.[?99hVm9I9s?*^Dfrq3"'L:nH&CJ#]B;N'CV/[JN"fbB)-3HH"%dJo_*+WlC$s,U\fTI!%mgUW4DK?%I#U)<jT?*ptm%nc*;eXZp-k/6[/iqV4MN9T^l`\t<.A@u?VP?&^(8?N-f[i^WmUcIj]-rg9;M:#2Etdf8b(5FT@$=?=_h<H>"=71Er0]rJ0qN9^DQ%I>6P12[VD9>LS]i0%UU4QdPT_h='de9"s+'DKfEeA0#M"jnne-2gub3)7S]ApS179s!=q[+$G##!5m?)ilZ.JRagp&Rp514X_.aD%J..!S!?GAG5![o:+UuRnT>9gDDP+q./cBPDN0mVim"HM9^f;GEjSnu9JZ:."b-1L=E")p'kmtuYMVFCV2CR4iQ=cem\,jIt'5qYZ%IRA\a-(Q@D+n\$FS3b:cl#:qh7/,@dkP>;(W2!qHJWf,&/`0<=:R<dV^FA4mREqSqqN\V`Q*q;4jgVc^aSU1#Fnu#bVs4(Ea]KU<%(qdRd^oZ)\D]n/*15cm8[9tceLY?+;\Pnbo&U.j<h4:r!/!6ls7jc?(q"rt7F$>rZ&D[2\,l,<IGA=l]:DWQ81nRobdrT$Mo_d*1%RiZdVkp\1th<+0e7j\<qasdO$,L_k&]0D`$_^G`8_<4kj(4B,oZhsR2HbFK3Y1]DEQ*MHt9A8^4l]Yq,0hIo4i9-HQQEg;Fdqe5*%+W$9\bm[UL(Gi"IpF=eEma%9J-EQe0?nI!$/.BT0UiX9h][^b1b5%YgXoWRX2Wei)XeFSMrq[jr"4d4naV\g-QTcGF]Z61F8?sf3%jA0Bk3a(<=P4-C>cO[@.f5@^jGDij=HtE3?YLA2Pq42s"Q$j%T]t%hs;Tsq#=N9aje%G&NNgUiDhdAg86M.?q!.EQ.cH=.bT/9.E%?BUVr_d(FR5<Kk1,P$=b4F)'r-466uOsK(7G&qh"3Y.QG@B5igpYiWh2:jRb&2PYc+e![4RHp/2>O1YE6fc@aoqSEIh=!I"gZ]\i%4W>Z,G6(="#>aLYaqsp^T2e3=5\Y[4a'2X!>&=Kfb?l)g/;s=&44rFo(g*lEIh2;!P,V!80/2'FIg*JM.p&/jm82BQMbeTJA?Qds%1$]Bb7WfO0f\u$,3L7*eCZ73Ff4"Xe7PfnejSnqEd;eIL"n6f%QOM.IBQG3$;u?7[aq?dJ"PENR3I,T:d^6=RlegU'QRL=.m*&3g%_BY9#KK#9TYKrck=0J`pI-B3<bFSN?m?X*)&b6%A7iA(`X"VZ*l2GpIMO-Us8b+D^9<>p$Lh'u<oC6@Jg)GiENdPo.MgG+'9@n+5%aN<[C1>QK:H[D9lj.hK/d"^F!UWb[K=C=m$"!YQ3$Y#K.o.`a$*\S!b8mCU(p"_V;5h]D9b.X?^/U#=<)M#kb!E_5:T24A;'j+dG%NTmEE@<k!\)p'J8^:t`LU#%Gh+]OGXh0_;5Qro)B03iDS1FFOTffsU\PtuO3[>7tdX8(JW7qP?.X>O!?`@S.NndbEkkl'nUJj2P)%dOLiXFYBpNJ^e"3X[9=lQLH/(P0IIBW$Ik3OISI*8+:S_ioMIh+O*_.[JOa+8Y0<s_R!7c)`gX7U@Mi`G0B%sDh&i*m7;h>Vom5$%XhIjST/rn<;qbDSV)s$ULV'`C<;/\e/?e_X9Ym6F%<BKr8WjOpRAr(P;k`j`VV+cajC!Ek;;("FJna<:dqgGG%dteePPArG`b3iu%K)=J+E'5EX7P;-8,CGr:K[6PLGCI-.R'bsqr\SVDg:s/Q)EiJ:om?99.W$c!FHE'#dlWTkGjoIk.kTHGeJNA;Ue"k8\@Qsj/8uus%ka)#f1R9=j$s/4><S,Lp%AX>=WsHUJXYV65%es#SX*N%>r9HY?[nE?NY'^?YPKg/;k#GV7Z^=g4`Q?\-^AN?bPbtg1iBms_CPuJ)%C#sWgM<'!8W&&F^kFrkcZfl3\R>#MK3qKHApN4-A1Kj!rE'5S;4s.EiUPi@2l%lYugJfifKV:#f:J4p8eSk\9K9J<\[EnX1";0;0%q85h+1r@R#J#Bq]etS/]hjCZ^j7h4/]G2u$DM=krN;;Ag(U[q[&rXc_lT,W*G-^3FXgI'o&l*V!Ml*oQiQm-LY\:7VGnt76h1p:T%Ir/Q(*CYuFq?26P)fT:s-tc/p<$jH&NS2P(lirot`WP%uB"?gtrnM/$Yt5:&<E<\AC<i@66\SHC8;]PsZW"4CgBI=-5=NIrk4cPe%581[qB<SF+0@&_.l8WK#@mWu+:"#]BlYsLqim'a3j"3R[)6o/GCgI?_i%P*jIFLuGH:hdRE6n"Q)L%V&!^@WlL!H9mbX?!.<]eFi%0r#i]bP[THktDaTNdq2C2AFZj7:E(fdnd@>m"Od[d*MV5&Ca@.69XCTTAEB3FRNpM*oftfc5'ihAmPc/gHb!IkCrt"2ii?i%dCS=%%tDm,nNDBQf:&OP(S0@NfhCu8A/d(C2SXY>l=_.jS<]#kY0Ck4)WbG\cTLd3l6Z#<j)Zs?B8h4&Y*Z*#G4a7M)c#OL6t'CBc-6\R%?MJ-b:J@M`F<TU68:SY!@0s-]Ju;K`7].g,k/W-,dAT1^_u'0*q)l+N+Zho12Xg$6o,;\Z-c]Cd^fW702s_fMd\RPl?4M;;o*O:&%/\pPubmB]:*oV3.;sHIW'\bG:H4;[-XhhO[[^7pEm%meW?qf_:oCng7H/4Tu*VqtDbk+86O3=s2F)fU9crm:8-<bcm#1Q"Qp=+dX%]8NnT!64qQ,">'2,4=N]5qa0.GLgcepEg+%nqgHUpA80[l?ORC/sgNf^:K/n?)m=A*NN>a*`0<#cOVPh^Ade;jm:IJf2p7'[BD<'%meXF%3j.6nIh&%3@\Xf_6Q&83cCp_t5t<bW!BG7mK2MnZB=?`W3HUH@k]F8k4?7MI1[$TnDiPgKaVf2'[br,cFH\NE-=dM0PX@Ai%K9!5@(Q_!Cq)c^#Si_^FjPjbhFA]B31P]jg"s(fqdrX`YJE."SAe.Z*N0C]^A)OsTJVJb^H;&%SV0@94i:`Rfq,0:A3qBP.@CM#g%h_E-%^6[WBgGua8D<mFIDgOHOj4JUfE$dZLH*1iAnS<Q9_%-K.HofN.P5G#$FZ)5iX5Ecpei,1%Y4qdI/6AV@V*EBeB:i'lk2R0!%eYFXR9:<]*b`js9Mq2,T$3a#+4gQG2rL,/LK]C+m#(t-;2XW==;e<2Dm8\Mr:/5-L;U8m_4;)[8_]YL\f^jA?`glDHjgN:=UhRqg%h>6AHLP)=ef-^cTA?+lN2<=U12FEcZgon%H"KNO8f^,*&Bpk%\B\'edR?V$hQ!J.n^?lE(S12FAEo6<YbW;8sgB4b$q6HbX2JP:B%AiT_<Hlk,-5hdYrK4^2'Z+A=3G'.DJ.7n55%rA8ueN8i\pTte4)=mRrVrb[`b`#TYWG10[0U"rid2;Z-(I+MXRadUB.@T)i2`1fR%G8.mj)n?,nm/H\&j(j*;bDDX/)"Qm4ltg)JU-Fh(UFS-3QHlA"q#2,R%BOV[ChfDPs$\8lFtAU6L0o#hq;/YEd-9[h@/ZHdY(!\C%Ls:-Cc&,U$iHVurjF"M3/il&gF<]nhA%Ho#?C1GZ[hE]SboY#6eG,mhHQR/!<qa*c(lhHU7MjNGUVK(6WZ(h6jc6`9Di3fW-&=D<%Y6Cf59fFgY9f,FO<a(7k2fe74jiB#J8TX=YntZF`/pX`ZU0^QU,L?B0$0>OKrm_,4atqIgP5i3QRsAY*Wl1(KPQ\N/WmdLNokQ*;%5DD:DX7)$DpUsKHqtJZXk+1os]AX$iA)lh6'MH?lO=JY+"D5$^A5gYAO^V."(A#S".HQnA3Z"99-eEQ7PG?U)-cJfKdW"T6_3"V^%;j%o)Oh"1%R5q%l5S?92_]g<h^+&;,Vp5hPR)^DGo_mP9>@aCZ[0b5$1Sg]ba!*=&/NCL6#1LqR/2CKKWRLG0ge8KOZ$--$4jnEJ%-0JZn*aH5>-b3UZ*^8+OjMLJY,V4/[NV=$NmH#]7-[QhfaZ548mjofK!Vb^R?`+]Me:FHe?^h\WgF!HtQiZQB^L.+G[rlD>oWaP*%KsB<_e+2d9%[nDt:o1h9T(.+?oBK<?k_)Xgksj#]'8ohhgT+l.M4o5+7Ve,1X='bN3U^7)8W1]G_bh0];`?]YDYEp:a2s)U(Bscq%bG+Uek/alr+WkT"K^.RfiQu=&k7-d?%l^@0BP.t0nak_FBW0;?oV1s9L?jk?7bja0iMKW^=@bV\k-=1`C3dI>\7&[EbH6DbD"D;j%,D03&9I+_Fa$b*mQ@33dT76)@'05IJs86Ej'a(lm5[s_/FR&&U[,(3(:S0b4c<aToUOEu?aYa^Q0HgXL3^psI\o*/QBY:ZtbGHND%q=N(&Obi2L7oM<TkRr&BH_*Hmk8L5Y,@slBpDQA2'?eOWULTkHE:8/2CH+Tu7srX[09/2/Ml?nSrQKG53qAE,T7nOWDK#7/@T30g%/d^<19rfegHF+see7r[-<I1TIj8.G+)\scm9ePch<M>EjWTAus#)K38G81lW<^uAd'5r1BOnR!iI<T/8O3(d%Wo$,u;I:Fr-6j9&%=[Y_/k)7KVOc$h'+sRj"kuS(880o;nf1-XQ]4gKR5t:2'AG>\2pjDLF30Xb/SrPB`'oq;L-V!_Z+r,"^^+;A]meCtK*+P1TpDNVG%3E"gX%3eE!qlcg4NNju2(K053gW+X*B7#gF6VRo0rT$P,:EMZ.<VoaKcfMF6_%a;UDkIni<V<XGp+RV!BAJj?As?^nM@@hr>Ys,;%HTbXoPH+3U.3HV$dO<S.RtpV#??MRO).jAp3]`!YV#-(R`gn,/T'QJ@EI$gJ`uCYC^3d27o)8%C470!tYBM$pH>ri*k-*6!q0*le%p3ZFJq"BX35H\8)=[0X6F_u*%[<6?X%R*5Kk^-]-X.Su4Mo@-k`>Y(cL0Bc$.)"um4)=gVs$.[04PB,=_>V""poF\%5+YpUF6-V-%L7R(G4t51PrFY5c`QmLZP;;K*n,IJ'?.Y`f-Ob=]>cS&LcG_iZnP`TLL6LHKo8gNRA\t,TYS1f9P249sd%L2]Hl'M=A_>N\:EJ'$%?Zd[,]pt=0p189!h7(Fc3sY^op[I5?Y!ERG^W6*#oBnoJhg9XD'>:<Xg'_i1#5p'uYbPKX$S/9TJ&s]8ht+Gfj1]$(6M@7&[G.`P%\,Lom'@s]uNtFeK"YJuecL9)s%!@a#\4=VW0#;FQjgAV_U'H0q>>/eXoE`uUX%E%I<_#<MV#4[8-8dA7F]t:?CTiYD8T*=i,@bJg%oWTrBH:`!$/)8>8hBA%\Z6?1oj:$$VdiOX@(t[C>4AC)hY&f$OhL1mefLXom9n-rO2q"V;1GVp&D3"ANqVRVYLYWIQFb[O%I=Q4@%V=ut&FN:`*baM6b:(IVKE@rl5Y%N0M3O@tif`[*!bP^%8j)XCES,(^-9fL?55<dMESnttH/TPLEefUA3Rr2J4;_!G?,Fe+g*-oP?%\oE1fa=A'm9fF\k:@%e8aeg#D9@ku.B8166EOPT1!rLu_l,N*C=aCmQ9fGhWdBTI)aeg#D9@m$XIZA6Ud4'K+fe"Wn2k+]TE4WEf%k\RhMq_oi?C<gY,iNB&l.=A45\h;ZVZ.X6t0fDfch,%1j54JefdiAg+1M>02bct>R2Vn/`l:#@7NU$R6=`?:T3,co8%/^14l,Jj@%>^KaE2Vf(naF^_^VXp-CACHN*7Ztb-Pta1hPA;o+FQ7E+3oAte?NE9U'Ys'`Z'e3CFhconqFK`;gDi?iT8odRp'gcb>M!(;a+(:1%A4jV`bHpF,lFNgMIX(^sEI&ro,qNViOI24l<Nt\4"L8/aNi_EH8I\Cn0.H,T\m4Zj3nBN,@kamMSm@pEV=B*NSJ5Z;SgHS3gd*]X%Mrbl)jmr,k+cXR7C;3PifR0u90#!W/l(P`"T=ImCY'Puda*HgMo6%T*]lKBa5',>@aji&,Y#g.ljS7g.d+s(rF^sleT3#VO>,cg2%F#VXDLkqJrR6-O>-9lT2pG7#`q_mQ0]7/&#mroODkK7+[;GQ)erco9'()EY:rD"!9O.FGr9=q^jpO%.1H16BrWNh6-c6oL:U%1=n%!oGMjY"qIWde!scmN@PHq1UNFKWr?3K#eKbSYj1",klXo$V!=*H8qN&Ml([#H!G3b/q;3,#@ELZfTelm_4d;1&)KAd$G)ZE5Lqn7%$9IJhd60LoR:tJE1*>\'L#@l@'?YmLme?(GfA!IgH;Tf1Ntu^;WL&`@p9C%&drX3AZX/Kr?#Mt:-e:KX3gs1Jkj.6.!b,dMH,uAu%(sKE!1"3e9':"X!TlTFFYENFoc]#GW0b\I^JpO.<hA&D+q")s$1/hZDj4P`8dB7YB0Br^.pqq`%(NJoUs(&!^Wk5o^q!d"miWT!2%.B7HDIMPa+JGYc/[;,+U>f(Iq%VL]"IF9@&@3uNRqSnn<pp<O86SAiFgb7H:r5u0$mZ)8r`roH`pYG,f?FZJhq)HDP$jTL5\6I$I%GuO<kqRr+PDa%$G.<#3$38oS'4>3[0I`QM8\=<-I/&$!^q[7UrX.!Ple,5'1YE"d5e"sbO:99/pVMdH-I0:R>S*kNX[DSDne\(T#%bV-Uj2B@+P3`jhW1$IajN<nl`+o.XPMgi7ie:+uM@>C#5QDTq8T]blXa_r8f`2()@80H3<>f6/K;`:A*>q<Sbeh`;b:D2.@Mm%mn%;8pNNUbUthS74QS?,_6V9Og,uegj+9U=pZ,jnZ;J\$AdBe*2ctLP>3WlBT\.8n.(C+MtT$-ZIem"N0Dc_`L@grZT*s9X2P!Hi+)d%,'$qt#2N:u:k+o+7CnnYHR)R6b@>mW.o!EAhR<[M\F+L*VOCeFg&F(]F,s7+b1f$jNiTa`0asgIf(8MR=-unSXQN/8Y$qFKNS*pa%`s\U`B"Zs4piu[7\TMc\p9X.MLUS?WX_qM&GkCdj\$m;6r9M?)b3n#0rbCW03IU/12DZC0m4-kqr$tFW]6F(E*]2&q>?^uNo',!5%D5tb9@6;6sEj$]0DS8+<n&On+kKBAB&#J5"B=`-`lBA.D_tCdVP42e#%LQu3Z1HdpY-kcZo#6g<5u6Cl++39uLM]0`)Deo:Jfdr]%%@X2lrB0KI8FHi<Te+7W[EC3fNuN1T'bNS+k$44,pMMtb:S[[0T+<seX\Z+2HeWJ&%<a]Um`gDNDk*i>#JKZZaVWtAV0CgcRosLf%n=U:>]d%dbC%n:PY<U^^,.h78;u$*nnR%H4q>8CTc$]7I^9_$4kBAu%Z?U`Yr7)iODOgb#l[!$(Yi\)-/9F?oNECOJk.*@c:)k-W%c`fu+C:-gnT^3E"l%,$]GVeu?EB(4;WeI61-##3CWcLdWP.N*LeL.b=H=G@L7D6o3#2L^]Zh1XND,1YDlJ/t5QW[^H8$dlA:!1$d%W]W:3<n`cD9ubUZ^[j;CoU9oNd;"YdG;I">fJ04b.';J*dMqF,7;4?U:7>.kSTqRl!O_9SdusNc`5W:LX6ZrAS]RGSf14^l3M%]$%IGa<eqKe#.p@\)I'lVkh\'hIs@?56#M<<p6?Cod#kG^k=EY:l7`Z6S_D7n&<VRk?^Y926!S6++V/AQOhd#P.Af9n9M9ktWK'fSDZ%)K-_@K1<kj=PrMio\MkmL"TUrNr3d-R)0iplcf`[?2'^K<n!\Eb@WYKkFZXtU\FOEXX`aP,_4fOo4)rhUuUj?dheX#3sTCk,TD$T%@ZG*S->,*YP[i7h<9HM@Bdj#CrJaCWj/LIO2C0*<0A^GdCM-<Er,er/.]9Fj2'E]Rg69NTp+L^JhqsfmW71Vt%)$F=p6D$`3h,i#%cKX<Sg'O;ZEL$>R2Dpi!ruuO1jd[0WqOYu+(u'2:3]\3O(EOqE$HA*o"kYa=Y]h+NXou"93Ihd;dsGU+p<<UX[3s:`"kYa=:ffWH%4U\K4%NnoVO.?HA*L-pLk&;=,Cfu::ErZe^a3Of\pmb#:nf4]5ZN0mb!(J")=BU.p;]<aYeG`(3cfhCkJ!@/:MequIb,<h]?[S)V%`2`<6H'E7$Men;sP`KlT-4;6n5K^IB3^tT(pnN53mj%ik*p)^:+*j!0o(@=DEh5esZrI,S<Hh21:c'a]\GK:@q.i@R?:8Y/T'uOK%WXUi[]7+L/$`FNbord1gED"9"f5L5\I`JGt2<J2Za]>,*ReZ7<qMd^e'5KrUj'BFa-[?<mqFutYM3b2&ht<J)agE7Dm_i3*Q<%WR%k]X]+2gK+)[YnY1l^(=VjAis)]Ds_\?,+Jh)Af)nS9OqOVB\j9C>L$e]ea6?eq-**]7,qoImp")SF?;KA9;%o`>7sGhdj(_9GOKQ%]^%LZeK#S4I>iCK`hc8(X#Jp_Hje#@TBTXrah=@<IhD/G9m3Hdp$QIa`:r5LeDn:/2b):rYPRM8)2^H2oc(Js7K0;o<jQT(oTUQ6%lSg]iFWp5M9n(VGT&_ohopZq?XYNf;HIjh3DiHi:6ZoPlrN>$g"Hio"J9Ur=gpNcHm"4*S4#=F6hXBu/GttO:H[KnJlPFmcH[TMN%jqrBqDaN<ue7dUS=l8nA/BMD@K13H=f>YY"Nd;>!QbV'<S.D40C"I=X]7,tBc$:#>n_a#_Ys#0?*qqh3fn)&lhr@qVonfmKc2Shl%T-U:JeJgtf2.h2mD`Ata^3BN2_tM0PI[i,Ls1<_7<GKsoU3"*82d+Ah3+FbZlSnW>^U^C'ah*"CgA6-0ldmBMFTLt-9n(W2k4eY2%Q%_:f/P"^k4+8rtHIYfN1=s-eUS_T#WaAhmZWZ2YRiL9B`5Rc8Y2A;*V]hPXZ/>3nZS1TD^WCWWqS2??I(NsMZ.X2i3qUQThXsNp%CYYt>a,V2\HIm)pM,5jUbkJ9tAAOA8fD4=sS"($?*-psrrUNAe^Zma%O7fYdQ+uY:/Hi<e1Sp77cZf>6aY7eNl_erIe:BD!]=-aK%NdoZ!138hM`OW4+=Q]LMA(\\W8M]#u-fZF8L?hH[jGJg^]FpmnVVT@FpHrYQfkCe+/9u.d?2Uksi7U"76`jo>EptY(VV&P2=@[bq%b;@W&T:#LfIXYN&[W6_+j5msQ`THbfSj1)>Wg-M,0ARN\CL:.$%pj^/p;b5.4-r/2h>[*.bhBT\l_gp,>q9fA\9IW,dI1lDb,]aT%/c=r%Q.;nFE:].&pQ$@r8"]K]0!4tbi!u3f43n.U#!Z.gh&GeL[>1BG>^l_:DZ/q^j265odF5M@s."CYFkpp7HfFS54.jfJrq#rp%_olh&O5BZ,eK7l,f(W4:h7J(2P[1muYQ!_HX]t,+5G!8e^:cQi06a%/4"iaBr93Cf@,ppF(%^DJl,K@hoT`nKg7<#uc@6=A(H:VD%*rbs)[U&e#Z[$`[kK2?Krm,?Zjb&q7q0:rZk.,+,]A&n_BlF#hrqQ<S)a613T&e\l;&YVZQX4pAqkh&QnCMk`W8ePQpn$R8\)lnC%X&jI_O$a[+".&iM&)7tJC8H!RPgR#7me#IjP>>OJ^3&Z+O3O4[N;N,AjQH7fmkL$uG"<*Kq0htK]8,okGJ@$Nil]fBa,a;[;hsg5%hgb,I(YQP6>p!2&K.W?FQgChhBgC7hiSd\J](LDaFo0/'iH'<1F6i96&"hJJ[bdXdZMEh4gK-:_^;$o$T)A6=qQh^G25'@&V&Q&!%5(@_JB"bJ\rB*4Mh=C0*CZWP`O/\(bYHM3`?26de])(M-T&cqrSiqG,EW,.nS+nX=n:T$h9\MYQCAjuDmg!Q%`TF?]N(/'`M^e1.%2)lWU<N_JO(bjsa_G>Z9Z@7A_h"hLF0:jHsF7M/,Z'RZTYVc[qG;aZJS%B,OHaDAW5.gZ<BC4i`>NOPe+5_a.hHAH[BRd^RJ(W+t%f\JMh>)e"mVuQDC+3$N]l9B[Rq@N['W^#:KG(eNPpWdI)PI5i8R!/Md=oG6/mX=<^hLOHA/8q,k;BSUl<SfjIA+:'U:nhm#b+"_>%im5A]htnKR&@6kWj\H@]q=Due#,Dfkf<t2-gr0mjg;LY#0BL%3>DT`&Ut^O:Skun`eGA?"`:aDt()'n5A_,0fPl;aT[$^O0="`tj%(XV.>nCm'ALGN!R*;jGnqp)=/8*NRaFNgjlE?1s"?8Ln+GQ&TI'[GA/h>Xg/0m7oGqXrdriJkTZ1`rkaqL.Y$lS%*Z-tls/Qg#cb%^OO#4ZLuPUc*H!WHYpYdHgDFZ[P.N1Y]\:;&Lu'!?X(SZT5B;jn>lUul>M'Hm9(=?4Ol7I%,^P]2ZCm>(Y:<fWT!"Jl1*"!*J##r%U$[a^r_&eD%$:E8SZru3s(VAZWTse]NnRt6e%\mbb6rT/ZWKHB'^#"^ea$l&Fh$GMdo4t6o6*iUX1Y+p+'!qa/9dG\^B\ILqoAR3%!b(Sj]k;-UY;6+#kjRqgE!UMpAcoWscJ,7D>MC+AqTdCZ]2'@t.gT)2dXjI*/Brt-*AsC8(qB(=5??A8]]YS]=3bZSIYo+jHf`b#%o;D*?9:mis+)\9P4o0ULrr>9eg@m+1mlnLsEouTH&&l)!YCMXMrdi[6/aUj?Y<o>Y+.cVuqfM\oUGG4]iNcsdf/Yt="a+6,5J-o4%kKWirW^D^]qrSgQ=d8s5(3]9X%u$<"Z[M9'#1:L_#gZ*83?j\9B0D;[[P!S6TUXtac0A>\Enar1X9]T"@e5ae_`79SnU>?B4C&<D%?S7nIAZV0K?_@?sY0*RkB*ed#I!>cYDf$9?rZ/YXG6U(t/@KKsq5o0Cm[(jbnCG;8$dMt#j!%k>8E%=MO8s1F^+h@SnTo]gkoO2n%o#CFqGieA0J,Icb>Al`34TqRprs;sn<.3NE:KDq*4#na90L%Y6f$;1aI^h$q7pHC1:)SMCQ<pf0\G:'-)/^4F-`TmX<?N]U.JTrg%^\W'l56%m]jVmFDcc_AK(Um_A*TS5g]_(:0)&.WDr^(o$#uqg5E\a3ST-jZnr+<5)Nu-reP-%m4qX]1$iifHU"Ej2qlepnI2[MdE%=WgJL"9S!OOLVXk%-Fn5^7;mIJc?WVfOffQ3C!E)#grO%Bi;2oGS-)77hW4q<q2==[m?n&BS&2I;V:uJLT`s0E&WLnM&(,c$ZbR:%;0lK0a.g%m5/P@\=7?`I,Z[NkOGsX?TA7mf#MqAo(Og*\Q0ihk`Om8;guWPjfBW7nhj+b?L+F^%4S/-!h&f]a,UC0bRCE!R4m;k1%dLdQ>OCITHpNtn="ni2#M^W??SYU(JTc?YQM1?6smm5Z`Ct;\SdV@JA/F`1Ra$rl[r;IWiZje;P5Q)A0Gbr$^nE"*Fid#/Q>`UR\%nFsF&\.2+)/D)R:h]1MN+D]:c?0qUXJP(7Q]<dEV*P8$&:rfpBlMKXP(hLkqD`SBpE0#conp<%<GBjW6r9i<3lAsOP%Sr;^lG8Mp%EMtO*W1/#*%eOslYP;AMmdIj;PPY/gDLZp#-2[N%C\IAh=8)7W8iE0:?\^>DpFZ:>rf?F/a/lTPT71EOIe,`"\UTkB4T(=1%U[re%pbVgC.I2?LCYnfHCu0NR:["E(:7f[Jjo0]eQ2SU:.f1<o<UG:Y-F3Y/S&kTVn"BZSR.KY7#!DsiX?Fc<MSie&)Bs?]T.=p@h5N'2%87hq.A$9>jle:qh,`8*"K(uC=pbPOi2btf8*61N$%O0Jl>f7hCl`C$>)N['>Ls7iQ^@99OIes"H&;&\@SEA_mi=/Zua\:qp6\885%K/n@*pJUe(c9V=oBdK*h$U'B=^l@sO`0'`62m-sBh!'r>m$p^uTI3Y=[_!u/l](cF$E"j:<;Ybnd]j`e%/(.)hn*6tFR`aS"$\gs%.f=p'kCOiJqi"&Q%sA3M#pj&uc\DZZW)<c+#LBqZd*KE9Jt0K&C9T>1K=tKrQS?Q_Gp-j4pBNO4^"1iu_VshRs(m+bGOAi8gmi2f%GXgI.`&$gr33m>@Y7'/Mgmk:snPKG9m?8`:><fZCId?9_5;'V)qWRBq^\[`jf4T?t>BB2nRFchLf+4JQ'9p\\2CYMLTD*QU.Qbj9%:d5.,r9QXY'+?q]fD/eB:-:[0s%:Fh\b<ns7!%N4*3)5AdD'@YTn<jjh&N["I<mZ!%W6g@%m/FjEuX;8n#L7%YBQnQ0$8Q*]ef1,%mDAp"/r)Z=E)Gr&i`c%A,i?FcYda+WqSg#4c$+Yh??uOff@*N=rk.[u<>I9sNt!Nc6$8"gh*:S3r:P(DB8Ga=l5BTQoiJU]k[.GM%+O0f8#>7m7D/\J2d!Y*p?Z(>Lrm0lUa&i8Qr7kSko=R%3Hb/gGR]QC?1PXW@Io#e@*B@kas#o1VKT?"4FME'-5l:HIk^MFghk_XV%1t?VF21BiBiU>*J5OSRHkJKMkQd79i=PCE6X"9ljIK+0Ia5Q";_uKULqqJsU08Ena/Y?D,]_Z=-eubh'5!8W6rc":\dFDGC:[)#M%]+>;9PfRr92FD?]VnMWbk/iApheiCkfXmqm$Ro<Gp?"e#5!3(R775"c/$"HeSX$N's*]PbG?AHcpV^1731]"a-asV9>l/qtj6l?A%+U]3fQ.>'rlUT\_G,h#s6>fieYpSMOQe1*N1QVI)/!nT!c\$:)_aB?(k5S<0O,<"aA6a\nSD%j==3dsU\\aYtNPA6D>M1tQg`(0<%M=qn!@V18[U5BKJ]SY4r#N+_l/?oGQ4T"*T-*h.k(\r/^5cpHuJ_IY+5Ol%]ahRg<,QV:Ymb-hLHj&BiLAX0KG"uomr5A*?>piqU%kK3O,@UXnYPk_P]8!j.bir*TqQS*0S5:F*bC$Qc*9B,r.U;H:iJ$>h'I(1*o0Qa4SK#;.t]O-YG@nSV>f6Zd&[g$N356I8P("(6J%\6/e1VMdl-ktV9F^68>A6h,[,gEB1.#3bI52*,U<OD@BMh/.\1gkW"[E.=&tJnr\n:;P7(-&VcIK-%\4Rs,s&64N\ZL,)CXMqcu\%1<\E+MGW]:<MJ5H\O`NG,@%$u)1LB[iWDRHEL:h9*^`Ltl>ccGo2j]%fXZ&!nF?4SpD6n_N:=K=G%S1E!bl:gqr]mcj`p1+F)gI5%o^UYMcR`CUYl,r=EpWOm(ZkYaX`aEjb>K2*rbHSS]k(TTp>;Ru;uZaP;&?OGT,sS63<3P4i90\S'Rk@2KR^Zf'usBbl_jJXrSdF,%I047._<1.@UX`b2r_iKR[=X*l(R4p:U%q9'qt5?0m`U/$Q=$hRnj[n9%K?%'%0(XG,aAI?=MOiX,I=@u4l&-)Id)H6HLA`-S[WfE%gDD-!nfYr_N5a%h/Vk,)oFB_@D<8Cr:S7[IRrR&P>s!@YAb4NAm>VmW$M)[uX^9]Yq>E)Hl0ds+hsVWALHf(W][NHupjVPtgF$oG%3]cqFGIUbX#Tl=:H%uCa9JYLr\4tE07ed,M,$aU<)-ZI0.1I^U2=T)p+:fLg>H%I2k+R._K`%BJ3st';auLqhMT##gLa,^K!D"B4%r_Ku6!k!D92OsP,YHPSWnh\W7d&4?5`gsRnjN5=15J%ltfSN*"_V#G92hSK22(9Y(T0?WZI,aHeH1'1aO3n'=Y%<UK'*AiQ5^U@R%]1Z!'<;Pq'2c?361@bH4X[se0H\FHGlJ9t!)<06]:C`/Rm8h-ek$_^7%MeO*NJik#^CN6aK0MhBb'0F'S$L^n]^J>6dO1+@hfhF(%Dc__+pq?^cBX1?XA`_q.Q\f<g\+`.3;171:m_[h,RC[X]L.R6;!fR\&REFp03Gm?^>k9@QYJIs.Gl==$Z"..5muG[!m*ge#e2WZc%nNOiQ8f);D4^T\>lBQ!phSEfBm(a]6n9j_"9Y";?@gWZ*];D]N@W$Urc)mV1h!6`)Y(_;_o$I,%fqLOK+,ZaOP?uhIIA#b/An%=j%^]f-Vk<2e!qJ:pEGfYVfroZ7.-gZ:h;^]=_4D*G,W,+j^TT'fB#"`amr9NB]`+aBHG8\\7Pc:POe&aIdbW/M!]Ghf2R.!i:NU>p0%>os`lT\<=c/-CaqB#%O"`SX%\?R(!90jO%]m,)>-emG<I:NXpad2Y5[33pWd0$(V[8$9A4rFeD*oelbeSJa7[l1)0k-$t,3!k3k%%aC\D'@j15B[%G(DO-nU\WVuJ>I?mpsd=1rW5&$8ABKpof+#8<e>PmZcqqrmCf7*S]5"fs25CIYrQ=5fSrUeWg&7`c4Ier=nd?o,/%mAI/UZa;cSp=!+;d9=ubg(/ta%XD_),8^*AQB6N^"8C(DIH/_!q<6WH&e^'1FDE<\0Np2,Z^2WPd>!`-["0]I[.eFQ+b?PpXSaYr%-+[a7'%&(Rp?"TcIgn@Sm%:WI2b;F&;K;[/\>ghJo$_r0L<tj.GTmJ+cn90jOY\m`\0tSoBGT>f6.GhNl9uIS=@>74q]U_(W>Bqh%4D\>&1*1?r=_fu(L#N<ikkW%<`\:SXFGs."Jr4X0I_jN*)2-XN6cQa1s6nCa"^&mKZ@$`ll[*L*>ZtD:aJ6X[^VAe6eXL?0+9))I%qsJqEIk6l.r4`=4L]@&7EbUtR;cW=^6Kmk:dMdPG>coaKIU--*Z[)5aYO-fLIf8m*lan8=]6kYccgU9c\[B+uI[Rs!"5dEe?A$oF%Dr>F+dlQ2^hnTZX//??0iW%7(BBf0=RG[M;q_3q;i!iFj:c?L4&$Fc9I/i'rA^_@:>O):g^Is:)&_d1:r4!49p_Q3qZg="H0#.=r%=FQ<:5$TjC0lXk/QKus0C>\gJ02'<mK;NUZ@$N>B1.#5En5lKh>Cm^\>(RI>puMTkf*pBUe,ZNS<Ge'7i$sY8C/>iS!#VLa&7>b"%gQl$n"(Mb"<Xc'Hn1-;.$YPgl_@?q5Z(l?tlH1_\/IYi]X)_U:VC"i2gBtYD#*"E:W*5RCY=aDV[]U8HgB#I0D:DXqL!a)-H3/mU%Cop//Li&$8+Dk9?2pg?gYl:AIILo!LW>^hZEo:/.S+Qkf3P\kXi/`&,(I7YdFgSYn:`0A6["tgs5H4quf8U?j;HNOaEK6+gYejR>%0^C1j?NF&o_Ga7<D/4`j[^@qs;gP$eKc.?^XTg+?F0N1=2"q2FgbJq=<=M6%2mIE+SLa>A:BjQ]/*NcD)edb=!]6dj$,Fsi]a9;8%b(4C1#ME1UColn-E!Q\#*t:-3Z&Y^"8'\ms'JOuA(rSRRJnYFt,g98@dZq1>#1h@+EoniE3&_%"PR]&,8)n!n!.g?fWZuE(5ui40%``lOIp/N6X%)E3H]*,1'#$X!)P$mqgJKLI+^32A">$(8RD.s7b0I!%KL0tH1AXo]u$Z8G/(ukfAqG%T<#2<H!NW.'2b-o_="YAlb%i%Va"B0_4a+a$M'YlPg\Jj!JjBm&&<rom%u=D2J?.gDdQ:snb8ML[cN\/E4c[<**KV/'<3a;Z9,hXcCO?3I&-V/,.n</rjNk_t(a%G3RZ4g@Br;"YLY<-IN\mk.YP&3kn*,#JU6O_WTe,V0lh<P6SK/02%/FY\rCAL9FlujdsB'.1/`.qaN22"aqUFMe6?H6mY+@"r\V[%Bq#M4#M<+*@27!c8Gs*//-.4R2d!WqMH`#GDAaFkMMN\:Kj@/@=_`PIQ`?uY3j!X6b,/a'2\fUA\1gW]=8DB'#=)>cY`pHn%O!Nn%4t8hY)ODOQ]X,nMl."\#[&-k/'/3ZMY0N&G6pg`"d'hShkOY(#k$`1EedQK"j\oMgg-<pX:ENs-]_3p%b1Cbf"P9*r-Otoq!nLf0%!S.fB^`$1@U8F=pKlaUW*g_D=Z79%03+4MN*54%E^)Y@8QXH\egW5-]!>V+E!gHDb&Ho=h=MViAq'a#o&KA1"CE9Ysk6gGY%lZhf%V)\R/.=<Ab=ulq.\m!-e)#-$!#KSQVQ<@Hso$Jjhl:F8A?+$oM#]njIqPs87C=L)a/mOsob;6BDC@o?[`KZt9?-sEMG@"SuS%-+/%%SJnjd!\V6=H3bCE*Kc>+9k\.T0!T-S9=Z.3=?O.SR:QQPr%*$!38`VM5Q"<mkrVu8>(]XboCbodNf7fo(]?W$?H2%NUR`H@PmJ0%('9(QbNBZW=&jne(o=&r#C"f79I1'Yo!"Ihjca/$h$TH??f>)%J<@TL\]ZC#&Ilf(+LkFW:D$&Q!$MeJAqIOiE\q$0)G?0dN'`aZ%nEL%B"R\Z?(7%l#).t^A8c/XiA[$@jILo>bGWPp+hmS,!30903WdI_XJmC`fR)B,0N2r>i,$(/,Zm%AnKd5Y]Ut>sOgQHJflY5f3%7"eTY(1C3/+t6&iA]=OE[7FE(CMOU$_e--ML7!0Gci=0R/qSU@/cZGe)LZp>B72pb`o;7%+Mt*lBdrSN!qZ+S/dHp>%>RB9>EmoK%lVg:gi61;9!=7b)I@q0M=&..mJCqGPBl.'a["?Uss&hDS"SE:(6!%(0B8nmr(Cc#O=aQYZ5anQ\83u:O$5t*8!eL0tE$ACV&/a?5%[YXoP[02;$C@8bbE>:@2%s3$<5mrX,q>rt7e4l[1fG>MaM_#ZP%<<tP!58%D!bAUD%&lrg`rs+k.jA^^6&^mKLoGV/[0<Z_6'.Y(%bVTq@-m0/]e.\?jOER]D08TM\Nb;AMfk\iQRQ3_(Uo3mZ!oR?1CM#[C-uLn;nAj153<1pHr%UYKga5u\,2ND)cUui^!8CdO],4bl%SONmBEsdN)US7?+(sk"):$@LD+MP=V>CslW#Z=V2T+R_['e(Y5`Ff<],d8GN3%IPEK<f*#Kk+.])npOtOC9tp"B;1??>2R1QW"C#%1dt!;$Xc6=*"soV9Xeo,O!DRXGd[WNeMVhT<%RF5Y>DPjC54r4bN#i1$kT3bW9"!ai.HciE6X9:6NRZh6/eDa4/CppZ@p(A#bhG)%&.?'HKHYXlk..I&"[W8?40e5]&$r7A#lkAJ9`>=)-*nR7Uj1S4VKN4goa0AUPYMNQOpoXOnQusP!E,%n(R=%a!FaC!_$_q>n$T-j%.ffg#6gQoje1_!$Y>oNO9Nu+>)IQ#$.`K49dL,13[V?(WRpj_O=0$5'^]4WE0i3cBYRSBt9Lbpgru.eL2cCmXG$<@qi<m%pFUeE?%S]bUFYbnY[bb7(S#Dgp#&nP7Xg2QM]=p0SKR2(0^#n(]7/RC7RY-om![WpdD;YYj?<8bS>S42UD5r66N)e3a(i[o+u:!LVn_\^Q%%-%k;i+?,FXnl>ch$=>;tLp+3FC-OS08:.E]T]'[BTO;OD7oJ-bf;peA,sl>*MhVC&!^OgBK/<eR2FGCeKi1T;M"P^()s!lY&cndW%SN?9^<2[l?)(B<NYLl0keGtH/8kk0]e<<]h7T'?j)mu_C5umJS;p3!G8lXieD,?WEq@DqeA/V\hc*G!nWhJB$UeR9j!JF4&V?AlX%VG,L66((QJ"VVT2$F";%;WIk\7[#4P7h9:8>>9u;+;'8s7HT-!2l4W1+o]_:8lXj.`(jl?1947X1/15o4<V%F)<7M3o)q<KAEr4`%3(Eu,]3C)&7R7Y1MD/#,?lPpmJU(9@;s."cN)L!c-SM?r]ZWhX:;=6+'PRi:U)FK"Ffl1#Ur_+5C4QXC9.^R,D:#*"_gOF[V8#@G%Ogh>81^[5MUVT/&O[j[l)T))@m?6lHS[X=.kb*:_]kTrdA9BW`]nF];&Zfo1\[C]l[m7iGdq1O"_8;1Ld1B9Cl:/7-BoL5Q1r(#"%2_*VH(209uV7N`[9YIN#IAJN%Udf>bMsX.tEJ+l21\%X?qF2^2ofedr/KVXKfQ<l#dSu4T2]?*G[J"j?&Q0=[UZk6Xf7Z8/TkI?F%#i_t%i;st/FaPoP\P6e=lq4`5Lh0;M?0N+WQgs@0_id:YBkp-jJ3!a1b@sSn7eUr%&L*I#Y&o:)9Lrj,dS5?0LbcTj%8*OX933#3%UsYtgSKR/h8!pm9#o8P/lo\V=3!FH$)rs:bDGJ+6Ro7uG1k`%C[e!rE$^V:,="+%YpiU_[7#AD]qF8@W2bg&9O;:R1Pp-YhH;fP&%"'Do6du4uk-_4G;q[?!4eO>t`kLQnaP4!D(GnHGNP4%q_SPAk3U5Dr0>+J>0d3]1HP-%N%64ikr%`jX\-7o_KJk+<;/Qu#BeI>CJ%WiDjg,(t&#V+`'AfQ!sW8W0H$&fX8\6ic"SQU=qT[T]"c=@;fJTM#oNaLS74&Weik";4-YFV>J21g!X$e!,G.).su^aL&=M7j\oq%4Ye01k`HID5oE?%:MOFoR&!3Km7T$BLP$A1!)\SHTVt4)OJn6Hn4dJW$AmeqG3u[EM(fKJX$l)%>17koLq6$Kf+^hcbchu"C=$n`%'V.0R[i2H88;,M[eObP'VF4"q,omUAc<%F)+k9Yg6W-E*b69p;&E?G238pZJ1a30&N,*.shF)+<lbsgHa?8746&f5%12kRZ@?"/9%D,IWr0_UKAJm4Bo)TNMPA3N>S&fKFQ6>qbhfRr]tMmV^DBru!L*_E,&8u.&,6D%X_M,YTp,%KLr^IT#/8gM8=O3VQi3-gUT'Ud"F%MS^d99't=no9pfqC0r>q*?r#;<(>XI3[9O-j8O<M[k[9LNE=oNQKSc8ao$pE]#eMDK_\MX8LbuP>#Hi%re)Z!@#JDl+mCM_Acrh]%+bgJU:a,AY[;7(H.O:S'MA0c*+VA*IeO_6d,)8I<6kEbP-P[7CNAFbm7oIeo[G!^Vehpb+UdHK[&K<2"C6/`5(!$t&UpuUS!p-Hs%0*(>FIBoO?-5]u*3::gR4HKYq=?I@H!K*2J$F%s*+Ye5q/39ZM0a'GLWGpr*JtcsX9"Ug*f;1ca*W^Yi&5pVhTFmF<XL7,U^e$P,%r(@_-cC9J\\q6T>0B;>N0+.oO=[7R]qC?YZ>/M+8$6`4WO@[_cK^Btb!c5;9oe<\GAD;P6Q^PiDD9LL,(5W,Ga`CYF8OL_,`W]K8%6j4gR;G[Fi6nT7D6u5MS'6d',QQ35?Mr;hl#VSqHamgkpbjXa_JNm<0'\Blua'+hbT.h'tLV-F<pU(*hM%D]#%>P3s47p@s/6IJg%%eBf/aQ./(+mi;r`9G2,jPGOtR)T5!JS7VrE_$O^SsK:=jC:]t!%uTOHQs2SD=qJ.+:!#26);lV7&N7T/X-YNUB!!SZK,$e,i2)Y%VBVieLd*k$i>TF6KN-f\2OO)-'%s+,2[,UM`"R%9[n<_&NXVqV$'7o,"9INcY"2b%W`lB?k4&=489`g.Y^fUs'1had"9;L^8WQ7F%l>B4R6kHRPAYQWs0P[^F8R$<.fK,?P.MPL'XhLgnnsNO4k1C"h6P(Sr*f6c?[e<:R6t<&PQ-pm-,h$n,l&fWj[R;Bm*XRqV.)QUV%k0^W?\NA(CRNrK\JP:qZc6O^OEac@u-=8`!==.?6&8.M7g861:A`H_HkiYHSPb%ldeBsDL`!^UkMh[%&,Q`o@9661IcjSY8`^Plo%'\_)*/J<OHR\LXt+A')!YbX];Qmb/'n"<(G#p^f0-X'Z>KbVqqSN%*^]$M"S0!JV3nIL2_,P"NrZq/-=KG=V=5rM#m13?T]o/;""%KZhuI)iQHi)@PAe^+Ilo1k]M4g-mS+:POsaW(#.*i]&=5,3-(h\;Ys:6]Tr&`MDfT3#e%kR:&=;"@uI;Vf]c/TPI+b@)=eBO1+VI%&m5=-WD0?rek+D&/X!4.9q?!\!,KR*(mIQJf[iG6=_@k._[:+21f;X/8gJf6ZHa;O8;'sF<*Egc-oEcrJfYeVML&eM:8s@q:/R"0%o8\--=I`86,7]qV))2lVaGA*>%7Zj<4YlGbdNdc^VO"'!:m*#j+A%bjYbXl<=O8>pdK[/\l]Nq,5,_)?`-Jm[3<:\B=5-d)H?>[e%5\>]#-^;WS0RCrCMUm,69L[E@\g/2\SL]s\M<84'<(`QHo/[HgV+dbiJhi0G"l5HC]uR0.Us%_u$E#:-/>d9kkmnS(2d]L1FQ\1/%P*,VKc<R3*M_G>H'UpY:+<^j%.GLBM^p:Ul#q#BIP-i?X:=K(Ih'6KpBp2O&,YK+8KO.)i1-lPlO0GET-;[MdA*6_BLf7.H,W]P<%2Y.%oX9d=GBkJ`sJW[TG'k'Y^@!)8M%?h'?L$EudXT#^=[<"ra`#Yt1]E_rAk`b(tf'4MA?VIHq7L)EP5)'@d9`,I':&6'D)M9s4%d5#$.R5Tn/eO%M`Qpo=rCMTb@!^m1QUeTERCoL^g-37LW1(W)LU5Mm<7'F<:eUY&!,XK_aC7bJPAPp'5RtQ^e/$1jI,*?&D#jINZ%Oqc%NL8:2:K*#>Z4AT<@/;PGYLj3I*%?a?DR#OOK#,^0T""*GV$$HX97<p,o8:IJK,]31-K<]0,;kO+cVegL'JSed1+QI*9hR?&N%eOS[$nk)aNYYAQu0UT%GZ;*1_O>uFM9OD[Z?$XgsK.uI-%.u6<5)k"?04]Y(QltX6-^]RHmqN[f4;a/L&17$8HUVkVpDc$mr/+5g%3o1dm)AbDOYV42iTqn3Q!Y#-5C5h&X*f+h[8(,R45p'g3gRW`6f"N!'71`h+$]Yd=CT2Z<r^"[]#aa5V&<n);_7?MHcNj]U:SJB[%=6S_m7]$C_\Mb65)iViP*sC7($0"sD)$2e?:J$;fG?IN`AaNYK]21@&Sm[IDPQtPS%>fj-_1]-\7m-;[I:nS+;Yl!_@]a@^bU_7>%%JfU=$.Q7f6)"m,K/)V^A(1j@%(Ib**t!Uc/IN2>)PeE`[(tlt]Mt.4.F)A_BtD,OoW#dL%<d_>qGi'+8GBH)729IYL5'YdEX#u@%!<`m\SZmsgM-QIU%tN'%oGN:<ME3APeHDj$OnI+#7d]bsE14<lMIA>aa:ScWVnpJhG83#O`8d9";Ef'b#^p-XbJJcAk3ESH94ppc%.%V8!nWnkrL;#i)JODmMFpTM<<C@Q?ciosM0+L<X:o'mGiGr+sUV.7;El:%nC,!&T*hcc7&EEIP/8(K>[:QVN7&tjt!&0,D=:IP\%5"K]u@sEduPp]4hlLfV*?=$iCIf>:)`QI<0T'9_JHD&/RTnJB6"2/Yu45d8C#(r+q8t&AbbS>"RN(u8p'Jh6H%>#n"H&#'W<K2RF%GSr6=]0`uJJ8?ed(rcS:NY\ias5Bi6LIp7H9,*eG3=HK(>Sh%OAjN[W($9u89Xi(^?;di6*:a56)#P.M/`ETE`scE6#*.)]2;ER)%N,VN<*3Cha&kXrFM5'^/?6]Y`[8)4ZX'o_%T\Ffe//\u!;"?:Q`D;=S#Qk-g1NP,Q@,o+P9C_7[JOUFc5fb4&TlXbLX&'GJp06lm%8"6g%J!>Zh7pFV*"&i,PFD<XG"0V-*=?=(Tgk*N/cS4SjV$[Z!l.?RlA_><S(Qllr:6*i'_XPj%gfP/([!8#2BgIK.dHC^#,."=Y%&Sl(7nE!bCg]=c[\C_Ui-oAk"-,qRU1Q-8$X]J_e<\N(gK5iU-g?c\)/E#6E@hOVNp..:;KflB2N(4_q'2dDa0Heu2A$k7*+iIQB%(;qf4$#&cYq3\T*q[)8+E#;d&Rqu)CkcZAN(.X%;@q?cL%`Z_82c,c?aN6Fl'Bme&LM;HLQ5V"Wnb;J"g:d1@1Z:.F8siKN8q)MU%/9!$f3;A4,H-Ub?On<$I04<+pYE>L02%BlH]jr=3Xp,o*I;#>!fF6LlN*nTIE9k]:O+.'&kNdob[;4Bs*ZY+Wo'kD;GPJ.0Z*h@J%3CX[l"ko=$7"0^/39)a]V1E&ZZo^42_`;G`Etl[r[(Y)$(apT<^jkLV5Y"C2<'1#u)01;OVNfG8A@4Z4TYh1-6%&l%bBjD:R&D#l%84]k=c]Q<i@1I.%#Qks#gD(K&75;0i!<XuPL-fe[IFAlV[DMtgj9j6q7DlpOJ__VCbJ>R&DqJ#0+j^]D_-H$n=)b$P]L@fm+,>GU%g2#fK?%g$/"kp_M4cuMRJuMRa+cV7s:'&/Z/9o:q,PXdH$cZG/_U=$q6^@u4Ql%*D7?D0/q8I$@"%s1b:'bN*=t^/7NjK&fW2/BE%%(2pm>Xbb%bbD*/B[MrEdN9(`>P>(]Ul/B1<0eXtiGfM4KTYLN%[XmrB=C,Eb]$%iQ*k!'(`JA=9XnaSSgI,;@j5\"D/gjC]i5=?%BJ9.V,ZlWk_/>d5-Qi&f+A5UbJj5kAO%Ph8%<q#8_-,ArNWo7tBk]D<!FV[geX?1ADAs`%c[7^sq(5./TG"()Sd/$%Wp,7+=NSDC%#U*\+6KhZ!K];LcON?;.iLlq\MHfmW!9BUu)`.`0"Me%i>8l$^/SEp:5NqkmM&\RJ,:sf69\o5,TgDWi$^WXR(hs=C\K;)#0+PE@%dCrcTWUk@:Z):V,/("uf&7FW0*=QkE8g[]9eV[b%\m..V&k`cMHuX"Wd1C,L))$4I!c/Z\Na6h.V'o$;G;Q_=HjZf2,GXsq(P`RO%c=l?_7DGmh[LI+n<OL?!VDE(O)!hlo69be:-/DZ7e?.bs1*QI!#*5O2H+*V=C)H4dJ7@&QM^ftG/Mh(n]?Y3^i>@n([8LAqRH)2'%0WmtL8EupM[Id05Me?$Ml%tq`LgJO7#hi2)-3OTm9UpZ]Ku-^DP>@MsN^mXioV<*bVQF%LgA#7c,o%Ed&hN%=@-UoCOs&D9&Ae1n%Qj]AlCh7D75nq*6U1'`sJ=u`G"4JOs)I]r-_2I>XL)E$,FDY^8QD<jS'(J_Q!!oT\)HeZ7][@Ce'S`bXf8Om7H#26Bg#c,4V4^Jq%Eif5=SgoaWaMt87)I:Z<!G'oa($3+R7$)s+c#c6[Yc8=VaZDije?mqc_[$iJo<\\`fMo5Y@=[tcmfNooPn4p5ZpCc6[).%oJ6ej7%TP='hD3-s*+TDn'[2#l0_CD/>Y(iWE\>"_B:0pej0<ue%ocY]YY5#qE3=<?F%4=!jN*%S<dE`(AO&C.C8B5N<dIA29K+K4l"Ndg.%DA9QX%4<*TmI`b286abN+!":9+">&83id"(LXZu(C7C9>0QNo,=V7I8/knHDa$gXqqP"JoRSStfkDJn"LdDA-/gE,cQ@-On`_B;5%+\hZa+Ju-uegZ.9Y;B`+cok%uTn4.o'aQ8C9U%ndeoD0JPtR3F0E[M;mbr*$p/l'ECUpT?[V@*&97;M8#qWHbpmO8k"U-@E#=Oqo%-_aUL:s)>)b&AnfJm_>W70IR_aJfRSaqp/S&N7@:=Mlm56K3`]*tf_@(Gr3s,A,>G/XoD7CmSND=@F0HkYN+Y(/VI1KPM5HgQodN%".B:V32"`SU52+#.L>cj##1f0rHKg>S<n`U?u0)=KKFgp2%5A:.Fg7[=`>DrXV`>m6O#-c.kViCnOX;<d::s,?o@UM?;s%''rj?M%imd2A<\\"`k>Ti+kj--Hd2cN@]r@CYjcH]%"Y9D?;Sk"-mZMKr_r1_$.4@69QH"U"EIAs^I\r:BEZE=q&C[kn8<.e.#;Bdnn=tVe%4i&jn8IE?-YpPV*%@i&,\-##R_`b9g*K4VMGE-TZJ7,u]p*kEDT"K"iBN$>)d5G096l<#/eR."*hoH5C+\^<-_W&7n.j#l^%@4"o%Oq&'N'XYZu8sCQPQbu?U1,u6@`,`NmLj6Eek2tX)6o-AH4Dl]%kt;NHZ:'MQ+ri4!8=2\SWs"OmiAD$&Lct,R:O0Jp!f8tJJi-t!%+3qGOGoA??%YDb[(0VDK1D`n2K,DVIn;7eo$>S4;P2QGf-`2u7>db)V0\-(-&LA%+lS2g@jJsWO[,g4=$=Z!Q?EPfr@(VkZgD.qi%5V?b$`WHnQ!'/EtN*g9i6fTU$iI,LcRM2em>9VRBJm#>O9\tX[)MT_#QA2F(IL#:mor?ra)9md6)+.F)K9#LlDEKp$'EgiYTaMHe%@HL,-dDK<nVPc#2GUhC5PB:]2':&TTho%O%[_n',llb'gb^V#[5'^\j5mnMb%r2g%:aE05i_'4R`mJfYOp&*Zq6:`GjQqs7#KNi-%/LDB^Ykf-V/4P-N_NKmtLBMU%Y_a/J0[HH:<6*/ileu!-XR..fD[JfHZ;6(uQQ1`X%fU?KLkYG!&tgh0%hOD0>Z%.lKQ1ifoV/=>%E"G\<Le]$Y.)lpc.-J*jN'ps5Z)4J0;B5p6Pm!jS0FjpHq/$8_Pa2;MP*YX5L,ot3N$*6[T;YbA36pBCFofUa.J74?LlK=*\;b2t%BVK8;,FLEdpf'?V=dpGM11,t?bL-_N<j77Go5[/B<XC:d\s;2W+C#V]%0shVWf]1l2N0``3-n"Zm%=g<[0.\dA66YU7Xl:n7pslu%TP8@*=uEg9Qs;W0Dd5Q0/``kZ%>fVV-=\jN9J%S6>/bJ10q_Aj)lh:eMB+JADUXL!1Ob$L#/8Kt)^'hVinXe`'n]5E-5@\4hQ`JX%hAC8SYTfqbS3f'#P3%fu#MLN`1B!61*<h@u*<cgu0(ggeYaU-A5<LI=Q;OM"6b*^o0$-YI6!,8LP'hu.N&u\Vf-pLs<GZFiANr^)%Tp.f%YZ2];8"S1S0o<[OXcetuH3g5-hCY"fZIp3SN/Y%L&nD;"7qn>EP#5)FeI440Hin#@%0kmCU_7p;n-mHIkNge4CI=/pbpc+,%ij;./8Dc7oDoh<^/T[X'7P9.(`L+U*X=P-&Em%Y,_/&D,"Ni?(CoAMB:uhneSlu!tBif&;6UkLKf(as!Ai3Zr,]RWjmM(D_#%_CJ%"<*&)^XO5J%tH_"Xp@EJ0_to,;*_qVBhTKU?Ta"kX^TZel\/G2[:D0D-@)WYKk5/,F#*2o2)D8pQIr+A>RsXe=\P)/9WPop/#;-I%'PF0`=LsGM1;Sq-)L?<aocBJ$(5_^=7CLWD1/14bMDd=F%YLfQGpB.6!^,57(aXcaTGU&B1:kOaY`,kZrWcaH=42qt<*[rb!T_8_%U1HO'Oq,AsNS%f7g20NrQENi[5jrgR`Cj'JkuWhN2dZ=!W/R/=CaO.5V#`c#-\RUt4X_OiZu@2;N'&mD`dVD\@t\u$J<[1g#A!rh%S;8TQ:an>ujWJ1a4!cq3'#:hLmU/V==Id67pbninJfGdRXV1u.)gDHglU<In,);2a?<MOt9c6U);>=<-.M>.?mKb=&B92>d;0eCJ%.u3T]5unPVP@'RLSmWhXA)sdK??K@YOW6O&!EEFcl]R!>W7[cSe,bYapBV,34*G-,q1Z*==q6r?@%7ejI&(]?KS/VTZE,Idj4p2,%a5IEVOeNK#C%l$SP^=mcHhs.@pB2/_]dc#i/eJN9=Xo@S1^@"Fb1FAY?e&T,6$?%c,eGF+3,BFB*H%@jH?a9oZ?oj]1)HJh$5TE?%K^c''<etd?Q&->d<'2k'LoI>@%6"X=oE6USEbp`S<fP5'@k^kZ(hFp]L_"niXfMt%05FaEE@lmA:K1`IjZPUQ!Mmb'Z.rlr;@o8,%C<$s2m34lkNOVFsMe<'EbmKh?5kclS1.%^j6,B:N6,CLW5c+!!%OsFKW9.+<4lTqDE%EME9>50%@^:nXrJiK7"cFu;"VWsT<eRM9%>?faE?)-mu(_R86!%Td63gmrA;8d]r3i@dWj73<53F,Z+TK4eI2Uu;lNl_fnC)&[,N@3IUF]`F-1g3Wtc41D+/>E^e`r92G,upt(%,]a=Q+ft@Zomr2/j87<LFZVcP*X*R8KEHmQ"YLc;`Y<!XACt_9+]C@=\It"XR?iIXe)j(aE\\nBE\\nBE&,opQd:Xd"tg?5-W-BB%<#i+SL*.ia'5bFkh/MGIcWC>,,AXTg/;G`%)f';ReAY_u+pg_l/FkPERO)8E"c6Q?;/3!ZX#Z.4B,QB>@(t\U?<.7R5oLk4@?Ui^%JJ=@F/$?Nb):Rl:L@PG0b2H!MhaDaE96c_,75cS3(bjiN,m5BaYl"eB)3AI,kSJIb.%s7h0j-CG;R[j&;0c;^`P]/e)RnhB8XX<>%9HF59C'P#'"7<5@?V/*P6"j=_b1FJ<-L)&WJeZ4F$6mE7mH=(S-hj#RREB_RRaNF$gE9FKQDe'`N;>JrSP6@>fM4hF&iV;cPcPIo%<i]pA0!22+N%dSsr[K(U1]\<*Jh5\tJ/#E_6CaQg>aA-0=i5]Q1nKk=nLGjT0Q0%a1JEmbq.)l5,h:AQ8K0?o)YPaQkc84G"<g2S%@%W7'4M[>mS0.\XBqe@0$pgn44sDNqK=m@EV5M`JhdU(,Pp5iM`eAWnQ!R.X@L^2u#f_L!<?`P(?=G^%T"tRkO\OMbK4.o"J<6JF%f>:gX3QMHE."14<Y,.^@>WUd'j&sc/e#WTr:-:@3jrfUhF.t/iF-(SP1[HGZ6qOU#Ij\=C#^K@E%s&h;AB-MJ80>G&.T7W16!022%1.`?/a:\fFG!!NbIOHrjR4kaodQM+W/VcGdaEqFfh8TMYKq&fC=p.7+`b#STBKS33"OJ2I+Xo58@hU,/[G,5G[JD,c-#Z^H(ebak%6PqE)TM9J7O>uXS9^O\]/7?F4"kR6?JWUXE5TM#M;7MS"PNaa:P3FX9!\6ol#B;!5+IW5W9U"]o/LQqb1k^Q*h(FLULqOog$V_B>%-aFccUI=V3?DXj*A7gp`n9G,.WtKXiML8;/+qn&F,d7YbPrEsg834$g=Y?*W"JHEjK_knQ6EFQ!USpY)feAgejs=),+:".l!+!2>%j-1'QlL/a!pT>Y/A4N"J+qYSle-<2u<#QH!.[.gV+foY#8&Qd&$)[[*oWHrf4_oXX/FG('nDTYg(Q/[T.,k&*jKYX>l+JCNdA`^@%'*QoD*l+f.Nb5+24EK=2S<;AJb_.e#Q3fKd95dHp8<4T^OE<r)/<S-Zj(k7_%MmJLK1%J!'1@UD1,0unBTa56OZ^TpMMO^n78emh%cIcRZ#Yd'YO`1rX`97ucBVL?<30X54n1]MU#gj'B82N[i9f/>mQUir;Kc)5+nRN$TN5$+TN%e[P]/`PeSq_n;+h(>l>@SMMY4meg%6B/R9?ZI"\'G45i9bFUIX#E%-BU`s"&k/Hi5VX3M9?^(kY<_7?"S$%W5mj;U(i/a&%ctDm#7'2nm8-n6ep&tRZ&Zg;""2]a[3^f7%1Yj/Ze+JUs)[bU"75&?k@$^)5V4N2lPXRL%%>(:BQ/rsbAr\Om'XHk%^5;S1ik[C0i&(nNK#]ZU2!fM)]0HjleG]_iG=h12C`.FX%S1"i?:o=DD*Xmto],F^ji<Ft&;HQ/uW;r%DZtL_r#3XM>iN(q4,pZN#o5Qd-O?=h@?_Oh4V0n2/(R#,R9L0@LR,Glk'Q`M!:P?AO%=N\*`fhTCQ#Z>GLSSJPT=(U%\;N/gCL`[dVn4[rAL0T!mVqPPk]u?uc)KJ)3AD%lhK(u<InkdM;q+JD*#oq@"dSdZX,,bRYR5\8!%7Ck1EdV8S!(Skok7W2!9,Sl=kXh9B6g6H&0S\5::nW:$ITYI<@[*]Q7g>I*Ebe,7VA#i`Vf4@lce)Gf!Gr[(Pd&pKhYLV>hmQsb[%Zgr:\$F%\WW`oq-@aLC+,nXTkD@@dm/RMB1S#,?*i+aa;SZm=a'k4_ED2^6VE:IYILQ]AgWQ^@cjOV>gBZ)+PeC6M8'iBeO[6I+-%:f34-\?PN=H[=F[NJs?\CfIImI(-WdR8VKISVSjTK\VV,6:f`I_j=>^%h)iVX/"i=IU=p**/t4q#(i"76n0c/JRpJ3*JH<_U3F/&%Gc:kh$pkAVg9optj5=,]bEThp>LQ[h5C*pN+01YbV5a"f!MlC9k7e;iK).+;+l>WmH<=iMSss.c.V%,(7eq"jA6O4<+iM)/Um>JO%#uXXG*-O[[73R2%&ofHWa'](DAZfNY-,clsHmCt2;C/`E\g5?C3A^b`VIqClfu:etOZeRBV#A-Bf\f)pL$W9F#[WlhO^)/$<$!NB%0T"na;f:-1BuQl.6@o6*>%+.FUl&'[R'P@sE>Kc%B!3G4b.U^C;Y%F(#d99Spr9KK.7$-E&rSj;.C24V9(Hj=,CVI!,\8FUPQ@@+%kZ68R/6+Z4?>?*A1_WM3*hC2b.-FcB=@JT3+qUo:9<$q(=7fU&N1EoZM:CU0!fPLAJdKu*hBP+bBNCLl._?>TTK)Zos&7V/b%jBO%+RDa9V:fUCc\F!N(1h>]&a$kK/X;gQ2A@U2ghI[+qp-*9?19>Qa!%OXl8r]\!KncNg*J)']uP1:"u;o?<rAqKX%9984sM>Aa@<.6%Liuhr+Zf:_V/1@t_b>Df7+rjrF*;TBkDV*p(m9<tehp*N<3_G.D8eerALkg%i<KrdJ9LJqB3eN1=;.A6J=8o<DT/9'ZR'=e<d[gi%RFfPb,n\Sj/?>sb[DGp!#^MuL`o&;,%*!%t<*b<YPbF0^"UfohJr"[`+nUq,Ub2o-Y,KmMV<S4dT9>^9-qPY:T6U\RY&V8L9n+Hq%6odV6"MGLXPaMCMQdBq_Be[.ufXgaM+&R+f6A1q'N]@h`%rh[ab(;;sP7mID1'flf'VskiS@(_n^<AhbJl.-,hPRh.,i0-jEhs#2%B.GAW\HiR#"IU"<Cq*db*R:`>;-j,mH4'9J.hW$.,eSZ%6W?0[C8Yrs*&,eE`)LEjZidAZ3Kk<t&B5\PI3n!R<)8875\K,F)#l%K%11HTs9T5Gi!eZQ!Ec>kP0H_pp*(#pU1*?mmNh.$-0TJ"%^"sMPQTX\@!79k#P=f9j*K*Q&e8U-O!LOUAkS+*@+;<>'$7I_$:#efG%Z!;Q08n,0Qeg<+F@4Z*o`7/RbZ(nfO@Eh(n7kE@Vb(;<Z]p@6SSmF+`8inLg^T:B8"Gn\(4qb"74+_NWQTcLo(4$QDEE&.8Oo**S%Q7<Po(=stYj+-I61NaD#0(iX&Og`>"8G%KK.4YHL7`a=lD5\s.1QK'[F$g/*0^T:s=Iqj2`E3NP@s>X*O0V^R2cW^R;#pq9armqk%\.U8`9j$qmOs7F5eZQB<6c<h[#@XfHf39\`(DOZd=kEpA+E*R&%f!9%pl9Tm2*3/P<G'IO;Y*>FojfA_5`^\3UVl&`=W*]@+M4<#%M(t@>rKLG=&(RTh&L%pF:R1:;Nl=8>Qp2;9UTIXA-M"IHFV,bn]/><p.b0Fa/=3+.E3YT87`A+.JhOIM@ODH?8u/H=$,V@C#:;fl%R;:*!+<NI-8pWrO-!F__Ec5`e0c2Hlp"Udh.BErY\&16@jFBkdf,QIb^FFipi'Tg)#`6Mq'MOCT?r'd,CSet\T^]lb3h.R!L.YgH%T=IoMZ3XlY3#4SQaHL'\#\e.HMOe.#00'NIfEluE<1f)>&:/,'U/,9q2\Y[LDc`u;-]#o;k<2soaPEd3C;sdW`M_-cV3I_^Ptnh#%^?#96TbFM>7`CrYCm3$$HVoQ#AP\CikX<7_cj=h>I)q([1l]iHSD]&gpQ1bgS935E.F=G_7WWH6i$PUuWn+%cnCTI(WPUsH07^3M%O6N_l:L?Fg'o^`1n<(UdAXZKTm@]+:r*ko%b;KBBoh1Q`VB@To<P]q_PreI_-(8hiIBT"(4MO7G5)D(]=OkfAKih?X)I@']WYV5d%B$(gj)84#6)ciqF0iBl[QsWu'2:o;D#I6W:%/1,;U).sS^[bgD&u_fQ0i1ld,Z'a5m(84*N%?Lj<4,i7/mQht3[@g(*>0Wr%N'>G%V/`p.J6s$@435iS_+(C,oPh!7&e:ic2!niMW8VseP29$/bGo<D[GHFP^H1N?6#FC;Ai9_p[/h@%n9'qn283>B(6WJHe-::^6#oV#%CJY#.k7NetL'S,96NdP&'*55*FV[^A6&%ui3lnKa`O;"i<>'=&$;qVnO_4ZZL=@[T5'6)ljVF*^lX/8OQFmf="'Ho64LS04HlOgI%qM:upNg0Wmqps>dXWNJYq*5&C.p/dMCY_o4]Ln5dnAE=^<^g2tbWN723Wm1O1)SP0B>@@5Z??RXB]nqUj0K/1<ad!NmYo`Z&E8?X%ao4_":`L)nBatFb<!S*/P/EJTFT?sUJ5LI)3RL9OW^Bc5R@I7^>]*L';Ii1dOs9E2p:>(*0LkN:f30/q.(DC'l4A#&_'%,9+$A-=%@L/pe4Id568t`feOd5[W;EpHsrb#_LVLHmM89)Gnjrnr,#RV@*A?7)jTu&bW9=M"q#-&Flr.=SGH@7n(!2MPQLp/'L$o!s/CDQOH%%:Qq96\=0V?qG9-0G-LtGV#Cp:'=qB,f/Ijk#RDN'j@3)plh%e'J,3BrJh^kqb8,/X7mRIMIJ[Skdk'TKJ]?<'[#?6X#C^+`b0,[%Nn8:PdoUZ8-Ks(q"opT-5pM%C+-$\&W\3<7Gi$#7:`AV^lTK$c!=(I?DNNFG(IHau3btDq)X!>9+hAT[94DD:E=%`6L(THEZj$s6%2.`%mb6/4.1-kuN6qC<7)7QF)H8T8%#X9.A=eRKNoMt5j5ufr;;&MnNo1KKNVlI:b?def[[ETO8<hj50)&O]tADgZHM.+uobqd6l%W@ViP'Z\]7AsisgG\2O2VO8QXl;HiWk4K#=A!=tm]`]P7O,5u"oPI4>#H7E7WB;kn"0ZLS0a]+#@EsMo+>edmYf(.2KuN!pUVh@9%_<se:&5u4Wp5&+;@Z^MQ&YUNDA4.luiu.AJV+Hqd_(tQ-:9dKCfda3r@@?nB5qSZV7MYb1_g,g0g>KVB34D35L`9k"75D8r&JA2X%Jg?YM@"Dn?<cfnOR#%W4#RSPi.Fkh8R'hceLA<-m0A/+=ThBW/oTL>8WAXX5onF-:1J-J["O/>N#a7D%G4=#,"Z9X!:a\1[I8q`5%b<99gfath$=B1WdV@pR=@H<_/f;sV^/MYM]%7Dj(9h]e?MB/(]8(V,+I`+)5<>hZ\O_H#A$$L=.P_Lm@e<%I&'.bl_";BLY`ae"e%WB4ZoAcs)dalFV.H&Tb0c""2=#tD)AG<MZcm5c"nb"PhAEIj*(K2V*r/uSerYC)HhBAQFF"_m6QM&0S\/&b-1<)?ooA>E\@)NPqV%f;tKKBul=8DALm%%k_8/2DGjjfHlAi@bs[$EXJQTB?>lXL%LPcieeZgfict<#Y83AKJRAGM.tJ@W_$`m#$ESAm=T.!iH5F"LS\!Y%*^Aa`Qcgj4%ps.71D3n9qie330Fo=L+j<IYo*Ep'^aXh[#ikYP@Mg-i8X;^T_s0VsbX5JUmF\\!m=O-7JU%Qb!qS7-AV\c6#g>s%%V80`#.gaEu1RGm>[D!KFVsk6"o+\VY0Mc+V_Wqom@pkn^T,<rnFtpE6)_H&T)GgR!-@fQ)?33\p*^/jfLbd4`!'XMX;G\FZabtb1%E<cc*]T0ns4PH+dXK8QkBD@@CI:Dd.TKEY%B,%/74KNU###UMW6dY5VQ3-%4_[qYke`l+;nl65=YpV%[&*E"6SdBFg8-'E4U:"ct%5rP.&NfWL*=geLJPJbt8'U"7?\hJb2%:'TDV/sg5,j?1SG"qH9ZQ'T$0qKMr;fW-jgk>>l:`dKBcr0SW-$'sE'-p,-b#:!d%UOf[%<1`A<Gh1=`@TX\b_%W'&^aUt\OC_f+b9KR9$UU(pcoDj&`eSY17c,_Yp(@n7'K6>gU)fIZ21qNf):H`t67gZlo;3L=<X9)-#"rtb%XRQ?Z>TT<`7Do^VGtiC&Kt'5b&'Kj+\3(H/K8;1#H$CB'.4W,QH)0tp;XB(rne+5]EI"JdZ+MB&Gsm<f=cBuC,j1!%jjD7=[T:cg%RSq(Y$@l!!)B_=k,9090/$-Wm=&Pek*((XaNhI6M8sq=oL0Ck3C<$m7`S26:U:0+aE60hf7>6@h)B;+D<*8oP4,-oI&I[-7afp]^%J`5Yo`t3FA(6/<n$F_fNL(YalL(Z$sL9N%0W`j'q?=S[Y#/`=L"6VOsY:uT#$e>O&:l?[iJsD#I)+rNhSft16b1`;/L+kW@\P)K%%iC?loR^V==W.IN[%AhI8D[7"-8=k[P+\K\TPcKC:(S\Bjo7AG+AKOqE!,?N`&IJnPJ+*nU#b!>iP"bjDfa,<c"A->$":MpeAC-;U%-[#uncbdbc$dKnX^WcA'EsO.!f#\^r.oR0FGh63IJ*<(sHni`'1i`neF/Z3nBdkBNB.sfobTM!\Yo9bseP4#^</Fk5$f*jmk$>C%%JR(l;2aSuCYKh'o@:ee/-kVXnHljWh.jf!*mR\'cs.%J2m=NlEm[<0"D^;"q!W8H\',.t;kTQQ;!A"J/Zt4j9nl'Qb_YF'DrDg`g%,YOR_/N)aCP0cq-@*PO$DF@@<_KK;tD&"=`aB'?N9foJ.liO6sVc-t/BrbE;$[;BKBcC['$/Gk3\N.s"+Dn6DfF_Tfn\;SGKNV[F%*t`"?$Zo?`27W5PVGf9shRSbrDX'@R1!8ZS_kh`uJh`[X9ul?QI%',(-ksUIDM1m;c^<&G.)NYqie+#h:l@A!^MQg3eG3sGP/ZT#%8Z0e'o!pPI,`32"!`ftn'!1T3E+R/S`Ym9W"H%B\k^gZ-X7#.!"Xq<if%"dB"A(4';t:t^cr=30C`>Z?PT2FJV'qd+k%oI?\ai`P%2_F]U,qO,D)BNCXg"mo@jrIYTiNfQu<^O#?d\"T!aAe<NP2J+p:8+[4Zn2Rg%SOL0e4AIAXo4u&,-W7:3\SVAl0+tP_W<l?H$S'Q%Gs33^LV,/gm?![PS5=qBP4pur'd49i*H;VUkLlgTE`c/kC97IZ/?P_>Yae_To'nu[6plNo<Ii#ELLt7]&4X'HeK3\"^qm\'Pmd=?%i\Nn(lTB<@H'U@32,"\aeU+p0L6&XTRV%f_eQPB7cQN.YR;OC(GJ[X[U&i#cdY;&S1cju'qT9&r./">cM]+5iQ8gAuOdW7n@O>!.%;=Lg%UlK9'XA3lU@tY,r\&R2,F\g/7MoI1H3eNOp9orNdcj1e;6j_3C$e;3aC5*<g>(/q3'7qu-IWk>jBWL3,LQRL;P)C=a7HW%)%.kO!+XhH:&Nf!D0+AmGc0Ths3-fQ=I/uJ0-,*SU<:AcSHqT:UHO4#g.5aY<2Se^NYH:E^,#><AKn>2GAl'"HUc@jnDbKak(-p-IJ%kdEt6fhl"QQCV`,D([n3$K\D^7qhitZ85sLT!VP(ZR\9BBVOjP5NV0em&V=,G#g;ZSZ*R/AS5*(3to0kN&)YL-HaUnC%A2+_&-5h%&tN-JFqeq%=nRX7.S*E[*^0NpG'9aUk?h4h\-*Gd)$..$EmRrN&d*Zg3d=2pVADR(/!?L_F5!W"!2:"V.X39A'u>.m3`r\EeemLs%AU9$Ws)pr=Ud3A^l*$g$*IC[>C)kQR',G2V+Zsi%Nj>C`mspL-g;Y!u]TBrE+jg?:Lc!7L`&.Q0//Eq<0I[?a,DmNoegb=>2j'$8%iM1n"/bMV?<%TR+Q[Zq(/dW6j+pl3-Fo#BEWp1Ef-nnELkioq"15MiAa[\nD$D[C6*'RcaPkiu5R+:<V&.lPPFOLO/F@t5^e0sa\%)GTq[F%Di_'2<#Ql/X[YDt-nGYcEMMCr)EG4e=6[\Zd[6%!^dCSXc3N?GFu;VbPmKi!EOp:eVan,.V>'a+oIDX7rH!0e$sF"N5%o%$5T\Y.@=(e6V&6?JF[Ca13F7g_%FuWY(Ro!g_bA94crn-jL-OACk=:.^-\HuLtS"G8@Q5a;sjfI$YGT!$ndYlZ",4I/-Rt!iKR`#%"kJ;u-&.$\`bW^>Uj-<jk+^!LJIVd+^&AAc8sRKP<jsU^5o7E>6Kh:nBK<k,':B"SLpdT`/LZaii2?O<jhO_I23StA%+n8_DF)GH%%TNXO:Fl`bpg?-*86[K0!C@V(8r^h5i+OME?_OA[l/O\%YgIJVl`YskP@-\<<o6KeUlV^daXsn0H]5>n!+-I1;lsffnmPNW\#"]!%g2I$7@_lfRXUpAsQBnYnfns"MBDfo+f9N,m^lan0=W7jTR2&;S%0tOr'nMY[#B;_735A*CQ-js8EY>T;(D-bkE*unA>r!C-m':II%I0q]?^btr`XV6t\k8+53JgeDdC\Gh<_a+J5nmI&<_h!E%ZAZID^7ut5krJ6"l_HMb9P`B/Qs;(;m33ZfJ$GEi&M^NkR<d4+D(U!i%g8<uPWO5?U`S,rZ.3I5/U[*isBk;!cNs6uAW(K4N!/]/7c'1\TL$tA93f;6H"Jh.$5g^dl@f.6@#,>/"l`Kj9CJ1^0DcL_YIso*/%mXGasS3+3e])(@@LVq.shYm'AnAit4TC;d*iUXUa?h"0T_sd)]jUXQcJ,]<<j)FhWa)D!1&82\??X:?oIqS$G"0]R#!!~>%AI9_PrivateDataEnd