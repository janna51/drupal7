%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Westchester Club logo 2011 v1-o.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Cicia Lee
%%CreationDate: 3/16/11
%%BoundingBox: 0 0 178 132
%%HiResBoundingBox: 0 0 177.2729 131.0811
%%CropBox: 0 0 177.2729 131.0811
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 96 8%%BeginData: 12218 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFFF5A2F542F5353A92F532F542FA92F542F53A8542F532FA82F53%2F542F532F542F537EFF7E532F542F532FFD06FF5A2F542F532F7EFD06FF%2F542F532F542F532F5459FD04FF7E070D070D2F7EFF5A2F542F532F54FD%06FF53542F532F542F532F542FFF2F542F532F54A8FFFF542F532F7EFD05%FF7E2F060D06A8A87E060D067EA85A062F7EFF530D077EA884070D060D53%5A5353065AFFAF7E0D060D2FA8FD06FFA85A060D065A84FD06FFA82F0D06%0D2F7E532F0653FFFFFF2F060D7EFF530D06FFA87E060D06537EFD06FFA8%2F0D060D297E5353060DA984060D060D53FFFFFF7E2F065384FD06FFA90D%070D7EFFFF53070D53FF530D7EFFFF5A077EFFFFFF5A070D2FFD04FF2F2F%FFFFFF2F0D077EFD08FF840D070D84FD08FF7E070D07FD04FF5A07FFFF7E%070D7EFFFFFF2F0DFFFFFF0D070D7EFD08FFA9070D07FD04FF7E07FFFFA9%070D075AFFFFFFA90753FD09FF2F07062FFFFF7E0D06077E0D2FFFFFFF06%0DA8FFFFFF530D062FFD04FF7E5AFFFFFF2F060753FD08FFA8060706A8FD%08FF7E07060DFD04FF842FFFFF2F07067EFFFFFFA92FFFFFFF060706A8FD%08FF7E07060DFD04FFA82F7EFFFF53060D06FFFFFF2F07A8FD09FFA9070D%07A9FFFF2F0D072F07FFFFFF7E0D59FD04FF7E070D2FFFFFFFA8FD05FF2F%0D077EFD08FF840D070D84FD08FFA9070D07FFFFFFA8FD04FF5A070D0DA9%FD07FF0D070D84FD08FFA9070D07FFFFFFA9FD05FFA80D070D7EFF840D53%FD0BFF2F060D53FFFF7E060D065AFFFFFF5306A9FD04FF530D062FFFFFA9%0D7EFD04FF53060D53FD08FFA8060D06A8FD08FF7E0D060DFFFFFF2F53FF%FFFF7E0D060D0653A8FD05FF060D06A8FD08FF7E0D060DA9FFFF5A53FD05%FF2F0D062FFF5307FD0CFF840D070DA9FFFF2F070D5AFFFFAF075AFD05FF%7E070D07532F2F07A9FD04FF2F0D077EFD08FF7E0D070D7EFD08FFA9070D%072F2F53077EFD04FF2F0D070D072F5AFD04FF0D070D7EFD08FFA9070D07%2F2F53077EFD05FFAF070D075A077EFD0DFF0707065AFFFF2F0D062FFFFF%53077EFD05FF5307060D292F060D7EFD04FF2F060D53FD08FFA8060D06A8%FD08FF7E0D0607062F290759FD05FF2F07060D060753FFFFFF060D06A8FD%08FF7E0D0607062F2F0753FD06FF53060D062FFD0EFF84070D0DFFA92F07%0D0784FF2F2FFD06FF7E070D2FFFFFFF07A9FD04FF2F0D077EFD08FF840D%070D84FD08FFA9070D07FFFFFF2F7EFD06FF842F070D070DA8FFFF0D070D%84FD08FFA9070D07FFFFFF537EFD06FF840D070D59FD0FFF2F060D535A06%2F060D077E067EFD06FF530D0653FFFFFF7EA8FD04FF2F060D53FD08FFA8%060D06A8FD08FF7E0D060DFFFFFF847EFD08FF5A060D067EFFFF060D06A8%FD08FF7E0D060DFFFFFFA87EFD07FF060D06A8FD0FFF5A0D072F072FA80D%070D072FFD07FF7E070D2FFD06FFA9FFFF2F0D077EFD05FFAFA8FF840D07%0D84FD05FFA8FFFFA9070D07FD06FFA9A853FD05FF2F070D59FFFF0D070D%84FD05FFA8FFFFA9070D07FD06FFA9FD05FF0D070D84FD10FF0607060D7E%FF2F0D060753FD07FF530D062FFD05FF5A2FFFFF2F060753FD05FF075AFF%A8060706A8FD04FF7E077EFF7E07060DFD05FF7E06A8067EFD04FF530D06%7EFFFF0607067EFD04FFA80D59FF7E07060D7EFD04FFA806A9FD04FF0607%06A8FD10FF5A070D2FFFFFA9070D07FD08FF5A070D07FD04FF84075AFFFF%2F0D072FFD04FF530D7EFF840D070D59FFFFFFA92F07FFFF7E070D07A8FF%FFFFA90754A90D07A9FFFFFF2F072FA8FFFF0D070D53FD04FF5307A9FFA9%070D077EFD04FF0D2FFD05FF0D070D7EFD10FFA80D067EFFFFFF2F0653FD%06FF7E53060D060D06532F2F060D7E7E2F0D060D062F2F2F060D06FF532F%060D060D2F2F2F0D06537E5A070D060D062F2F2F060D59FF070D065A532F%062F7EFF7E53060D060D072F2F2F060DA85A070D060D062F2F53060D2FFF%FFFF7E53060D062F53A9FD0FFF532FA9FFFFFF7E5384FD06FF845A7E597E%5A7E597E5A7E59FF7E7E597E5A7E597E5A7E5984FF7E597E5A7E597E5A7E%597E84A9597E5A7E597E5A7E597E5AAFFFFF7E532F532F7EA9FFFF7E597E%5A7E597E5A7E597E7EAF597E5A7E597E5A7E597E5AA9FFFFFF7E597E5A7E%597EA9FDFCFFFDFCFFFDFCFFFD13FFA82F2F072F537E2F2F2FFFFF842F53%2FFF7E532F7E2F532F2F53FD06FF7E292F2F5AA8FF532F2F532F5AFFFF2F%2F2F7E2F2F53532F532F532F2F2F532FFF8453062F7E7E072F2F532F0D7E%FF532F072F2FFF2F532FA87E532F2FA8532F2F2F537EFF532F072FFF0D2F%2F2F532F2F53532F2F2F5AA82F2F53535AFFFFA9072FA9FF7E53FF5307AF%FFFFFF5307A9FFFF2F5AFF7E077E2F0D59FD04FF5A0784FF840753FFFF07%0DA9A92FFFFFA9072FA92F077E07A92F5AA80D07FFA82FFF2F07A92F7E2F%5A840D2FA907A92F0D84FFA92F84A9077EFFFF530D84FF530D53FF537E7E%0D2F8407A907A92F0D7E5A2FA9072FFFA92FFF5A0D592F077EFF060DA8FF%FFFF7EFF2F0DFD04FF2F077EFFFF5A53FF53077E7E065AFFFFFFA9062FFF%FFFF2F067EFF0D06FF7EA9FFFFFF5A067E590D067EA80DA8FF060DFFA87E%FF060759FFA8A8FFA8062FFFA9530753FFFFFF7EFF7E0753FFFF5A06A8FF%5A067EFF7EA87E062FA8A9A8A9FF2F06A8FFA9FF072FFF7EA8FF7E06A87E%0D2FFF0D2FFD06FF5407FD04FF5307A9FFFF597EFF7E072F072FA8FFFFFF%5A0D5AFFFFFF5A0D59FF070D592F84FFFFFFA90D2FFF2F0DA97E53FFFF0D%075A07A9FF5A070D2FFFFFFF840D2FFFFF5307A9FD05FFA9072F5A7E070D%84FF590D2F2F2FFFA92F072F7EFFFFFF2F0D84FFFFFF072F590DFFFF5A0D%535A0DA9FF062FFD06FF2F0DFD04FF2F0D7EFFFF5A53FF530D5384060DA8%FFFF7E065AFFFFFF7E065AFF0D067E29A8FD04FF2F0D842F067E29A8FFFF%060D7E2F7EFFFF7E060D2FFFFFA8062FFFFF2F0D7EFD05FF7E0D2FA87E53%06A8FF5A065A592FFFFFA82F060DA8FFFF5306A8FFFFFF0D078407FFFF7E%062F062FFFFF2F07A9FFFFFF84FF5307FFFFFF7E5A07A9FFFF53A9FF7E07%84FF2F07A9FFFFA80D07FFFFFF2F0D84FF070DFFAFA9FD04FFA9072F2F2F%072FFFFFFF0D07FFFFFF847EFF7E072FFFFF7E0D2FFFFF7E075AFFFFFFA9%7EA9077EFFFF5A0D7EFF5A0D59FFFFA97EA9FF2F077EFFFF2F0D84FFFFFF%0753FFFFFFAF590D845A0784FF7E0707A9FF7E07FF2F0759A95353590D2F%FF7E2FA8FF2F0D0653065AFD04FF2F0753FF84072FFFFF0706FD08FF2F06%A82F0D7EFFFFA806077EFF2F7E065A7E072FFFFFA8062FFFFFA82F067EFF%A929A87E0D53FFFF5A067EFF2F0653A8A8295306A829077EFFFF2F06A8FF%FF590D06A8A82F7E2F065AA82F06A9FFA85A2F53538459532F542F5384FF%7E5A2F7EA9FFA8542F53537EFD06FF7E542F535AFFFF5A2F5459FD07FF7E%5AFFFF2FFFFFFF2F532F542F53A87E2F5353FFFFA92F542F5AFFFFFF7E2F%542F7EFF542F537EA92F532F842F532F542F7E845A2F537EFFFF5A2F542F%A9FF542F532F542FA92F542FA9FF7E2FFDFCFFFDFCFFFDFCFFFD1AFF7EA8%7EA87EA87EA87EA87EA87EA87EA87EA87EA87EA8A8FFFFFF7EA87EA87EA8%7EA87EA87EA87EA87EA87EA87EA87EA87EA87EA87EA87EA87EA87EA87EA8%7EA87EA87EA87EA87EA87EFFFFFFA8A87EA87EA87EA87EA87EA87EA87EA8%7EA87EA87EA8A8FD1DFF54070D070D070D070D070D070D070D070D070D07%0D07A9FFFFFF0D070D070D070D070D070D070D070D070D070D070D070D07%0D070D070D070D070D070D070D070D070D070D070D070D84FFFFA9070D07%0D070D070D070D070D070D070D070D070D07A9FD1DFF2F0D060D060D060D%060D060D060D060D060D060D060D7EFFFFFF060D060D060D060D060D060D%060D060D060D060D060D060D060D060D060D060D060D060D060D060D060D%060D060D06A8FFFF7E0D060D060D060D060D060D060D060D060D060D060D%7EFD1DFF53070D070D070D070D070D070D070D070D070D070D07A9FFFFFF%0D070D070D070D070D070D070D070D070D070D070D070D070D070D070D07%0D070D070D070D070D070D070D070D070D7EFFFFA9070D070D070D070D07%0D070D070D070D070D070D07A9FD1FFFA8A87E5A2F0D0607060D0607060D%060D7EFD0AFFA8530D0607060D0607060D0607065A7EA87EA87EA87EA87E%A87E5A0607060D0607060D0607060D53A8A8FD09FF7E0D060D0607060D06%07060D2F7E7EA8FD28FF5A070D070D070D070D53FD0DFFA92F070D070D07%0D070D07A9FD0EFF0D0D070D070D070D072FA8FD0DFF590D070D070D070D%075AFD2EFF53060D060D060D0653FD0EFFA80D060D060D060D065AFD0FFF%7E060D060D060D060D7EFD0EFF5A060D060D060D062FFD30FF2F070D070D%070D2FFD0FFF7E0D070D070D070D5AFD0FFF7E0D070D070D070D53FD0FFF%2F0D070D070D072FFD31FF7E07060D0607060D7EFD0FFF0707060D060706%5AFD0FFF7E0607060D060706FD0FFFA80D0607060D060759FD32FF2F0D07%0D070D0753FD0FFF84070D070D070D0DFD0FFF2F0D070D070D077EFD0FFF%5A070D070D070D0DFD33FFA8060D060D060D06A8FD0FFF2F060D060D060D%7EFD0DFF7E0D060D060D060DA8FD0EFFA9060D060D060D067EFD34FF5307%0D070D070D2FFD0FFF7E0D070D070D072FFD0DFF53070D070D070D5AFD0F%FF530D070D070D072FFD35FF7E07060D0607060D7EFD0FFF2F07060D0607%067EFD0BFFA80607060D060706FD0FFFA80D0607060D060759FD36FF2F0D%070D070D0753FD0FFFA9070D070D070D2FFD0BFF2F0D070D070D077EFD0F%FF5A070D070D070D0DFD37FFA8060D060D060D06A8FD0FFF2F060D060D06%0D7EFD09FF7E0D060D060D062FFD0FFFA9060D060D060D067EFD38FF5307%0D070D070D2FFD0FFF840D070D070D072FFD09FF53070D070D070D7EFD0F%FF530D070D070D072FFD39FF7E07060D0607060D7EFD0FFF2F07060D0607%067EFD07FFA80607060D060706FD0FFFA80D0607060D060759FD3AFF2F0D%070D070D0753FD0FFFA9070D070D070D0DFD07FF2F0D070D070D0784FD0F%FF5A070D070D070D0DFD3BFFA8060D060D060D06A8FD0FFF2F060D060D06%0D53FD05FF7E0D060D060D062FFD0FFFA9060D060D060D067EFD3CFF5A07%0D070D070D2FFD0FFF840D070D070D072FFD05FF2F070D070D070D7EFD0F%FF530D070D070D072FFD3DFFA807060D0607060D7EFD0FFF2F07060D0607%067EFFFFFF7E0607060D060706FD0FFFA80D0607060D06077EFD3EFF530D%070D070D0753FD0FFFA9070D070D070D0DFFFFFF2F0D070D070D0784FD0F%FF5A070D070D070D2FFD3FFFA9060D060D060D06A8FD0FFF2F060D060D06%0D53FF7E0D060D060D062FFD0FFFA9060D060D060D06A8FD40FF5A070D07%0D070D2FFD0FFF840D070D070D072FFF2F070D070D070D7EFD0FFF530D07%0D070D0753FD41FFA807060D0607060D7EFD0FFF2F07060D0607062F0607%060D060706FD0FFFA80D0607060D06077EFD42FF530D070D070D0753FD0F%FFA9070D070D070D070D070D070D0784FD0FFF5A070D070D070D2FFD43FF%A9060D060D060D06A8FD0FFF2F060D060D060D060D060D062FFD0FFFA906%0D060D060D06A8FD44FF5A070D070D070D2FFD0FFF840D070D070D070D07%0D070D7EFD0FFF530D070D070D0753FD45FFA807060D0607060D7EFD0FFF%2F07060D0607060D060706FD0FFFA80D0607060D06077EFD46FF530D070D%070D072FFD0FFFA9070D070D070D070D0784FD0FFF5A070D070D070D2FFD%47FFA9060D060D060D067EFD0FFF2F060D060D060D062FFD0FFFA8060D06%0D060D06A8FD48FF5A070D070D070D2FFD0FFFA80D070D070D070D7EFD0F%FF2F0D070D070D0753FD49FFA807060D0607060D7EFD0EFF7E0607060D06%07067EFD0EFF7E0D0607060D06077EFD4AFF530D070D070D072FFD0EFF2F%0D070D070D070D0DFD0EFF54070D070D070D2FFD4BFFA9060D060D060D06%7EFD0CFF7E0D060D060D060D060D53FD0CFFA8060D060D060D06A8FD4CFF%5A070D070D070D2FFD0CFF2F070D070D070D070D072FFD0CFF2F0D070D07%0D0753FD4DFFA807060D0607060D7EFD0AFF7E0607060D0607060D060706%7EFD0AFF7E0D0607060D06077EFD4EFF530D070D070D072FFD0AFF2F0D07%0D070D070D070D070D0DFD0AFF54070D070D070D2FFD50FF060D060D060D%067EFD08FF7E0D060D060D060D060D060D060D53FD08FFA8060D060D060D%06A8FD50FF7E070D070D070D2FFD08FF2F070D070D070D7E0D070D070D07%2FFD08FF2F0D070D070D0753FD51FFA80D060D0607060D7EFD06FF7E0607%060D06072FFF2F07060D0607065AFD06FF7E0D0607060D0607A8FD52FF59%0D070D070D072FFD06FF2F0D070D070D07A9FFFF070D070D070D07FD06FF%54070D070D070D53FD54FF060D060D060D067EFD04FF590D060D060D062F%FFFFFF53060D060D060D53FD04FFA8060D060D060D06A9FD54FF7E070D07%0D070D2FFD04FF2F070D070D070D84FFFFFFA90D070D070D070DA9FFFFFF%2F0D070D070D075AFD55FFA80D060D0607060D7EFFFF7E0607060D06072F%FD05FF2F07060D0607065AFFFF7E0D0607060D0607A8FD56FF590D070D07%0D072FFFFF0D0D070D070D07A9FD06FF070D070D070D07FFFF54070D070D%070D53FD58FF060D060D060D067E530D060D060D062FFD07FF53060D060D%060D53A8060D060D060D06A9FD58FF7E070D070D070D2F2F070D070D070D%84FD07FFA90D070D070D070D2F0D070D070D075AFD59FFA80D060D060706%0D0607060D06072FFD09FF2F07060D0607060D0607060D0607A8FD5AFF59%0D070D070D070D070D070D07A9FD0AFF070D070D070D070D070D070D53FD%5CFF060D060D060D060D060D062FFD0BFF53060D060D060D060D060D06A9%FD5CFF7E070D070D070D070D070D84FD0CFF2F070D070D070D070D075AFD%5DFFA80D060D0607060D06072FFD0DFF5307060D0607060D0607A8FD5EFF%590D070D070D070D07FD0FFF070D070D070D070D53FD60FF060D060D060D%0653FD0FFF5A060D060D060D06A9FD60FF7E070D070D070DA9FD10FF2F07%0D070D075AFD61FFA80D060D06072FFD11FF5307060D0607A8FD62FF5A0D%070D07FD13FF070D070D53FD64FF070D0653FD13FF5A060D06A9FD64FF84%2F53A9FD14FF532F7EFDB2FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: 
%%DocumentCustomColors: (PANTONE 280 C)
%%CMYKCustomColor: 1 0.7200 0 0.1800 (PANTONE 280 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic CMYK</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2011-03-16T10:50:40-04:00</xmp:CreateDate>
         <xmp:ModifyDate>2011-03-16T10:50:41-04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2011-03-16T10:50:41-04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>192</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAwAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9BefvIlp5v0sW0t3c2V1&#xA;brI1lPbytGFldQAZFGzrUDb50pmRp9QcZugQ05sPGKsh8seS76ex/MPTrDzRdXkdtBe/V72P6xJG&#xA;Y5VYopY1+yktC3tnQ54g4iYAcnQ4JyGUCZPPvenf85C+R7rS7cebdHvLtFnuCuqw+vIUUy/3ciCv&#xA;wLy+Ej3XNf2bnEjwSA8nP7RxGI44k+e7H/IWo+XJ/wAo/Ns2rXt5+k7V43fjcurM3FhZenvtWV2D&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:9B7C85750B20681188C6AF33B70074B5</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:9B7C85750B20681188C6AF33B70074B5</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:9A7C85750B20681188C6AF33B70074B5</stRef:instanceID>
            <stRef:documentID>xmp.did:9A7C85750B20681188C6AF33B70074B5</stRef:documentID>
            <stRef:originalDocumentID>uuid:E3B705F59336E0118987E9F32614B546</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:20:43-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:20:57-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:10-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:28-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:53-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:25:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:17-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:45-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:008011740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EC80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:14-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ED80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:22-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EE80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EF80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F080265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:30-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F180265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:41-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F280265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F380265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:10-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F480265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F580265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F680265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:30:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1405FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1505FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:26-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1605FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:34-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1705FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1805FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:11-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1905FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:33-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1A05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1B05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:58-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1C05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1D05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:24-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1E05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:30-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C62CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:45-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C72CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:51-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C82CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:15-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C92CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:23-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CA2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:41-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CB2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:46-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CC2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:03-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CD2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:08-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CE2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CF2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D02CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B44FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:36:05-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B54FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:36:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B64FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:36:39-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B74FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:01-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B84FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:06-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B94FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:30-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BA4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:40-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BB4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BC4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:38:09-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BD4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:38:28-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BE4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:38:38-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:929C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:39-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:939C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:39:09-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:949C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:39:25-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:959C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:39:32-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:969C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:40:15-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:979C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:40:23-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:989C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:41:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:999C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:41:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9A9C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:41:49-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9B9C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:42:12-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9C9C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:42:44-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7C65C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:42:53-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7D65C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:43:08-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7E65C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:43:13-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7F65C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:43:29-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8065C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:43:34-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8165C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:43:52-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8265C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:43:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8365C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:44:14-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8465C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:44:18-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8565C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:44:36-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8665C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:44:41-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:889836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:45-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:899836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:45:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8A9836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:45:20-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8B9836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:45:24-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8C9836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:45:49-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8D9836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:45:55-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8E9836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:46:14-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8F9836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:46:19-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:909836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:46:38-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:919836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:46:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:929836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:46:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2E27A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:47:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2F27A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:47:23-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3027A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:47:32-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3127A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:47:49-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3227A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:48-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3327A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:48:16-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3427A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:48:20-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3527A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:48:35-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3627A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:48:39-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3727A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:48:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3827A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:49:03-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:947C85750B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:49:24-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:957C85750B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:49:29-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:967C85750B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:49:45-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:977C85750B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:49:52-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:987C85750B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:50:13-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:997C85750B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:50:19-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9A7C85750B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:50:36-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9B7C85750B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:50:41-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>uuid:E3B705F59336E0118987E9F32614B546</xmpMM:OriginalDocumentID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>8.500000</stDim:w>
            <stDim:h>11.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>PANTONE 280 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Red</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Yellow</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Green</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Cyan</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Blue</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Magenta</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=90 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>14.999998</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=90 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=80 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>80.000000</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=35 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>35.000004</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=5 M=0 Y=90 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>5.000001</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>19.999998</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=90 M=30 Y=95 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>90.000000</xmpG:cyan>
                           <xmpG:magenta>30.000002</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>30.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=75 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=10 Y=45 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>80.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>45.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=70 M=15 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>70.000000</xmpG:cyan>
                           <xmpG:magenta>14.999998</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=95 Y=5 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>5.000001</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=25 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>25.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=100 Y=35 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>35.000004</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=100 Y=50 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=95 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>19.999998</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=25 Y=40 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>25.000000</xmpG:magenta>
                           <xmpG:yellow>39.999996</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=45 Y=50 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>45.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>5.000001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=50 Y=60 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>60.000004</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=55 M=60 Y=65 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>55.000000</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>39.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=40 Y=65 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>39.999996</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=30 M=50 Y=75 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>30.000002</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=60 Y=80 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=65 Y=90 K=35</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>65.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>35.000004</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=70 Y=80 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>70.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 282 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>68.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>53.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 280 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>72.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>18.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grayscale</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=100</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>255</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=90</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>229</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=80</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>203</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=70</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>178</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=60</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>152</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=50</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>127</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=40</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>101</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=30</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>76</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=20</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>50</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=10</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>25</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=5</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>12</xmpG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -131.081 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 131.081 li
177.273 131.081 li
177.273 0 li
cp
clp
[1 0 0 1 0 0 ]ct
32.6909 1.61475 mo
32.0161 1.76172 31.6919 1.99658 31.4863 2.26074 cv
31.1641 2.73047 30.665 3.66943 29.8721 5.51953 cv
28.4341 8.95508 25.1157 16.2661 23.6768 20.0835 cv
23.5 20.23 23.0894 20.3184 22.708 20.3184 cv
22.3853 20.3184 22.1211 20.23 21.915 20.0835 cv
21.5923 19.3779 21.1514 18.3218 20.7993 17.4995 cv
19.5659 14.7104 li
19.1558 13.7705 18.7729 12.8892 18.5093 12.4487 cv
18.2451 12.9482 17.8921 13.6538 17.5107 14.4756 cv
16.1313 17.4697 li
15.6904 18.4097 15.3672 19.2612 14.8975 20.23 cv
14.751 20.3765 14.3696 20.4648 13.9287 20.4648 cv
13.606 20.4648 13.4297 20.3765 13.1646 20.23 cv
12.6948 18.9966 11.521 16.354 10.5229 14.1523 cv
5.70703 3.64014 li
4.91406 1.90869 4.73828 1.76172 3.76904 1.55615 cv
3.03467 1.40967 li
2.80029 1.11523 2.83008 .528809 3.15332 .380859 cv
4.23926 .44043 5.47217 .470215 6.97021 .470215 cv
8.26221 .470215 9.40723 .44043 10.5229 .380859 cv
10.7573 .499512 10.875 1.23291 10.582 1.40967 cv
10.0527 1.49707 li
9.52441 1.58545 9.31836 1.73193 9.31836 1.9375 cv
9.31836 2.14355 9.93506 3.52344 10.8457 5.57861 cv
13.7529 12.0679 li
14.5747 13.8882 14.8677 14.5044 15.2207 15.2095 cv
15.5728 14.5635 16.0435 13.6826 16.6299 12.3613 cv
17.0117 11.5098 li
17.2173 11.0396 17.3936 10.3945 17.3936 10.2178 cv
17.3936 10.041 17.3345 9.71826 17.2173 9.4248 cv
14.3989 3.22998 li
13.7231 1.76172 13.5176 1.55615 12.4014 1.43848 cv
12.1079 1.40967 li
11.8149 1.17432 11.873 .499512 12.1963 .380859 cv
13.4585 .44043 14.604 .470215 15.896 .470215 cv
17.3936 .470215 18.5093 .44043 19.272 .380859 cv
19.6245 .470215 19.5952 1.2627 19.3896 1.40967 cv
18.8911 1.52686 li
18.5381 1.61475 18.0977 1.73193 18.0977 1.9375 cv
18.0977 2.17285 18.2158 2.49561 18.3623 2.81836 cv
19.2427 4.84521 li
19.5073 5.46143 19.8013 6.10693 20.0649 6.63574 cv
20.3584 6.01904 20.6523 5.43213 20.9458 4.78564 cv
21.2104 4.19873 li
21.7095 3.08252 22.0029 2.20215 22.0029 2.02588 cv
22.0029 1.8208 21.8857 1.73193 21.416 1.61475 cv
20.5352 1.40967 li
20.3291 1.20313 20.3584 .528809 20.6235 .380859 cv
21.4746 .44043 22.5313 .470215 23.5 .470215 cv
24.6455 .470215 25.7324 .44043 26.4956 .380859 cv
26.73 .528809 26.7891 1.23291 26.5244 1.43848 cv
25.7026 1.61475 li
24.7041 1.8208 24.499 1.9375 23.4712 3.69971 cv
22.7661 4.90283 22.0317 6.25391 21.6509 7.0166 cv
21.3867 7.54541 21.0054 8.39697 21.0054 8.54395 cv
21.0054 8.63184 21.0342 8.80811 21.2397 9.27832 cv
22.6196 12.2432 li
23.3828 13.8584 23.7354 14.7104 23.9111 15.1216 cv
25.3208 11.7153 26.7012 8.07471 28.1104 4.49219 cv
28.3154 3.99316 28.9028 2.31885 28.9028 1.99658 cv
28.9028 1.79102 28.7271 1.70264 28.3447 1.58545 cv
27.6992 1.40967 li
27.4644 1.14453 27.5234 .528809 27.7876 .380859 cv
28.7271 .44043 29.9019 .470215 30.7822 .470215 cv
31.8101 .470215 32.6611 .44043 33.4834 .380859 cv
33.748 .528809 33.7769 1.17432 33.5718 1.40967 cv
32.6909 1.61475 li
cp
false sop
/0 
<<
/Name (PANTONE 280 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 1 .72 0 .18 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
40.9707 8.10352 mo
40.9707 8.92627 40.9995 8.98438 41.793 8.98438 cv
43.8184 8.98438 li
45.3452 8.98438 45.6978 8.77881 45.9912 7.37012 cv
46.1382 6.63574 li
46.3438 6.40088 47.0771 6.40088 47.2251 6.66455 cv
47.166 7.60498 47.1367 8.66162 47.1367 9.77783 cv
47.1367 10.8936 47.166 11.9502 47.2251 12.8892 cv
47.0771 13.1543 46.3438 13.1831 46.1382 12.9189 cv
45.9912 12.1851 li
45.6978 10.7754 45.3452 10.5405 43.8184 10.5405 cv
41.793 10.5405 li
40.9995 10.5405 40.9707 10.5698 40.9707 11.4512 cv
40.9707 14.9448 li
40.9707 16.2959 41.0889 17.2354 41.4399 17.7344 cv
41.8223 18.2622 42.3794 18.4971 44.5234 18.4971 cv
47.0771 18.4971 48.0762 18.4097 49.6909 15.0918 cv
49.9258 14.769 50.6597 14.8862 50.7778 15.2378 cv
50.6597 16.7651 49.9551 19.1436 49.5444 19.9365 cv
47.9883 19.8774 45.1694 19.8486 42.7617 19.8486 cv
38.9448 19.8486 li
37.5352 19.8486 36.0962 19.8774 33.894 19.9365 cv
33.6592 19.7603 33.6592 19.0552 33.894 18.9087 cv
35.2744 18.7036 li
36.5962 18.4971 36.772 18.3218 36.772 15.6206 cv
36.772 4.66846 li
36.772 1.99658 36.5962 1.8208 35.2744 1.55615 cv
34.5405 1.40967 li
34.2759 1.23291 34.3057 .557617 34.5986 .380859 cv
35.9795 .44043 37.4175 .470215 38.8267 .470215 cv
45.0522 .470215 li
46.9312 .470215 48.6045 .44043 48.9858 .380859 cv
49.0151 .851563 49.2207 2.96533 49.3682 4.93262 cv
49.2505 5.25586 48.5752 5.31396 48.2817 5.05029 cv
47.959 4.02246 47.5474 3.1416 47.166 2.73047 cv
46.6079 2.17285 45.7271 1.8208 44.2881 1.8208 cv
41.9395 1.8208 li
40.9707 1.8208 40.9707 1.87939 40.9707 2.96533 cv
40.9707 8.10352 li
cp
f
58.6167 14.9746 mo
58.6167 16.354 58.7344 17.2939 59.1157 17.7637 cv
59.498 18.2622 60.0254 18.4971 62.1689 18.4971 cv
64.8418 18.4971 65.6631 18.4097 67.395 15.0039 cv
67.6304 14.7104 68.3057 14.8276 68.5112 15.1797 cv
68.3647 16.707 67.6602 19.1436 67.249 19.9365 cv
65.6924 19.8774 62.874 19.8486 60.4663 19.8486 cv
56.5317 19.8486 li
55.1812 19.8486 53.7129 19.8774 51.8926 19.9365 cv
51.6284 19.7603 51.5693 19.0854 51.8042 18.9087 cv
52.9209 18.7617 li
54.2417 18.5864 54.4175 18.3516 54.4175 15.6206 cv
54.4175 4.69775 li
54.4175 1.9668 54.2417 1.70264 52.9209 1.52686 cv
52.0688 1.40967 li
51.7749 1.23291 51.7749 .557617 52.1279 .380859 cv
53.6548 .44043 55.123 .470215 56.5317 .470215 cv
57.9409 .470215 59.4087 .44043 60.877 .380859 cv
61.1118 .557617 61.1118 1.23291 60.877 1.40967 cv
60.1143 1.52686 li
58.793 1.73193 58.6167 1.9668 58.6167 4.69775 cv
58.6167 14.9746 li
cp
f
76.1743 14.9746 mo
76.1743 16.354 76.2925 17.2939 76.6738 17.7637 cv
77.0557 18.2622 77.5835 18.4971 79.7275 18.4971 cv
82.3994 18.4971 83.2217 18.4097 84.9531 15.0039 cv
85.189 14.7104 85.8638 14.8276 86.0698 15.1797 cv
85.9224 16.707 85.2192 19.1436 84.8071 19.9365 cv
83.2505 19.8774 80.4326 19.8486 78.0249 19.8486 cv
74.0903 19.8486 li
72.7388 19.8486 71.271 19.8774 69.4507 19.9365 cv
69.1865 19.7603 69.1284 19.0854 69.3628 18.9087 cv
70.4785 18.7617 li
71.7998 18.5864 71.9761 18.3516 71.9761 15.6206 cv
71.9761 4.69775 li
71.9761 1.9668 71.7998 1.70264 70.4785 1.52686 cv
69.627 1.40967 li
69.333 1.23291 69.333 .557617 69.686 .380859 cv
71.2124 .44043 72.6807 .470215 74.0903 .470215 cv
75.4995 .470215 76.9668 .44043 78.436 .380859 cv
78.6704 .557617 78.6704 1.23291 78.436 1.40967 cv
77.6724 1.52686 li
76.3506 1.73193 76.1743 1.9668 76.1743 4.69775 cv
76.1743 14.9746 li
cp
f
93.8794 8.10352 mo
93.8794 8.92627 93.9097 8.98438 94.7017 8.98438 cv
96.7271 8.98438 li
98.2544 8.98438 98.6069 8.77881 98.8999 7.37012 cv
99.0483 6.63574 li
99.2534 6.40088 99.9868 6.40088 100.133 6.66455 cv
100.075 7.60498 100.045 8.66162 100.045 9.77783 cv
100.045 10.8936 100.075 11.9502 100.133 12.8892 cv
99.9868 13.1543 99.2534 13.1831 99.0483 12.9189 cv
98.8999 12.1851 li
98.6069 10.7754 98.2544 10.5405 96.7271 10.5405 cv
94.7017 10.5405 li
93.9097 10.5405 93.8794 10.5698 93.8794 11.4512 cv
93.8794 14.9448 li
93.8794 16.2959 93.9966 17.2354 94.3491 17.7344 cv
94.731 18.2622 95.2896 18.4971 97.4321 18.4971 cv
99.9868 18.4971 100.985 18.4097 102.6 15.0918 cv
102.834 14.769 103.569 14.8862 103.687 15.2378 cv
103.569 16.7651 102.865 19.1436 102.454 19.9365 cv
100.898 19.8774 98.0786 19.8486 95.6704 19.8486 cv
91.853 19.8486 li
90.4438 19.8486 89.0054 19.8774 86.8037 19.9365 cv
86.5688 19.7603 86.5688 19.0552 86.8037 18.9087 cv
88.1841 18.7036 li
89.5044 18.4971 89.6812 18.3218 89.6812 15.6206 cv
89.6812 4.66846 li
89.6812 1.99658 89.5044 1.8208 88.1841 1.55615 cv
87.4492 1.40967 li
87.1851 1.23291 87.2144 .557617 87.5083 .380859 cv
88.8882 .44043 90.3267 .470215 91.7358 .470215 cv
97.9614 .470215 li
99.8394 .470215 101.514 .44043 101.897 .380859 cv
101.924 .851563 102.13 2.96533 102.277 4.93262 cv
102.16 5.25586 101.485 5.31396 101.191 5.05029 cv
100.869 4.02246 100.457 3.1416 100.075 2.73047 cv
99.5171 2.17285 98.6362 1.8208 97.1978 1.8208 cv
94.8491 1.8208 li
93.8794 1.8208 93.8794 1.87939 93.8794 2.96533 cv
93.8794 8.10352 li
cp
f
110.939 20.3184 mo
108.238 20.3184 106.563 19.5547 105.947 19.2026 cv
105.389 18.5562 105.007 16.4429 105.007 14.4453 cv
105.213 14.064 105.888 14.0347 106.123 14.3579 cv
106.71 16.2661 108.677 18.9673 111.174 18.9673 cv
113.346 18.9673 114.344 17.4697 114.344 16.002 cv
114.344 13.624 112.113 12.2139 110.351 11.3335 cv
108.238 10.2759 105.917 8.51514 105.917 5.60742 cv
105.888 2.28955 108.471 0 112.73 0 cv
113.698 0 114.902 .117188 116.077 .470215 cv
116.458 .586914 116.722 .64502 117.075 .70459 cv
117.311 1.35059 117.603 2.93555 117.603 4.90283 cv
117.457 5.25586 116.722 5.28516 116.458 4.99121 cv
115.959 3.49365 114.698 1.35059 112.583 1.35059 cv
110.645 1.35059 109.588 2.61328 109.588 4.08154 cv
109.588 5.43213 110.792 6.66455 112.26 7.42822 cv
114.198 8.45654 li
116.018 9.4248 118.338 11.1279 118.338 14.3579 cv
118.338 17.9692 115.373 20.3184 110.939 20.3184 cv
cp
f
126.295 14.9746 mo
126.295 16.354 126.413 17.2939 126.794 17.7637 cv
127.176 18.2622 127.705 18.4971 129.848 18.4971 cv
132.519 18.4971 133.341 18.4097 135.074 15.0039 cv
135.308 14.7104 135.984 14.8276 136.188 15.1797 cv
136.042 16.707 135.338 19.1436 134.928 19.9365 cv
133.372 19.8774 130.552 19.8486 128.144 19.8486 cv
124.21 19.8486 li
122.859 19.8486 121.39 19.8774 119.572 19.9365 cv
119.306 19.7603 119.249 19.0854 119.482 18.9087 cv
120.598 18.7617 li
121.919 18.5864 122.095 18.3516 122.095 15.6206 cv
122.095 4.69775 li
122.095 1.9668 121.919 1.70264 120.598 1.52686 cv
119.746 1.40967 li
119.453 1.23291 119.453 .557617 119.805 .380859 cv
121.333 .44043 122.801 .470215 124.21 .470215 cv
125.62 .470215 127.087 .44043 128.555 .380859 cv
128.791 .557617 128.791 1.23291 128.555 1.40967 cv
127.792 1.52686 li
126.47 1.73193 126.295 1.9668 126.295 4.69775 cv
126.295 14.9746 li
cp
f
144 8.10352 mo
144 8.92627 144.029 8.98438 144.822 8.98438 cv
146.847 8.98438 li
148.374 8.98438 148.727 8.77881 149.02 7.37012 cv
149.168 6.63574 li
149.373 6.40088 150.107 6.40088 150.253 6.66455 cv
150.195 7.60498 150.166 8.66162 150.166 9.77783 cv
150.166 10.8936 150.195 11.9502 150.253 12.8892 cv
150.107 13.1543 149.373 13.1831 149.168 12.9189 cv
149.02 12.1851 li
148.727 10.7754 148.374 10.5405 146.847 10.5405 cv
144.822 10.5405 li
144.029 10.5405 144 10.5698 144 11.4512 cv
144 14.9448 li
144 16.2959 144.117 17.2354 144.47 17.7344 cv
144.852 18.2622 145.411 18.4971 147.552 18.4971 cv
150.107 18.4971 151.106 18.4097 152.72 15.0918 cv
152.956 14.769 153.69 14.8862 153.805 15.2378 cv
153.69 16.7651 152.985 19.1436 152.574 19.9365 cv
151.016 19.8774 148.199 19.8486 145.791 19.8486 cv
141.974 19.8486 li
140.565 19.8486 139.125 19.8774 136.923 19.9365 cv
136.689 19.7603 136.689 19.0552 136.923 18.9087 cv
138.303 18.7036 li
139.625 18.4971 139.801 18.3218 139.801 15.6206 cv
139.801 4.66846 li
139.801 1.99658 139.625 1.8208 138.303 1.55615 cv
137.571 1.40967 li
137.305 1.23291 137.334 .557617 137.627 .380859 cv
139.008 .44043 140.448 .470215 141.856 .470215 cv
148.082 .470215 li
149.96 .470215 151.633 .44043 152.015 .380859 cv
152.045 .851563 152.25 2.96533 152.397 4.93262 cv
152.28 5.25586 151.605 5.31396 151.311 5.05029 cv
150.988 4.02246 150.577 3.1416 150.195 2.73047 cv
149.638 2.17285 148.755 1.8208 147.318 1.8208 cv
144.968 1.8208 li
144 1.8208 144 1.87939 144 2.96533 cv
144 8.10352 li
cp
f
165.081 15.6206 mo
165.081 18.3516 165.257 18.5864 166.579 18.7617 cv
167.752 18.9087 li
167.959 19.0854 167.959 19.7603 167.752 19.9365 cv
165.845 19.8774 164.405 19.8486 162.998 19.8486 cv
161.585 19.8486 160.119 19.8774 158.386 19.9365 cv
158.151 19.7603 158.151 19.0854 158.386 18.9087 cv
159.384 18.7617 li
160.707 18.5562 160.883 18.3516 160.883 15.6206 cv
160.883 14.1523 li
160.883 12.6841 160.852 12.2139 160.089 10.6582 cv
156.594 3.43506 li
156.009 2.23145 155.745 1.76172 154.715 1.58545 cv
153.718 1.40967 li
153.454 1.17432 153.483 .470215 153.835 .380859 cv
155.156 .44043 156.243 .470215 157.975 .470215 cv
159.766 .470215 161.264 .44043 162.261 .380859 cv
162.527 .499512 162.585 1.17432 162.321 1.40967 cv
161.323 1.64404 li
160.793 1.76172 160.618 1.87939 160.618 1.90869 cv
160.618 2.14355 160.764 2.58301 161.382 3.96387 cv
162.76 7.10547 li
163.202 8.07471 163.759 9.24902 164.112 9.98291 cv
164.962 8.54395 165.786 6.84131 166.579 5.34326 cv
167.694 3.25879 168.105 2.28955 168.105 1.9375 cv
168.105 1.76172 167.812 1.64404 167.107 1.52686 cv
166.43 1.40967 li
166.198 1.2627 166.167 .528809 166.46 .380859 cv
167.634 .44043 168.692 .470215 169.75 .470215 cv
170.864 .470215 171.775 .44043 172.625 .380859 cv
172.98 .499512 172.98 1.20313 172.745 1.40967 cv
171.982 1.55615 li
171.453 1.64404 170.895 1.84912 170.572 2.26074 cv
170.132 2.81836 169.396 3.87549 167.987 6.42969 cv
166.138 9.77783 li
165.375 11.1567 165.081 11.8911 165.081 13.5649 cv
165.081 15.6206 li
cp
f
93.978 54.2432 mo
99.1655 54.2432 100.955 57.6206 98.0688 63.3003 cv
88.0376 83.1738 li
78.0073 63.3003 li
75.1206 57.6206 76.895 54.2432 82.0815 54.2432 cv
93.978 54.2432 li
cp
104.107 114.964 mo
92.7612 92.5225 li
107.807 62.8135 li
112.19 54.3403 113.26 53.8535 120.663 53.8535 cv
120.663 49.5688 li
55.4136 49.5688 li
55.4136 53.8535 li
62.8149 53.8535 63.9829 54.3403 68.2681 62.8135 cv
83.3149 92.5225 li
71.9692 114.964 li
45.3828 62.2285 li
42.2661 55.9966 43.0454 53.8535 47.3789 53.8535 cv
50.1548 53.8535 li
50.1548 49.5688 li
19.9653 49.5688 li
19.9653 53.8213 li
21.5229 53.9185 li
31.2617 54.5029 31.9438 55.0229 36.4233 63.9819 cv
70.4116 131.081 li
73.2349 131.081 li
88.0376 101.857 li
102.841 131.081 li
105.666 131.081 li
139.653 63.9819 li
144.133 55.0229 144.814 54.438 154.553 53.8535 cv
155.197 53.813 li
155.197 49.5688 li
125.921 49.5688 li
125.921 53.8535 li
128.697 53.8535 li
133.031 53.8535 133.809 55.9966 130.693 62.2285 cv
104.107 114.964 li
cp
f
9.05957 29.7681 mo
9.05957 30.0386 9.10449 31.2388 9.23975 32.1079 cv
9.17969 32.2886 8.77441 32.3481 8.66943 32.2134 cv
8.26465 30.8188 7.30469 30.0688 5.84961 30.0688 cv
4.18457 30.0688 2.3999 31.4937 2.3999 34.478 cv
2.3999 37.4634 4.12451 39.0679 5.9248 39.0679 cv
7.73975 39.0679 8.57959 37.7632 8.98438 36.7437 cv
9.10449 36.6235 9.46436 36.6685 9.55469 36.8481 cv
9.44971 37.9585 9.19434 38.8579 8.98438 39.2026 cv
8.17432 39.4282 7.10938 39.7583 5.93945 39.7583 cv
4.46973 39.7583 2.96973 39.4126 1.90479 38.6177 cv
.824707 37.7935 0 36.5483 0 34.688 cv
0 32.8579 .779785 31.5688 1.81494 30.7134 cv
2.87988 29.8286 4.40967 29.3784 5.96973 29.3784 cv
7.49951 29.3784 8.60938 29.7388 9.05957 29.7681 cv
cp
f
13.8149 37.0278 mo
13.8149 37.7329 13.875 38.2134 14.0698 38.4526 cv
14.2646 38.7085 14.5347 38.8276 15.6299 38.8276 cv
16.9946 38.8276 17.4146 38.7827 18.2998 37.0435 cv
18.4194 36.8931 18.7646 36.9536 18.8696 37.1333 cv
18.7944 37.9136 18.4346 39.1577 18.2246 39.563 cv
17.4297 39.5327 15.9897 39.5181 14.7598 39.5181 cv
12.75 39.5181 li
12.0601 39.5181 11.3101 39.5327 10.3799 39.563 cv
10.2451 39.4731 10.2148 39.1284 10.335 39.0376 cv
10.9048 38.9634 li
11.5801 38.8735 11.6699 38.7534 11.6699 37.3579 cv
11.6699 31.7788 li
11.6699 30.3833 11.5801 30.2485 10.9048 30.1587 cv
10.4697 30.0981 li
10.3198 30.0083 10.3198 29.6636 10.5 29.5737 cv
11.2798 29.603 12.0298 29.6187 12.75 29.6187 cv
13.4697 29.6187 14.2197 29.603 14.9697 29.5737 cv
15.0898 29.6636 15.0898 30.0083 14.9697 30.0981 cv
14.5796 30.1587 li
13.9048 30.2632 13.8149 30.3833 13.8149 31.7788 cv
13.8149 37.0278 li
cp
f
20.0547 31.7788 mo
20.0547 30.3833 19.9648 30.2935 19.29 30.1587 cv
18.915 30.0835 li
18.7949 29.9937 18.7798 29.6636 18.9448 29.5737 cv
19.665 29.603 20.415 29.6187 21.1348 29.6187 cv
21.8696 29.6187 22.605 29.603 23.3247 29.5737 cv
23.4448 29.6636 23.4448 29.9937 23.3247 30.0835 cv
22.9648 30.1431 li
22.2896 30.2632 22.1997 30.3833 22.1997 31.7788 cv
22.1997 35.2437 li
22.1997 36.9985 22.3945 38.9331 24.6748 38.9331 cv
26.5947 38.9331 27.1797 37.2534 27.1797 35.1978 cv
27.1797 33.3833 li
27.1797 32.1685 27.1196 31.0288 26.9546 30.6382 cv
26.8198 30.3237 26.4897 30.2339 26.0845 30.1587 cv
25.6797 30.0835 li
25.5596 29.9634 25.5898 29.6636 25.6797 29.5737 cv
26.4897 29.603 27.0747 29.6187 27.6895 29.6187 cv
28.2446 29.6187 28.7993 29.603 29.3696 29.5737 cv
29.4595 29.6636 29.4893 29.9634 29.3696 30.0835 cv
29.0996 30.1431 li
28.7095 30.2339 28.4243 30.3237 28.2896 30.6382 cv
28.1245 31.0288 28.0645 32.1685 28.0645 33.3833 cv
28.0645 35.063 li
28.0645 36.4731 27.9297 37.7632 27.1045 38.6782 cv
26.4448 39.3833 25.3496 39.7583 24.1348 39.7583 cv
22.9946 39.7583 21.9746 39.5776 21.165 38.9185 cv
20.3848 38.2729 20.0547 37.1636 20.0547 35.5278 cv
20.0547 31.7788 li
cp
f
33.5244 36.9829 mo
33.5244 38.1528 33.6743 38.8882 34.8442 38.8882 cv
35.9546 38.8882 36.5396 38.0327 36.5396 36.8179 cv
36.5396 35.5132 35.7896 34.5981 34.3496 34.5981 cv
33.5244 34.5981 33.5244 34.6128 33.5244 35.2134 cv
33.5244 36.9829 li
cp
33.5244 33.5181 mo
33.5244 33.9087 33.5396 33.938 34.3193 33.938 cv
35.6094 33.938 36.0894 33.1138 36.0894 32.2134 cv
36.0894 30.9087 35.2793 30.2632 34.2446 30.2632 cv
33.5396 30.2632 33.5244 30.3833 33.5244 31.0435 cv
33.5244 33.5181 li
cp
31.4546 32.063 mo
31.4546 30.5483 31.4243 30.3989 30.7944 30.3081 cv
30.3896 30.2485 li
30.2544 30.1733 30.2246 29.7231 30.4497 29.7085 cv
31.5894 29.6333 32.6846 29.5737 34.1846 29.5737 cv
35.6245 29.5737 36.5845 29.7388 37.2441 30.1284 cv
37.8892 30.5181 38.2793 31.1479 38.2793 32.0337 cv
38.2793 33.2935 37.2144 33.7886 36.7495 33.9087 cv
36.5991 33.938 36.4492 33.9985 36.4492 34.0737 cv
36.4492 34.1187 36.5244 34.1636 36.6592 34.1929 cv
37.8442 34.4487 38.8491 35.228 38.8643 36.6831 cv
38.8794 38.063 38.0542 38.8735 37.1094 39.2026 cv
36.1646 39.5327 35.0396 39.5776 34.1245 39.5776 cv
33.5845 39.5776 33.0146 39.5181 32.5796 39.5181 cv
31.8447 39.5181 31.1094 39.5327 30.2544 39.563 cv
30.1348 39.4731 30.1348 39.0835 30.2544 39.0376 cv
30.6895 38.9478 li
31.3647 38.813 31.4546 38.7085 31.4546 37.3579 cv
31.4546 32.063 li
cp
f
49.1543 30.0688 mo
47.3091 30.0688 46.3193 31.7935 46.3193 34.2983 cv
46.3193 36.1284 46.9644 39.0679 49.4092 39.0679 cv
51.374 39.0679 52.1392 37.1479 52.1392 34.7183 cv
52.1392 32.1538 51.0142 30.0688 49.1543 30.0688 cv
cp
54.5391 34.5229 mo
54.5391 37.7935 52.3491 39.7583 49.124 39.7583 cv
46.1094 39.7583 43.9194 37.7778 43.9194 34.6431 cv
43.9194 31.6733 46.1392 29.3784 49.2739 29.3784 cv
52.394 29.3784 54.5391 31.478 54.5391 34.5229 cv
cp
f
59.2192 33.6382 mo
59.2192 34.0435 59.2339 34.0884 59.6392 34.0884 cv
60.7939 34.0884 li
61.5889 34.0884 61.7539 33.9829 61.9038 33.2485 cv
61.979 32.8882 li
62.084 32.7534 62.459 32.7681 62.5488 32.9038 cv
62.519 33.3833 62.5039 33.938 62.5039 34.5083 cv
62.5039 35.063 62.519 35.6187 62.5488 36.0679 cv
62.459 36.2036 62.084 36.2183 61.979 36.0835 cv
61.9038 35.7231 li
61.7539 35.0034 61.5889 34.8833 60.7939 34.8833 cv
59.6392 34.8833 li
59.2339 34.8833 59.2192 34.9282 59.2192 35.3335 cv
59.2192 37.3579 li
59.2192 38.7534 59.3091 38.8735 59.9839 38.9634 cv
60.5391 39.0376 li
60.644 39.1284 60.644 39.4731 60.5391 39.563 cv
59.6089 39.5327 58.874 39.5181 58.1543 39.5181 cv
57.4644 39.5181 56.7144 39.5327 55.8145 39.563 cv
55.6943 39.4731 55.6943 39.1284 55.8145 39.0376 cv
56.3091 38.9634 li
56.9844 38.8579 57.0742 38.7534 57.0742 37.3579 cv
57.0742 31.7788 li
57.0742 30.3833 56.9844 30.2485 56.3091 30.1431 cv
56.0093 30.0981 li
55.874 30.0083 55.874 29.6333 56.0391 29.5737 cv
56.6841 29.603 57.4341 29.6187 58.1543 29.6187 cv
61.3042 29.6187 li
62.2642 29.6187 63.1191 29.603 63.3291 29.5737 cv
63.3291 29.8286 63.3291 30.9087 63.3589 31.9136 cv
63.2988 32.0786 62.9688 32.0933 62.7891 31.9731 cv
62.624 31.3579 62.5039 30.9985 62.354 30.8032 cv
62.0991 30.4888 61.6489 30.3081 60.8843 30.3081 cv
59.7139 30.3081 li
59.2192 30.3081 59.2192 30.3384 59.2192 30.9233 cv
59.2192 33.6382 li
cp
f
81.8086 30.2036 mo
81.4639 30.2788 81.2988 30.3989 81.1938 30.5337 cv
81.0288 30.7729 80.7739 31.2534 80.3687 32.1987 cv
79.6338 33.9536 77.939 37.688 77.2036 39.6382 cv
77.1138 39.7134 76.9038 39.7583 76.709 39.7583 cv
76.5439 39.7583 76.4087 39.7134 76.3037 39.6382 cv
76.1387 39.2778 75.9141 38.7378 75.7339 38.3179 cv
75.104 36.8931 li
74.894 36.4136 74.6987 35.9634 74.564 35.7378 cv
74.4287 35.9937 74.249 36.353 74.0542 36.7729 cv
73.3491 38.3032 li
73.124 38.7827 72.959 39.2183 72.7192 39.7134 cv
72.644 39.7876 72.4492 39.8335 72.2241 39.8335 cv
72.0591 39.8335 71.9692 39.7876 71.834 39.7134 cv
71.5942 39.0835 70.9941 37.7329 70.4839 36.6079 cv
68.0244 31.2388 li
67.6191 30.353 67.5293 30.2788 67.0342 30.1733 cv
66.6592 30.0981 li
66.5391 29.9487 66.5542 29.6489 66.7192 29.5737 cv
67.2744 29.603 67.9043 29.6187 68.6689 29.6187 cv
69.3291 29.6187 69.9141 29.603 70.4839 29.5737 cv
70.604 29.6333 70.6641 30.0083 70.5142 30.0981 cv
70.2441 30.1431 li
69.9741 30.188 69.8691 30.2632 69.8691 30.3687 cv
69.8691 30.4731 70.1841 31.1782 70.6489 32.228 cv
72.1343 35.5435 li
72.5542 36.4731 72.7041 36.7886 72.8838 37.1479 cv
73.064 36.8179 73.3042 36.3687 73.604 35.6929 cv
73.7988 35.2583 li
73.9038 35.0181 73.9941 34.688 73.9941 34.5981 cv
73.9941 34.5083 73.9639 34.3433 73.9038 34.1929 cv
72.4639 31.0288 li
72.1191 30.2788 72.0142 30.1733 71.4438 30.1138 cv
71.2939 30.0981 li
71.144 29.978 71.1743 29.6333 71.3389 29.5737 cv
71.9839 29.603 72.5688 29.6187 73.229 29.6187 cv
73.9941 29.6187 74.564 29.603 74.9541 29.5737 cv
75.1338 29.6187 75.1191 30.0239 75.0142 30.0981 cv
74.7588 30.1587 li
74.5791 30.2036 74.354 30.2632 74.354 30.3687 cv
74.354 30.4888 74.4141 30.6538 74.4888 30.8188 cv
74.939 31.853 li
75.0737 32.1685 75.2241 32.4985 75.3589 32.7681 cv
75.5088 32.4536 75.6587 32.1538 75.8091 31.8237 cv
75.9438 31.5229 li
76.1987 30.9536 76.3486 30.5034 76.3486 30.4136 cv
76.3486 30.3081 76.2891 30.2632 76.0488 30.2036 cv
75.5991 30.0981 li
75.4937 29.9937 75.5088 29.6489 75.644 29.5737 cv
76.0791 29.603 76.6187 29.6187 77.1138 29.6187 cv
77.6987 29.6187 78.2539 29.603 78.6436 29.5737 cv
78.7637 29.6489 78.7939 30.0083 78.6587 30.1138 cv
78.2388 30.2036 li
77.729 30.3081 77.624 30.3687 77.0986 31.2681 cv
76.7388 31.8833 76.3638 32.5737 76.1689 32.9634 cv
76.0337 33.2329 75.8389 33.6685 75.8389 33.7437 cv
75.8389 33.7886 75.854 33.8784 75.959 34.1187 cv
76.6641 35.6333 li
77.0537 36.4585 77.2339 36.8931 77.3237 37.103 cv
78.0439 35.3628 78.7485 33.5034 79.4688 31.6733 cv
79.5737 31.4185 79.8735 30.563 79.8735 30.3989 cv
79.8735 30.2935 79.7837 30.2485 79.5889 30.188 cv
79.2588 30.0981 li
79.1387 29.9634 79.1689 29.6489 79.3037 29.5737 cv
79.7837 29.603 80.3838 29.6187 80.8335 29.6187 cv
81.3589 29.6187 81.7935 29.603 82.2134 29.5737 cv
82.3486 29.6489 82.3638 29.978 82.2588 30.0981 cv
81.8086 30.2036 li
cp
f
85.5737 33.5181 mo
85.5737 33.938 85.5884 33.9683 85.9937 33.9683 cv
87.0283 33.9683 li
87.8086 33.9683 87.9883 33.8638 88.1387 33.1431 cv
88.2134 32.7681 li
88.3184 32.6479 88.6934 32.6479 88.7686 32.7837 cv
88.7383 33.2632 88.7236 33.8032 88.7236 34.3735 cv
88.7236 34.9429 88.7383 35.4829 88.7686 35.9634 cv
88.6934 36.0981 88.3184 36.1128 88.2134 35.978 cv
88.1387 35.603 li
87.9883 34.8833 87.8086 34.7632 87.0283 34.7632 cv
85.9937 34.7632 li
85.5884 34.7632 85.5737 34.7778 85.5737 35.228 cv
85.5737 37.0132 li
85.5737 37.7036 85.6338 38.1831 85.8135 38.438 cv
86.0088 38.7085 86.2935 38.8276 87.3887 38.8276 cv
88.6934 38.8276 89.2036 38.7827 90.0278 37.0884 cv
90.1489 36.9233 90.5239 36.9829 90.5835 37.1636 cv
90.5239 37.9429 90.1636 39.1577 89.9536 39.563 cv
89.1587 39.5327 87.7183 39.5181 86.4888 39.5181 cv
84.5386 39.5181 li
83.8188 39.5181 83.0835 39.5327 81.9585 39.563 cv
81.8389 39.4731 81.8389 39.1128 81.9585 39.0376 cv
82.6636 38.9331 li
83.3389 38.8276 83.4287 38.7378 83.4287 37.3579 cv
83.4287 31.7632 li
83.4287 30.3989 83.3389 30.3081 82.6636 30.1733 cv
82.2886 30.0981 li
82.1538 30.0083 82.1689 29.6636 82.3188 29.5737 cv
83.0239 29.603 83.7588 29.6187 84.4785 29.6187 cv
87.6587 29.6187 li
88.6187 29.6187 89.4731 29.603 89.6685 29.5737 cv
89.6841 29.813 89.7886 30.8931 89.8638 31.8979 cv
89.8032 32.063 89.4585 32.0933 89.3091 31.9585 cv
89.1436 31.4331 88.9336 30.9839 88.7383 30.7729 cv
88.4536 30.4888 88.0034 30.3081 87.2686 30.3081 cv
86.0684 30.3081 li
85.5737 30.3081 85.5737 30.3384 85.5737 30.8931 cv
85.5737 33.5181 li
cp
f
94.2134 39.7583 mo
92.8345 39.7583 91.979 39.3677 91.6646 39.188 cv
91.3794 38.8579 91.1841 37.7778 91.1841 36.7583 cv
91.2896 36.563 91.6333 36.5483 91.7544 36.7134 cv
92.0532 37.688 93.0591 39.0679 94.3335 39.0679 cv
95.4438 39.0679 95.9536 38.3032 95.9536 37.5532 cv
95.9536 36.3384 94.813 35.6187 93.9136 35.1685 cv
92.8345 34.6284 91.6489 33.728 91.6489 32.2437 cv
91.6333 30.5483 92.9536 29.3784 95.1294 29.3784 cv
95.6235 29.3784 96.2388 29.438 96.8384 29.6187 cv
97.0337 29.6782 97.1685 29.7085 97.3481 29.7388 cv
97.4692 30.0688 97.6187 30.8784 97.6187 31.8833 cv
97.5435 32.063 97.1685 32.0786 97.0337 31.9282 cv
96.7788 31.1636 96.1333 30.0688 95.0532 30.0688 cv
94.064 30.0688 93.5239 30.7134 93.5239 31.4634 cv
93.5239 32.1538 94.1392 32.7837 94.8892 33.1733 cv
95.8784 33.6987 li
96.8091 34.1929 97.9937 35.063 97.9937 36.7134 cv
97.9937 38.5581 96.479 39.7583 94.2134 39.7583 cv
cp
f
102.479 30.7437 mo
102.479 30.3833 102.479 30.3081 102.119 30.3081 cv
101.188 30.3081 li
100.094 30.3081 99.7788 30.9087 99.3286 32.0034 cv
99.1489 32.0933 98.8638 32.063 98.7739 31.8687 cv
99.0884 30.8335 99.1636 29.9038 99.2681 29.3188 cv
99.3286 29.2739 99.4038 29.2437 99.479 29.2437 cv
99.5532 29.2437 99.6294 29.2583 99.689 29.3032 cv
99.7642 29.5581 99.8091 29.6187 100.949 29.6187 cv
106.528 29.6187 li
107.518 29.6187 107.744 29.603 107.878 29.2886 cv
107.938 29.2583 107.983 29.2437 108.073 29.2437 cv
108.164 29.2437 108.268 29.3032 108.298 29.3481 cv
108.149 29.8589 108.043 31.0737 108.073 31.9282 cv
107.999 32.063 107.593 32.0933 107.518 31.9731 cv
107.264 31.0132 107.053 30.3081 105.928 30.3081 cv
105.028 30.3081 li
104.668 30.3081 104.624 30.353 104.624 30.7437 cv
104.624 37.3579 li
104.624 38.7534 104.713 38.8735 105.389 38.9634 cv
105.989 39.0376 li
106.093 39.1284 106.093 39.4731 105.989 39.563 cv
105.014 39.5327 104.264 39.5181 103.588 39.5181 cv
102.869 39.5181 102.088 39.5327 101.039 39.563 cv
100.918 39.4731 100.918 39.1284 101.039 39.0376 cv
101.713 38.9634 li
102.389 38.8882 102.479 38.7534 102.479 37.3579 cv
102.479 30.7437 li
cp
f
117.673 29.7681 mo
117.673 30.0386 117.718 31.2388 117.853 32.1079 cv
117.793 32.2886 117.388 32.3481 117.284 32.2134 cv
116.878 30.8188 115.918 30.0688 114.463 30.0688 cv
112.798 30.0688 111.014 31.4937 111.014 34.478 cv
111.014 37.4634 112.739 39.0679 114.539 39.0679 cv
116.354 39.0679 117.194 37.7632 117.598 36.7437 cv
117.718 36.6235 118.079 36.6685 118.168 36.8481 cv
118.063 37.9585 117.808 38.8579 117.598 39.2026 cv
116.788 39.4282 115.723 39.7583 114.553 39.7583 cv
113.083 39.7583 111.583 39.4126 110.518 38.6177 cv
109.438 37.7935 108.614 36.5483 108.614 34.688 cv
108.614 32.8579 109.393 31.5688 110.428 30.7134 cv
111.494 29.8286 113.024 29.3784 114.583 29.3784 cv
116.114 29.3784 117.223 29.7388 117.673 29.7681 cv
cp
f
123.059 34.7632 mo
122.444 34.7632 122.428 34.7778 122.428 35.1978 cv
122.428 37.3579 li
122.428 38.7534 122.518 38.8882 123.194 38.978 cv
123.673 39.0376 li
123.793 39.1284 123.793 39.4731 123.673 39.563 cv
122.819 39.5327 122.069 39.5181 121.393 39.5181 cv
120.674 39.5181 119.924 39.5327 119.159 39.563 cv
119.039 39.4731 119.039 39.1284 119.159 39.0376 cv
119.518 38.9927 li
120.208 38.9028 120.284 38.7534 120.284 37.3579 cv
120.284 31.7788 li
120.284 30.3833 120.208 30.2339 119.518 30.1431 cv
119.159 30.0981 li
119.039 30.0083 119.039 29.6636 119.159 29.5737 cv
119.893 29.603 120.674 29.6187 121.393 29.6187 cv
122.069 29.6187 122.819 29.603 123.479 29.5737 cv
123.598 29.6636 123.598 30.0083 123.479 30.0981 cv
123.164 30.1431 li
122.518 30.2339 122.428 30.3833 122.428 31.7788 cv
122.428 33.5181 li
122.428 33.9536 122.444 33.9683 123.059 33.9683 cv
126.178 33.9683 li
126.809 33.9683 126.809 33.9536 126.809 33.5181 cv
126.809 31.7788 li
126.809 30.3833 126.733 30.2632 126.043 30.1587 cv
125.639 30.0981 li
125.518 30.0083 125.518 29.6636 125.639 29.5737 cv
126.463 29.603 127.198 29.6187 127.918 29.6187 cv
128.653 29.6187 129.343 29.603 130.034 29.5737 cv
130.153 29.6636 130.153 30.0083 130.034 30.0981 cv
129.733 30.1431 li
129.043 30.2485 128.954 30.3833 128.954 31.7788 cv
128.954 37.3579 li
128.954 38.7534 129.043 38.8579 129.733 38.978 cv
130.093 39.0376 li
130.213 39.1284 130.213 39.4731 130.093 39.563 cv
129.343 39.5327 128.608 39.5181 127.918 39.5181 cv
127.168 39.5181 126.434 39.5327 125.713 39.563 cv
125.593 39.4731 125.593 39.1284 125.713 39.0376 cv
126.043 38.9927 li
126.733 38.9028 126.809 38.7534 126.809 37.3579 cv
126.809 35.1978 li
126.809 34.7778 126.809 34.7632 126.178 34.7632 cv
123.059 34.7632 li
cp
f
134.744 33.5181 mo
134.744 33.938 134.758 33.9683 135.164 33.9683 cv
136.198 33.9683 li
136.979 33.9683 137.159 33.8638 137.309 33.1431 cv
137.383 32.7681 li
137.489 32.6479 137.864 32.6479 137.938 32.7837 cv
137.909 33.2632 137.893 33.8032 137.893 34.3735 cv
137.893 34.9429 137.909 35.4829 137.938 35.9634 cv
137.864 36.0981 137.489 36.1128 137.383 35.978 cv
137.309 35.603 li
137.159 34.8833 136.979 34.7632 136.198 34.7632 cv
135.164 34.7632 li
134.758 34.7632 134.744 34.7778 134.744 35.228 cv
134.744 37.0132 li
134.744 37.7036 134.803 38.1831 134.983 38.438 cv
135.178 38.7085 135.463 38.8276 136.559 38.8276 cv
137.864 38.8276 138.374 38.7827 139.198 37.0884 cv
139.319 36.9233 139.694 36.9829 139.753 37.1636 cv
139.694 37.9429 139.333 39.1577 139.124 39.563 cv
138.329 39.5327 136.888 39.5181 135.659 39.5181 cv
133.708 39.5181 li
132.989 39.5181 132.253 39.5327 131.128 39.563 cv
131.008 39.4731 131.008 39.1128 131.128 39.0376 cv
131.833 38.9331 li
132.508 38.8276 132.598 38.7378 132.598 37.3579 cv
132.598 31.7632 li
132.598 30.3989 132.508 30.3081 131.833 30.1733 cv
131.458 30.0981 li
131.324 30.0083 131.338 29.6636 131.489 29.5737 cv
132.194 29.603 132.928 29.6187 133.649 29.6187 cv
136.829 29.6187 li
137.789 29.6187 138.643 29.603 138.838 29.5737 cv
138.854 29.813 138.958 30.8931 139.034 31.8979 cv
138.973 32.063 138.628 32.0933 138.479 31.9585 cv
138.313 31.4331 138.104 30.9839 137.909 30.7729 cv
137.624 30.4888 137.173 30.3081 136.438 30.3081 cv
135.239 30.3081 li
134.744 30.3081 134.744 30.3384 134.744 30.8931 cv
134.744 33.5181 li
cp
f
143.383 39.7583 mo
142.003 39.7583 141.149 39.3677 140.833 39.188 cv
140.548 38.8579 140.354 37.7778 140.354 36.7583 cv
140.458 36.563 140.803 36.5483 140.923 36.7134 cv
141.223 37.688 142.228 39.0679 143.502 39.0679 cv
144.614 39.0679 145.124 38.3032 145.124 37.5532 cv
145.124 36.3384 143.983 35.6187 143.083 35.1685 cv
142.003 34.6284 140.819 33.728 140.819 32.2437 cv
140.803 30.5483 142.124 29.3784 144.298 29.3784 cv
144.793 29.3784 145.409 29.438 146.008 29.6187 cv
146.204 29.6782 146.338 29.7085 146.518 29.7388 cv
146.638 30.0688 146.788 30.8784 146.788 31.8833 cv
146.713 32.063 146.338 32.0786 146.204 31.9282 cv
145.948 31.1636 145.303 30.0688 144.223 30.0688 cv
143.233 30.0688 142.694 30.7134 142.694 31.4634 cv
142.694 32.1538 143.308 32.7837 144.058 33.1733 cv
145.048 33.6987 li
145.978 34.1929 147.163 35.063 147.163 36.7134 cv
147.163 38.5581 145.648 39.7583 143.383 39.7583 cv
cp
f
151.648 30.7437 mo
151.648 30.3833 151.648 30.3081 151.288 30.3081 cv
150.358 30.3081 li
149.263 30.3081 148.948 30.9087 148.499 32.0034 cv
148.319 32.0933 148.034 32.063 147.944 31.8687 cv
148.258 30.8335 148.333 29.9038 148.438 29.3188 cv
148.499 29.2739 148.573 29.2437 148.649 29.2437 cv
148.723 29.2437 148.798 29.2583 148.858 29.3032 cv
148.933 29.5581 148.978 29.6187 150.118 29.6187 cv
155.698 29.6187 li
156.688 29.6187 156.913 29.603 157.047 29.2886 cv
157.108 29.2583 157.153 29.2437 157.243 29.2437 cv
157.333 29.2437 157.438 29.3032 157.467 29.3481 cv
157.318 29.8589 157.213 31.0737 157.243 31.9282 cv
157.168 32.063 156.762 32.0933 156.688 31.9731 cv
156.433 31.0132 156.223 30.3081 155.098 30.3081 cv
154.198 30.3081 li
153.838 30.3081 153.793 30.353 153.793 30.7437 cv
153.793 37.3579 li
153.793 38.7534 153.883 38.8735 154.558 38.9634 cv
155.158 39.0376 li
155.263 39.1284 155.263 39.4731 155.158 39.563 cv
154.183 39.5327 153.433 39.5181 152.758 39.5181 cv
152.038 39.5181 151.258 39.5327 150.208 39.563 cv
150.088 39.4731 150.088 39.1284 150.208 39.0376 cv
150.883 38.9634 li
151.558 38.8882 151.648 38.7534 151.648 37.3579 cv
151.648 30.7437 li
cp
f
161.579 33.5181 mo
161.579 33.938 161.592 33.9683 161.999 33.9683 cv
163.033 33.9683 li
163.813 33.9683 163.993 33.8638 164.143 33.1431 cv
164.217 32.7681 li
164.323 32.6479 164.698 32.6479 164.773 32.7837 cv
164.743 33.2632 164.728 33.8032 164.728 34.3735 cv
164.728 34.9429 164.743 35.4829 164.773 35.9634 cv
164.698 36.0981 164.323 36.1128 164.217 35.978 cv
164.143 35.603 li
163.993 34.8833 163.813 34.7632 163.033 34.7632 cv
161.999 34.7632 li
161.592 34.7632 161.579 34.7778 161.579 35.228 cv
161.579 37.0132 li
161.579 37.7036 161.638 38.1831 161.818 38.438 cv
162.013 38.7085 162.297 38.8276 163.393 38.8276 cv
164.698 38.8276 165.208 38.7827 166.033 37.0884 cv
166.153 36.9233 166.528 36.9829 166.588 37.1636 cv
166.528 37.9429 166.168 39.1577 165.958 39.563 cv
165.163 39.5327 163.723 39.5181 162.493 39.5181 cv
160.543 39.5181 li
159.823 39.5181 159.088 39.5327 157.963 39.563 cv
157.843 39.4731 157.843 39.1128 157.963 39.0376 cv
158.668 38.9331 li
159.343 38.8276 159.433 38.7378 159.433 37.3579 cv
159.433 31.7632 li
159.433 30.3989 159.343 30.3081 158.668 30.1733 cv
158.293 30.0981 li
158.159 30.0083 158.173 29.6636 158.323 29.5737 cv
159.028 29.603 159.763 29.6187 160.483 29.6187 cv
163.663 29.6187 li
164.624 29.6187 165.478 29.603 165.672 29.5737 cv
165.688 29.813 165.793 30.8931 165.868 31.8979 cv
165.807 32.063 165.463 32.0933 165.313 31.9585 cv
165.148 31.4331 164.938 30.9839 164.743 30.7729 cv
164.458 30.4888 164.008 30.3081 163.273 30.3081 cv
162.073 30.3081 li
161.579 30.3081 161.579 30.3384 161.579 30.8931 cv
161.579 33.5181 li
cp
f
170.608 33.9536 mo
170.608 34.478 170.653 34.5229 171.538 34.5229 cv
172.078 34.5229 172.392 34.3882 172.677 34.103 cv
172.932 33.8481 173.217 33.3687 173.217 32.4829 cv
173.217 31.1333 172.422 30.2632 171.252 30.2632 cv
170.637 30.2632 170.608 30.3081 170.608 31.0288 cv
170.608 33.9536 li
cp
168.553 32.0483 mo
168.553 30.5483 168.523 30.3833 167.893 30.2935 cv
167.488 30.2339 li
167.338 30.1587 167.338 29.7837 167.518 29.7085 cv
168.643 29.6333 169.813 29.5737 171.238 29.5737 cv
172.512 29.5737 173.608 29.7681 174.177 30.1138 cv
175.047 30.6235 175.498 31.3735 175.498 32.3335 cv
175.498 33.6685 174.597 34.2388 173.908 34.5835 cv
173.757 34.6587 173.757 34.7485 173.833 34.9136 cv
174.823 36.9233 175.437 38.0483 176.158 38.6636 cv
176.547 38.978 176.937 39.0679 177.163 39.0835 cv
177.297 39.1577 177.297 39.3833 177.222 39.4731 cv
176.982 39.5776 176.502 39.6079 176.038 39.6079 cv
174.658 39.6079 173.788 39.1128 173.127 38.0327 cv
172.648 37.2378 172.302 36.5034 171.958 35.7085 cv
171.778 35.3032 171.538 35.1831 171.163 35.1831 cv
170.637 35.1831 170.608 35.2134 170.608 35.5132 cv
170.608 37.3579 li
170.608 38.7378 170.698 38.8433 171.373 38.9634 cv
171.778 39.0376 li
171.882 39.1128 171.882 39.4731 171.778 39.563 cv
170.983 39.5327 170.292 39.5181 169.573 39.5181 cv
168.823 39.5181 168.163 39.5327 167.383 39.563 cv
167.262 39.4731 167.262 39.1128 167.383 39.0376 cv
167.788 38.9634 li
168.463 38.8433 168.553 38.7378 168.553 37.3579 cv
168.553 32.0483 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Cicia Lee) ()%%Title: (Westchester Club logo 2011 v1-o.eps)%%CreationDate: 3/16/11 10:50 AM%%Canvassize: 16383%AI9_DataStream%Gb",KM...-oC2JUIL"=['FHRABJ1e+k7_M2U]fE".s9h\EH,gH#DN3,Ikr"&Ug:/W6JDZ;g)RF[Ak$i7>4:i97e:&l5CD-$]t%GA%go)^^\EYGM2>!E]hVNnadr_$s;iBWp`.g.qo`VW3C/3sse^.$*?K)4:Y;JA3?_kTmiFI&!:8c@a?o4;.Y3a[\#03;6+RP+7(Yr6E%F__Hg?159Xmgj`*k8,N1j>IF7+P8oE*M6->0@SZUq)a-L%Sm?$?@"TpSu02V([u[,&#*S0qb]DD!P6b7<S'R63M4Sd(CHAk[DVk$%B29SXX'Y-lS(F?>o?iKbX>\G9lI7#]lG*oh0'I7A[KpBr+qSo*cO=N/!6:n=CVMu+?hUD(8U&`-%=c!mW1Ame(Z!1`^^nEfIX9Nm%n`\Z4oO9rHc;M1Y^(]'!anW[N?*sh7b#X&#E2l2JW_k&*R9>mKF[,j%G4e/TmA1J"R/1?:eGhbkZn$gid!'g,F?W5Cc\MH:@YUP/%<p%f.QOZ8-FT9XZqbgkk+FElF20d]C]M)r\;5:rIl+UG_Gm7CHKC7K96ApR34;k'7B;6OoQBKTK&FeMV`knd2Oc/;ZfU`=hpd34s%o==LaL;nd`(`knnPrSt%Gr"X!ljn"bm%WP;PCCi6%]k%Oh]r61f_Rhkrs;UHH8\EO$?M<jjs)[Bj4#+jd0.e@6+i!/5&ea=i[Q?Z%%&c!J&;I=TXG]mcLjG/sWA`VY:o#-,kPP$;%.S\-i:giITtZRPI35*X5!JXfHJ7UkDsA'lfI@="Y;!mq@>M&&Yg_PcP6BVc$+<D<%<'U;;Xc`fkiG\K3>;_o&WnG=^bpGVg2R,uSK24S"0Z;h=%R0?'W"3<1p_#bI,<a#;r7q#sHh\Uc+\h_P>9Q^7.6U%Un2n'EMXW^U%c((H@8/$Hm^Q9Z;N[#..BOmnE^E_S0';7r1c:Qfeq6:[_L#9.0Vh6[0+2j[o9O&hqiHOQYPS<bD45iZ8,NcX.gk,N6/#3]jj%-P/%6o@-&'uQZr$L-Rc-E^0PU^t6#?Uu3>5CP!(&VAoF(".lpBba33Lp&X"cH%bkR'Z_[RLt"eF_jKoA%iN9KKWd>GgX/\19VM%i.'A`%WFO%<lEE3E9i$m8r/RmM^6(V=$2):+fES=Um'1*-mL\Pp#*Nki@?qXo2T2+2Kk,c-K%H7^:=p01BjTd<@a6L@Zk;`YMJ&j7WBWPD%ItTgr-:p"q3UqhnkfA6!^IHtW:M#TpeS#`iaiHY;2p8ms5O<5tLc+"i13;-M"(K3=`864fN%<r3o?t.udrc],%tBaBFO`U[rpl]W%8cR.]iBQptr`/ZDJ0<u%rJMlrg\djsED1l&1!^l@J+Yic0gFo0UHsC!TCf=mf4ko9r1ni02Z7KAdQ^8%,C>GdLYlfOl#6QZIKFqh%BSle>&*dIK&FdFVq"4c>dbjV>$*VDA'4<QoXR,HjrY`+*SZ$E)p,\b1'A?rCn=3mE^%#`s^f,fZ30D\,s(.88#_D3HJ3Ft)?Q9+/%m+?g>@nE4SH[mjd[CqS6_AluIY/`5gr&ncsQ$"HRZhfI[_I=\YJMp&C:e*,u@8QE7lA2KgJp\`qBFKOuoiNmVk(DOkF%I$S"4)C!%$,T-W.GHXRP-54I>Z7sT3!NjN[-@tU(G^Fr,1.5%HN(iKY!k1*S0t&^32;)UO]q%2^E]V_*Zf\Pf+bBN/+<[d$T#tKP4QV(jes8]%6J0q3dhk[m1VEf^X#H&mD<_H#Fs?!,6/Zr/=s\3j#ZluIO^*_3-UD,Ea`EUIjtG0e4KMa;5[tuZ1&cm4+_?Yt!rc*4=ErUO6E+Cp%bab_[UFbV/#\gtt1atcuErtU/-\gs>K%Cf>0;C*][i?RTa;%pe;OZ47Qf*!VR=b*t:KR6^BJ/4EMq8d.5qRX8%@1gn8hJG5]bY$^%d@f*Ff=N@!(<iPtb-Zu6MR-4KR=g'LN@\4o)T4`emRnNhX_-la>377s!GKsO:Tk#gO//T.Och/+W9gbnTSCW)9j!2;eW=iBMTXRX%Dbj9)>3^RDqJm@fCQe)N6tdUB^&_Y3HD=l`-\+Ut#)5n;%BQ/L5"Ic1D%gDX\/KD$%8WfiHDmYH9-]Fo[#DDgQ.$Ap\"g;b1g2*2%Q6]/H-ts[LNASYt:/RXb:+TTQ>Z7p[`U[mD'l#l.,dJ`gHY'CjVm4r,2j+gp_a3o,d[l5IOgH?,Dp.n[oKU=-7k_AW(Lk3[Z8Wts%ZXh$YC^4LS.&/:j44sOW;VTkK97BAH^Ql8_2Ts0N?!AIW1!)@g44p8Xb:iaF&+qNr613i[^9k)lF`"TmLFk:(Z-dJ9@8Y#p";G_6%Hif<U]anZ:Q>^0s99G:DnH%<(Ch[$,l2C8n7-5BX'C"Nh/@`-LfE9_EB17-RJ'QIaCC;2gVdcj/@Y]bf+8^IZ5.)2:Y>$5bQcZ*s%^FM"(@)#+qj)o1/O;t#5A1Q]TR5-';JSiMj.d9Gi.nW&Y:sg?(3um?)gs],aN-/<?,8a1E,e[U,&XoUu*jnr:.G"s<5]H?#e=4*n%B)]mDOO7BH,\lLbN$g@r%&7U7;&DkPXQ(X*Ma^Ht^Cui2rf)A948Wsq),hfEK0sSP/V_eZm"%CeH=i1s$(KqbETVR[a[h/DbhPa'%#;`d3GLr_uLu\bAJp9jFM_ba\%%ksOZSqkT,6+g@bjdLR)`nc,GTH'>fo17Bdk!7)5p#p1Xsi<=BBp[iNsI,YGR,8dc&>'\3jg9%%Ae/_?AkX):,)/MN9L;].:!jP2l]%FJc5$WSj+n3l/nXMEahu4K2rPU<B0bgf^Wba''W2QC<P4_2YAh2&&pU]0ALf_B5"?LMbQ+b7%XK2Y8N]a,=#-j<('B1=l;8RrqA+Usr_Ps<;a(U=P$eX)$N-49E>clAq!CEPkW/G[i,pOt)kke1/3P2%(aku'W@W,uBd8%Z'("3`6%32c;`Zju^eN_5\fpuJ7`4-U<K??OCaA?3;K.3AA,jVsS&g)?^!&it*^14Yf]F5*!]c/$gQFPYTP5d$O;;G4,L8-_^*cA35RV$Q7g%I0o]Oc^$rhZjF^Dj:e<omK<jN<;%6#f?eo(KC#"&KRnAWUkq;^?UCVQZhCNVg:,EmP.^#B?:tA":2B2B<kQqFE>q7kf>qSYVNd8m%SV]?B<Z&%gDm9IB*a#R0i5W>DHWl_8<hn6%i_h93%_[l[L\@E6UNCCo/(5Yk+]k:\DL/Q?gYBfVOcbs8'=;M=]orRS<]mRJ/]E^8%rlrTo0lF745[Dnil5V\2akBs&CTkL;25Nfc.1,4uaF[!/MO6jO+\5H(i%#t?9%=@2.=6!DhV(`_fZ7W"8K13aN.a<]qi`TVX=/6:%91)TeBK)tfl\Va:GCku&ZYci?b#6?o'&"\>ia-*A*jT&rb9Pb]9r:\GbK))tPq=)S4%N$k$TWi%a/?jYY.g=:!hL%#:3c%"=[]R8%rfAGEN/mPW=<46K'!AW6H39jU@&gNQ28RqFZse&Bpp43:*4aYBeDtia>%b$;(`1]D5"\t92u0)Rb_Buk]BK9+]p7s(g[peoHAcT#%BCMu$V_",c_BqD]HZ/mJl)(F"Csi]n$;tE/D>N-XfL>frpQdsLh0[uXG&NNK;tnt@\'-s<>S#ZWIpSmeH+s67.BA_Mdp&u<Q<)L,%Vo@=Bs(!bgetOd6Mndo!I\MP?901d+l(\T4TVWpuGEU0bW&?CI%&jS/[11I)>0[(&hUaWV7Co=VUPLSD!EFtp.I1b4USnE0Cn%F;%s"EPNEt4Xa;Q#IJf(KlU>P@%p$ic8Gc?HdE_/lYJO/:@'[_;n4oA!Y"9-]DaR[Sf,Dbtd.ZJj4NnG&F%,,h6h<9SkAQmg@PL?FLi%S@*&_?.lM;A5$O(RVV<fVKQWeY>l[fC+-5r?E[r;2WXu5'5[-<GfnU#@a7X1K)QFm-l6.HHE`q*G*N_`9Yq`\5@FYsX%8U.-8sJ^%G!KNn.-A+ZI$*aBAmEs<pE\(-k$]FZj5iDd)O&/3,gUN>o0o5u>Ojo1MWaY,GqLC+b4Ak=DO0h*YrU.@d^TJ,Rl';_4:c7T[$Kl1%6f+3nS2G,uF,@H]leI<ZS^)h0=iPN>GlbBTn9dTPis<LVo.eRXo"1"8biu3'(%,\HVYlR$^7NBT8XWjci\5DT.&P)V[YV9,VjqE6%b?`=h8U$JuU1gDmNnRa]nhS,)?o]U2%kWT><cB`LF(BGVQ:,<-3EOlI;6^TIEDFgl)bIFs[Lb)pm5#RsrQ]/=jA`F<;sgY-;nQ^*%=l`JoaF6*cZNm&KAr;pC*e2R>jH&m2c/P[.8oq>k^5D&^j<:dCk4R0>\7tPk0UJ;5AdRd](6<qpbj.n]eh6#cI50a(ENWWd\\RIj%@OAKhn`jp=^PclR,6r3fEt1_304)#$=UhcBjWlHt1XWVhA&s$SG0O6qHnm#V(\oM"78&tX\RsG.%?tnB/8qL.ei[cY`)u*l<kY,l%AG+KQh<-dL$7%I%Z'i?E?R#%\[VNE3guP.h?3@*WTTIb55$DF0YX?aEeO!StG$[V)HX*nuEa&#ka6Sa;_.6IjVrL3@X/sgZM36%k%Oqu8"$b.-/8oL#rC)8m6jD+cTP<:dh7CN!DYtcP*Xb"I)qP'c<E35_p>#m+=;Obkp.@_.6ZWk<d>jn>RkDgj(95Pqp!p4AP8s\T>%B2V0_bBdne,F@,nTTMWT=CB`?7a1&MaL?-)@`_f0b/19:$g7k;[Ks-^h(88U2)5lRJA"27?Y6MVHH4[9V[>AnQD**1PG]G_cEA`Z%qBTOf,OO<&%srQ"T71R90(@H2P`P\`:.Bl`97!IbQVWXifmHKf(?FAnO%7R.5K):ZQ,iGeI!do@_k[*md<tk2GW)R,X7o(2C%^/T%HOA#t:JUm_:M8:[f+c$uFu8[6dTX+E^:nW\cCd6jX7Qrab<PgcqVJ@HCc&[Vh$MdV^.np.Yr/V;FGIQpO57p&rQp=Pm]\dP9"5r<%T`5q%FFcqoC]iF"cu_#`"2eXcfd&MmM?_Y,%4:AccDupj3p]T6f^relEIt;7n)tJSSP6&CaaAD@I5VuQoW["=H?9=V:i'L!3=]VU%iKGE>BQ5BL+?reQ1+V03d!GKrn?C-32nO].s5g%<54>*Z9i1=acU?*f&ZiGX-_itWH=>mVJfJq]Zi9234aK2\V&-1%6Z/FeLHQ2:%C#'3+UPgj5>c]!;GK6[&F*?E&/W]OS_(f&"gW&[MY;!\bg)+"Smn^O.5+)#tW4'TC)CC&8h<U=-(uA;o2L:Wq.UQ8m9=3e==eepa%,b;FYFi$o#&KMrUS(iLAWnhR%g<Ff9?#M+X\/hupG0h"A^[8Gb2J*Hd<iabe2-TZRdY]QWW"l`B88S3if5f9t2quSXZe9.Olcl4C%2kt!;%%<pT2nc*CKRffEDR:>,7\`h!,`T;G28Vi0&.QD52;EpbWH[XpHE5o(2sPO2r#r(qoq3r&Ibh':Fbl!>G1'!O8L(2^8J3CJ%&gfmg&jPn!2h??"DTAlh))pQ$SA]CnNoD`&@M/LB(V>cViGLq3C.=2]*[OZ'78Xm*ObiqVMd/s8_fjZ>RpdPCLIi><;&G$R-pg/j%68s!95pp=N&GQA;gpdmS+:>t.#XmSU?Jl#!Fc3\YZr&YJ>pLU0OU+AuK^a[C>iGGu^[8N.VVgn/IcAB_5Oq0+n:g?.T'uLc`0Y>E%jYa`+=8*=\p*)0^!`+'TkBX5n\/i'G[bRb7E9hE$`bsjlDVtlRG<OQ#SVdLW$"3pTgB!$hP]-\5%ZKf5AX7ZXVn.*-R".lWji+GB%^^iq%O",Ls3G;o+E=G=Fb.sZEUSXfVj_lrkoa1iR6c"a;K%lU.MrKWrN$=3IN+.`tN1u9JN8fctmE=Ms/rDN8amO!phB:_k.H:jd%k:#RClR;._P^&F<P^4K!+(ZOj+28ep"!+?GD0_&:.DHc9:^L).<"&U*)$JcOUjdtp7o2j3e.c8)M^L@d^Ds43*N;,;WB]lPO_WC1%Wmm-q<0o('?a9Nde5rT_!qdkhQ`n+cr2Rg[Y4^o/?]>PDJT-!BM&fD-O??>X!Ql(-'#gM<FjR-8:tCXgM$)JoJ^t.S^(@Y*#&UGo%<]29&mA*[)5[Q\$>>Yn\TYqH1jag%U6+*2tW-5l'!!rh2pH\TZ=925YYQlo8Kt=q.e-))G)]ad-$b6(!&s=%hUPbj3!KJu^O'9=W%?m)]%Q&PBedE(ki(''[FO\=/bS8H*b_$\%_iei&&Kgc023fluV8Pqa8W(R0--##rml/3m3I%a6-CnZf]XJ*k3m%Fi^/>>fb'e,`m%;d*H>S@88ls%jNjb9_RYJbOE8%.r$SI19`P'8$eHJQ#:)P;^XFf?cWVFob2WK(?ri"R9A'E(sP%;TEjo9R'qt"IP1Q!qmiC4&Q<1%dKJF6!HAqs/<'lM7tB\-_#hS`MX"T4:gR>@OcFCr=F";]";idGIpg9*0P>OUW.8QhUiLPY#:uI%f;IOW!';$K4\WXDf"jC*@0,)F%2\$["%h'kH'7`*&^oYO`>jJoZ@C$"BdZt;`^]FVL@#JGSYf\+pL''N.J@,U?ORb#"l:PYM=nYG'7F>]*7I`eI7M/*5NoUqd7#E`,%F$o4i98[gq/tF3j)at^"gTQ-TUP,D$UQhODa7<8E>tTH2WZt)_)qQ++*p"Fh+(ZOj?Q_Eq!DiroMUI*00'u595]&c7BM41*SNs;B%]g0h-h-fV8rBLfX*KaN'Oli>`<M_:$NRYq4lL%<A@C6E<[33^cUciF*rFnjP"(GG"HR.tk.?Z?d(+E01/K-&PWt['a9:A7H/64@%%>SUsC"0Gn<K%VW^Z'&+oQEc=PH7?gr;R).'G0pdi42sP4NF$=-dDhoG76=/.(2YX+>I(_KES9K;eRc@n/8mrrhj-17[eU(/XR*--%J]S,&"jYcY$L7P@&S<i#NNfe+XdfhQ[(qrc!G:pr`j\O*=4pkdgY>oa>I(YIB>:SlX8J"SC9'"FB/nD&(<`&!cVNU<>2`#$L%7m.%a-9!h(&?hm:W`]ean:an9\WGl>#HtL1)a%OlB7&R,:Fid-_Zb>PSTK"^S:.)]-oX:F?1,Eai.sd+[RnM5t[q,Tf>J]2$5:,JhY"A%E5=%Q.24s<+_srR,Xi/r/Wg*%-Y,Om7Zp8>oK4R7NYFb1LnH!+e-:607Peo#XLsI'/u#c!?7rXQH(1e7AqeI+N.aP5s!l3+fhSuI%Cd6U)qC5Yp.k9q"7@@%/VIWHDTTVn>UuQRD.nI;+P0UJ/XD9"cD^90N=]nUaP3PVKlcLO@8<_eo0"i\CDaV,4\odeR1r5;2_k@JH%K`!#s#LTW7?mR';dSJ!3U+M"V(5;-2n7]lSUb;$mIdt0DJ&rh4,4.C?$2rsi?XE0D?2/Ha=2k/KfiM34+A8e)JUXqc9)4XG(-,-g%;oTPH."A<%el+f43M="7(r1Tj==N@SAh"HO%7F#%]c(RE4[eg]kY$Q?2NAu]KoUru),"1AImD<fm)NND<(U'f//`6XWNe3Qg`"fR%;0BdF^c)^*6`k)M7rk^9*j?'KYA,BT`K.LMfUp$!h*JL!Zj;9jG,;'An?o(AZq1R<drNr"$a*PR\/l![.Q-Vki6Dico7J=uh0)B7%/ueZ-PF>e9D-(u:(#F,=hpTBrDI_^i)]QBud+noi-a3XJb9`#`n$A\X*m6[4/3."5h"CZ(DO3!V0$W%X3=@-?-VfG"l.d7hpeT2\%VWk1.o[g`;8Z-s/%at8$%jZlq:iiA`Ps8d!"n^tM\;6V=]p4(r$buZI^qZqEqPa86Dbd\fiBKJ*<J_+Z;iO[<JA6+LB4-btb>CKZ%o(OL=Joe\Q&#5`4s'O%4Wj^ug3$Q3C#3Uk^&J)^k6;*ij6XfXrS\1C%Y$]Js0Mj=Z4-:N1YG"`D!ccP=K$bDO8#"rCY$NMA->K^H%bGg(sS2_ZZ%Lg;MC*Et@7da=\Z[,6<T4]V!Ndjp]Z"X%:1_t'OC=6@BR,JFW"]7rLM43c-Z%a9$0G2q7d%sULD\:4]4(S2P]E$B/%J?(-girX1**QLrh<<6qap2J)$+hD*$-\rU[?m%-l(af?XVtq.EXI]gZjZ7s?/%q8l0!Q*D&@NjKfRPf3M#cKHJ7_&%`\=k+&[C=i%>YFu;-j"D7K7_LV15873JuU;.*Q0cLfO6/s2!D^VM-:OR0QXutLt/Uu_JHX)bp;P,oh"(cCD6u@W><l1^faJ$.&IC0%HmlqI)f7P%$qLab8ZJ?iEhg_MC*&&C$p(UX@4cH2KW14W$U@b5KnY;L)=7cYQQK9p_A@dD8DG]p]WbdH1ZdgY#6k&AN!Bn&7L;ctGW7]5GT/o6%5mJ1(k(ZIEg.`Rq5ZYqlg>Y_Tg&hR"nDkC]#.P9QEaU$<H:4PGW`oMFl8PdY8^W_ZG+'`c5ULn705=ku=Yb=)NnKP89Qk0"*(RO"%5%Lm<*a"ESFZ&BuJCmC5=?VRMG#op-[D___.DI'`'pTrA4'3ClgPG5.R/+N2"ZikQ5Y163[%aR1!QaQ9+MG$:TPQRoKtNV_Y[Hdm%Q%*0(ZjjpLUBKZ[RfN86bk;AV=q*MH+?"u[<mMtWh6k=9j^u#)d^<bG!_`sj23(Npd(lch5uTZR5Ars-%P/H$h#j]r&^9[T;PC`/%IAH$s#:Vq*D*OH/jC64>)A=5Tb%"ZVZhrnP2B(r#1$0*r/VFkslMVVjlr(57p-s]MkeI6#0B)u+O9;Or&^9Nt#X#;t.;m.@?PEUW%;rA\F'7&>aa1:nk3:'tI4hd<2SQ3XO8>#2:s%e,Gk*8V.>oZY`BR1ckCJg""hlgM#%G!'qrS*AUmQes_=Q"fOf]/VJ43/&=*b8A=%5s^8GT[eX$+ubf#'Dh2K"uVMok.ssC&0Vm%*!-2J-kI$)3"?5R$S^>b9Z1>M,u>)ASR.C`Cbf$Td==SFJSH,mSf6.=_,V4FhQ35=%2F&3(P9("g$H9@PrO0WGIWN;%,;=el%`Y9P^)ori#Z0T\OV@B_9fYHI1'b7U^k(Zh>@4>N+BGF=6W_3`hTu;AWIFs]V@sUE/oVZ,%E86oJ6>@Xt`en17p`sOg]Rck[nclnH(CF:u$q"2h!!BZ,Q9,StJeos2#*J(!T^TINX;ck.>QjrJ0L#kC>7\r2!hp/R?lUrJP:/-f%5^prc*-eJ8E5Lc=@Kn/3b6RsKqMQ7-.94j8US\)[AnD)M[K=%6?j%J-2\.#E//fX),/kFaRkR\ZG9@eo+@J;_UEiNX!HC4)%%+7I%#ad:G,O)RuM9c8L,%)Mt9F@.@@YQS`/1p\G/0YWiXt<Un'IO5<&.XbT_h!'(qBmE=Tu&Z!MMD3()6!lF?hIL;KmF?srns(D(0R"$%LC*Xo362IA0L<\l&3[B?^dSXV"%7-^164\_d)lKajF41\Ym;SnlduU<!$IE:"E$Q'.`Tf(MgRCQnC/#B$VBD8[DZn^$7A[&qG,8p%]!WZ>Pr>[6K"tg]-nIb1oaub3c]Sut&HO$T%U:%t$C)k[=9q?b$d,Ni"lCtd_Uf0Y=:HEm9k]?uNta:dPa2OCHp);5SW/@-/WBj@%0o^^t2M':1/"d]h$3@GU"9sdfcun,'<%'"%0<cCWe3HZ.R$A@Z03STe#d=cf(;sM^#n*N&(1MG@F\HYn$N\Y2#[,*Y-rOoW^gW7u%EEBq8@N>iY!>;"6:$`Mp0nm[O6d6sN#hX;G$0sd,>t=..&hBr<CVVoZ@=Z^71BipZkQ)rdUcL5u56+#8m]mgWZj6uk*5cV3+Mh(=%"X>B=JV$m'VPLf"_B8o<U^-C;m;PAl'/0ihL`*7EM258X2%'ELGZo+:Jg\W6As^\3`IaXum'7<kAg0[77SQF2!,1_p1l2@"agrZr%KR/.KnD^l%gmFH7m;4tk;]^CP@i-]06;UOUQ7dUtT;'J0Cr$-s.REJ85o<0+!Ki*SgT@"ZVHHL3Rd?5p!FTC/7G0jqPC0Ir)OtI@%!4rgnVb:G+!^5*NgtSmD:i.HHq<VhF\=dl6ciP.:(`6f72mbCu(H>'lN]aE2+!<?phT)rcBGA%?*[#HMep1(5fbV/-r2i@PL-,b6%UI\,@q^_e&R*Q%'DG5*TR*+Jm(r0V#^1@Xc!#R7\=CKS''/4I6DED:*JATG'0-28.@RY-a7d!$f""XOO(m)[p(k*_N7p)o82pr:r%bK>Cr\h(/Rn%DPQasK6fq?P(PLI[f@+kReF1a=Oc&MS6Y[L\8'&M,AhS>Xol_q[=cTaO5]g3OnIF5XfB*l-f,%/4Jd!+7g@p1bdP%h?1Q$[hp(h49W^IB`';s"(7l%N/&,k*]Jq/;FVaL-3QZ&)m\*(QRj3Y_&C>[=$>[tJE&&^&0kR.Qo0Fu0X.fWbjNZ6@bi,jQoPh6%gu#Vb=*T[(jD,!8ect_2O7`^E?WBA\m6#p:5VJ-S0F[RR7`:iC;NW1>p*2LOi>BDHIeXZl#oJ!$j8tl0%i[KGOB\0,MG,jWY7)W!%"R_%t.6#f[KJ)#95fFK=9RKnB6Vp;V@_KTd:PF/a1]W&3f+C+FflR@CDTHLR:VlB[k)`*QnN;=5M.-L@\NZ<\3Ll!A$,0UG1T)p_%1#A],YY[qS!,_<uDZJuHD!GSS8-+."Vt*u/!/r!)W"=k#,/LU5"c(S-$j>=lcu[\d@%AKNB+r3oJ[)=LirU51,1'mq!9Z$-!&@@o%Eg&1SD8BnbaTCC_!eOQe%)B[D!N>?sa.pAPK5,'-$r]DE&V<$d_$PYjQk`E&?3,K*OAH+*3,6;K&df,a!=Z`D!@0B*'UH"iGmaXI%aFi"G21X&i"^jUcSIb9A8=@8*qASQf*WnRf5[ZUr)"%'K!XkVPLNI#/N!(LO$(427L"no`oWY#a)4;[f>&:TU14)3b1^d-U_^-C7%D%6WC/.aL+&r""4.WIsca(cT.]88L])lo*VDJmMtW)+Ia?GM\FN(GR1%h7"gSFtnB!E1XNE$GV7_PT[F!/E0[MO)'ie2LnE@.Orp%pcP55Q3W4/2TR;EC0:Q'PB('r90o22DCr0)5X7hR9P>VIK]7k+4X+86)3#7;Q"'e*X:$6q6<=[?FFYmO["VoPjp<"V.?8(=Zc`n_%<]W^F_;e-O/$2mc5mODY>Ep$:(^Wng].*qnXtGQm"rDiPapTGa:8EEAECuC-J6:u&.,;rZJGTobgIRTD!DmHhM]rYYr5?`$'3.j0%?l[.;-]97fKgR;IZ&s&,+a57N".ue4N\2#[SO8dfOpJ=pDu(jJ;F7`J"SB(\`=@_f!<%Qs-B?cP,<4a.#GdrBC)[>jD7^*&.r<@*%Z/Q(k&1$TW;7..c'tfDfaXdLAD@%2=cia':G,s]U!QHEU=P5AN$9[sFm*j<S:k'#"%eo.:(']Qrp*as<#ah:B=#7Cu59B#g;2E@.%!%9r6`hC6V]Sn>JiLjEf'"HbuKaY$,JHEkX_VToMXT4FAq^f!9Pu7d3$*F`Y/i5,F!84+mb"i&b`&9@h-"*C/>sJDL=u?;G*^uGb%!(/,0$+Hf><?ffS]'UmXS7lr,L^/`X$koXO&V,*WP_FqLPX&171L=2<<251a:#r/XA&.VKm&KV-@GkmoVa:NHMYdh#(R9Xuct-JP%S=:QBE`cqakTS<eCP/SP%[%BCe/Eu[E="lmk2=Au$<o3PNl,0<C[_Jf8d>,X%`]1Jpfd%d*[&Bg-qZXeIYF"8.l$O]#8*OJ;gSSo%<ZENl:iU,=<=K"U0pfg&<N/K]%]?/hjDflK1]lcDE??^i`<cU'j9-6T*8co>)?=RA3hH%i%g0:equt?'XiatCOpV285)2FtcLD_*%*\^\hZ`GMfcqi;AEg7SoJ]#),!TnPfY),9o0d$rL-P_anFl?<2i$_kd&)d9-S-1&_Kn8r!M+Z#<#$N1(kq>@U89!W>0FQo#RmUQ<%YgXXPed7.'^oDE@+c7^F8"_NBCK#!Y^t@hc-d^]sZ#[`MjkTnNJ`*tO.nF(8>=8k9#ei$PD*:mo-<q$U<$6]V*?@ZQWX!L6,U]9F%5cd+6U=&Pa=IZlAJ:iMjg:UaK%`gq)<)H-CR6DYg@91;E6g[:)-tWTKm=hBT<&==iOR(7tQu\`SH:g-tWl$r5B/J99>`ER$j*Zc=%VJIBoO=-5?Adi>Q*aAMMRG&77.t]"1HK5&+L?)37$-q9+BSlfs8gFH!feFf.*0VR+1u^)_V]aXA&WJ%;cpKu/@\b%F'4.Em9ZQ21%Op&+<Pp4,`ng5<+.;B,n4%<.o&HK@4JU%\LMZJFIKTW6fQL`+RKLt2p%6[L")`erA0WQSQTC=7qQO2CPa=2oPT"03B$P]&5^+Rfg%<'Vg=iij2c8-m$]4oo7M"p"9t^Kmq\+].Bi5,A-G)?;;?RbJ,`#6P^J9;#*MgE=kT?m0CAdf:f\]\&+l!?IV*9<B&0R%]IdbT+FB%e'Te,,$tJ-SAP]Ai<;Kmj[t8./qiKsSmH3]'T&Q'3'a%cq+JZB."I!f.sVA3'<RB,V_^T%/t847^bU+7N"#l,lZij$WHF26kDRnk%mt"nGm4/j80ENqa>jXK`*]-K2.7Tfj+JS(+cZPnRQ=QYt-SW'g^r-GaD(1%+2%-5ai4>Y=7h)kL"$#G?CcDMZFfDLB9>2<q_R7&c%%hOC#O/mXX!83TiHL!O]/B5hl@2]-T=`e[7<,)_9Tsf"o76o&@3q!A$*/Uh$jG)dK)e`&>7HeFL%!=]SJ6_\GnX1?s^e)E%'ds!S%Vt]+9.Rk)uU)#V?"otmMC(N+F*#HFTf%PAf<1O?L-JCol&_VsO2[<V02r^r"*$F>'dT=Dc&5rbK"tB*[kkZGmLg1AhW%9^(d"2>Q%&9gAB$b4nl!ap\LQ_Ap7i%R$a!hC5p<HUW##72fR3b<OqB1B+_Zn3m;]jD!]:p(E<MZCG?%o?E1<r>_&]3OGK!CE,W<CMiO0Uh=T%JRJWOp7tP`,Z`NS65A`0XtH(?:$!Fo96`6n*lQuV+irb.1M,$S>i#Q\]?/\gjLl=S=K8pE4!*YE0MKhoMeqV@jAm,!jF.S95gb<3%<SK<p7##_HN7H,5W`BsMT,Mb#4iB,l/=Kbt?m8CeQFPtto-_,J(p[ZTqD=3]m"MtB`L%RA-kV8WE_GO:gH%N6Qcc>F^p4,1LG0mk%BcQ%,NZN^>OEZSdSa3RrqWnf[FiR.iC+?X/*X6rj.C<.VEsO\P*-?u"^LGg3Q%5ILBZ\[O%1qf!cVSObi2En=,cZBM"'@*rblDXG%YZFf9AH3,`7iN*/&&ASt?t:D05nGBG[!@9hUYRC=!asr-d-YP^*[3U\i*98X$7!51'\67XLsCts_5-M)fZ=n]c[PqZEFKZu9U?b_%n!sL+[u,iq*g4iOKRE>!JVfQT5]$fO8?cNBq$[cMHW9MYN-/hdUk1f34i,Ph=,eS&&ro%?[=;sdbf-a3NWVsL-I^fFGpY5$C*gBa%JiJ$,c"?,=_1F7%RY(\G2,QF'IY;r&,>_?Z,*+uPQe@ThYfd7f,?<>^TO>44l&#)14PFm@(_C-lb]ufs]Hm[iK%EcPjI#kP>'[-+%5td;9#%Glrj!J3UINd[[$!PN)#)\>]>pOO=+;=M-\D#]J\l92J0Xe'G%[E,Bgn<0hL)Mdl]M_VH!=F?%Fd+PT]S_65CE-ZR?sFcZ%Xka=(<[RluYR!%Q$.n8">^e<J$Sf$t2)%mP7?/+[nX5##SW['!Gu\bGX+^uLra*Zf7B.UTiCsl,/Y#u&TXr&l3.h71&N\d=_a+qG%''7CF!<[0QN.Bpg>%G-,)*(amXH&ObO\:&k7&h%A%'5s^jGeS$m=[O2`HoN)\(4(93-<'#n_b8[4N?!L'3[+j'%ss+gP@BASgk'J%d+9Z;I!$D@JATnc%^_&P\1s<kP0i4i@[Ft]hJNR+j9Dkl7dBI,RZOpdSe^8+C+B=qY*KY;;^r;,$mf9uYX&Ns7joKuL&h>sVsW,;%0:An5WlY=nnjGLO#Z&ifenW>QEWBsUeBsHc_V^09QZX9OarQ(9-Peg0m(;V.>YT*LWk@U>+JL0(iBcqr@bX`?aopAJjZ53LcZ(F?%eX&N>^pf3#I%UXnk'1u9GpgI6/rM#F$39GVkfn=>hh`H?EXHC73)dV\1R]HS03m<tU!:d%50:n#@hD3'3c<<V'`dCV59]DH/"g8t%VN.3<(n4[7Q\WJiltBs-r]l$eO=`=2J_+9n)B2S.9+@TgOGX!(n#`S<oJDcYa)]QZnVDF5R2lRr<B+I)Gpn@p&S=HOq0Dh\-?Nml%YQr55]u5e3eD)dj5?Y>B.!ZdAne$;g8/8j*3fBp@9m!*C-\`sD(DF1/`lTE1UnRb]8C7&VBn/Bc*XQ-!$2+,D8=e5RC4NO1`>hU/%![9beQ(pU2kEWM(?l1Us6X;iBY\Q?3m7]ql?&?aL*ji\pI\)R_,HMNuGoIi-RjUO&[#e=b(:^uoVr_Gn/pW5PoE/qRcIW5!"4S7u%Aj[hAGoM=J37.$Or>ubd,:lSh6d#hq=]p.Y>b*O*!Z_oC6Z#\n]sP@0_%^i2BT@Q#!9OQ>.fUYgn.>lJ$3e@.!rEJ2QT6G5VcBJ<%MP0%("<%8o8+5<Tb%-3J<)^=pLK>f/FC(o,84=]XkZ!I*&RQ5M2)6]'&D%02=Q@XMb>$.gLk&ON5#T*?ZFl3sJ4>[XM%&Y<)$)m%%]=?MT!DH'9cm:Cd+D*Xp/LbM:c=iVn'nM2oje,3)!J8s'R:u=9Z&Os[.?CP[\2;nXK7I`=DTMdeg1ZKL+OK4eI_"!%rF=R#NpWQ2%'^9,&jtJ9ne;E2K;\>/'\#i%n3BiWekTbm\U<i#$]gD"F76MCf?gVgN%d@^TVuiUtq4r\C6Nc!-7ruS`B.\'smmuqn(Pc:1N28ae%*a'3tY^a`/a>l5geEZ&ZfK?Se884a\EgLR\<5)!0%Y0);5*&D&%DX[FHdQ*/_kp;La0bNI%;`+A!]_urC5sq<"uQHLVG#JXGZ]$+%b#(&8J8rA[?5"':@8"G7^Z0uWT,>mmo,6F^D,A0\_npV9jIpYsns6UC5#)3)qQ?%!p-=2RaYR;N;8_%a@uJj&E_:igTgNL1%2%su%4Yg/93`'3/LU(ln_>6\XhZ*^c/G'g+Fd`VeYe!Ms@%iSM!$JVlf8&Vkliqhn.8Z:(!!`9HR'NZHY03.i@XZ'$LXg%8pc*0X=[b23%@LGH*W]YglRK;&=U[+!=*#m..$q+*d8l/SGGlU#MK?fQ0,%@3gL%)IY@MbV\iCe>L/*?Nd".+U422Hd'5_=m:$5g@c@?R#WqDO2c%]MR#g6j`r*c`.S=pYCO'5E^4Aq/j4W=d:\PI"Ya*5?L8JSt`cTLZ!^!en!pg(gfd!AT2n)/I_+Y'Mla3.UlK:0,&G56J3'\"T"u.%1j#9b=JA5L=@%X>W"/QsNH"\GL,lMrD=no8RF<WnaEf@4E@N30p=6CDlPl>Wq7PM*"/DD#qAOl<L,.\6K:]658c(##CM=:nfMdQN%Ks?ImOJNnD6DBJB#WlWjZkF5/dRCE)S"B^R(J-k*o&.e1X.i:q&(h,eZ`Ll45LHb,h$pN^!moJP6Z1.g+Cjq-GWKqHiP/.mQ@M9<%]ToB33>r;=^+RA0HnbG:o`0ij[A,Ef>^6P]1X1I;T,7@h9S,r<=W@%D*_?_k%gUGC"Lk&1hE7sg4Pj9ET]*'E6<IAe?<H$:iIV6"%abAT+__R&%Wr^'s_K'bBiD\O/90DJbOH1b@'4$KXQ]i^t*?r>J=%!8/k5uQ'dSiX<'b@jLk3:"_?jP<d*PS*l[qGE6W#2b01tNLR%C"2<ceN$h6#%"+dLeeaq_:B'`/q*3q9>7Fkj6P,.QESh%1gKp6lc&EGKc3s0=p@%Wn0u]=VgTEpKZqA&Dtp=&[nd65p#_p)?%%U[%WN,1H'.5t\U$gA>WB)ruP5t'pIFgl(+S[_HiQY=l74pb=2gC[U;c-noZ,@+1=SU)CO,!n6bJWW!)=ApYbX]5:\hA9"NR2X?L\oR2%X,,+A,66ki9=P'rNYm>I"R5MY,jrg1U#MCnlgbU<VndbUNn6Z[c;SqkpXR(_:XLZ<+RjX[^/s@D^?'nI9@=QgC(DD;Yo8u#JjA_-%'2\-XiL'ueeG3'$gm<dSN8B4[EUb<0\tnJX%?<\ZBVk\XP73*sj*Ki)""^"S"KThKnkg1%R5D#!;#k"b0`nL-O9719(EL?j7ujbX%E#g!M[g;*3S&At0;?qk;SJ_-D#_E9MFDc\q5dK>!_4U&oNmQ4nG#"V`@]>]`!)#i$e&o=\o$eTfi93huT!n?D@lY<j%XBOap!2#V%bp'iDlg+=2W:LscLNM)W"%LiD*An+D8OU6Ni';jI\p<]-!s$3iojXP"O$GrR68a9R`TZVef%1]LKmC(W]KWH*E]%NZSK-W4C;K2o%W1+iQL-&inOujNXo!gR`WKn^9ZNs<.3F"a5m-8)/5'_>UN1u-9<qFk36hfhYe@n'$c4sS/Rs=.'*Gb-n&Z#LJYWJpBEp&L6&>(?n%D[@Xb04CN7^Yu['NuPXpp-teF0_oh9PCT@Q%UYiZnF7u4XJ&T37%c5CX=aK!HL'.[GIPs"Z+b2BS%C-^?$@E7W<5&'YJstHI?cH:%[28[C&77iF1Mc&cn>]C-658XM)":1+8Do_B7A/fu"Y.g*Y!De`OTOG?VQ-[f(`>+0neFHH6Bi>__HI%_[h\@9WQb_+geJLYjKEL)%lX6*sL0*ebdf@*Ge`HDr-Jn(rfE:_ZDr9/".Ih3MN]f_Z:4`fhkZ3\r2"552D-u/2isa#\Ys&0`+MFWEGZ-D-m?#B8pZ]u,g)*o-%gV1<Bbr^HIFV>-9Su[37!*2/^pn@e3L="C2GcnU"m*R*i3IhKq+2mM1eU9gg3m9t;'Dtl7^>/&'%;R$#F0pe!]EDY4%#'-\K;Xb)%qGu[9_lBH9a6-:hAIf**(8h9@<%#gNlf&)^a!)^?n*.Mgf?pK`4FLbt8b=SacT3KB,W`g8oE>="WhQ['U2YWb)cQ.9n/WZ%Q1q3o%EPPsJ$):#f*t7i_?3bpL#6:<FnVu%l7jl]r#G)Z,46hWk"EPF?TOSf)QW6/-YJsFP[liuFL#_B&0qV?DHFFA#VE?KMid5q2*i7ku%E[pk0+"e0#Hu]>H%Kpd9@SXj[#;Rr3;Ds+2nF_g@cHlsU3qS&P*>-#`aKpa/Su5nX,UcWcp?MT;BZgP95aV17[Ij8`&E]XE9G1T*%o0`JR,VSjjK#ekDL]P1<$.I!Ae0h$=LgDbpco4GD$$BDNeVB>'C'Y7C@#SSR=X+iE^g*0`oilL!$\9HC-?SklNQBmV%s9$FP/gGp%e9Ji5EfL2J/_"K&82'kP?uX'=0cGnq3Zm=["6R*(i:33;hpFOZ$f`;,$&->*=dcp!i(+sQN<7t"M#ok%,]>C(X,S;VA0?5Z8EdQ9%e9A.XSdo[GnN"'I"I^5b:<M(s'ZQ*,(ju`(lN$c@Y9/n)N)146]@PcVUQ$_ZB&HBWU#5AQb$/e<o.sk6<+8&<.p(Y\_(HrJ3IJi^%'>.hT2tpR*MG`f/ElN$@1A.%DQ`bYQFLF^/&V]$4$EqZnQ%4r_(h>W6k3.agEAUJqc$5$k0IN#DL;<))5-,Cd$)N;-<=lI+ns`k_%GX.-Zh`7d&fZCaX>[`pVmQuJW6sldH6XO161p9rA'nV(t6.G,4UL3@&:^hK?^hh`L4\gA8JNe^`%W<Q8/[u/R:_]b5?A4X;V,cBt%>=:`YOlosCl==:O_;I_r3s+k#*&'A7b+8ItTQh$Dq`2@CY<D5`hWsngmg!qTH?AesrD%hB_c1O<?`UXd[siXFn9EGUiR_jX&pV*9%lY$K4]W>FdF"nNKZ[Mb+0,2'*]ice5qRSbUbK"Mnf#-Gtqf)7P/>(au:F=o,q+9%Jo?#+%O:G(8IpqV(k5"7eJ'a[\6i"CF5FqI;%_sSe2+,t7*q65>UOB(LMS(WIrkb'[(hAaI8,ES0^s(";dVq;D!kRfDHL@^<NVmGf,CpXdk?E$K$dE`GKd[d8+8c%$YQJq4cZse,]%.e7UJA1=%oqQnZBBDoZdCH!4RaZcPq0geEr_FZeZ%q]#o?)\*>lu0%AFYdY4S"ko3B\K)DdKK9!CUCjhM]ks4RA4@]@ZEqLa_?'N%dN+tS:J4/WSuC$rSTJM>abHUnj2&K(O26:)dVLMHk@stXq51%-Fe$-CnV+6oY4^]NhJA0'0/#m(q(+rR46gk6ZJ_2/I$f#g=YPuO%2/_V]rS_aE0L"qH];;5)&\hJ1df>-/9r"Q4ae.h^X>-.SHdJ]G>-k1-15-Tl<a*[NXn8]@B:&#a;q^$\U^JWmi:3a1r<W!X;(@ac%GJ7-2X0kUpG3N=iCu?r%gSK8/FRMHPb:_U$Fdf[1pU\E,$4D(B?KoqPqq_'ig@#LjKDE8:q:6Ts3pX3%fDR<cr?,%6/-2)nXA<M`%b!VSRX=k138[DDHZ7)0r,$CQLbV#[]CaEF58Oh_bPHrVNc!n!*gGIb:QXT23`*9oL"0Re!nn(OK58pGto0IS@JE[&As0"NO_bknC%4&DnUl)`1-ik,fTOQ2Qt'](j(fFQ+ob!Hm6J")V\Q#9b(n,6<3[W7@+;"uF026D(OnNHcgWA:g)d;V/4%Q?!ZQ&;Y3,'$)s-YM8a%o]WYDfQ:W(>\E$$";J%Iqos@B9K-=pE`o#'.e5YdD`;"7JI3:g:Ig&bjS%Ko[)Yue@YpJ5B=Hrs2>!AU!gP^jIeUOK19T(R]*n89%)M:>*G1c2co3*6'2(5Bblun'j8F'%IZh')s<\h7&]3nS3b5WRdF@82\aI;[aff(Gu+_$"a24Q9L+moCTRp*:aM3bWImsL?p?N(mm%ZX?i3Z]#rP@n0ADm>J)jP<P#W-tVbP_-1)eNdpt#PUP3nQ1o5EWb`qdl:f^A=#+OII7p>OPe>b]W(-VE*?:VoH_\>KGo>b^4#6GA%1`;pH#,@N'bNP\/9(C))&c8L;e6F10me$h@P*O.U-,J"TI<^paGYiJ0mIfY3T$_Xqja-k.,JROBrUH8_EaAOOUff49VX07Eg#['`%bW_IOW@-ebfIqU6VGtJb>-cEG]j/adW:1`JWSK5\;:N'ZlM9kVr]e(An)_!,\W1L>n([^#ns?uCqHNaHE\6*YrG0O1dNolL\^k>/%V)%M*>5d]1cok)Vdc'OiG?dVp[%3ei3SR@C4kXqH]PQSMM=WqROj9:d`YO3lkn[p]b=0U]k]$Bfk';/19F")P+?ePnIe0pGPV!N1%gU;Jg,3u'LEfl/0:S\IiP=JnloVRS-BT"/#Jr(o%g(^ARgUYmUA`/ma6-Ej70&qu7[4[C*80Y9P(?\ZmX1If$S,'Hk<&9M<ft2b0%PofY[h-p>X>L'#DBDoYSj'#ENra349:k\e!R@SIJ)]s2>r7ue57U?"A>>#*0l0@tgrE90nVG;,ob#G]HPSk*SauL>FI#pjd$1TQ$%&6,8c)YH!oVa5g"G0>"ff2.PZKAm-AD!G0GV,I`ogigcM6d_c->qTk;i]6>?D&u??2nS^hnOo\WD**k+-:d=bl25#)rj72UWZIJM%$sF?UBq()GaINu4qgH59iZ6lp<\E;!rn_TpY/S+k.TitZl4U((\^k?Xh2%-Q0[+7Ae:)TYVNf8ERDU^uW@6F?LA<e>_j'N\5.f,j%g`;/Y;dQVTnOn2\Z8ndT\Cbi(b9qcZk-SC*>aIS`;`=0W`,V0*8E\/BA!]7e;m*o^G8t4=*+jC7jr[`q9-8pL/Q^KlZ6<o'N;+^S%;7Y9>I345aGK4.k.tb=cs3Wl.Y0+jtD-tC9`[,G.\^k?XoR$=9]m"sg>M7SVpb$@^_662YG$mPZ<@Hms81oB-jo(c_q;gFFka%1'%bIu0)C^Y?A%qmF/+n,+[_rbVhBU%t-qX/E2G;!h2G?jW-r4;n=kf$q6]hb\6-,9uIVR=)?DdpFbEf#k#`KAtlBQk5/B@4/mBORl2%.YC/?(IrWaD.h8q)2jeU7dKJ(IY\31>QMrrC=(\E_Rg(jB?tbpm)-5DjU+LM@*d!7O:Tm5I=rt>b&p/sJ!/kWckh%gO3>M5S_B;t%D5'o77bQ:g>ho-/e`Pn:PL_"m(p/.Ie*]q6mifXIjPH]?eT#62lJD'$WZ/`tV[EI]J`#GL*I(C4'tNI[o-N8#2'(_h[Rs!?mS-mn%10HAQhUAO6aB:]4Vjb6lCqWp@QG-u>9R>E`[5O>nrih`\onWL/D;/3(I-Po?aq\0r^NY0mm=X.XR1Ef`r&%kn>GA5QJi#t6j3b5@%cEq>uX&;X5PPLY",uL.+ho/FSc'D"M8kJ8HkH[0>lU_$d[uERsK2A`:U$p#GPgP\$i\`<!2;ab/$f+C(G(,S!8nP`&D(EA)F4-hZ%=0</&*$K+kW_=/(>_In:6Ip+eXG"(kKPYD]8g[`uQ9KD7]D</LX%VcdbB^^AUV4adrgS"K39\(>/f@;H[9I[0Uopg-S+lnDeY$._%hP+DeSbsOgj_d/*\"3H#;>+>)PGN-5%;!kr;a*;9?FGr>+4dgR6JcQ&n$\=%>KFE.jF;D_G$E$\kUCH/H\%tgB+)9#5<G?1dfXtn%'Hk.`j"tOpC"t>#qk2BI\*79SqYSR]8X^.XJ7V@A5j6XG3P+gn58p?(4-R$qB/Ji_?^?WD?%2OijED^/Vst7]n(^.H:Eh2%KtAW!%dnK=9IINK=fn"HnC$C5MF9"+5Ol;#U.S3h-k>^aHqA8bJhlRf`M_'kdqn@*]<SH3&N20FC\a3tHQ7bmZpQW.Gb>[n=<qFEN"SkPl%I&9oS?:g_7TW!aT%;k2f30:s@9A2;/<%d\i'o@2sEZm7':ieIXDYeuj`!%'f$;cc&kpZaQP?m!Y=*NBKSNcDOPH$B8h+8?TAGKq@%GM:T<G'0]gh'l.cY3rZt48hYSff./r#O=VIk<I:4G=An(Y)'N>.oV^?Q0gcla'VAIc>T3-QV32PWOR%uc2DSgCeT9Sbnrd.c.B11%'J<5P*boPRba"(,`Br;piQB2^?2d3tpRh"fq6I0RmN!2fR8FgnB8>=B3qr;u=bK]@5@22FPkbJKQa?u>lansq'rp`ZSPchtd7_,6%ULYm\mCP/<52TKqah"SF/8sbJmLHUg;9mI2IMeAsk<$jVaR6`?s01DY(uIDT:2g).]Q7hIpAO0dTY#DC/O.Wf\p(]4d-mM$.,URl%0(n)74(2]cY`/H%>=LVKcH`;$.F/38-!qlg#24W"g+2'dI/M#9H>ba<V-KX<M.l&X=VH7KQ&mr:o]BLRDb=na[WV]oa/YAPkO*sr%4HIe"^!Y`L2]_q-=m%Cp.m[oNXq/)#V.R?hCmUUhkL*BlmC>W"(70o?9;H/G,@m.0m8C8rC:6d[2J;B%])KF=fk:&M]i+BbZ-US`%hu2EoQO$%%85dNA.GE:Tm^kcqW*/VkRl]-K;=\<BE8.+c;6IU@>u@Bh7?(sOaiSpl%T!,lk\U!BUjl,bGOJ%*[TXcuqiT/NUPhj-%=4YN:/!s/ZP4S4XoP!i_"FZg/#Wh3Fe'96;CCX*M:&)5F7F6B-Ds8d(Att>;8%Ch9"qf1.Y#"D$7pAJ6K^;1P3Lb+dBALDa;86YN%>P3df?,QKW'>X>7`b/.Ap3mYos"%_c=No4ip`'`G!iNC(m.C3YJ$AIs%7`po:T8$OOE$-EaO>0@jd4aD3\B%$M1s3JNShNPZ?=js%K=+="(&$+*!DD*6lVi6#b4];V;6b8p/_dD\?)_sJC;#kFhBIrHfn>S[5i,-H;6FsUmlQ;DG"KW-RREgsQ&78Z7dNImZE2/Z6IsQk%fIgk9B?o'f,s-qR*mW?$NMK4<XXP,>msMF<A9>K=\Jc-g+0Tticn=;3-%$eK_Y8'=)jTa?oD;;Yb!k,=j4e-m-*i*6N3?d1lnZ:\%`qMc^[*/6e8&qG^^2d5sG8XcP1VSq>'bTQM+*OiD=;d`spH%S$*RH:l,&M`rC\P](%mY?]-YDhM1*[RE&lGtH\*VtQp`C0TmHZhp%K@+@<ls+ui<k])!?XgN'5/:DaJeiKW3d\L/kI7%VR*irjhEDg!:LDqW&nj,iT(Zf8DjRSrXbck!$DO.Z<3U)Y\)cUUl?IXN%*(kC%qL'aG5*[enBU3S1[S;<VoP'a!l;NrIopSRT00`e@5S_L9B6#qs#l-L1-+d6ai9o%pi3:HF8BZ-idm?8l=82ak(\>n\-iA"MN]$P!%HQR"'GbL(gX1Kl&P^7T^nqm2'XF$BWSTZqe/'=]H=TXIQf\=bRY04<mr3N1.PlKXu+SO=7rI&"\(HLQuaOPo6Kpnd1N&a)C2-ce_%X(^rmIJiC`gj:^5?E#2[([^Ua^!3=cZ@3AW`ujh+k<EW=Zq/+_'F-D`m5O(Q0\q*[b@OurWVAkJ_G>22i'XjFTCU+mZED`u]F44#%)?p,ioMVg6AM$4t$Y>[/"s;:H_(G%?GLE+S?_h7[>LTn6_,kF?(n6`_V'6/lc4RAES46Wf&IX8nabi]Z4X&N>68l5h-!Lt"k<$ko%*gcPjjc)C[h1(`2Tm!U1__BS%f3(!uhVE=?9XM6NS\#DH/9jIra)Y;S?"DoH?^27Nk0*5;D6]PA2\H#;Mn8cgMflu*?9\8Te+gX`%7J*[ODg[!eGG[S+B.\$.4R,8.2]oPX^L/8.ZPl8uI4OEi%u<p2+&hs=FJkoM@Bo)@&_P_:<ups6oUCT"MI\&Q.uUZZ;9;&jH/I)/%8kPRNm[S4g@sZ,7PB%Hn/h(Y6V/+IeD>\F5rGq!uQZtU3I^s:hf!!-hGkN,>'%E1ZAU?;uAbR3<DVd"PrE.AC@X"(*@h#g$P'n&3%HOI5uj&`C1p6U_e8o)u7U!e'LG6sj8]#3dcJ+/?Ac?sm5[#CHd7?q`@4Xlf.-n;Mo/:Z<LI,e5M[=OL7@(R5XJX#!J8QdL=X;4g,%C:WQ>PajUSE`PpqF$F&Rp<TY95CrRtoI&a(q+Cp,APV>Nfm3p(W]q=tg[8BX3H+l/HSM>'Q=3i*fpsk2jCuUH)l*.MVX^2d[9V\e%?r/>UD"rQq>B=Dg:O`^Dp9?aKiR=FA7ae+srFt.@))^m\q+mi^jP<!#lGq;NpN"\6RD[j/r0(ip55o9"rm5eJgV]W^(aoLj#W[>r%)BJrKo#30W"E("gqa:6HjmcH5+m@>$gP_9C!(:3M)?"usi`,75s%e,Gk46]p5,gNL3-(QX<1R4Nq8/3SH*C?bF%Yes\+%GInB7F(%qR\5WO/ftmk#?[edaQ?f:lC"qL/k\u`$,Mg(BtT(_D#psoq:;i[29t&,`WPXIL%(PC>Uj(0HL[2gp[Q$Jb"%*<6ct?a0:f7b\HMc%?e\(%n=QO:NCNm=FFNb%1t.pHHcN?1a-GhQUjDESoqrlf^D2dQ1'RUM%q1%<aUhen1mpL*K!feB/2hb\$T4JLjLh@`;n^]uN<\(P%L01Ug5O\>;C(uD]Q'!(jolh"<R%>9-k4&>+e1HcRhWQ5e2CA%[H1b$YfR9/_W_XtTFE2g&ZRS+SFpE[!9?PCVb@a)oX_LZQcYD"U%TKBc^RK?9W%"[,RBQq/$?b'be2p]+"dnt=.l[#s.Qi^t>4Pqs.9@*mS%,TV+J7S^fW$mN#:OW1G=P=b$:h4HLa";sKe`T:VQp&t(%RTIJ1.Y".lhl=OPpo8Vjq,$u^Xoa1S$-Em,!`U/u#>\#D\%WfArZ93HclpnoEYJ1%@#p':W.-NCV#1qo(Z8JT,^)%(Y$O2k5CW=e%EP(MT::5?f^i)->AD$=J?KIKc?3R3.Ij/58UEfRMHOH`4fRVQlVd$H)"Pu\!L``cgIorNO*VCk1Ls@U&6tTjloV[+6DB*V8KVM]E%o[O^%1qM08WSMtXHBiC)hieQT:F<)OcJnriUY4,gF9H@8PH,ms.1T=Do%S<X%!Nu7-(Cs#l8<>sG)@uU>`-GeA6(ruF#<7.qm0"Q%Z:DJ')WgHRG&>WR'fWPZIm-T]YLDHo*^rX[KjjM8$L?^Z=1u[o2p6/'k(`4LPLGtZ``6%AG<))CYT^ETFo,ZF))<#T3`X=D/Mkt[%BDpM0#'%cEA2*AL&dC(,h!N;=9ir'Kp"%U!4/f0'>CoDt+>cp!fBG]cC4X9a??bt_Y(iHA-`?b6^>81(2#4oGQ)JtZ8AG4NETk<$%(uc*cFRZKWXNpH[+E7Vg(GHKsYsD"uX8(<E&iKsYYkO_Wop-S6CV;Y@Rf5roWn_@(8PeN*_fD7E$UD>q_<eXrY/8bWV\QoQn_M1p%_Hl.DU`0ENB:RUX:O(M4U_(sG,S!W2aS9oF(HWK3%9M\iBdF:l*1g?@>l.C4510F:"?,bUVA.CBoDu2lkf%brVeJpc[c&mf_#SNZ%Gi\!.h4LL)q!\s;HI@2qjTf\c5m,ReT&+qc#U74GX@plSDLdd`W&t^[k$<L"]'DCPou12BVS7[i)-bcD%b+U)6)_$,Mn8ucm]L7=%A'7QH=:UX6'kdY[P5q*1XEGOI=I9Xbfa2GSN;X;HC5(kejLLCc1%_X3W$[r.C4Y1f-uK]0)FZr#,K.)=f7S>e'2NaDk,IF?YP;,h%WGs-He1C2IF/pD9kp)Z>Z(0CE$/I4WG]mLSN2gpo*Bfp/LAY="`bHekOfN%s\P.RLk<q?Q+TX7a#$*g%klp_(C.I:G@7r7-jLQ+I%7Ok`[B!hr8_DXT7\0%+2nBGWq@'9fDBMkJX"^06;jE_\D5[(j[cim+Fd%Z:/He;6K/VRB3RUW"-.r\H"nD&R,;u(oVEA>fi'KS,_%")\qg(=X1@#\@MA?"D:sWj.8\cqQAf'ag)J;N4#-iMb'N`"p)$7Np(8bHmC=fR*r,<b^H/*3&Td%3qWZJYh$tg10s-E%KES7+AS`%!ho@rKDmRl:;H(:H[RT5GW1Zm]3@/EpY9ND--/EJ;(:_&7Un+!36-TB_IJBF[MX7oa)X#MXjQc!6Z`4AM`l#eF[3Zeo[g`;8Z,Qg%7(Jm,MnXYF#6(_c?J:[H9dm&Q[6W@NVoK*V%`Y&?B;mm.Fg=e=\CEsBpLWG)MRU#2=N:aTRV5\&R-P><es_+@I0)lAo+@?$0Jr>M%s46`[>'"A"NN>.IO,0nu4RH[\3K3,-9R"p`_hJYj3',cjEc;!ZOrXhn7"$4@P:b[kW9W#(<?10$l,mbDp-oRZ:SNqhNDAXQ+L/':%XG\Anr``D:Drn!W<h4X,ptFmoeTO[[J+%X,%e/=pZD&$cl^Uo_cXUpVcFQ/(r:1,pg4Wd`_!CEaNs3q+<:1P"k=GO63;f7N=L'fi%.(2eC4RgbC79XS)]9p+%9)Qj?].ll[N3U]T1p:1*:6/36e(NsEcB?0_cDu,drdeWg)A\Z,5.LQ;1\*d@Ve%.aBt1^1352.%$q@.u%dWJd!cu(f]/j$B1+0p^-0@7c-"OuqG,[_X0-[iN3l^!SqRu2\n$F[/BAQG*+R?XOrHM7)_joMB4rolr3rZiY/,#4_D-m_SjPkEG+%eTe[!+8]<_/r?g%F'Epaq!?Re8!?-HPpbh`>&s>3-j`O9cJ-47A-5`h3%,XnDi.(G)9j9L4@me1:F?%,npo:0RH*\;P#/PW5Y2qH%pnJAT^V2o[o:D&QM@N(Gq/FgILc-m[Nd\rFYhllsbFNJ7%f4YE9M`^(=g$:DGPXo@VJXelgZrRLl49rgq.s#Yg7?O;8cSh?dY1!F%S'tD0[6'eIN4P3Z<IUfJeZHQM]3:]34jig5Gf#B*2ta0aNh_k\:bB5be*IQOGGdqL9ue4ZF/unO"2X8M>Wq9\?d?8:e*>n*4<J4t%($D1INU_"4K!5%SEr*K7e/jt&O!W=rGFVFdiPg1P*H.."6O^q':Zf"RI&>RF)ciT.e'VQ@qQ/eC+[=&,r[=>/Y8Q(Yo&`tUe>dq1%eX`P@#,t9L<]5CaKM5t\AA"FkQt=luH'J%!o*]?Nh\K"E(+fM-nX?:Ai8*?;`Ib>9+P+\d-!kBASh("[Mp8Qed[Z99oh!l6_afX4%EW40lS]<4)e"7d5FKn:e=7'tV+3pITK4gsWACiQc]QT*Ti*]gce>#dedmE+,=<1u5Vt328Z(6JFN=p0iiSC#@GW97Y<0?p[m1W(>%%dQosHtr>Pj$EG,,B^f>ZA1Q0A6Nk#.1:1<-a2"aZh2MDg@"WHh37i25?!QTcuXo0jY37`Vh!]'g]o]!7W3P/XM=3m@C2hEB.t5u%)TKG.>&0!"D82KQlg"bu=uOjGTF';(C?Pgoa*]QBD&a!,=E3j$`Y-fLj6io/60opNXJp1194*ALiLi8+T8gjr'iUU?mKt!R^8to)%;mnb#Vc^%@l%kArB$a[Qqbq$ec2B$l&Wq-O5l)#I@=NS5b%=B1/>:)3RYSdeqW91h*=[@"nlqhm^i6QK_B8X=hgckuf_B0l,r>2q%2e4m]9t>$#,at$nJ.[@sHp2VZ_/q*jp9JMWeP:TLSS^rn@HmoVE>WO>%<@CRih1.L;a&Ti#CP3t5>8+60LBL`Qg27(][K#<lbf%k%F5WQ,h]IeP\q?pFGWqMK/pFiu8Q+YI0PU5W?d^f:ef<DDRpO@V?HWe@9KI!:jAbjUa'$"Y.7QV,;b?&5[9-u@e_;f-KN_r>9p@#W%3*PGqjIheOXCSK=Ls*a;fohO#4)?De=.@Otgm7=_lun`:m-10-L7e^ZES`rGp_(M>"o=@(s2"+XOb)KjCR>S5,*5`5JqOjNWH\iH%QLF!BP`tAuqDoXu7YauW.ZYAr9]RAA9h^P/l+F./jp!]@B&=eX<I`Yh%gF"BrW#:dmI53TJn'ft7^(:_(cR>MX$m%B'P5aEHjb"X%"IFRkhW]`$aLa7-mnl,jd%(2G0MjfUfU>uPdup"%UXSW2@l1g"h;B1==lQO,Sb4V)5?Ss2\n.F#c(UaoW1(n!^iQsqO3Dm3m]`V[%P?^RdM_"Io%-H+O,cD/V:pV#G2L_A'n!UW?ma=!`[W!iWCSFEYPtF3I<GG*KP=]P/KGD%V8NJ!nLNNAa:(/q8+uR3C4F$TgnkKD1%H/<*m/j!pjE7neiIM:Ecfpui_PhWLoAXG%S=NtWFQOcSUjfA?R[$g22,9+_r[Dc,5Q7:PCqK$aVitQO^*PT`LG.sqDU,s32Q^eB)%2i!oFYi+1*N@&&'-e!/_mt7a4IJTs.5(U\$[2G.WatS:<*Ss.>1uH\0*A[KGdE0;bfr/XZcaH7Z>P&!GiNW>/*IuBq92B1hRR;tB%Ja2<u:0o*q#Y*3^S6j^tc&?8tX-UY<H$]#S<S#LW)?NO1%\'UaY8u/n5Gfg$4!5HTlEAg"IXH22lh0Q/JiC1j9K>0"%p$b"[(.%H%(,ikm-6VL#)P+.C^57Tcp>+\HABY4ZeNtMSe^G7:5n3"pdksitH&K#<9l8#oj3>)G$Je.75_IIo2db$A\o*2MdIO\q"rQC&DD3!g%72lTF<mIOFRLD]tNhVgm-TOmUp#TH%8\V%p/@gM'=L1g(`jGZE(EXQHS^4aNPX"'t]F,K0>s7&[7<d+LX_\-QS&l<i/)+=%68)r!%\TYm_A_0lpQS^bfUX`3E/j\9Gj@+]k%;3*5r+*Bj0Po/VN$i6_D=WR[N1(Wb&/MSKji+:S7<e<;3]]@'d;ILSbpTA@[R'64BY8?>%!Q<j*Cic:)R#/2:a*NC#(=jG3elZk;2M:\^g1+>iX?PlD<XC^nRojm'ehfg6h?T+TDWZdE8T>D8Lh_Ro!L=>Q9@#:e[._q7KfCIY%fgU+T[l/"AO.6;ucg\[/jupen))o*jbUHnu>L=eXL'j:HFOI3uGWP&KCTf[5[t7i:Ct9]l*LoGD%rJ2AVo)NSJ_H%fVd+p(2RCmA%njUQHD7fC^1eqA[k6&(Of9Ng3grF/n@l8r_Iq-34]"HR,K)*n7*BG37C-'U!OV\+$[UmcJ*p)]!q3K%mDNKdXN`o+u5:)TKTW&Y\%(<*2_h2+0a[;*K`3pj[%Y2eSf4K6G.f2Z:1NQt$pQ#M#T^Gfq?T2SoJR'B]D>3QpWY?pn_D7)5%T3h"Z^5PL2mUgmA^aldNd&;Ep%[Q*<.Jjc\XCj@6a?JSSmU3-p)+4<6.MbS&kiQgSKAes-Y9G08Jd>$ZgM[GHP83EcUJSI@ipQeU7c.(7Sh$,)k>?&gtFWP.I:8fT*%A@PGM>)!Trk:FWaJA!GY)\!"NbZksB:WnBNq)!d>]7GI#UF9/,?g!GM7_c*Jo#nqe?nT?XdA6VfO[mV*>Ff8\0I6NGX=Z@o"IX^P%#<7X)RMkdd'kf3?'^q&>:$DU_J%.hpF=4.n61Y$AI"$&jm.LZ7bU-B&Yg;oT.Mq*4jkNp7X/][UXOA]c&^r%fp#F6A%W1D8e-jiI%#sV.-nO-+aWIXSbC^!O+LOD)F?f7W1<K87R.,(E+KfL_D5(_!-STQ&0HA^!_Gp6k1JOsD05.[sr!.Z/ndGI=&Kk#dJ#u7P1.T`r_%Y#CY\X"\lW)NIS=-_lU,#f#Af6"VUqD-=\l"#X!R:+J-uNDEJ)R<S&\<FL?U2+<66*FMip1AcDTH.B.3oo^2hE$%samc!XL9VX]f%1$GrYY43Vs"At/*7)PE2DQU2!D!01:MW3kHlh_6GK_igSp$.qkb"&f+Yh,H<hM&;i%Z?>-G&(m;8!*"tg7ED!#MllRA0ZP6[<P&^%(eu]Ip[,K^e:_15M%@>M8S1L(HQYfVZTa-^CQ1n?K3)62/>r%G\p\i^kN),?J_U=4e0%k.1c@<=\Or)jl#bJuW`)V]GK!/YTQjd0%<4;928u-%RLq_:';6M0YM+OrY>h*-%"_P,eRoWW(hY^bJEUA%:\(\jhYj,G4.NUkYH"qNCF:b_WDXQFjFlb=kQ#,A>FHD'2=.c_6%5<B,JWt=)eBBNu/,n3ki"A+t]s#s56eS4b8l;)V+[A._HiG*Ro@!^]I9V;pkeuB9uifNXm44r<8]K1f/WIiQo`$m](%JLKBn(,fY%FL)=<l)mCH[Q5Ad&>s6M0=PH'eNrp]*[ZW7&&a2:E]QEJ8+[i4>I%dIL8!:T^ei*SWhV@+I=GFk%q"9GX(n+A65]Q@dN<C4:um)j%78[tFYH5/$W^1D^7U8n'c%iYjVH_etb:mK]>9eQ_Fs%ab,,!gXVC-W`;5]][-_&rA)4qt+[sa=KYL>uad="jWqSJ7Q[9>Q'E^'?s%6,/bmH"cqn>L)9sO>g"en+87'&5pfiFB4#9:9?UFSIQuU"ij>Q?a]SdC@,S:MaH+=1q/L?Xi9@;P5[<tR:4JUg1+bO_c9(9=gSQ\%r(Lm'K+MR.SM+6%L5VnEZ+2tr]LctD%[L5ANc@o*1I(`)UD3F[\`W4^EHBd6C[^H?YNCh.j39UkE4;*_m-mFMEPAj"Rs!A.$eWsd%/!RL'A5k5^b+CQ8("m?t-563EOWs@lXA`A4/+./?'=Ihh*#VmT@oe,;U+s9&DTu2iKZFHf;1b*JD9&B?YhRtB$al><;A0dGTbg5n%2Ij4-p=?@XZ^jGY>Og%sf%>4mj'fW6F]jd<-/QR#\ZC4Cd4'aH<I-7ZHIHK5DhV/^RO^;^*5e5fV2`!e6>LG<rOVbupu-')#irND%htFV;X0(7BZe:MlN\r"mnSk&DEbq5QDVQh*E:U'9#o?a2CXK`egISidN?*%Uk3;!g=0\oh$s)g(ARZ>uOgSk^9"XO[n7Jr,QZp3%%B(_JEp%HLh]M@,7S?QiCODhXD3U[Q_nP.:j0m#4@i%-,Y/$2nXo@;6UD[F\R&D5/E]Tm!\MRm[/rHD@0D_hdq%e`6Q6r`So4rh;:%ip-`Jp.^BT)<R%,:#&mq(!VZ:Z`bCf=m1!]GSlj@<Fgu'6SSPA+#P-(N.Y/gM)^NAj'M4FFQ8i4:2W)$DEPLUj.#Y.O2#u"lgJch%qSDq&2u2Bls37lQUNMmXJ+_akVg#bT1Zu_?rRAH!pM"l$jgtKMmZm`T?TtUY?+FtDe^mm*5Q3[REq?pSO8_,>?+D])I<=T5URt^k%p74^FF6i7PCNB:09(VoR@d6Z0!HP;DigV<Fh")Ji+,<(9(I*D_s$p]9rTH=+o@/&)S2MmEPKCMM-hWtha5?mb]4?4@Idm#k[EduK%nO%Zold&>lkK\uuS\+R,Vs[XZBW,P5^\IdtF8r;=0],1+N*IR*jrYjU!65in*D@iE44@graj#Ud/TF0h(sJjsBD-uPqrlR1Vg$[V%1I!V3:4@8]?c1Odr5QGI=0>04jgqg*eS\+Aq]c%*cCaUhr;lP>dE55\lf>NF^OBNPl2Bi?i:b(GCP@uOrl*oMb$Jsh1MPMAmf$P_%UgIK>2OV.'PN#.Eh-\-6hX.MjUm4)!mI\SkO7no6)Ot1#Ief^D4K5jil]&*]Qc52<f(iTNp-*si*ZPmAl?!s%rGTfRiTFPV-eIf>%RInJe:?V!6OdQnsZ)53ajm/u8\&Zf%-b]PqHa]0PhTtqfr?3Nl=ZgD2fCVRpjBq*E%WL.fMlV0kL&]?3]ag6`d=Nbe3"7b0iKmp6%-4PQbj0>$%82<nd4SeAlph\'Js6GD:k6nb<dbhh8j6<j@+&qsJn?:[D[@#OKYP^<Wr&fC24R)UblhCDTio6VEdMmB7\*o_V@9p15%o[Plbs6iPLUuK?$Vis*$$RbnSo.p1%l%Sl-B[Y%pe+rC?c4X<uchC`T+#TBZg3)i@r8WRl8aeb60@O^a$TVp40@/S0k;U.QPJ5\a%Q=KDCO2YDDhY+.V3giQhrn9Agp0F3\X5'M9^$0/?dS]eH]C3SCd5Weo#J^2l>r$-hH1\,gq0gql/a(M_^EmnuPd)41&-'6>^HX*,%T,(1JFQZ;Hl(m458%qnY.9_2jbJ&%>I/UAq>,S!@pE4n^bKneD'i+VCQc#._-TsNjrf7^QBk;4FemIi,5C>Eh\p2X*J+%[GIp_(b%SojntB18#99u^ms355FGC^G`DH/ebsc$-;L8KZc(+92?=Dnd#^qV.38&*9VN?P[ASo0q$l/=H.^f_KAFfIrignXnj"-V<[f-A>U`%[)W^OLJ&LIffQcbA]^`$Sic?=`OCPb`fKjY]CN_op;)d*[($(X/'[uO3`_H9pt'RZF8b9SmT4F,n&p(0*b6]_E;oXtFr_sDBdSO:%E*=+PcbJ,rhjrgUSW9l0<Kk_B\WNZZb-0W.Y1'2+([f2B+hTh'5/2:FAq=Z3McT*$^8)JjD9`njiIfHCRe.Qn]D\6C]K$agaj^#l%ghqQg-cK6<ZsQKRh30!WlJs:_9^:kujnIL[\Oi^8T=:)`q<%DF[2aNX)l8$HX/Pe:m2h$cU`MY5qYTLMd\eb4G;"DIp@R-cnAjD@%4C,2h@!Z$YQh6"i\9aplGl=%"\Yim&*^<S!Vm#(`XUL!JTD_a]S;cId_qVpYI2[H>4oJmde+<"r?YYTQ5-K<7Im.07o\daY)fPQ$%P:(!ebgRQP_U"j%G'`^e8alGjeH]GGT@22p0E4XbI@oE\F)ZHfIWg'hA'[rb4W5)!-S*f[nS5B%l&U0=\#q93qJ5Ej?058*o0;qt%O1n`moZu4LpqbCVYC>sZhj^MO*4pIG\bH!,hLO&KGClYe^\,OYT9aP7mrWepFKhk@eLO]Crqb0nVsX>UPB?'<DnU'QF-gsLI`;3D%qX#S)K*P0KmT3*Rm;$od:N&AmIeo%Mg8o^nf?+?Erj_u.h)lKPEV!m&")Bs207R[cqt%kb!2#9O3ncS(aRh;Ye&V)b`f>>N0/1:[%?J5?:Gl\fFT?m"2%:PeX2d9(Iq!CS>^Zk*ECkS7\qm=2*Dt9=jjk[h&A^;OGai%]`552gFNo+/6h7u_)dYM+gio-5ca8Rn#e,%`t%R.'BW4l>G3qKG`<K6@$l4dl=IgWu8Aa_-l%1TelCQ:r3GNd8o'`KQ/q5;/QASB.=?/fq?5Q'oqG8^ZXj/t94\:F_AI8%,:S+#f4]%8UFOBIVpKtdD):&c`n:]Inf2+6"\R204ack:Rbe^?#Su'1AY?5.HH*mrVpa^"^3[grjHoH@.7,HT+n(#V3=sR0`F9iVY07*[8iD3%I(=>s),lno;>2lq@SH;CZ`7`Ve'$Xu6<nI.gq247h='rnTrn2b>)&[Lom?S6-YqH?k=Y0,[:fQb^Xe[X>Ys6@Y$E/oSlu;dH_'t#%)4.Bos3#-SXo@LmDjkV=`n,O_<3hNBM=UUlj6L'5on_5\&GM=m?i2@X\<l"NV$2USgW#Y0A"(p>pY'uZgW`5521Z0eGlf!j!^8m)%h(^e0<M.(n2/\t_XZcXMW?!^oRb8A1\:q9E\&nU/gM^%c#uH)"#_8rmd*BC8mSM]AbcsUQiRKI]Fi=e$G.nFZp>e.Ha<.`k;@ug1%P(u&nCm9tC?\7K*]'4Y=NFUMdEofR.Ej1kEbo>QB@lf';aAXj$5i7o0QI8jf1DIuM9375,n*%+Nlh@remjf\o7205#qKrIQ2IF4]%PY]FQ2ItBr_;)44Is.+f<S9dqR9=b-[ur9e<uI&mP'-fV^UE<Q+l=HQq,p;[V)e!%ISRU_c1fA$An=]_ogR@$HTQ"hr2$9gZ;,Mr%^HS1?%+H\<(jM<>:GM<eDds3N(q^!DS*c^;:%?LL(A$t5rfs<lH^RpWH<_V-00\-^1u!p[ir!_DGkPekX7(O^<UD+I,1=&bUWW:>%(00U-mAa@g"Z+ke=ah3)78T,#!SN$GmO*q%=q,=/s5WrU5jkQ$P%D3bG.V+/q*<q)FoHSqN3h;4T9!mFA]_2&=Vc.;#BMgEXCs$(%GAEQ.X$s_fFuIm_eQN3lZMW<No9F+e\U3qYHP=0mEl6V,=:bkEN7Ze@'eLePb[+-D"q,/Qd>P:2oP#hc-lYsrf-jdH8Qoa#$Sf8;%s(&^"aT"9bm.mc;-u<lp9ZHhj`o<0Rm]VPc2DmY$ib;tBWFOX)Ai,JjRe^O'e1F\o[TVMbaHHk`7o)Rbhn,MgdfmsA1bt)8"\Q+>%^0U"ST0--KC_G.s9$7;t?Fn;9Ah+-irlW#c?-JpD_;X7n^g`5p]75'6L*B4'`*c*Q%IaG$gh<pn6eN6Ys'ON)DT.`RNBRC3!&b6n%9N,(oc6bU1SA6!rA'`f[-MW&aqfAD.mNcMI\uWD'bW>(6Ec7sWdal]0Z5HsdCqne_).eraWgai8T?a<iYu%0S33V4J*9ORflZ6;a%DOli&*=)BVR*WH3c<ui%4&A3jl[.OOL<))\?k;DBMqaSq`g,k:Vt6ZDb++O[gW=f01>2?15u2lMm-J*UX/kjNCs+k_DOiks4>`!N%fJ's>'++j;Ab\1>3cB64C(h1Om[qW5.F;cQ2;<.6S.&hQ2%fPE<uP&ff6\@GIQ)jSc:Q-^aN2p*,Tk;BHRbZts147J^GWk5)M/l8%$-os20E]9a",#BI2`kUe7[_cf0a0fj/Wo-Y>V*7_jfS[C^)$cTrVbmO/TsDT9K/aP[_hNY7bs7%Z+b_V@oDd?1l,o<,2W08^>gM,%:^]5/nS.L7JbHjT?0P9C<c,qCcJjh$%s^`sX:\St5aGo"H6\ua^9<5!rW(O_ZM6\gH['W=W:j,u#YA5OiB]UP>G"Vo8@B9W3I)0>%n-r._n;o1P9ehgtrlAN2#?[>^W,$XqGtI\.4STSijY=Uk5R41n/VklVqKAq:?Ia.46el<dTe/l\nc4lcq\-qs&1te0I5OmK&?eCd%'V-XTaitsVn2i>#n,0/SdQe&^_*jF-*K4^No#&$f4UUW0*i&N^[*PXcHm-3%at2*l6MY(8.Dgit96`RJ\b9jMI;-U`r1R2@:;;`"%NW/m\Y4nA#1pbOqks.>(dMk[VgjZYmcOALuDM\*F,Y1-u;ftgC/7>BQk_A=FD9MKRPcDW3eY95(^f:E:$SaJYSYG0SQqqY-R!8S!%pKe9VG%"FYEs`NaCPoS2MRKg'd1gN<_+%hH_>Y'$c-4&C8IF1ZG*P#8H(<6D*,RTs'Ba?^jZjm+H'<[k/!EI@B6:iMr;?YK"W>2)%P\?F+>U8Xpl;D;8DGZbd<&+k$<.$a50UrS6W#H^-l&D4nCG6s:QLd]r<%@M2g1d5!l4WL^qf8;s49&V_i,t,p"!]'1J=&ErP=i2`%?D:TkFVG4t51jh22UaC5KS,7;d2Z6U]`'blM$CRM8>;*fq_6=Z'!3g1_;e3Ad;Y>lF0@Dq9/c#!qNB%]XN`:)Z3C@Vo_MXY#H^p[%K5Hk>lLV7:&q$:bfJp_p9u's2o(V-XZP_t@R;Dqr5IhWLbT)0U:!CI^YNJ@fZ82lJ@Wou\LQIp2P:mr$io:k(Y\UY@VBuU*I%5)O%IH)^iLOjFl07fcn)BA$Gk'd"a@FDi!G^2P4JHhT5XI=8TXD\9EMbk>oFEJ5n?4lG<V<@"TH[L0Y\jj#*m%R>r^)>&,Di_`o@$B@>%mnX2Q_GR]Xmb6kJXaVjVj%Nq>X&5B>*++WO3!8OE6)-F.[:,T.g9=j!P(\+13jCROFQ'-DSs[4nd&E6SU&5d1LF'Me.%^!@(lbu>%VmD[@dAX_3+oA^W2bC*^(?^Ih-KT,&Y5u;l?>JAKYtjGah+@N:P=Gb&g$?T>/_SS^^ut$kQH3']Ek9th)C^8QH\Sh->qp3g<r:Cp%7W5Dm?eI_"-0onb)U%`@/(Y^;I@+0c%@%s$lgT:Je[@/6A+%?*Hb(!B_dMa,onU0.Ll_VVb\/=m6Ob7-jJQ=^(b?3K_!Ls#`OAMQ%1H'^>Bi5s#U5uiQ,;\Y3I<I,joQ-[<+aZK1Ep$fm<e!=11jAWca/uo&]BMiPS(ek26,t@^9\r.7[9.n`?*.UMllNb3%Q]cp;s9oj%r$Z^720K@ffL+9I6)V<u-g@=?n":&i^'T,Lg,nMMDSZX*kh8,^>.Ol-lCi"^TVHD@.J1up5:=.p'DKlH0lG?(k<+Y/Hg'0Fkf=ea%hEr(n,e%l_4^HhaA8O9W^c-H=eV[Wn9PIn1GB8#fp6BOo;VO&NH0f"mc+<R0+?7_*dedo<eFoYSS]^J>edFCU`maT2!P*ruU/&`^%F_M%ArqH3\YTQQ*j(fU8]ah*tqC'oRXE1Q9qJ).nIX^OAoX3)EeBn"N,]_EnV*Q\S\<`8GjuUVQX]d00YO*40Ja-^?;@ouQ)d!M(%HJ#_VBM9e+9cU@j?bP7/[$cs!DIFjPW.@7/AD$KF,KAO*es*TL]qf)]DU&/pHbr'?bH9?)OME^ok([^&\f$)piGO:%-!5/:`o\s8%*S1&=9kGD^O6#pG=#RV&LM:f9j[^u#eGJs<A(T[Yh]@k:.$s>fZ2W,'Ye]5lnolZZ!q3iA=>W*/`bMF!ltYkg;jL=p%rA2te[^b0%c`e>_&c284L\8De%Y@a+X_H$S0^Y`ZIgu>8c#8r<-?WrtMe;S[%BY3M>Xe-n-]DFCgqU"?I-'%cSsVEF#clEoYc2c$T)$T#;eO6$%K+4aRmMH<6X:o&ZBU`]07='eK(<45,DmI*d^D[kKh5_:A&*W*>B$9neI/D_Na6LtUa"?'Cj_@.>%.O3nW0%;nnN$C^j*s8%Eqd6W%cCXY&L,aNemr`gIRKf_B.#p%#YbP''TA?Ibh-/p[g7_<iE;a6?R_`fk/T/IY$o>"/C$\H-E8p`8^9'nCAk8D4LQj/<W;Xf$R6LAF%`K%TShH.k7[!C%"jXN(77*5Jc+"b,]^f=i:Bh3k]T@@TCLq4G%c,['/mW[c;cgQkefY@/N$h#p]g!qU/`l?K:+d%MIROccZ![C0F%Jggm%a=sT(Pjh2dPX8t'Y/OT6P]`NpHZf2SVRX&`e^*[Ie`+@!Ou//SbQEaD9N\+qQLK9WLlCEiL:$-f?gIYJ8OQ&Dq[Y$7aM7dK%/_(jd[%WHmOm20IS3/!JD.p>59N+IHYl;:OUkm713<+U@m5a!kF0J(D(iD;ZG:VRgX#d!%=FTInjlX/E0#hpXqpijN%`H`NPPG%6%F=J/I?`lOrS5)lcQ?I+Z854#h2RG1HfX61E#.!CTdKo5MIAI;R]*3u_eW!fjgL$XHI<?Rroih7X<9n3jVss0ukekt=WYG1WgTn4d%mqMf)U^6:bk\SRl;dn*rqVgooe#96]mtVk\r3:8<i<E:J5<YEX5MQBi(*iIh[8j/#Y9+7Lee<(3LOQ`6-\=67EK/id(K<cTG8@+4%%p(u>PWRm%h%)I:P^ob*_Z^pY%],KOou#=.Z)4l<G-Xj!=cWo-C,M,-<*0geA6X5VM1#9&;bc=,hEV%3:20uL:k?RGh<6]@eR?)I%EL\Y0,`SS'4\"I*Tp)O\P+e]VI^he`k.9]*=F\#j]$$tEid((d8mfR/iouPaW%h^jZtJk#,])\6O&T(e;Ds3E>*"pd,f^hVE;t,`%2JfY<&`9AZMZX9&3i<#-32<`S6U*>b1R1GNc*_FmD!3k'7fkW>VU\XXh1$^>d*p@YW-%F6`oX9"0e@-)CHpHcW'fr5;WCF1(5SnH%2]XG3<_)GkV,&,#83;!j*aCbm&i(<Pl8OugeG#likt&d5VU:N`rF1t7UuEfOkX`[4\fClYF,:.Poaug5+.>62OjWa"m!d$1HP<_o%XVG`X*1M+%*7aYi<qK(\'lMsD9YD0Yr4$<oZ$,#Q"M\u/<]GL3&N.K)-`q=iU'god/)9(X=@`C-^WeI^U-P?Cgt)8mXg(p7bDG_^%4gr`WiYHYgoYR<m:(bGT!G!1Oq..)LD4&%)L.=rjW,D8+N[^L,ds46D%oR]P/&RjGl[<pE)iqn9.gI"6*M=H9s5L/#<sO.Lp40<U%]_1@?cB$Q^T/J?Pq6RJ7c/8?,rUSOgXZL;7M]hi)?f!^<FD^g8gT@eDGOH8"+)J%QN]&fHf,iot">>4.FgUW_S?bPQ_Hs<0?"`@I%8WV<3k.\1mfsR`H]Y\9ilUO_ll/8oEB`@DA_Mu*59c\E1ra&g8gR#=fO%.kWf@r@Q(7tHqkb.18T3FLjZWa>hepF[)XdlF?>eSfB%g\\GFDC2HmJ6c>nCNbV_[?$(:nQe@nlEDck?Tp(@]PhP.He6hkG1,5UpZpqa`fL,,Hi38(dmoJRn)Jc'fDO$ua7"0id6%@a^&G"q%UX-de45*\B=BRN[9Bc:Wa60T9HB+a-_3<RLh+f2,b>7po;4Y><!(6C`ooa30s7oMnW,8g"%OJTX"hX>hf+R/#T)SCu3itQ_.obh3%PNI4n:-2-@ji(CM268c[=If\DYLC-UDU>d9"3sm1&7'%_8T(=Pgq1hV-'CX,+mD\A&aK4I>p@m(f@QRbL0PqS\@t9'^(%\jV!Il3%h_iaul,2p,WL]kD_>SB0q.8a!q')QQEn@H1d'ZAia6BH?0+KdQ2r,T@^u!$j]l(EAkJL!G9fFII=Qc$m]BKOmdZ*#Wf\B1[-l,%W%dXI?s\c=>!ZNJMqS#Dfocqm))#T9D,DG6$P@Q3,94H7gT;sU;"e4Z_<rTSFQ%I0eU=PGVu2r1-/]=icDHJN[qG*aDd;sgG$ADHD&%dHPc%%I0d*3,O+rDS#frICn9N.?3(V2omtL=dX@kh4X]c:^o9j2dLj1Tm$j)eP4Y+>>DYsXujWMl)(Kj<R6LtWLIcVN/cUef@j^l%[;NRl^"(U"VAh>lHtCIVFG$kF[2SfhFOL[3&#&_YNGc<NR?8q@dgan^e**YJKFDdY:TKt&==;^B]'0FldP]n%2n9%#l5d[uI^,#q%DJHo)X8e@*qV<,3)kTl\0RJ?JlrVYA2WN[rf/KN6bjnI)^:IqBU)T[V<Ye3BPK-Qt$&Lg56Oes6,S2d\1itl>9r^+JY+hT,m;cWE%C9/j-`aD[h?+\lMV87j"N=r)l:G(0N2i(/W@\H;64+;-To8(ijlM$Buc.aIam^B4*Ms_q+k"_Ige^5WakF0$&gZ9K"l;d+oc!=6q%=1:Z1:'D9tou[3-]?0b]BE*1B>@q'6<1U2&)]DRA`(YR'S_,X`(Yqf5boQPm%Ct]*>Oq"P_^V*sQ/6s)[r5aM5)Y1p.oH0Ad$rg#%p[Z,JDD$.0cc.LH?;NSfp2Cjs@N-=Kc`IfS:5s@$.[k")G8N4SEHLV%KWhbI*KEraL=g2KrIpKkm=m4fo&[i:57ns*g:692B1"Q<%HZl!PN7lhu<'p[`%B0U$>R^j(%BU`<>R^jhFfX_D05Mug2jM\/a\s@-UL;8bi3N5#a6@]Tl_%*SA_2iSE$1.gf?$4\;g<O?3t9c?%Z*rm,LjERuMkBs-[4cu(mo2OlCap5='90hE]*L3p],FQBEY'^UhY5`)6[bdqV2Lmhr>!haSp40Cp$qkPWH>#IPE/5C,l3;MrA1Pp%%,h^mRo@7rH2lDc(KED*hsfX5M9Q>JV6-b=KQ3l.8cXo.l#"s5MIjXj-QJ.IX88h`,K!%ihW:"'D"tS/,=A@7r5:PLg&B-k47:*r%_Z@^kj5+!'g'r7CSW=GgTd;P+iGL,(jULT)l?6+_V#<^LVS(%(YiUVOYV2tKJ&jT.gpPu4MKdj8I`#IC;pDTEC%B9tpSZllC%>Rl%2qGiR_p+^>/qskn9fHBgD8#NqT/;"MrIp::[R6+!c4u<pL>;,W,6GoR8jDL6W1,FuFI_K"fNJs;bckS(kdnE(qV)641$Pbf$Aba2%Cj9f2a@:9-CY='l3jpbcBjt8Yq6B@E.P95JN@A,nOP$NSb3_i3)q23k:*&W%DS+rOCJ.sCZ:bk[im"*<j*P%GEc7a#VPX\E]K<Ae%duJ#WmR[rX"K1hB%)W+$-1:0l*>$]`ES]h9T.5TpbG[AJNHEu$TsE>mgRm?M<;Vo.Ro5=5IcJgTUY@JXk9F:,396sL[5!#5'n<eM%N"0.>_g>Ws8tEScgNm*N!e_MtCBf:7RXWoZG44S:c0t2BqV$Q\S!T0X]U2jS]Y3mqjiq/)<sn`Sc;X#rgYR:lr?YUZF_R$S%u#1,%lra6%1uUU3rEOh/k_GX135>B;s/?K.L%hfWgN^3bck!V@gk9nFkOZ)@Pf^<k]]_sdmpC'[hE50Ed+!aC^@@u&Q:ouIe&Jdb4."j=%CAd;TrPRLDVL-s]rC:-@QUgPo4Ad10>LUk6c!UGk_6heT\@cq\h2aiDSQS2\fC,4;g@,U;]mgs6%rXRIph4Ym+a^ltfuILd*H@]T%5.WOW1k0W1g#]\q5"bR`Q1om]b5+W#\(r;(n9+=m\$fU[#F/Tafm3Mm<VJ.\_YeK:k$#:l%F:ji;<)`/^G>Y5jkAN#,Hb;KFg:&Y%,cl8UWuIT^=X2=c:jHrc`/1%ZlW?%O8BmJM)\h(:2S="7K5QFKDq5ksL.4_&>E\hUWu@mhPh\C#N@q>-_],)jVfad'"a#OTbgJA3%[+Sbhe[TaM2m^:)?Aqd6f%+tF4*bjuY-]>eRZ+)2DY-n$HB#L"(U_8s]9.#7Cm\+-PuaG_3[9'K.]o+m[Ri?sM+=$J8B^-V/X]CA%D/;pOD8!],,tqW`p"u/mSgshOhsYOVooL$Wa/s%rhRL<]fBn7/%c'[XiT74FSr[*>S4)[i')R]J)lqY/E6<L&F0.ZEN>Yk/:XR*5%^e#'1*HY=eA&$YMYGM9#\/#<_E-s2f)B"WG4kLh?^4U#(ZTU/fq-^fe@E-Q<F2M8s+&g0oq"8dGbj'3Ii?::oO0::<P+D:]&:?.W%7^kl+mXA?P\_!>k*3G@)mllX9Y%;D;A/_GfWZ(,l"#ZoYs3$b"[b1+HCHRuI.b0l%[GomP>62LbGA-*fk?PF%!Y2ijGf]m[bkm`t%iJfmhM4o*rn\A@@7Moso/NSg_mb3uCC0G1(N",19l+Y4mF#bD`L>Jga'#o+$pC2cJ[0mMN%L$?PFocdR!UP1D8Q17DV]NX>lLYQl%J6dL%qr>enF9-RP!RrJ:Nnsrl[0Mefemin)#,K],@FjaP8*^6Cg&m-J)nud-j0N$/KKWA2FocdR!H^Nr=C$Fd;sNZLeG2_.:]IFA%^Qbr!NGOe`b,<h]+(!+A(KL6+0'+$q,MR;mjl;qpFou=H9DN08#$?RX^Qbr%IcUOg;SM;jOf*IR?`3cO-b5I;7hou@7H:0H7Di;]%Rr@thr+r;:dl8;Hj1To4cA%e_?9bj).@^jtFKaS8F\:]NldpTdhcOMY%Ck#n4Xr;@'-I0Z^VRk?H8a7ip\G>sjD!E8f3T?S,$,H7%lSko/CJ"W`em&)b(.JYp2W!cO^9h)1@dJI?Jr0-Ul8Q]l+9V**CL>G]$Is.aoc)PDfQO9?GJnUkPT=uaoGI?![@dBYEoIbhldr0#%2Fra#iEj:mYjb12:po*EfC%o6XF_MR?GAdCP+M=n]8pk;4msWOldn<-`qcNPY?uWCAZ#&YP;L#*4&X,4f5H2=WG_CX[kgDch!8$O%_^N1J00$:RjS"hZh<R#,mr^,SqR,5Gk9tVmHi;Y+Y#S!W7/-QRriJJn=?G\\m!J]b&P*]('^kX0iO/:Gl'1Vr]@&l8kPP%/>US/!%5/)mAolHl:A=l`23Vr1:C[$0_>&AUKlFhZ6Q9:a`0TCGXRWS>jr_2<rrEC;dH(.AF`eMD!okVl4LK+K;hs2(f]C%82HQV-Y72jGF%nP+R_goZ$hhoF?FM.tW,%K3[QUKti?mms#9?G@Veh05nAG772pYFfTqC:dPhid:XXc("tV)u3gTp07JB5.*uMop[YdfC<1^%XkNZ%\C[q_<kjdciu>$,[jE^(n+@X7).).aVnOq6]mfpRA::Lcdj\q)hWrd"hGr$6A)HV(?Kb@H.?/bZhgg,P\,*M)$eP>`^[^?M+i["?%H"uh!-b.dS$a)e)qMecD=M*1gPp4]e+HtXIf5;G2pH&,`IdITLU6-h;f.UB>rDpZsH`Zg1<oL`@bsi9!0LJU@l?KL>-Q?[WHi<S3%p*Xf_\n`8[F7?klmE2-1MfWVBZ)m]O#,m<dD)U+3=+`"elK:cfitE/C\e:[\U##FZqc_``5Y[QaI.l^Rc/6)CSmt^iWMMjIp3q;*%6u,SY$]!'KJLA$UNkKAQq6r@\.hCcChE@Hkf(QfsIL,hMk2mcA]&/F3Ia5&9^&+@sBAXbHhtll:HM6XHdd"sFiqhncFRSPU]9c=n%X;>sH&&+k/YKqD.o()Xj^E,NuI@d'[hg[Sk@.IWI<'K$mlTOU*c/lQ!g#r%khd>4=o&<O:k1e)>a8+ucV;o>RhqVM_2ZLJ_o(g2l%f7)N-qfR:5l0%:YF1Q=6k@a=0m`jeHMt?2]:9j<_]DM>hs*VHV0)P>@pmU\9olf2<p%$)f\_bKL4*/Nqe(6*/d`";qpA2]"B`%7n%#LQ<:fCQ>TcdgIsH26V%q;m[ViH]nIm]#NZI(=9=D=pUVh5r<_[^Ub<cHb>I_TV)AbM6=X011?jdd(gq5?2ogT)D-6g0F`9pIYA[%*%tR-HY<)h+Cl'>@(@)'iP),ZF,at3NlIoJ`T*k_?b_#7C]<MMg@elFp@Zbn+(+0E?mk1@gDi9KkN_O&1"NBgqFNi,F*G*#^0HKV%O2$dks7BB+ZN%)4%kR,4L2*1KnQ*%S&8QpfE3!*npbT7\q0)X[O"Sf7pos@;YB[_MjjK^-M]32pXIXjO^0P%DrcIJNSb+/"mH:UB%+0YFqhn<+8*Pse>:[PB6IHFG?o%d\(j8R(\f6?E'BN97PIN^#pIJDsLVj4C9Hh[#:Yi)EDHJ#TOQ/2:@q>M7W:=7e7&lp6)\mS+B%QM20^^Z$Ps*<SdT:\\Y,:tI?+SGU([kKU%Q@4j3b(4160J;p.KEI2PL.sY+2YkOlWc)V5%[[6F<^E6fgr:\6-o\m+T6ZmD,rii-s%Ye+p4Zf(hiWrM_=*4nG:ks,+&q!.hiX$>sPT43#\j!u&AC?^g$VVQ`L<WD<!p;N'`\4?94`qSWa7&Ua\j*Ri].K1Ip8bD=qI.-cM%r:s$IIJ@pg1&L;e5B8T!Y.;1^LdEAjp%W4nArI8&@GfL)I!#6LU@"?WHh?Y>%?!r_2_H>`=0T0$eC&`M]UGPes&,O:=h]=I3e-6P%-G5tSs6+mEEqehGhn,?gn'A]:,jF#;2aYQ-OOq%7/Do3r;&^3_D";#,mG;s&Y3-TskDsgN]IgnTIIUtLT<5S0Sjp(?04Rf"abN)&%mqhoCYSK`Eq]Aa0BJ2/qK[&96aDTh'<C19&q.p.UiL;^J!,j&8VEWoiD/WmMjiQDAB)%)[9&76;*b+I38HD'5b(u[ML]lS;flu=C%mU(k>YX%n(:Le<ArMRp/o34`B:TJ0rqnK[Ib?MMj1KpA'UZBIRKrqE+19c#qH<phn4tfKFPo"!2UWt!FaPEur6dL6=rG24#KJ<2I%rgP53=7#pOkiX"8bn-0MQjrh"gRhjADeuS@bM1cUO'\1,<Y2+ATac"'=]u=XS<f.\(preO?ZXCL*bR8:F/s)7Y>HN_cHU9n2afU^%qL0C`n6k\Ll0g"p#P`R'rA&TidGDRI/#S`[Pig!!!]d^_(UDAMh4[>'79D]5^+pr2[!;2]'p4Wolr`JZMW>c)&F&R@>6ioTQJ^(M%`5pU*QAB2$rkhjj]ds"0N*IZuX7'([7QNiF.]:UTTL:kWcY_@@,VhZ'%e_dOq[qP!cQlV$,8S\\X_\=0d!O0,V57tG'^3<e\jjkF%MRPcU]-47rlcrL^_'5MD_U&*p;1A9OH1kZ"'V<_7K,_QLGiVFi\cfS3,;V;th9Ja1(l6%YDkR/9Tm^EZ[e$bZ!pMEq8A+Qk)RA..%plB]KDr^H`]>oHO0BY%-F#A,eqpjJo6'UE1#=I4U=Ln]@qt5gDlq8cu32M'K/_sf_F7!=I1YdnK0BHt1W^'BCVVkVLA`;f!4FX`5%m2?o&`pFRWM#6YEp;-jEh0SbY$C\cV0@6;<74/Lg4.5=0r%^O\5AXC"oeq)gChpJcDERGV4:@1@TE5#p"5Ne>*[+':$cE>nJUi(W%,4=aV"T)>1?`r6i_12+tCsBeHcEFrA7J*1V9T#-^D]MaUntt!^!a_&gg"KCa'5L?o'm;S:r&n-ffhVL/BG"=UTPXEK>*!`F=nLkP%$bUk7%f`b/Au2"/Z?#oaX2irY5]4JfiN'EcYoV.dP)o:]>s=9X]m)=-DJ@j>aEI-`/+:d3_a,Z+fEShdo1m"((OBHD3b>#d.lL[I%^/#_Ni3;C"E2N=6De7B,jX?QM=e)F9p\[J`ZbDXK/GP4?"$Sn*C]kc5hgH_agH[[slX+OcpNhY]-dUT[H]:D^H%^?k%tb)EF%Da4%_/\/Mk4%VoU-4\KEHp=@Q#tK!it1)dG!k/\NjSicG<6['g[aU,#(it<GjHcls40CNT&G:IrL3?<nQH.UWGSi1Sm?B/3`2N\pLsRt%5I^Zal&'Y6s1P#RLO3J-iTWr'o>T&6kOD"1o>b)iS(Bl?(u,'*r;H+9q"ZKYm-47/_3@1_%XoIj#!\0pK$*%Vqqo\OTAP:+pO@p-%T*=iCs)Ud3I!b[0aH_O9_,Lo*K;fi>$W_EF4da=LcX7rPVgkfFMe:8Rm1m24?:B3C+%4-cG=iKk?Cr`hiaDcH4kWM:G3nC.AZbEL%,#`%&)WL53nY`^fmk&j$*5@J:*)*FaTnu2Rf2_XWd3F">k?_A6rkeR)p?UW%ed0Eagb_6'L=]U'A2F$GeI3i*LLfrKmOe<km@O0,%nk*fe7f"W]!^##"8L*OSn(_(9\C4gAfj=?$TIWqA[_!l0lct\"NRO/7^,iei3O\N/_6LiK41M5"Lo21Bps<#\iLet6[>)nt.q0qi%h<iT7e;+PuT1>iQ@PQB(mdZt.TDe+Z4*c+c[k,@JrVNsgn<K".](O4;o]RgiHC:)NO$>8s^%&5WI^8sJ]Nf4CN3kU4B09/,ZE';C%KjgUW9eu(n.KUI\<TJoe?JW9&EVJ!jf0=2$1CnumI<kSM)^P>2=atYW,?+1(dG@+=\U9fka&MO!iU0\\LH,A/UBefbiH#LF?m:&f%s)i;Fod]p`4!2T@g[lPA484<)DVV.>d3ca2?ZY3HM#_sReUmmG^ugCm/Esa*<>bW$'*%9*IcI<LkPIR)8Eg[LnERI\_q3+XS[htJ%+dh?FfFRZnr_U75h-<%O!Ij.<Y<Nh1D;X!gr`'OaNfV_\'C36>JF3k@Po&o?E/$o-GH^MN[ba5NTmu$("Ff2D?W2P'lh`2:[J:MT%:[\26r-RE#jdd@"pThCApS,j:Vq[j7G2LWo(j^]3SaQeIZLe(p45[5;Nr:?>TApaWrr*kon(7TO2.OcaT.TZ_bcX,/oAfW4ak8mc%s7n[%FlrPEg>2XGr9EI3?e]56a"NMRn&=FmUH^-H5;-WPc*#lNZ#TemR;X,grVCOs9Bk[<ZZ/rj<TYo#674&\T97#fRt"L$hsXj"%Ie-t=mqD`eOtGa2/Z8>\@dr@PbQ7tmDTj[P`t.@9If&jCrnM+TL!p\;UZ+\Z="\D4T<8.H>'[LPVA;HB[kdu'\95CYG!!GD,33'Z%%F8S_p29j#j5bo>Gj"d#pj'5]4ZnZo#PfGVrFcYDptuL\AU^sjS%H7Zk71!_<h<TC4L]@\HTX:#io2o6@`\tt7?nqHroBfe:O`s(%b]!b/^A@Ng/W+2!(AWEY7rP`$"1N?2INl*MahRg<-3IXYph]I70*/Sl,!W7_XU:E2:Fm%3c")XF?X::*#TI`Gf?7>=h(m/GpT#%a%]"+R7T]FP'NE+UIYPj_S"n(r28E[1+]kdXEj!g5N^e@ApX"WpXBEds(Is^@-&&[s>JGJ)dbZk@lqY(LT(B#MM!nD_>O8Xq#!<KW'%P2H\ggZ*FN2GD2WjIYe*TM1rmeinMf`YQDehW[0#Hkiso^cL]D]6*GfMsolg^0FNDBi]6N]A@/qCqh/lHY.iip/!@#jBnMpWF1HF%2emZ32BJ2FG95-QBhBU&5:E.(jj*Rj`T*;SpV5LRZSo[,m,H5/+U-9=iV"@c/dlsl+(T9R#F`:8T<O1h,OFpMRZRL,?5+LLhHu"e%]o,<&*I^\"<VI0ZX2>$5Hcj+<A2JsUmJ#eEC^4?""T7&]7cF)cOo<nP=D<.o[XS7>W]tm$90^6raKYL<k]FWFUJHbB[[)oWnUg[g%\2<*tDARX_`@j_J//KD'GUL53"TLN=mD$A[9BA\Yf#>C,he_kAf@sAmDd><*="c_jrqpH'E[=&d%q8AX=OPFZetg*W\'=@*.,SmJ%GjV\A8[e;(rUfcR[>QQ).hu/$Pc:-T\?gAXq_nB:d=]\.#>^u-T5NNBY3)@+g%b'po"A8*o-_0C_fE`k!/\r^"A!0fH#W!K=bA6u%&Whpdi&qFS4Btc*P&kBrV`CL\*T^MhpradIpEC:@GAZToMSD6RFLWb,a1#H:]]K>>Q(XQb*-DF!q/0S#n_YGW]W^E7kRX'0>8r[L%>H)3)nG&X3PuUT=Ob%KElch;&D.l]P`6@rtlT[$#gl>J!msfBr\7KMmlsAt6R0DF\mb/nc)PEk?mee9\M'XA[&:.&[nN;gW@9;gl%Z'1WjDP\=*6eflOiT@^*ZU@7YI-'LKXY2T0I.UKi9_mWd+&bom?63^,@Hkt5`LfYDLsHJ%+oWHF4`-6/cct;$5A:R"BDYKt&G`Ns%q@MoiGCG>a*12rt/AMO"QDNC1Vo<3BADNo8]`e5<oC6ULB$%>D%o0;6m/*UooJjPYnKkt5=r//Y]b[ZIlCBk8%UcVE[c%a-GWu'P%U"nR>@k%qu\tl*A&oRZH_lZ.04`1V90%k[3j.RQYZUO%"IuS2c-CplFLEOp4_Sj%)JIhD?T6KZ>lDkBAi*$QdgA.C,-gZ<6:ab.'%4CI%<;;$c87iP=[#&/#8rp0)5@ZaU49n@B\b0\N2U/)5W3<qSpDeEX5nGT*<fS0D\p!Gf'SNSjH1/Q&p=c<MOI&KoW7X>F[/i@)2%!sOYVPCEJ4l'WidA&A`P(?s9O_%;XfU3i@_%c+%3L<hHXK'"Mq>^'DXs1o#O%J2p:S.k6!dN6C)l0A.:Qu,OcVlT8BZS771e(+3_%?Q$o]l0A.BpiC9?VlT9=?Q%bul0A/i9]Z.oomPJI);"cMlMD^D`qOqnqE?O!2jX3eeb>J7R)JmdlMG6JBlrg!94r#X)TKkCI?l/n%+6LGR/(WU&nQR%q3(6,"Q%@VOY7,MMbXKftK/d$HEJ-&C-'%\Kosc8dn]onpnLH=WF-VDB`O"1qft6Hf1"\]lYH<nc%AI=t_4X^u%dbCrI5HLOps6rW#+HTki%O3f2'3nM>#Vq<JTO;M`BD3UK+H0Qqnk1QC6gb-LMh0,'A&dQSX/1u[:oJ8nK:ZF+`#)M_P)h>Ia1=5l%:El*".NlY9)[bGms1_bof3p!"j7q*ScS%>l3O>piO;GqRIt$D[q5<oGYQ+OU4o!ppZ^H'(rtiNOn@tihNK\B@a`I6>,BW[!Ar3+M%NL+:%J'KTm>.]-)Z2)_n`BV+d*h<2tlnnq54kb=,Irk>;/3j"<T"R>""LEqK_:.nOAW3U;Jf0$+M.Z4ns7cM*k0M8:5Obj(0T2lB%&tD?C/n^NBhL5=malBMVUl8nEQ3$o5B-N`g]_B21irT)<?NC&NCc;0(p>(L;p'VB+HmZt1?=p3b[YRY]0Vt1#R7X]a=%8T$=J!NE%(*QfunP`"Z<!5cd<Y6TL'/Ot<n!1R9:C;Ue]t?mK&Wl*'!qKZ[A,q.@'G1DpShXqJD\]r28apLm025)e.d9r1QHg7Cg5?Sr"3%sT%aOAhTK$VI/<np?jZ62\;UcCONoh#>`O]O4GPK*gJWhStoHk0%cdS`5n<q*N>W0%'hU9ma("%ZTb'g\iZa(O?'["@s@&WD?%!_?W9%KZ$#Pn_-mi9CiS](1m!UFESHc7BajIEHs35&jU#cfS]3mU6jiM&X$*M<7*5&N0"FO-qt/edO\2P.6qVc)&fJFX+DHc<Mf>u1,_7K%'P:V?Zq?\sbot&#Vn&-:iarc&X""DW]8;.f0XsG&Ng'N$<.[kKE<:'D#m&2E`!O6-!PKP+YJn2^!ZV>=-#o?QJH1HjB]7QNo?&nb%.5ApjYR(nh^PEN@4`!G_p<o<^QhTJjVQEHuD,i2FQ`#N.,_6CN_M%k91KZ=rJ5Rmdi^qqKF2Q=k'\7eE7>S7&@"bIaK&pR#DjEX[%Y^1u<%mpn,A-G9!/EUTF3$C,o(P.lFJsAUD374OXpbhn?P%6]X@s\Kq#2>_>V1-SZi[WO^=Y/d?!AS1Hc[^f`+[n]0=9=L-_4HJj%^H-`QrgC_SA"bA-=tq/EJteDU&6[d3i<GB#04Z11MR0=WLJ/o/^_iY>MN!(k+O3TQPrtfN"Z_d^8@q95Bot0gA.^F2BbTS9P.<$B%R-6JdK^^2t+\_WE&^*Nj4]:9?,.#4tN&9j3EQN#uV8DE22c5gfpJ!*\P/Gq.b,FYQ3MI-/E="9@Uo_]=!X*=[Alo40Eg2"Y8Q#WN%7Q=M)#)QQK7^rk_.4692]WfRmM.8-!Of>'!n^NHo&sj=X]Zc4dJ76U#a@#O#H6?7V=Q10;LCj6J-5@)4AJUF^nn_oI:Na0!<Dk6^%":Q)X<WqLLOPlb:ZHWhhQl^m`);(E8GRZYlAZCehg-<LQVo]_Z020?@1.>&r^eL$0GR]Fl!nED]!nIo+?k&!WW1]PK;3oVT(gI,/%i]O4HP)4e,jY4:HI:Y+I?%O@;E?c,?!cjqR!lSZ4'*POj=?tk(9FA!mUkVgt[2Gs2/;n$Y,]8:&Pi`)U-8MF1<Y6JTF]B=.0^*HO%*$@J+.TUOhbbPhN1m3Fj\dD;]%[NO$cr5Y?;N3`1mO0SJH?f]DWZ"TV\<tpQ\;RACkK_8W@M>(E$aDZ`JDgkK_*TcI^sfgA!n!G<%RdRtEaO3`q:mQ^O=7htnn5bhX*s5Udb=F`AKG^J\-:"Xh'K4-2j2?ep^b1,O8rUV,5a#%;$^)?$4/[d_+]'ol_W(-VDusCGM!0AE%PDH&G`(D*E19HpA&lVb]V:al('I[A=DlN4])HA$b!XKW\\a5N4OUOKG$'L]!=d`pp\L8n*Jjck"U9Y&-&&]`,-do9(S/B1(Ms6JM%09B?DN\8<^!f@>q'*.N<---1?b\3s1PVF=@.uB&'9Rt)m3K%%Y8f>UI=H.<b&b8hafE`n*R(9OY[!*!(7Ou79@!P-e.9KqscMNc+%-s1HP2"_1d?\:5$UqAiV!t<,Z(]kRi!J$tcU8\B@eeBt[F5O<W#ZOaM;B2Zfnhs?Y#CsJs`1k4&>4,O)r'3:#bCgr>&D5m/TFk)_%R?IRM8W,"gCYK]a(&XHpHfiI$oKSKYL<;$D2:=H3)@"u"(n;U3atdR"7,NP1PU&p*!qRpm,1oL!(uVem&cJPP'-LF\nE>.VX!l>C%+Pqs%'dt+A$Okje.(oc&Z%12!<4MuZ;-P1HjK6f@&<h+VO<Q-19]2m"-_U_X`!RB6,WX2E8AXW_&6.gI.h*!k$&Cq#Ns,(aekW6Z%B?bjRO(T1Nm8_90T/f6"df'$h!AIY/CM#[sBPs*'i/b,HEr]popg]7P\4u1-34rH$dYcj&$eq6B]BJ*n4,je.k7e&9a+W%(@3ETu%2KgX+Jb`UiIM4iPN$(u(16$hVaiR]-F/BP"Ohlc+d]?h6pYpdq's^]#,%8KtJ,lA4+cmm:AsCnG(nku;AJ2tX\c;q4/7YB=T[GDa%f&I%X,,B(+j@-o26oeIur[IIj:tjl!=j#W3$Q(!7=4#+k%D[XO[W''CAVL7'Q@d+>rQ\6&(T7t@e3acn@">'2)`\b02eS]Ihoro-%5\J,sSKfj:75+amJV2&TJ[^lf3X@`PBpnhl&45du^6bR:8g(EME!@3[eY=*,3LP'98bN]L(6&lsKn4J%P$E_SOGu3/_4<p#1Jn'S%%Wme3E?M+Z()9uT1cRfOdJP?997isN?$$-`'r<Z&!5W%IC6J_-!VB/#aD';A1=NOuV%@<%mHGA$_H!T?#CnO3(<cbdAX)b$)7l#&%5j[XOB[[T0"5i9q(^pQu.srfm/-'smaCt@Z,%Yi%6Ae9(A0SH[5mJd'(,Ni<>%1t#Qo*(@]EQQ`V3s_rR*egtA?_U5il5\3hC:c_%A-ulW0jC,8mAH6]IZH>h4F@SM'Pn3)84m*SJt5Ao6tf;bBUB5S!/+f9-t>MY1IP\KBZ3r(=9HKDU,I.W#U!]K.>g(B3oq\!6r=8:%-&qOq-&CbIetT*257*lj'LcE6d<dl7W60Q=$R&c>6j43@M9ZgWIo$q9gQ3_!<m%Jd9DVnRZ:R\5J.Q:*8V!!S@kTE+ZjB0)YWsr,%!,#:SM@?.8dGbK+d/[@.8rFkq8-IsMM)c.4AXnFZ&H?@,,V&;%&uS@K1+U]W9$0C1)*hq90uh<ojp?R!aO80u5Xtf^hMid9UEEkS%3>aeUY`1E&^^Ri;IW/pR\g^abP8@0[-4<3R:;9?-.+/YB70Nl4MpND$.$<!&9++.,*,B'2DM&]n#5C3XEr?],N_HGW_Os_3q\oAg%&pol+U`hj=s.8tu@IP`ZNjcY\nl7+K,eJtppH1V[7'OB[J85li=!5D<U^B*8_^n;Z(^Q"/`R,DU9p,Z"%BqT4Nj9X1J]ooAXI-DI%WQ.H/=ZSu@.[?l(nblQ<NY%Aj9M?3@c-ZftN:Glb'T"J=;U<_r.J#=D*/uY)?G#62KLCsdB]<\FRZOEaMC+%7^i<W`%%IUT0k8(@%b;d`KQEF[NbK;;BkmEe.0oF4a8RVEpKp!5p*C6ZY18WnO]B<m]Lu]eH/l@1V#dl3hQ5G1/"-tRe3\</6dJtDN`j<%-Ga<M,`R5f>%8^Iq7=P?J8Z#kg`-kF403;k,RnGs)-p;-K^`5O9k+nd+VrrKl;;(5G\m=OJ6+S2B[[0]`>a>d7qTu(V<m:--;Z!a#_!q<#a>FqI<%1pS=*!e.:-G#(4b43hogoFT?pI6?ik3COab.()/$6/kTOTV>P\pk3&CpG*:=g7(e+K5>clD_f9[C6n-$dIbS&mn=pYHp$La+q2t@%V4G^B6Y0ddMW]cqi8uSD<(U>/?P6cn`NQBs8IuNti^u7^pEVmm*(`ARFX6q+]Hc[=A0"6#C[4LeV0P;RUVQbh*`:LLFL\^'TLZM9%,Q5W,2puW:IoCOCHBB9,S4F025,8F?$]+j^k)":*nb_6M)sos9%*[>YMtn'^Br4ir4[l,)M3Pmp@+.8=@brk=E]ue"<>t6m,-2?T%:-N3W`+[8'hM4KiB(A:cOQn:b+_`(-jfFsW8<P9MiImCE0SjO60s7?@^2_R>f8CWP`&r!+YJ@'$QqoHUOXA5U9V[2,KPkU2'6$OA%BJQ0h'Cu^nS4NCG'(fn&K6g(Ip**GZr)BXrXTh4hnP5m33'm"AcA>LCE?a5kf"^\fn4k7G^lJt7I5lMVS!9;\VkPS:6C$E.MBH\d%fIKYSF*3;s3,faT)i-tJSB(Rab&1_B;^=hHK/CSaB]?pZ#UmjBQ:%$rAX;CD,,?E\_YR&!;%Z;$SI8"b;)H2%O9eF6n?!(T<*+'u%d(,6+M)dTElp;m=!E[=RO@gKr(D9#a4l]g=PVcO;]mUSP<EZ96A%""Ge\)LX<JPou!RQJk!9ZW@W?A%.&en.hp[nT\ShMN"I]nM-%b5f'\0,Y<+!(i;(QiWq=YmR_f(_JJnD(-g/.5:rF?fnk=%me[ON9.`$im_Ok#!E$TX:UQ<kJ/<ul*W";]ECtZUVsoH;;f+/a<VN(%VgK7]-[Jo<n6-/i82L2YVBjWD,B-UKTHIX)@"nsEF0HXg=eX?_b)2Qrq[kM<I4n>GNeXi2CiN%7dhjMC0uk=O@*+KEFHD`E&f;q3%=;VZB.pAI=;^u<u^eu*(ClUc*E=tle:F.psN]@gK;i7"&+q3e5C$*m:0Gf*IFe>JuM[WQ36A2X;/ePnn0F([a@0NeqbS)+,PB."`%]NYQ%U^t3fHt+&@Ih*Y6U;bG-6W(Yj9I^!/3Hbf>i:8YH2_kEd<YNLpE^Wk:-AA$<-N/e/cn^Ci"b<#[0u%9cP)[CgEcSamq1BcI%ZBA@KONMoHfl0,X,.f]#18<-QAAV9hXcdE!P!N0u"$D9!&1C<#MR7NaWl:D_lhl+jGrt%q!TcjuOSFqD!3Mi;58#.'].#ZO6(k5W%LcWM.;3e/CFGae(Zj?&W*0!ipW2FZD^8+Z'3GAtd_&=!<O2TCX<>b0p@^+9+\agtd'[oJ_plQC):.[uY58#)YU&m^W21r/VXkdtl%n;9.*19a>)`p'T.=>$\`#jdJ.&/LWL)434J;;PnWM9F?BYqaRcfdJua9W;MGgRB"DA/>agh+.Yo7O$+.]"fk=.2Wj[18WF%dWpuM%S'^N78-SP'KnFY(;Sg<AEFW3#dSIY?OZ:`Nc%;*&RX?H=6aeU(KWPW0YEJ_eX5+A58aO,]`35C?==ZZq6&RKl=&\\@56QS]'P\Jd%0WTU0e!?kgeVl><BC4St?6iF'L]lm0&l3M<PB`4Mm2R`!_"j(?go?T\&_gikpE;]D3fsCkA!8?KYXgIUU`_AM!pmra2h;WFJ=J'O%=MJ!`=-L<gMUn+_i'd^KP$Fc)+u*J4LkoT6&KiA]U^g9`8(0M]n5.(fUNIamP%V&j+rs(^OWJ-582l_',OOZY)sQMGgdjABk==7F%.6#]65e3!e;pLAEfQ>uC_n#=_h;0PEdd<]W1KFfSE[3fdH]fH4>tGR5^*GrnRhfC=''?u_WdIC.<u.b\5`4gVWm\0o'.91_1Eu-J%9&3EJ4dP2%ef,a/W%8$X&qeA1(+X#1_ni4oPr"9UFV52,RIj9XB+d_?^+2j'K<.rAj`"6tVBdoJVCH`P%i7p0YGFCZF21-L`-i+P%Qg<QRHijLDl6DI"+bRLcX&.]hZA`H'(AAU(]h/*mQM3D:8)c;n-?EB^ju'4l]lNP:LNn[E@,@IH+R;e6_4@pkVP*iY9[)X!O9n0S%A>M<0c<P)dSTrD#_N:)"R.dp/-4/rWh=X*'rG`d6/5s8-mV!*ih$+h;T;:PTFsf$?P/M*O9OQN>UR_D%,S.`JUkrofd<^u\,NF%j%Ga%o%+jum?=j653Bq`12J;Boc]u^>./Oeg88H>Q&R9OUXb=1Sg@TG]*f7:P+'L>l*WI4i4`)2X#hBXe`agLH5KnOqS6cbnl&FWHh%.3tak8i5`]Q$GF<0PcE-@,b%BeljP7`bN_#1GIoGn$-gJ-J0W+&a,,^,Pg_P8`%i'#N%#Ze/&JMFQ,pE(SiA$!c7dbj\:G\?Tgdp%+JT?6"5@A$DEh`R[]KFd/B#fd^8@;;;ccFN<GTgH&kfoJj\KAmb(s/-4F2frD@_r:nQcS+LBe48#f;2MHEW_'228/D5[P,2@H+C_%f]/^E%??]oI4.+RkWf6#QKmaZ;Zf?H&s>)g-(#o/_RPed3SNYr[0U5N`S_#q[$K]MbR[U4JRrGWfqMI?(=5L4RQs]bqP<u74bZHK%*FpYIT;t<-Yf)Dma[&b)O<@$CQm%!\r01auA&kiR;ANE#aY)XcJ1&uY>NN]fVBLsZ'ML>&%)`f40R&i1;IU;Z=_sO+G31f3V[;JV%FpV,f?9tS%dh6HE%G.OI)(OQ"Q@((t>%nt=ku4>KOIubX=!CT)7]a*..o/;5UX72Z6o[.V':)u;pkZk\AL4K=7lE2WMj"5S,75PY%oS(=4IST6%msP1p(8Y^R-7\Gn<)sYXcc+JU9GtM[(51/\P=-jYZEQJYQ?l/nS5*/ECSbQ(rDP0N:'4oW/C&i&@"arb<ot$SBaE6&%,K+Si,r3^;)(?gT&[=t_ENU:]0Rte>b`HfUieeqV]a:$(-+_eL+Yd'2;lKso>F,pOA.#JW:X!k!H!I.][`0.!:`9>2&1+<1?lgC@%\W$X$6hJO%)/Aj@1/lCL/^NjuiE!4.G-b\j(oA@1=E:d1OZP6)LYMpCSgRX16rGe^--Mh=B#E4L`eS/<:8L7\,Rj-<a<rXF&/^fI%lah.24'TeGN.PIY:r_#e.EI"sPef&!pW!\BVI0peK7VUm)6-h9X\=bg?TcdHb(dt/Q<Oi1Jo`JlZ`BD_;ljI51E$YAk^s%X4pjcP%;^k3e,-ln"%+(^s9Wm!'Kih?PTA%gL^II_[%5sL\L?3)o,Z;TWNBRUM!KJtZ.PANVKq!tbdkLo`.3*k78-DTK-t8O<-&V/0E/GZG%ar11':8i-=JrNE2C'o\eN=oa:3H@S]ZqJLm=H%\;S$(,<cnMhe1I@mbp'98>Pd5Cp,BkV0Giuk[bXj[ha@r%+:n_;T3l+Y6ltVp*%)TF[/4:pLq!2C6r)iH-P"*%n2[0r",YthkcC<J?sQ'IdlNWu`40(<?RCe'=R'Y67JmEc/N<66#%0M3^eZ(#5hY+`dIc?2L1[0e.7%)ep$?hAJ,;<]T=LgiG^h(%t@&C,F/dP@/H=KT0JS^d3tbb]VN0PtK!:.NK1i@;l_2$;Y8+'FaF(m`a,>jk20X1#,BgOaTiNg4rSQ%;KUjT$2nqq(g<&\OFgiTR5Ip95VEKB*,,)6L#?\H4rEJ0loP;2CmVAX4isF7H$8So`S!I?^WnI6YMVK(qK)6*f>RbSW`j4;d"#Ar%$/,I@90eUe0UXIH=SG_1B.Jp&Qdiq+p=WFqj8dlil+:%G,.PF<L:G#eM+(BDs5OBu^t;"FWMCM6/VjN,RYF[:+$m+X2$Y0LBnm^U%eG>;kSs,a$T]&4F?j#qGk]u8lfoo8t,$(%pr'VFAZaPc(ko@^?>*pQY%li\>-Nl^g"M75W"Q,+lmi(MiW:DF9d4)u,+P?=T;otkk%!J?!bVtNlG4Fm!qc9hH#M,=mi#elXHX@,4*V6`!/Co)r4Gm9ZE$rtl>]KX/;K"3Q&G,4O;JgB+r8`;Q1A6I4VV1ul*3-^=Oa,&Q7%hMSOo-J)UGGsn/KAaOM:EDcs%7n`J6&<`po8ZBAR!Or4h_/+[K.)L^;L6U?JS6uu?&u:%=UX*A#.o(AU0I*s#W:Lp%?Hc7q#`+t+%l,:IH=UA]Z0FC',7sc+H0-X:_DCGai:2/n,LFf6$2m.fd.dAodA_$ojN)3rIIg1g4&0XU89[%W+n;/9(DNotXMM`CU*sIS5(7cT#%6&Q9uCkRnrLY/?$DslKs;TC1bcAe!D!4Zb[gTP*jUHl?\e<Joj=Dof+9:8"Z5V2/@\<F8Smt`#@d1gmPe4\(oLTdSr*nV)s:"ng\%(JuB[jd,7,`Joh,<rQ-YO]_H\Muss)-R/On/q)I[.qhC$Ve?BGW*Kh"6:88J)uP6'_mg5bbVT_O;.Un-3bF;,(=X=eP2"oOA<Vi(%T>==_9u+nSH7_]+]h+esnsZ?>'EnP6+iRD*TffKfnMSL$@q84&417.>"Z%.ohpjFQ=JB>,NEr7,./ha[K8T9d4KHCuEX[+ANE(#_%S4$[T>cJoWH-pu_>SV$+Sl\nDV_Ff=.#om4])q@h=GSg-g,[5Q#q),=887'Dc@-:3V$Ub1+ZsiE*j+m%g:;p.#nPhKlu5>"eVa5T%7Qj0/^+k.V<LGO!e?Z`Pk>*qYNCme@I@30ZNM+=0&b#gn"]<]N&A+6R=@,mT4WiSnU;AhPBS76e$q$^'NUX=%W%U/T'PpTW);%-,%/[/5/&iO+:Bt-I]?Y\c>ZdKDV\UH3:Xdp4Nf\9*4$8<rq;qk6U/YisB+G+L&\\Kt\)XV8VCfuINJL>K&,(%DoVWQRK1+P]$2&A)\%Wh7G8,m*]Wr._CTgm-u03R;bJ__=9u*PGHPZ>l&[Y$X*1.9aQ0S"X_p9eNugJNAUH:cFY+@l#WH8eh53[^@M^76^cDXWerd7$*Lq%oNQ2te`UJpV;Oa=#!.ZR5X$'V)\S6._$?7(JW(T0Tg+;]kYf_5;sZ9LbZhb-e,r=O[*3BdVkDmfKdCP%-^2PYZEOJ/n=<d9c0\+u%nKGYcp:'B?^Vh81<D%/'#:6)t!+99`IVdCT*\3pLC?Q:H'<be6%oG<0.[,;Gbbn,i^"UOor[CeE'UAn:<g1P6E&gRCM#;L3of$>i%77ea0!a'e(Ate3,fUA,4"KY6V,m!Ol*i<DafJq9_;N*Pff\N3B,de^uhC_r`B6)R[;eN]F_e_&EF[G.cMTLAaQAPD7+0f`7ZA#fL%3Am,tclD"NA$PQ\porY[$6\,aQc7o^+;':[fYYP%)M[Nj7Kn2L5Qt3Dd;m@O^^OLWGe%gKG,^66Xrua/97[g?DF><CmsnXaCem`]%??>!8M#rPuL&&Gfi[uZ79J3%lJCoQ)(hGjDUmUD82]gG?R=-?<$G/'p[Nht'UZE:s%8$,oOL9[a^ucg%dWoD+lA0OO1k>ao)*MN4%T\MRAb2pEZ,!)F<)/!'<K\7tRf"#q./;2bNBp8H^&Z-9VAbTUF<)Fun`<]F@UoCdQZdO1[498*)auIV(B1QHS$UIuNp+IlD&E>g+%f:Q[1+d,j\6:X!a-)r;>,?DJ_LhX@RJDlS-0aLEcO=d<jS-0ruOpD)F,q:5ai;CYq*l8j>NfAB8Q#j.5n]t0(6bEZl@AWp/C2)I<%F_m#EWe)A!JOuO3h8HG\=+Gtn:gYfK_#k@rR:m:b'nVi3C-=2Nqb'HXjG>1(JOjFVh$\KXZ]g@D9I0j6\B\D?P[Q728P;YNbR&;p%/,:4oGmcW1drZ*L5T,si5ks4"?`oa=(`pU*4qL`\1/iea7)R*l`_8G`ZdU1%EJ+&uX`'*(meL@g/7K*eFFsh6FE<`L%YSET;(RJ1%(m^`R5SoZrbT23q/RrN;\'OgU)ihT'0C-]"!7!`#R+`sOF$^>V;'d=GkRO21&..I\qBqYD'q[YK@4Ag8)#;I2BK0U&:n(tZ+l&+r%;`Cb,Wj58m6kaf9`Wn?jHNH!.\suTJ9G5R\^:'fjAfL0h6\Z`Tjs5VR0n[4S_Df()W0e%F0o/.>#kqrJFOa<W+X)i6kr4/-13nb5%%j=Aq8HDMCA/TU'U*)<+To%Ft7(I"EL>dS*Z8-][JgLg"c\=q^D54D$YrYO:hQ,uO84n.u`Z7/=SqF:'nfsu?XSVC^DD1si5_NQ;%Ng_p#ocP(GeYQ`EH5r_sT(%%0;_Wi=<oFZ%#K)gON!k;#>r,,$R<THqs4j)]LGQ):;37$Ch\APdaKC8;&-@>;QWOE.$s3>;?j9Pa%E1UaO?%QXecoeRj"$$8C?;k#AL'JHW.og?lBa&_G(i)#b#shakD<*r%ob8H>Q"["2;Y8VZcXG_ANFqaW/B#e;hGRMr.iKs>Cd?$O%5$#f\7tVj\U2]@Gqga]^q1+K\=XE7O[K.C5"7^MY/]NMcD*S=R?\m@qY_\%<%1J>]GL'L+-KC76n"q7['+5uOE8.$*5-3G9''08a%'$!fhLOU!'*$V.J7kG\g`6LZd3#_*+erCm?D)a4:d6rF:.LjFEP?>P3El3nEAKDFM7r-M!$!S?:iX*M9J!>m?`J@!XaQT%T3t6J[%ALXs[l:$A:WK@/n*FqSR51]*8^W+>D:_"91T6jL(EfnTVOrDpHI8XDGXQ.,#7P$'S==46H@fZm*V]+OYQ]*ffMIFt#.J#@TS)?#i%Yrn;8X&re@?#YHYM$^KCYT6>ioCs*DXG!ta#DOsc8=^?(bY``2(04GPQFM(T&VfBQA7&0[)fpl^8"IVMSb86Sm1Or#.@GredGY2D%85U[C]C1k*_T#kLk"D!1iLRp)=PSdq4;%BjM/cTgn[&[Xmh1T*]0Y>HinP8l_\dQj3JIPGQsJ!@6-f$%=;&eU*%.d"3A7/Gast8J%Cu(tAGC^^rfj_9V7,0cJ2OfWaA)U$,P+$M.juJ9=/7sq+4X[7N4<kI^lmO&l(\Bf+jph.2:$#qu*5n1&\1oD!@n2e;@5t/!)2TsY%P$1G__BqI.oiU)sggYLrLQds3oM`&7Qd71=KF&MfA:I\tK1HuqeO5'(71F2akMCNYM)s)m`0B%]KOe,b@>QL$(i<Gaj`Do4P%m!T%X-/QH)3X).%qI"*G?3#2;oV_+)p)MSIBMWu0YJ`%Tp,f1*hT_2U()]!em,.?iahi'_SV*Nd5oTb<pY0Y#R61Bg`;@H-ONZ#*0MbK%=f!=;.5o!=?6omsdO#c69eB*284\G7_DX0)4t=ba-Cf]4X-m\0b_87%fqMB-8k,P#,"+,MEhOEC94!L`'r?1"74;WA@CS++:(qrt%XIR]M_5N*NI7]N*7\Xob27AR@+BRYK@4BFAAO0'M$JAJ:k3$+gDJq#QS%NXYBN,=m3'o6o1C=GVI&'Yd/euXhTI.kui'/g$1&^)!%j@6%g&Bh<bdlAH[mO9OBgdmgB9gVR8[3J8+L$q#QJ/a^dUo[L8L&!p-dTS2Ge&(+J'_s1=gJY>4GY6O@f&A*7,D#=rf*F*c"V4TG%n9^nOYiNmIIVP?nd:+XW+`W@(*b7eA6k#F!Aq]E%NCquqP1=*#dRaZ&.ATi[<(_d'^W0>UaMilYc`"uYRB!2j4?gYRoX,$UQXW!i%(n2VG-B/=nLQ-\5F@%\-5iRirpuoAP6j!"GX@CcRV'rLm&u[#ZD!2:d_b+*,'R<fu5SILBeZ4$(rQUH!YT=nnK=_k1X_"(ZX2;GR%<fH$bR8'h$pE"H84$7Ij<6e1rn<[@SZF%Is6Z\B0*8-n/jFeI5js:Xm,u;%VKgX.qUUa3[FhA8eM**)>WMJ1IcXNbBC&hHm'#5\7%a+C94kKC&cTcfJ+Su&BPP_I/\*+G.'M?BnM@):i\g9L^/`3DE;=7!!Gd6FU45#k4@#p:8#.Of=<dE+n8[Fkpbes2A`+cQ5aS/s/;%K_%%]dKL1;A,/!5n[Mtub-mEc<>k+HMsfV,+t$ME5o8*5ZoP(bYZp*Xa,!`p#u#bEa:L-GTtDo'2MskRY,mFu:K9QEN5^A;-n'1M%eCWo+W7359-:fcH-S7Te"fpApi$G>)OXRV^G9Q#I7SsqQfGk$m2$+V\!!;-.3m+t24H/SgjjWWlHSQl^H<5,h"s^me%PJlB_5e@a%\k=/,q&Nm47^KshbI@`W><D!A,&X,E=<d3rQm5-QP:'.%5r-1)5i/iOPg3+p,6;`&;=M9K19R'Gauc8.Ni-o-du@R<b1e7UQ7s(P%V?"W-i(ASc$D/1`)&:^++pWI[M0`o\`c%PtdI"60[M(pERStn&BA*m8YaAYH&0bFg/7"cJ85Aj.=Mi!:#+?;X#u5Z>FK3'T9u?"C%\Z?nS52B.kplj;'_#md>#u\UX0hm=$Cmud<9B.0E<.X:ck6*LGL[urBFu5tcMXA,fZYQ;8Qk3`4,cG1H=_0K=<CBO5e9U'U=1DYH%144<S:KU8p$VaVU@8/b@OQe^o(6V'5b4%r`be>GZYGr6"mp]T5Jo`StpO(Hu8'gN/W="7?&DK,In$2Om`FDp[(\^f]j,)*u7!,KW%7@gG=3#@UNR5&\0X76Ud7$e!UQ'0Z(SQ^es6)!C5(lYlEJ9,Zf-:qY$$TakRa_KU"B-9b#MeFk">Nc?c+uXahXNN?W'T<R9;>r5F%e&`'b1fC:Y.<8:=FA<UdQXfoj9*!E'GS;CiKojAZO(ml-P"d,_)i"V&M^(gG5bU88PY<TE]E)Gg(6l4n8J"mYhCPblQ?c-MMiS]+%<$3_'(%+d*_4Xj0+WP;,:eUXm[tKI5N<!rk8R[6CC!NUuEL7fj/.s.5XJN8"LlpW'U'%#n>ShZm4P\T36jH;"$nA*s3$\fDGWV_E%e^^hNnOjaX9aQUuW2'V#)]6J,F'us6O6Dh5,Z3[A=@SodQd@m\MYOFW+U,]7qRHjT_\0dB2Z?4O8qTrs5)\ZagmKCJ96>an=W>Q3%S<%nr&B"0B]K!`X'S*"/Z'P1]>5UDpZ-E3ol!\QEX%+p`G]VI@ogp[Co8&Fe'?doFZ5PdB8Q^uE8t9tsPH3Y%U9h%d>bX9D9LFUi%ECkni!Z7Dj6!1-cn,?N(JQC5SS<)VXk(Q>bdOVh,mSNGG:FnN9llL%7Bmj`A.^n&%C7,gTE"+kCk@!@EVK?!p1#<P;br5^/neD[!%.bLoIq+;0dH6p!@"Z,Al0PaAg%NNDc[tdD"65>NF'KUWra1:KZ*'A_R&GM'0R?J1Ofocn5iZt\&2cpA13^KiD:[p_`AXSeZ:#ku(%1(FSHA(c>lFKhu-KGCh5iPi,GUTdU9_hX0?HT#^`-UCd6[8Ct.:/@ZD18K;]fqTG\o+ZbXpcule!_\fca/8PC'aN^l\?SUijT(6a%,=`j6k:30A_l^#9TMg]18k1D2O!rPimtd#(9%hedqCob?1("aNU5lt;]&'4nPFQ=r-P]4B';c+o6;8.;e8XU%P2purP[6(&.M+fB%;h`(98OS5r"Z'E&I1c*X.VQn$gmNhc<SAiNSFW:Ngl.FHXg4cda7Ya!+VS.+%(NAP_B_3DZL*U\':u[48DPIY):3;b=DQL:Dj#o6%iEf3Zm$+Gn!6Hgi*6]^\'o\<BpcFPTk)S[W83'I@jah-;`i*,kGNY6M"jX#lJ2KRiCW]IKCq.e/b'8\EDBWQYifTMG"ElPk=_Uhu%(\3#hoJk@t)k+]5_NCkaG5s^=pQDh;j3"&`P/-j<LD24R:r5cmk^L.lXa[OPm$JIt_A/=Ym8F%Eg8>M!:5$lJ+G:9Xo^,TL<%46G%87%2`]dE,FFC^mRaX,JAGgm\UIgLGL3H(%[6,@X!cu%B,$EO+WBCS?G.p\;".0X_9;[Okr;`%B]M2EjRe2ft>rddX5psqTng%;,*%g<s,JAKbZSd([Pj1f#9JcS(RG.0Qk1GJ-rI$lul,]i-a]<>]9nqN(G.)"AG+]TU>.:*D+OE]('";VQcfocKpDq/uTL[Wkm[2,>CT%7(0Vf.6Jh.+jikM?$$3Z,]5Z4?QS3qV\DgnVf8$5'O!880,#jtXDUf`+7H%J4\aZl;e3Gtg5IfKNp,gm(WkcOn:mB6R:Z=JTMNsV%`j%o_:'`2DY`3*7KVrU\(`FUkq?lB(TSG9!@eYMo1,CmTKZkVVVP+qr,oU4R+C7Sb@18;Ip9t\qmNj0GnB<rViYV=4\3+a,nK9aD%*@1op_7e4G0R/6i*QG*Kd\-sB*l+:^jB4L!S[Wr?8O@74[9*GGg7Bfr<Uq=S/;]Q'ftt8k^O9A&_d#?`JlrK-O"FrAC'Lg^7a9H%%"k7Q</eC9-/th+.:-"8?0FLuU`M(pe1N"G%*TXZP4ls-%NJ*iW79G%l0TdE"<Z8h2fC):#N2Y.C7l[uYB\$Y9;mjTCLU[g4"j:2q%8])sYUq"YRD`pnmY]#7bBD+Ipqe"!-O>f%M7op6pg`GTl`5CAf0VoDgnDT1@QAQRC)J&%k_Bd?0+j?WQ&?R(\)<sAoAXQJKZEJ:`%YhK!0.8EMYfUtP9(&3R23tmrV"u>&%F^N%]*:/#7-O#WXX7mTb(loG&+GE/kAOI);ChuVGkobjI$6N#^o!7aN#EkEsBWDpIpQ`6F%hF)JFZBX:V'pkcg$:S2<Dald-Bi4&H*1dLo(Bf"LB_Ob`b=oQks%FcIDLS+?D*@j&<6T\R,n"^V:7[)P7AV4q0.B&\>"RtX=g7+=%HV*I1U;;"?R-6O>Z!8EA.$0Dh>#ZB4H")1YTDR"icM\k2dqKhULa;Oh+AXRZGU\/uknT@pPW(BKIr4a(GI?-gq1E>2)9M3sljqs9%`VtY;ojF\T9qs`T]9=`AK25M<*m4nDYUm9:*tRnp*t@6]J02mFJ,K%gp;bM%Aq0a&D>)#Rc_l7T*dmh)A':a!4@\_0HbB7JO5D%O%rpdVahK1hr.7usDrl;p(rl;omrWaU3KJkjjK*VAoTmW@0_0HdHikdYq9V1@GbqNNUKaijlr/\msHV+eEo_BRks,jSEo09dj3<5QK%_38A$WA3E1&"^J%8IrG/J,DYlrIY1u62H@sRnQ.5'.4N!pQPdg/;DF_pVJ;e2'5FW@;eb<9E4(8ns]C!LsAmu;N%_<&#<7Ja#GQJ%AK`u-j'L2DX0VP8TDQalDKLU(aSS)iqsb4N\NJ+!IQYj:If/CfR,R5dF$J1I']siU-M7R<&Q4UPes2M32l0A%CWK_nM\p&9a6I9l%LGUR>UE,;9RYM&DDKLaAG<SY%!tq*^_E'(Hfh*PcrSXZE=ciL%$Pc7!e.4a^GpODV_Tu?bKq88e`hLZS+>H@FeoBgWg[QaB<oM8`%QY/MR6\g<J&duk[TF<;Z]iWigR-<``97MfQqhUN('(/I'TnJ)Rf[N]h<XK@JB$%#m5BoM2V1Qj7H7;A[>j`sm4c.qK%iupa=qW4[%,qj,*_'XXo`$^'(CfK7LS,<;C#X@X%j2HSSUk>`ZSQFD<[FlWar@9LB>Q^:If1bJf8!-o?h*%!Yn8ZPl&+Ra`&$sBM_Ob?$P!=3D%(nTB`P!9_M2YhumMekBc-%A%q-\"5_D"8sWm,u@^a/^+a30rS,7H-pGplSM_\R"b2YG&(UTFCp1P5MfB+7.cT<;$Q8NjL^Xc2I^%%%WD"pX25'WD"bmOI.jJZ`6,F1kItN65CPXW?B!?.$g%Z=rY-fRhlAr5pfN=]X;0B_*UE&f&Qr[UZTfMjZTfAJfcM2j@obMbK1B0Z%7@=%i4%3)QltlM'k>#Z5\b$CQI2D5AO,%uNp+W!8_>Ai56<3=FF0CJpi&SXG[*&D^)#Gc`KObF]mq]D[8tuI@<^4P.'8'S`,O]k7%WneuHrr=<aEIL*Y]!+)G't/ANE>%>^n9S#;U1s3`GR\C7)GUc^V\A`O!XQQ+e.P%7q^qn;(Tco_#=;NeWH8CdKcZ`Q.1Xb:`(GUW%V[,(DLk-i&)'FSH5op9W'o]MtHUR&DAqB]g9BXi;-?p1cS"a#3c.MuZk#IKE65XufDPe`oB@j9*jF#+O?F.`WU\ZF#;3Hje30o=K%+<r6jq\5.6`>u?8+SRn8dRIerC"KTn/WXuXaCE"uJ.1_c=D*/g].8na,0'[">5QB=Y_fJFlRA4Hisf>%@7Qde;?.X<G9H@p)]u2H%;$pgVX!mp6#:1-oqM.iF/].,jOFaX#pr![#$rH\e1/i10`gX&@bMq3mM1q&%M[.gG7F260LP.%/cMo$U];K<fUt2OO%J.HH/.k\#%!pm;M9?JY88rj^V!Q)an/RCD%m)9Rsdf9"YTK^2hbSb4)/PPAYCD].k#f/WRGGB/#V$S/]oWs]?FMQ#JLp[>F(.&mS#FqY0ZdW_2%E'3qCb!QCR?)0I2mWP"#0q]Y2mtQ#$a`NEJ"-/JQcjmR@GR%KkfFRQu=U3`3cTC'6<n7<G1Udk(?_;PX4W_6<m]g=DE0!l^7XMdp%#Med/GJO/0g,Jt*>6eD#X97m!h?!@)l[WJX<`3T9*.-RFd!5j9=WiTe"-*\h1=psr^<^d0mt#hM\u-1e1@0SPSg8=>JR\^?LFoV5%?Fnhkl[^;!2Tq!`mN8_U3#rtj*(pc$[MEF34sr]VeikkBnUXq2%]9b9EWo[4ot_f`FC9A+lc8MYpb:6WkFC^DeBm9(@>Y\I(?571%qjJ-TVNB$9GJB,q'3g.M(#_`ch/<hom^IsspY3Teqs?mtR\Xo!MUj[BKp:_GkF7olNHW#J@afPfIH(q:b\Q).7GPG*&N0croH`#E%2dQN&im@RWL%/$cb027I?STQ=@P=Q6=_MoiE4h",?k*IKjpAZWfU#_jc]`5shucK_pPf];HG?g1/$&A@W*!,*]PjT6(AZPY7aKHX%bj9b)@HP7AA0%CZkC'**$6pkL!R2fa=UULs=]*b%'+o,G22"(Y%C+c6T1[Nj9GEZ)`l2S<B;()`f+0$EXKD3E`DW,=0d%t<5Y3K?%?GcPXPebZHG$mpB@`2nCdE1l1n5;Z%1;&EUfm5cFSaTNW`)'$UhEOG7KOPsc_F$jojO-/*jLmtJ=6pj#Jc]\?.bJ5R`MF]2gdL?L%gpVjQ^hPk!`>'EC5U\p'6gTR[N-)<S3oYf(%EU&aK5W'q^.X)@Nm3a1M;1_K\"GNnBS3PDaP(ZgaBWJ\(.H#u,^9DJ^LmWZQ#cC-%Sn7??#7G,K0ljoE6"4,M_dB0N2KsN^67DD5jKd0tg7Q=;PMT\P>\:*0Gq-6d]+qR"(G2[V6-\.9(0JG_(a4Rt2CN$5&Ws:Y+ec]Y%Ksq:$I&[Eu'Bm$TN%eF%.[Co#<feQ;LEK7\142]-92>"S&32G#h\2Bde32"_I2q'Wi`p*72\RZNh9XmrlQe,.*=?s$Vlng%>-!r%%2=aqYKOr*,euD3P<2EUB-4Em&*o^)Hcaf)A\F7gBiED(!LnD6$T6MrF+Uh!MemL-=T3bo93FV"\l6+qmmh9d9\1P*3P/KPP$+?0M%SS45>lk(u`84S[n6<IB((fDZ^O0%9\hH7T\.(ASdF?`2,Z1O]X-"I(^AomB-<02\`AX4_G/,?ha*%?^hF\ik\b=nJK(!s:6a=Z'/%,R'lJkD]M@C:[8OGC=)^mf!(4f$?"]#QK-u[^nN+Yjh;Clg`0)K7A=iT?VaH5PRI`ZNi^Ei\BW:^YpiP?dFbY07KH4c^oX`ofi_5%=7"rT$X6E8BDt+iWS3R~>%AI9_PrivateDataEnd