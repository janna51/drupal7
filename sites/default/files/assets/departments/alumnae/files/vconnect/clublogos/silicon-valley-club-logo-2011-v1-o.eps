%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Silicon Valley Club logo 2011 v1-o.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Cicia Lee
%%CreationDate: 3/16/11
%%BoundingBox: 0 0 188 132
%%HiResBoundingBox: 0 0 187.9404 131.0811
%%CropBox: 0 0 187.9404 131.0811
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 92 8%%BeginData: 11514 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD05FF7E2F2F542F7EA8542F532F7E7E2F2F2F7E7E2F542FA85354%2F532F542F2F2F5AFFFF2F542F532F5AFD06FF2F542F532F5AFD06FF2F2F%2F532F542F2F2F5AFD04FF5A2F072F072FA8FF2F2F2F542F53A8FD05FF53%2F2F5AFD052F54A87E2F532F542FFFFFA92F532F54A9FD0CFF5307060D84%FF590D060784FF2F0753FFA807067EAFA80707062F7E84590D06FFFFA829%07062F84FD06FFA80707062FA8FD06FFA82907062F7E84592F06FFFFFF53%292FA9A85A065AFFA92F07062F84FD06FFA92F07062F7E7E592F06A8A85A%06070684FFFFFF7E062F7EFD0EFF2F0D0684FFFF2F2F07A8FF2F53FFFFA9%075AFFFFFF7E062F5AFFFFFFA80D84FFFF7E062F5AFD08FF7E062F7EFD08%FF7E062F5AFFFFFFA90D84FF840D06A9FFFFFF2F2FFFFF84070D53FD08FF%84070D53FD04FF0D7EFFFF2F070D7EFFFFFF530DA8FD0FFFA8060729FFFF%A806072F7E06AFFFFF2F07A8FFFFFF5307067EFD04FF59A9FFFF5307067E%FD08FF5307067EFD08FF5307067EFD04FF5AA9FF7E060759FFFFFF7E7EFF%FF59070653FD08FF59070653FD04FF7EA8FFFF5907062FFFFFA80753FD11%FF2F062F84FFFF54070D077EFFFFAF0D53FD04FF7E062F5AFFFFFF7EFD04%FF7E062F5AFD08FF7E062F7EFD08FF7E062F5AFFFFFF7EFFFFFF7E0D072F%84FD06FF84070D53FD08FF84070D53FFFFFF7EFD05FF2F0D07A9FF5A07FD%12FF7E070653FFFF7E0D060DA8FFFF7E06A9FD04FF5307067EFFFF532FFD%04FF5307067EFD08FF5307067EFD08FF5307067EFFFF532FFFFFFFAF0607%060D2FA9FD04FF590D0653FD08FF590D0653FFFF7E0DA8FD04FF7E06072F%FF067EFD13FF2F0D06A9FFFF2F0D07FFFFFF2F2FFD05FF7E070D072F0D0D%53FD04FF7E070D59FD08FF7E070D7EFD08FF7E070D072F0D0D2FFD04FF84%070D062F077EFFFFFF7E062F53FD08FF7E060D072F070D2FFD05FFA92F07%2F2F2FFD14FF7E060753FFFF2F060753FFA8075AFD05FF5307062F597E07%53FD04FF5307065AFD08FF5307067EFD08FF5307062F597E072FFD05FFA8%0707060D067EFFFF5A07065AFD08FF5A07062F597E2F2FFD06FF53070607%59FD14FFAF2F062FFFA9060D072FFF7E07FD06FF7E072F5AFFFFA82FFD04%FF7E072F59FD08FF7E070D7EFD08FF7E072F5AFFFFA92FFD07FF5A0D070D%0DFFFF7E062F53FD08FF7E062F53FFFFFF2FFD07FF070D07FD16FF530706%7E2F2F530D065A075AFD06FF5307065AFFFFFFAFFD04FF5307065AFD08FF%5307067EFD08FF5307065AFD07FFAFFD04FF7E0D060DA8FF7E07065AFD08%FF7E07065AFD0AFFA82F060DA8FD15FFA9070D070D84FF060D070DA8FD06%FF7E062F5AFD05FF59FFFF7E062F5AFD05FF59AFFF7E060D7EFD05FF59FF%FF7E062F5AFD05FF7EA92FAFFD04FF2F0D07A9FF84070D53FD05FF7EA9FF%84070D53FD05FF7EA9FD04FF070D07FD17FF53060707FFFF2F06072FFD07%FF5307065AFD04FF7E07A8FF5307065AFD04FF7E07A8FF5307065AFD04FF%7E07A8FF5907065AFD04FF7E077E0D2FFD04FF2F062FFFFF59070653FD04%FF7E077EFF7E070653FD04FF7E0D7EFD04FF0D060DFD17FF840D067EFFFF%7E2F07A9FD06FFA82F062F0D847EA95A0D2FFFA953062F07847EA97E0D2F%FFA92F062F0D847EA95A0D2FFFA953062F077E7EA97E0D2FFF2F2953FFFF%7E062F7EFFA95A070D077E84A97E0D0DFFA95A070D077E84A97E0D07FD04%FF84072F0784A9FD16FF070DA8FFFFFF072FFD06FF7E2F072F072F072F06%2F077EA82F072F072F072F062F077EA82F072F072F072F062F077E7E2F07%2F072F072F062F077EFFA82F07062F062F7EFFA82F072F072F062F070D06%7E842F072F072F062F070D065AFFFFFF5A072F072F075AFD16FFA9A8FD04%FFAFA8FD07FFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFF%A9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FD05FFA8A87EA9FD04%FFA9FFAFFFFFFFA9FD05FFA9FFAFFFFFFFA9FD07FFA9FFFFFFAFFDFCFFFD%FCFFFD72FFA8FFFFFFA9FFFFFFA9FD1BFF7E597E53FF7E7E5AFFFFFF5A7E%7EFF847E7EA95A7E5A7EA9FD05FFA97E537EA8FFFF845A7E5A7EA9FFFFFF%7E5A53A9A97E5AA9A87E5AA9FFFFA97E5A7EFFFFA97E597E5AFFFFFF597E%53AFFFFF5A7EA9FFA87E5AFFFFA95A7EA8FFA87E7EFF84A8FFFFA87E59A9%FFFFA87E5AA8FFFFA97E5A7E5AFD047EFFA97E5AA82F2FA9A82F7EA80653%FFFFFF59067EFFAF075AFF2F06842F0DA8FFFFFF7E0D53A9530D7EFF5929%2FA92F7EFFFF7E0D7E7E2FFF2F077EFF2F077EFFFFFF2F297EFF7E0D2FA9%7E2FA8A8067EA8530684FF5A062FFFFF2F2FFFFFA82F06A9FFA806A8FF0D%2FFFFFFF0707A8FFFFFF2F0784FFFFFF2F0759A82F7E060DA8FF067E5307%FFFFFFA9A9A82F5AFFFFFF7E0DA8FFFF5A7EFF532FFF7E06AFFFFFFF2F07%FFFFFF072FFFA906A8FFA9A8FFFF7E06A9FFFFFF7E07AFFF5A07FD04FF7E%06FFFF2F0DFFFFFFA8FF0D2FFFFFFF2F07FF842F065AFF7E5AFFFFFF7E2F%7EFF537EFFA8060DA9FFFF530DFD04FF5A06FD04FF7E07FFFFA9FF7E06A9%7E5AFF0653FFFFA9FFFFA9065AFFFFFF7E06A9FFFF59A8FF53065A065AFF%FFFFA90653FFFFFF5906A97E072F5A53FFFFFF8407065AAFFF5307A8FF2F%0DA8FFFFFF5307A8A9065AFD04FFA80753FFFFFF2F07A884595A067E7E7E%FD04FF062FFF2FA8FF537E067EFFFF292FFD04FF2F07A8FFFFFF53075353%7EFFFF2F0653A8FF2F2FFD05FFA82F5AFFFFFF7E0DA8FFFF7E7EFF530D7E%5A07A9FFFFA80D53FFFFFF532FA8A9065A595AFD04FFA82F0654FF7E07A9%FF5A07FD04FF7E06FFA82F59FD05FF075AFFFFFF5A06FF7E7EFF5407537E%FD04FF5A077E53FFAF2F532F2FFFFF540DFD04FF5A07FD04FF7E077E53A9%FFFF5A2F5AFFFF070DA9FFFFFF84A9067EFFFFA87E0684FFFF2FA8FF5A07%FFA82953FFFFFF072FFFFFFF2F06FF7E077EFFA8FFFFFF7EFFFF5306FF53%0DA8FF2F0DFFFFA8FF5907A8FF062FFFFFFFA97E2F07FFFFFF2F0DFF8453%FFA82F067EFD04FF840D06A8FF7E2FA92F0DA8FF2F2FFFFFA8FF5307FFFF%A9FF530DA9FFA8AFFFA8067EFFFFA90654A9FF2F7EA8292FFF7E53A80D2F%FF7E54FFFF2F2FA85A06A9FFFFFF84075AFF84077EFF7E065AFD05FF5353%FF2F2FFF5A06A9FF2F067EA9537E5A0684FF84075AA9AF2FA87E2F59FF7E%0D7EFF532FFFFF842F5AFD05FF072FFFFF0784FF84065AFF2F06A9A82F7E%54067EA8547E5A067EA95A53FF7E2953FFFFFFA92F595359A87EFD04537E%FF7E532F59A8FF7E532F5A5384FD05FF842F532F84FFFF535953A9FD04FF%7E532F5AA8A9535359A85353535A53A8535953FFFFA82F532F5AFFFF7E53%53537EFFA85A2FA8FFFF59A8FD05FF7E59FF7E537EFF7E53537E5353535A%53842F5A535A53845353535A2FA9A85A2F5AA8FDFCFFFDFCFFFDFCFFFD1E%FF597E5A7E597E5A7E597E5A7E597E5A7E597E5A5A7EFFFFFF5A7E5A7E59%7E5A7E597E5A7E597E5A7E597E5A7E597E5A7E597E5A7E597E5A7E597E5A%7E597E5A7E597E5A5A7EFFFFFF7E7E5A7E597E5A7E597E5A7E597E5A7E59%7E5A7EA8FD22FFA807060706070607060706070607060706070607062FFF%FFFF2F060706070607060706070607060706070607060706070607060706%070607060706070607060706070607062FFFFFFF2F060706070607060706%0706070607060706070684FD23FF072F070D060D070D070D070D070D070D%072F072F2FFFFFFF0D2F070D070D070D070D070D070D070D072F070D062F%070D062F070D070D070D070D070D070D070D072F072F2FFFFFFF2F2F070D%070D070D070D070D070D070D062F070D7EFD23FF5A2F532F2F060D060D06%0D060D060D060D2F5A537EFFFFFF7E535A2F0D060D060D060D060D060D06%0D072F2F2F292F2F2F292F2F07060D060D060D060D060D062F2F5A537EFF%FFFF7E535A2F07060D060D060D060D060D072F2F5A53A9FD28FFAF7E2F07%0D070D070D060D7EFD0BFFAF5A060D070D070D070D0654A8FD0BFFA82F06%0D070D070D070D067EFD0CFF590D060D070D070D072F7EFD30FFA82F0607%060D060706A9FD0DFF59060D0607060D060DA8FD0DFFA80D060D0607060D%065AFD0DFFA80607060D06070653FD33FFAF2F070D070D072F7EFD0EFF2F%070D070D070D2FFD0FFF2F0D070D070D0753FD0EFF7E0D070D070D062FFD%35FF7E07060D060D0653FD0EFF7E0D060D060D062FFD0FFF2F060D060D06%0D84FD0EFF2F060D060D06077EFD36FF2F0D070D070D07AFFD0EFF2F0D07%0D070D07FD0EFFA9070D070D070D2FFD0EFFA9060D070D070D2FFD37FF84%0607060D06072FFD0EFFA8060D0607060759FD0DFF53070607060D06A9FD%0EFF2F07060D060706A8FD38FF53060D070D072FA9FD0EFF5A070D070D07%2FFD0CFFA92F070D070D075AFD0EFFA80D070D070D065AFD39FF7E07060D%060D065AFD0EFF7E0D060D060D067EFD0BFF5A060D060D060DA8FD0EFF53%060D060D06077EFD3AFF2F0D070D070D07FD0FFF2F0D070D070D0DFD0BFF%0D0D070D070D53FD0EFFA9060D070D070D2FFD3BFF840607060D060753FD%0EFF84060D0607060759FD09FF53070607060D06A9FD0EFF2F07060D0607%06A8FD3CFF2F060D070D072FA9FD0EFF5A070D070D072FFD08FFAF2F070D%070D075AFD0EFFA80D070D070D065AFD3DFF7E07060D060D065AFD0EFF7E%0D060D060D067EFD07FF7E060D060D060DA8FD0EFF5A060D060D06077EFD%3EFF2F0D070D070D07FD0FFF2F0D070D070D2FFD07FF0D0D070D070D2FFD%0EFFA9060D070D070D2FFD3FFF7E0607060D060753FD0EFFA8060D060706%075AFD05FF53070607060D06A8FD0EFF2F07060D060706A8FD40FF2F060D%070D072FA9FD0EFF5A070D070D072FFD04FFA92F070D070D075AFD0EFFA8%0D070D070D065AFD41FF7E07060D060D065AFD0EFF7E0D060D060D067EFF%FFFF5A060D060D060DA8FD0EFF5A060D060D06077EFD42FF2F0D070D070D%07FD0FFF2F0D070D070D2FFFFFFF0D0D070D070D53FD0EFFA9070D070D07%0D2FFD43FF7E0607060D060753FD0EFF84060D060706077EFF5307060706%0D06A8FD0EFF5307060D06070684FD44FF2F060D070D072FA9FD0EFF5407%0D070D072FAF2F070D070D075AFD0EFFA90D070D070D0654FD45FF7E0706%0D060D067EFD0EFF7E0D060D060D062F060D060D060D84FD0EFF5A060D06%0D06077EFD46FF2F0D070D070D07FD0FFF2F0D070D070D070D070D070D2F%FD0FFF070D070D070D2FFD47FF7E0607060D060753FD0EFF84060D060706%0D0607060D06A8FD0EFF5307060D060706A8FD48FF2F070D070D072FFD0F%FF54070D070D070D070D0754FD0EFFA92F070D070D0654FD49FF5A07060D%060D067EFD0EFF7E0D060D060D060D060D7EFD0EFF5A060D060D06077EFD%4AFF2F0D070D070D07FD0FFF2F0D070D070D070D2FFD0FFF070D070D070D%2FFD4BFF7E0607060D060759FD0EFF84060D0607060D06A8FD0EFF530706%0D06070684FD4CFF2F060D070D072FFD0FFF2F070D070D072FFD0EFFA92F%070D070D0654FD4DFF7E07060D060D067EFD0DFF7E060D060D060D0684FD%0DFF5A060D060D06077EFD4EFF2F0D070D070D0DFD0DFF2F0D070D070D07%0D2FFD0DFF070D070D070D2FFD4FFF7E0607060D060759FD0BFF59070607%060D060706077EFD0BFF5307060D06070684FD50FF2F070D070D072FFD0B%FF2F070D070D070D070D0753FD0AFFAF2F070D070D0654FD51FF5907060D%060D067EFD09FF7E060D060D060D060D060D067EFD09FF7E060D060D0607%7EFD52FF0D0D070D070D07FD09FF2F0D070D070D060D070D070D2FFD09FF%070D070D070D2FFD53FF7E0607060D060759FD07FF59070607060D065306%0D060706077EFD07FF5307060D06070684FD54FF2F070D070D072FFD07FF%2F070D070D0753FF2F070D070D0753FD07FF2F070D070D062FFD55FF5A07%060D060D067EFD05FF7E060D060D060D7EFF7E0D060D060D0684FD05FF7E%060D060D06077EFD56FF2F0D070D070D0DFD05FF2F0D070D070D2FFFFFFF%2F0D070D070D2FFD05FF070D070D070D2FFD57FF7E0607060D060759FFFF%FF59070607060D06A8FFFFFF7E060D060706077EFFFFFF5907060D060706%7EFD58FF2F070D070D062FFFFFFF2F070D070D0753FD05FF2F070D070D07%53FFFFFF2F070D070D062FFD59FF5907060D060D067EFF7E060D060D060D%7EFD05FF5A0D060D060D06A8FF7E060D060D06077EFD5AFF0D0D070D070D%2FFF2F0D070D070D2FFD07FF2F0D070D070D2FFF070D070D070D2FFD5BFF%7E0607060D06072F0D0607060D0684FD07FF7E060D0607060D2F07060D06%07067EFD5CFF2F070D070D072F070D070D072FFD09FF2F070D070D070D07%0D070D062FFD5DFF5907060D060D060D060D060D7EFD09FF590D060D060D%060D060D060759FD5EFF0D0D070D070D070D070D2FFD0BFF2F0D070D070D%070D070D2FFD5FFF7E0607060D0607060D0684FD0BFF7E060D0607060D06%07067EFD60FF2F070D070D070D0753FD0DFF2F070D070D070D072FFD61FF%5907060D060D060D7EFD0DFF590D060D060D060759FD62FF070D070D070D%2FFD0FFF070D070D070D2FFD63FF5A0607060D067EFD0FFF7E060D060706%7EFD63FFA92F070D072FFD11FF2F070D062FFD65FF5307060D7EFD11FF59%0D060759FD66FF07292FFD13FF072F2FFD67FFA859A8FD13FFA859A9FD33%FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: 
%%DocumentCustomColors: (PANTONE 280 C)
%%CMYKCustomColor: 1 0.7200 0 0.1800 (PANTONE 280 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic CMYK</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2011-03-16T10:29:10-04:00</xmp:CreateDate>
         <xmp:ModifyDate>2011-03-16T10:29:10-04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2011-03-16T10:29:10-04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>180</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAtAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q83/Of8v21/QrrWdO&#xA;uLmDXdOti1usMsixyxxFpGjMYNCxDNxI3rQdMztFqOCQia4SXE1eAziTEkSDyb/nHbUbK+833ena&#xA;zPcT3F3ZyJYFriUL0ImTirD4miJIP7PE03zZdpRIgDHod3Xdm5LmRIm623Sf85fLGqeSvNQt7G+v&#xA;P0PexiewaSeRiKfDJEWrvwb8CMt0WWOWFkDiDXrYSxT2J4T5sm852um+ZJPIek+Tbi6j1LVbNfVJ&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:F380265D0820681188C6AF33B70074B5</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:F380265D0820681188C6AF33B70074B5</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:F280265D0820681188C6AF33B70074B5</stRef:instanceID>
            <stRef:documentID>xmp.did:F280265D0820681188C6AF33B70074B5</stRef:documentID>
            <stRef:originalDocumentID>uuid:E3B705F59336E0118987E9F32614B546</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:20:43-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:20:57-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:10-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:28-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:53-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:25:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:17-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:45-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:008011740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EC80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:14-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ED80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:22-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EE80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EF80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F080265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:30-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F180265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:41-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F280265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F380265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:10-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>uuid:E3B705F59336E0118987E9F32614B546</xmpMM:OriginalDocumentID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>8.500000</stDim:w>
            <stDim:h>11.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>PANTONE 280 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Red</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Yellow</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Green</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Cyan</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Blue</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Magenta</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=90 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>14.999998</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=90 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=80 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>80.000000</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=35 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>35.000004</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=5 M=0 Y=90 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>5.000001</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>19.999998</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=90 M=30 Y=95 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>90.000000</xmpG:cyan>
                           <xmpG:magenta>30.000002</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>30.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=75 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=10 Y=45 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>80.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>45.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=70 M=15 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>70.000000</xmpG:cyan>
                           <xmpG:magenta>14.999998</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=95 Y=5 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>5.000001</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=25 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>25.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=100 Y=35 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>35.000004</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=100 Y=50 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=95 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>19.999998</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=25 Y=40 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>25.000000</xmpG:magenta>
                           <xmpG:yellow>39.999996</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=45 Y=50 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>45.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>5.000001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=50 Y=60 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>60.000004</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=55 M=60 Y=65 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>55.000000</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>39.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=40 Y=65 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>39.999996</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=30 M=50 Y=75 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>30.000002</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=60 Y=80 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=65 Y=90 K=35</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>65.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>35.000004</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=70 Y=80 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>70.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 282 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>68.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>53.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 280 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>72.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>18.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grayscale</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=100</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>255</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=90</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>229</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=80</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>203</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=70</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>178</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=60</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>152</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=50</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>127</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=40</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>101</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=30</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>76</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=20</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>50</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=10</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>25</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=5</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>12</xmpG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -131.081 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 131.081 li
187.94 131.081 li
187.94 0 li
cp
clp
[1 0 0 1 0 0 ]ct
37.8213 1.61475 mo
37.1465 1.76172 36.8223 1.99658 36.6167 2.26074 cv
36.2944 2.73047 35.7954 3.66943 35.0024 5.51953 cv
33.5645 8.95508 30.2461 16.2661 28.8071 20.0835 cv
28.6304 20.23 28.2197 20.3184 27.8384 20.3184 cv
27.5156 20.3184 27.2515 20.23 27.0454 20.0835 cv
26.7227 19.3779 26.2817 18.3218 25.9297 17.4995 cv
24.6963 14.7104 li
24.2861 13.7705 23.9033 12.8892 23.6396 12.4487 cv
23.3755 12.9482 23.0225 13.6538 22.6411 14.4756 cv
21.2617 17.4697 li
20.8208 18.4097 20.4976 19.2612 20.0278 20.23 cv
19.8813 20.3765 19.5 20.4648 19.0591 20.4648 cv
18.7363 20.4648 18.5601 20.3765 18.2949 20.23 cv
17.8252 18.9966 16.6514 16.354 15.6533 14.1523 cv
10.8374 3.64014 li
10.0444 1.90869 9.86865 1.76172 8.89941 1.55615 cv
8.16504 1.40967 li
7.93066 1.11523 7.96045 .528809 8.28369 .380859 cv
9.36963 .44043 10.6025 .470215 12.1006 .470215 cv
13.3926 .470215 14.5376 .44043 15.6533 .380859 cv
15.8877 .499512 16.0054 1.23291 15.7124 1.40967 cv
15.1831 1.49707 li
14.6548 1.58545 14.4487 1.73193 14.4487 1.9375 cv
14.4487 2.14355 15.0654 3.52344 15.9761 5.57861 cv
18.8833 12.0679 li
19.7051 13.8882 19.998 14.5044 20.3511 15.2095 cv
20.7031 14.5635 21.1738 13.6826 21.7603 12.3613 cv
22.1421 11.5098 li
22.3477 11.0396 22.5239 10.3945 22.5239 10.2178 cv
22.5239 10.041 22.4648 9.71826 22.3477 9.4248 cv
19.5293 3.22998 li
18.8535 1.76172 18.6479 1.55615 17.5317 1.43848 cv
17.2383 1.40967 li
16.9453 1.17432 17.0034 .499512 17.3267 .380859 cv
18.5889 .44043 19.7344 .470215 21.0264 .470215 cv
22.5239 .470215 23.6396 .44043 24.4023 .380859 cv
24.7549 .470215 24.7256 1.2627 24.52 1.40967 cv
24.0215 1.52686 li
23.6685 1.61475 23.228 1.73193 23.228 1.9375 cv
23.228 2.17285 23.3462 2.49561 23.4927 2.81836 cv
24.373 4.84521 li
24.6377 5.46143 24.9316 6.10693 25.1953 6.63574 cv
25.4888 6.01904 25.7827 5.43213 26.0762 4.78564 cv
26.3408 4.19873 li
26.8398 3.08252 27.1333 2.20215 27.1333 2.02588 cv
27.1333 1.8208 27.0161 1.73193 26.5464 1.61475 cv
25.6655 1.40967 li
25.4595 1.20313 25.4888 .528809 25.7539 .380859 cv
26.605 .44043 27.6616 .470215 28.6304 .470215 cv
29.7759 .470215 30.8628 .44043 31.626 .380859 cv
31.8604 .528809 31.9194 1.23291 31.6548 1.43848 cv
30.833 1.61475 li
29.8345 1.8208 29.6294 1.9375 28.6016 3.69971 cv
27.8965 4.90283 27.1621 6.25391 26.7813 7.0166 cv
26.5171 7.54541 26.1357 8.39697 26.1357 8.54395 cv
26.1357 8.63184 26.1646 8.80811 26.3701 9.27832 cv
27.75 12.2432 li
28.5132 13.8584 28.8657 14.7104 29.0415 15.1216 cv
30.4512 11.7153 31.8315 8.07471 33.2407 4.49219 cv
33.4458 3.99316 34.0332 2.31885 34.0332 1.99658 cv
34.0332 1.79102 33.8574 1.70264 33.4751 1.58545 cv
32.8296 1.40967 li
32.5947 1.14453 32.6538 .528809 32.918 .380859 cv
33.8574 .44043 35.0322 .470215 35.9126 .470215 cv
36.9404 .470215 37.7915 .44043 38.6138 .380859 cv
38.8784 .528809 38.9072 1.17432 38.7021 1.40967 cv
37.8213 1.61475 li
cp
false sop
/0 
<<
/Name (PANTONE 280 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 1 .72 0 .18 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
46.1011 8.10352 mo
46.1011 8.92627 46.1299 8.98438 46.9233 8.98438 cv
48.9487 8.98438 li
50.4756 8.98438 50.8281 8.77881 51.1216 7.37012 cv
51.2686 6.63574 li
51.4741 6.40088 52.2075 6.40088 52.3555 6.66455 cv
52.2964 7.60498 52.2671 8.66162 52.2671 9.77783 cv
52.2671 10.8936 52.2964 11.9502 52.3555 12.8892 cv
52.2075 13.1543 51.4741 13.1831 51.2686 12.9189 cv
51.1216 12.1851 li
50.8281 10.7754 50.4756 10.5405 48.9487 10.5405 cv
46.9233 10.5405 li
46.1299 10.5405 46.1011 10.5698 46.1011 11.4512 cv
46.1011 14.9448 li
46.1011 16.2959 46.2192 17.2354 46.5703 17.7344 cv
46.9526 18.2622 47.5098 18.4971 49.6538 18.4971 cv
52.2075 18.4971 53.2065 18.4097 54.8213 15.0918 cv
55.0562 14.769 55.79 14.8862 55.9082 15.2378 cv
55.79 16.7651 55.0854 19.1436 54.6748 19.9365 cv
53.1187 19.8774 50.2998 19.8486 47.8921 19.8486 cv
44.0752 19.8486 li
42.6655 19.8486 41.2266 19.8774 39.0244 19.9365 cv
38.7896 19.7603 38.7896 19.0552 39.0244 18.9087 cv
40.4048 18.7036 li
41.7266 18.4971 41.9023 18.3218 41.9023 15.6206 cv
41.9023 4.66846 li
41.9023 1.99658 41.7266 1.8208 40.4048 1.55615 cv
39.6709 1.40967 li
39.4063 1.23291 39.436 .557617 39.729 .380859 cv
41.1099 .44043 42.5479 .470215 43.957 .470215 cv
50.1826 .470215 li
52.0615 .470215 53.7349 .44043 54.1162 .380859 cv
54.1455 .851563 54.3511 2.96533 54.4985 4.93262 cv
54.3809 5.25586 53.7056 5.31396 53.4121 5.05029 cv
53.0894 4.02246 52.6777 3.1416 52.2964 2.73047 cv
51.7383 2.17285 50.8574 1.8208 49.4185 1.8208 cv
47.0698 1.8208 li
46.1011 1.8208 46.1011 1.87939 46.1011 2.96533 cv
46.1011 8.10352 li
cp
f
63.7471 14.9746 mo
63.7471 16.354 63.8647 17.2939 64.2461 17.7637 cv
64.6284 18.2622 65.1558 18.4971 67.2993 18.4971 cv
69.9722 18.4971 70.7935 18.4097 72.5254 15.0039 cv
72.7607 14.7104 73.436 14.8276 73.6416 15.1797 cv
73.4951 16.707 72.7905 19.1436 72.3794 19.9365 cv
70.8228 19.8774 68.0044 19.8486 65.5967 19.8486 cv
61.6621 19.8486 li
60.3115 19.8486 58.8433 19.8774 57.0229 19.9365 cv
56.7588 19.7603 56.6997 19.0854 56.9346 18.9087 cv
58.0513 18.7617 li
59.3721 18.5864 59.5479 18.3516 59.5479 15.6206 cv
59.5479 4.69775 li
59.5479 1.9668 59.3721 1.70264 58.0513 1.52686 cv
57.1992 1.40967 li
56.9053 1.23291 56.9053 .557617 57.2583 .380859 cv
58.7852 .44043 60.2534 .470215 61.6621 .470215 cv
63.0713 .470215 64.5391 .44043 66.0073 .380859 cv
66.2422 .557617 66.2422 1.23291 66.0073 1.40967 cv
65.2446 1.52686 li
63.9233 1.73193 63.7471 1.9668 63.7471 4.69775 cv
63.7471 14.9746 li
cp
f
81.3047 14.9746 mo
81.3047 16.354 81.4229 17.2939 81.8042 17.7637 cv
82.186 18.2622 82.7139 18.4971 84.8579 18.4971 cv
87.5298 18.4971 88.3521 18.4097 90.0835 15.0039 cv
90.3193 14.7104 90.9941 14.8276 91.2002 15.1797 cv
91.0527 16.707 90.3496 19.1436 89.9375 19.9365 cv
88.3809 19.8774 85.563 19.8486 83.1553 19.8486 cv
79.2207 19.8486 li
77.8691 19.8486 76.4014 19.8774 74.5811 19.9365 cv
74.3169 19.7603 74.2588 19.0854 74.4932 18.9087 cv
75.6089 18.7617 li
76.9302 18.5864 77.1064 18.3516 77.1064 15.6206 cv
77.1064 4.69775 li
77.1064 1.9668 76.9302 1.70264 75.6089 1.52686 cv
74.7573 1.40967 li
74.4634 1.23291 74.4634 .557617 74.8164 .380859 cv
76.3428 .44043 77.811 .470215 79.2207 .470215 cv
80.6299 .470215 82.0972 .44043 83.5664 .380859 cv
83.8008 .557617 83.8008 1.23291 83.5664 1.40967 cv
82.8027 1.52686 li
81.481 1.73193 81.3047 1.9668 81.3047 4.69775 cv
81.3047 14.9746 li
cp
f
99.0098 8.10352 mo
99.0098 8.92627 99.04 8.98438 99.832 8.98438 cv
101.857 8.98438 li
103.385 8.98438 103.737 8.77881 104.03 7.37012 cv
104.179 6.63574 li
104.384 6.40088 105.117 6.40088 105.264 6.66455 cv
105.205 7.60498 105.176 8.66162 105.176 9.77783 cv
105.176 10.8936 105.205 11.9502 105.264 12.8892 cv
105.117 13.1543 104.384 13.1831 104.179 12.9189 cv
104.03 12.1851 li
103.737 10.7754 103.385 10.5405 101.857 10.5405 cv
99.832 10.5405 li
99.04 10.5405 99.0098 10.5698 99.0098 11.4512 cv
99.0098 14.9448 li
99.0098 16.2959 99.127 17.2354 99.4795 17.7344 cv
99.8613 18.2622 100.42 18.4971 102.563 18.4971 cv
105.117 18.4971 106.115 18.4097 107.73 15.0918 cv
107.965 14.769 108.699 14.8862 108.817 15.2378 cv
108.699 16.7651 107.995 19.1436 107.584 19.9365 cv
106.028 19.8774 103.209 19.8486 100.801 19.8486 cv
96.9834 19.8486 li
95.5742 19.8486 94.1357 19.8774 91.9341 19.9365 cv
91.6992 19.7603 91.6992 19.0552 91.9341 18.9087 cv
93.3145 18.7036 li
94.6348 18.4971 94.8115 18.3218 94.8115 15.6206 cv
94.8115 4.66846 li
94.8115 1.99658 94.6348 1.8208 93.3145 1.55615 cv
92.5796 1.40967 li
92.3154 1.23291 92.3447 .557617 92.6387 .380859 cv
94.0186 .44043 95.457 .470215 96.8662 .470215 cv
103.092 .470215 li
104.97 .470215 106.645 .44043 107.027 .380859 cv
107.055 .851563 107.261 2.96533 107.407 4.93262 cv
107.29 5.25586 106.615 5.31396 106.321 5.05029 cv
105.999 4.02246 105.587 3.1416 105.205 2.73047 cv
104.647 2.17285 103.767 1.8208 102.328 1.8208 cv
99.9795 1.8208 li
99.0098 1.8208 99.0098 1.87939 99.0098 2.96533 cv
99.0098 8.10352 li
cp
f
116.069 20.3184 mo
113.368 20.3184 111.693 19.5547 111.077 19.2026 cv
110.52 18.5562 110.138 16.4429 110.138 14.4453 cv
110.344 14.064 111.019 14.0347 111.253 14.3579 cv
111.841 16.2661 113.808 18.9673 116.305 18.9673 cv
118.477 18.9673 119.475 17.4697 119.475 16.002 cv
119.475 13.624 117.243 12.2139 115.481 11.3335 cv
113.368 10.2759 111.048 8.51514 111.048 5.60742 cv
111.019 2.28955 113.602 0 117.86 0 cv
118.828 0 120.032 .117188 121.207 .470215 cv
121.589 .586914 121.853 .64502 122.205 .70459 cv
122.441 1.35059 122.733 2.93555 122.733 4.90283 cv
122.587 5.25586 121.853 5.28516 121.589 4.99121 cv
121.09 3.49365 119.828 1.35059 117.713 1.35059 cv
115.775 1.35059 114.719 2.61328 114.719 4.08154 cv
114.719 5.43213 115.923 6.66455 117.391 7.42822 cv
119.328 8.45654 li
121.148 9.4248 123.469 11.1279 123.469 14.3579 cv
123.469 17.9692 120.503 20.3184 116.069 20.3184 cv
cp
f
131.426 14.9746 mo
131.426 16.354 131.543 17.2939 131.925 17.7637 cv
132.307 18.2622 132.835 18.4971 134.979 18.4971 cv
137.649 18.4971 138.472 18.4097 140.204 15.0039 cv
140.438 14.7104 141.114 14.8276 141.318 15.1797 cv
141.173 16.707 140.469 19.1436 140.059 19.9365 cv
138.502 19.8774 135.683 19.8486 133.274 19.8486 cv
129.341 19.8486 li
127.989 19.8486 126.521 19.8774 124.702 19.9365 cv
124.437 19.7603 124.379 19.0854 124.612 18.9087 cv
125.729 18.7617 li
127.05 18.5864 127.226 18.3516 127.226 15.6206 cv
127.226 4.69775 li
127.226 1.9668 127.05 1.70264 125.729 1.52686 cv
124.876 1.40967 li
124.583 1.23291 124.583 .557617 124.936 .380859 cv
126.463 .44043 127.932 .470215 129.341 .470215 cv
130.75 .470215 132.218 .44043 133.686 .380859 cv
133.921 .557617 133.921 1.23291 133.686 1.40967 cv
132.923 1.52686 li
131.601 1.73193 131.426 1.9668 131.426 4.69775 cv
131.426 14.9746 li
cp
f
149.13 8.10352 mo
149.13 8.92627 149.159 8.98438 149.952 8.98438 cv
151.978 8.98438 li
153.504 8.98438 153.857 8.77881 154.15 7.37012 cv
154.299 6.63574 li
154.503 6.40088 155.237 6.40088 155.384 6.66455 cv
155.325 7.60498 155.296 8.66162 155.296 9.77783 cv
155.296 10.8936 155.325 11.9502 155.384 12.8892 cv
155.237 13.1543 154.503 13.1831 154.299 12.9189 cv
154.15 12.1851 li
153.857 10.7754 153.504 10.5405 151.978 10.5405 cv
149.952 10.5405 li
149.159 10.5405 149.13 10.5698 149.13 11.4512 cv
149.13 14.9448 li
149.13 16.2959 149.247 17.2354 149.601 17.7344 cv
149.982 18.2622 150.541 18.4971 152.683 18.4971 cv
155.237 18.4971 156.236 18.4097 157.851 15.0918 cv
158.086 14.769 158.82 14.8862 158.936 15.2378 cv
158.82 16.7651 158.115 19.1436 157.704 19.9365 cv
156.146 19.8774 153.329 19.8486 150.921 19.8486 cv
147.104 19.8486 li
145.695 19.8486 144.255 19.8774 142.054 19.9365 cv
141.819 19.7603 141.819 19.0552 142.054 18.9087 cv
143.434 18.7036 li
144.755 18.4971 144.932 18.3218 144.932 15.6206 cv
144.932 4.66846 li
144.932 1.99658 144.755 1.8208 143.434 1.55615 cv
142.701 1.40967 li
142.436 1.23291 142.465 .557617 142.758 .380859 cv
144.139 .44043 145.578 .470215 146.986 .470215 cv
153.212 .470215 li
155.091 .470215 156.764 .44043 157.146 .380859 cv
157.176 .851563 157.381 2.96533 157.527 4.93262 cv
157.41 5.25586 156.735 5.31396 156.441 5.05029 cv
156.118 4.02246 155.707 3.1416 155.325 2.73047 cv
154.769 2.17285 153.886 1.8208 152.448 1.8208 cv
150.099 1.8208 li
149.13 1.8208 149.13 1.87939 149.13 2.96533 cv
149.13 8.10352 li
cp
f
170.211 15.6206 mo
170.211 18.3516 170.388 18.5864 171.709 18.7617 cv
172.883 18.9087 li
173.09 19.0854 173.09 19.7603 172.883 19.9365 cv
170.976 19.8774 169.535 19.8486 168.128 19.8486 cv
166.716 19.8486 165.249 19.8774 163.517 19.9365 cv
163.281 19.7603 163.281 19.0854 163.517 18.9087 cv
164.515 18.7617 li
165.837 18.5562 166.014 18.3516 166.014 15.6206 cv
166.014 14.1523 li
166.014 12.6841 165.982 12.2139 165.22 10.6582 cv
161.725 3.43506 li
161.14 2.23145 160.875 1.76172 159.846 1.58545 cv
158.849 1.40967 li
158.584 1.17432 158.613 .470215 158.966 .380859 cv
160.286 .44043 161.373 .470215 163.105 .470215 cv
164.896 .470215 166.395 .44043 167.392 .380859 cv
167.657 .499512 167.716 1.17432 167.451 1.40967 cv
166.453 1.64404 li
165.924 1.76172 165.748 1.87939 165.748 1.90869 cv
165.748 2.14355 165.895 2.58301 166.513 3.96387 cv
167.891 7.10547 li
168.332 8.07471 168.89 9.24902 169.242 9.98291 cv
170.093 8.54395 170.916 6.84131 171.709 5.34326 cv
172.824 3.25879 173.235 2.28955 173.235 1.9375 cv
173.235 1.76172 172.942 1.64404 172.237 1.52686 cv
171.561 1.40967 li
171.328 1.2627 171.297 .528809 171.591 .380859 cv
172.765 .44043 173.822 .470215 174.88 .470215 cv
175.994 .470215 176.905 .44043 177.756 .380859 cv
178.11 .499512 178.11 1.20313 177.875 1.40967 cv
177.112 1.55615 li
176.583 1.64404 176.025 1.84912 175.702 2.26074 cv
175.263 2.81836 174.526 3.87549 173.117 6.42969 cv
171.269 9.77783 li
170.505 11.1567 170.211 11.8911 170.211 13.5649 cv
170.211 15.6206 li
cp
f
99.1084 54.2432 mo
104.296 54.2432 106.085 57.6206 103.199 63.3003 cv
93.168 83.1738 li
83.1377 63.3003 li
80.251 57.6206 82.0254 54.2432 87.2119 54.2432 cv
99.1084 54.2432 li
cp
109.237 114.964 mo
97.8916 92.5225 li
112.938 62.8135 li
117.32 54.3403 118.391 53.8535 125.793 53.8535 cv
125.793 49.5688 li
60.5439 49.5688 li
60.5439 53.8535 li
67.9453 53.8535 69.1133 54.3403 73.3984 62.8135 cv
88.4453 92.5225 li
77.0996 114.964 li
50.5132 62.2285 li
47.3965 55.9966 48.1758 53.8535 52.5093 53.8535 cv
55.2852 53.8535 li
55.2852 49.5688 li
25.0957 49.5688 li
25.0957 53.8213 li
26.6533 53.9185 li
36.3921 54.5029 37.0742 55.0229 41.5537 63.9819 cv
75.542 131.081 li
78.3652 131.081 li
93.168 101.857 li
107.972 131.081 li
110.796 131.081 li
144.783 63.9819 li
149.264 55.0229 149.944 54.438 159.684 53.8535 cv
160.327 53.813 li
160.327 49.5688 li
131.052 49.5688 li
131.052 53.8535 li
133.827 53.8535 li
138.161 53.8535 138.939 55.9966 135.823 62.2285 cv
109.237 114.964 li
cp
f
9.05957 29.7681 mo
9.05957 30.0386 9.10449 31.2388 9.23926 32.1079 cv
9.17969 32.2886 8.77441 32.3481 8.66943 32.2134 cv
8.26465 30.8188 7.30469 30.0688 5.84961 30.0688 cv
4.18457 30.0688 2.3999 31.4937 2.3999 34.478 cv
2.3999 37.4634 4.12451 39.0679 5.9248 39.0679 cv
7.73975 39.0679 8.57959 37.7632 8.98438 36.7437 cv
9.10449 36.6235 9.46436 36.6685 9.55469 36.8481 cv
9.44971 37.9585 9.19434 38.8579 8.98438 39.2026 cv
8.17432 39.4282 7.10938 39.7583 5.93945 39.7583 cv
4.46973 39.7583 2.96973 39.4126 1.90479 38.6177 cv
.824707 37.7935 0 36.5483 0 34.688 cv
0 32.8579 .779785 31.5688 1.81494 30.7134 cv
2.87988 29.8286 4.40967 29.3784 5.96973 29.3784 cv
7.49951 29.3784 8.60938 29.7388 9.05957 29.7681 cv
cp
f
13.8149 37.0278 mo
13.8149 37.7329 13.875 38.2134 14.0698 38.4526 cv
14.2646 38.7085 14.5347 38.8276 15.6299 38.8276 cv
16.9946 38.8276 17.4146 38.7827 18.2998 37.0435 cv
18.4194 36.8931 18.7646 36.9536 18.8696 37.1333 cv
18.7944 37.9136 18.4346 39.1577 18.2246 39.563 cv
17.4297 39.5327 15.9897 39.5181 14.7598 39.5181 cv
12.75 39.5181 li
12.0601 39.5181 11.3101 39.5327 10.3799 39.563 cv
10.2451 39.4731 10.2148 39.1284 10.335 39.0376 cv
10.9048 38.9634 li
11.5801 38.8735 11.6699 38.7534 11.6699 37.3579 cv
11.6699 31.7788 li
11.6699 30.3833 11.5801 30.2485 10.9048 30.1587 cv
10.4697 30.0981 li
10.3198 30.0083 10.3198 29.6636 10.5 29.5737 cv
11.2798 29.603 12.0298 29.6187 12.75 29.6187 cv
13.4697 29.6187 14.2197 29.603 14.9697 29.5737 cv
15.0898 29.6636 15.0898 30.0083 14.9697 30.0981 cv
14.5796 30.1587 li
13.9048 30.2632 13.8149 30.3833 13.8149 31.7788 cv
13.8149 37.0278 li
cp
f
20.0547 31.7788 mo
20.0547 30.3833 19.9648 30.2935 19.29 30.1587 cv
18.915 30.0835 li
18.7949 29.9937 18.7798 29.6636 18.9448 29.5737 cv
19.665 29.603 20.415 29.6187 21.1348 29.6187 cv
21.8696 29.6187 22.605 29.603 23.3247 29.5737 cv
23.4448 29.6636 23.4448 29.9937 23.3247 30.0835 cv
22.9648 30.1431 li
22.2896 30.2632 22.1997 30.3833 22.1997 31.7788 cv
22.1997 35.2437 li
22.1997 36.9985 22.3945 38.9331 24.6748 38.9331 cv
26.5947 38.9331 27.1797 37.2534 27.1797 35.1978 cv
27.1797 33.3833 li
27.1797 32.1685 27.1196 31.0288 26.9546 30.6382 cv
26.8193 30.3237 26.4897 30.2339 26.0845 30.1587 cv
25.6797 30.0835 li
25.5596 29.9634 25.5898 29.6636 25.6797 29.5737 cv
26.4897 29.603 27.0747 29.6187 27.6895 29.6187 cv
28.2446 29.6187 28.7993 29.603 29.3696 29.5737 cv
29.4595 29.6636 29.4893 29.9634 29.3696 30.0835 cv
29.0996 30.1431 li
28.7095 30.2339 28.4243 30.3237 28.2896 30.6382 cv
28.1245 31.0288 28.0645 32.1685 28.0645 33.3833 cv
28.0645 35.063 li
28.0645 36.4731 27.9297 37.7632 27.1045 38.6782 cv
26.4448 39.3833 25.3496 39.7583 24.1348 39.7583 cv
22.9946 39.7583 21.9746 39.5776 21.165 38.9185 cv
20.3848 38.2729 20.0547 37.1636 20.0547 35.5278 cv
20.0547 31.7788 li
cp
f
33.5244 36.9829 mo
33.5244 38.1528 33.6743 38.8882 34.8442 38.8882 cv
35.9546 38.8882 36.5396 38.0327 36.5396 36.8179 cv
36.5396 35.5132 35.7896 34.5981 34.3496 34.5981 cv
33.5244 34.5981 33.5244 34.6128 33.5244 35.2134 cv
33.5244 36.9829 li
cp
33.5244 33.5181 mo
33.5244 33.9087 33.5396 33.938 34.3193 33.938 cv
35.6094 33.938 36.0894 33.1138 36.0894 32.2134 cv
36.0894 30.9087 35.2793 30.2632 34.2446 30.2632 cv
33.5396 30.2632 33.5244 30.3833 33.5244 31.0435 cv
33.5244 33.5181 li
cp
31.4546 32.063 mo
31.4546 30.5483 31.4248 30.3989 30.7944 30.3081 cv
30.3896 30.2485 li
30.2544 30.1733 30.2246 29.7231 30.4497 29.7085 cv
31.5894 29.6333 32.6846 29.5737 34.1846 29.5737 cv
35.6245 29.5737 36.5845 29.7388 37.2441 30.1284 cv
37.8892 30.5181 38.2793 31.1479 38.2793 32.0337 cv
38.2793 33.2935 37.2144 33.7886 36.7495 33.9087 cv
36.5991 33.938 36.4492 33.9985 36.4492 34.0737 cv
36.4492 34.1187 36.5244 34.1636 36.6592 34.1929 cv
37.8442 34.4487 38.8491 35.228 38.8643 36.6831 cv
38.8794 38.063 38.0542 38.8735 37.1094 39.2026 cv
36.1646 39.5327 35.0396 39.5776 34.1245 39.5776 cv
33.5845 39.5776 33.0146 39.5181 32.5796 39.5181 cv
31.8447 39.5181 31.1094 39.5327 30.2544 39.563 cv
30.1348 39.4731 30.1348 39.0835 30.2544 39.0376 cv
30.6895 38.9478 li
31.3647 38.813 31.4546 38.7085 31.4546 37.3579 cv
31.4546 32.063 li
cp
f
49.1543 30.0688 mo
47.3091 30.0688 46.3193 31.7935 46.3193 34.2983 cv
46.3193 36.1284 46.9644 39.0679 49.4092 39.0679 cv
51.374 39.0679 52.1392 37.1479 52.1392 34.7183 cv
52.1392 32.1538 51.0142 30.0688 49.1543 30.0688 cv
cp
54.5391 34.5229 mo
54.5391 37.7935 52.3491 39.7583 49.124 39.7583 cv
46.1094 39.7583 43.9194 37.7778 43.9194 34.6431 cv
43.9194 31.6733 46.1392 29.3784 49.2739 29.3784 cv
52.394 29.3784 54.5391 31.478 54.5391 34.5229 cv
cp
f
59.2192 33.6382 mo
59.2192 34.0435 59.2339 34.0884 59.6392 34.0884 cv
60.7939 34.0884 li
61.5889 34.0884 61.7539 33.9829 61.9038 33.2485 cv
61.979 32.8882 li
62.084 32.7534 62.459 32.7681 62.5488 32.9038 cv
62.519 33.3833 62.5039 33.938 62.5039 34.5083 cv
62.5039 35.063 62.519 35.6187 62.5488 36.0679 cv
62.459 36.2036 62.084 36.2183 61.979 36.0835 cv
61.9038 35.7231 li
61.7539 35.0034 61.5889 34.8833 60.7939 34.8833 cv
59.6392 34.8833 li
59.2339 34.8833 59.2192 34.9282 59.2192 35.3335 cv
59.2192 37.3579 li
59.2192 38.7534 59.3091 38.8735 59.9839 38.9634 cv
60.5391 39.0376 li
60.644 39.1284 60.644 39.4731 60.5391 39.563 cv
59.6089 39.5327 58.874 39.5181 58.1543 39.5181 cv
57.4644 39.5181 56.7144 39.5327 55.8145 39.563 cv
55.6943 39.4731 55.6943 39.1284 55.8145 39.0376 cv
56.3091 38.9634 li
56.9844 38.8579 57.0742 38.7534 57.0742 37.3579 cv
57.0742 31.7788 li
57.0742 30.3833 56.9844 30.2485 56.3091 30.1431 cv
56.0093 30.0981 li
55.874 30.0083 55.874 29.6333 56.0391 29.5737 cv
56.6841 29.603 57.4341 29.6187 58.1543 29.6187 cv
61.3042 29.6187 li
62.2642 29.6187 63.1191 29.603 63.3291 29.5737 cv
63.3291 29.8286 63.3291 30.9087 63.3589 31.9136 cv
63.2988 32.0786 62.9688 32.0933 62.7891 31.9731 cv
62.624 31.3579 62.5039 30.9985 62.354 30.8032 cv
62.0991 30.4888 61.6489 30.3081 60.8838 30.3081 cv
59.7139 30.3081 li
59.2192 30.3081 59.2192 30.3384 59.2192 30.9233 cv
59.2192 33.6382 li
cp
f
71.0088 39.7583 mo
69.6289 39.7583 68.7739 39.3677 68.459 39.188 cv
68.1738 38.8579 67.979 37.7778 67.979 36.7583 cv
68.084 36.563 68.4287 36.5483 68.5488 36.7134 cv
68.8486 37.688 69.8535 39.0679 71.1284 39.0679 cv
72.2388 39.0679 72.7485 38.3032 72.7485 37.5532 cv
72.7485 36.3384 71.6084 35.6187 70.7085 35.1685 cv
69.6289 34.6284 68.4438 33.728 68.4438 32.2437 cv
68.4287 30.5483 69.7485 29.3784 71.9238 29.3784 cv
72.4185 29.3784 73.0337 29.438 73.6338 29.6187 cv
73.8286 29.6782 73.9634 29.7085 74.1436 29.7388 cv
74.2637 30.0688 74.4136 30.8784 74.4136 31.8833 cv
74.3384 32.063 73.9634 32.0786 73.8286 31.9282 cv
73.5737 31.1636 72.9287 30.0688 71.8486 30.0688 cv
70.8589 30.0688 70.3188 30.7134 70.3188 31.4634 cv
70.3188 32.1538 70.9336 32.7837 71.6836 33.1733 cv
72.6738 33.6987 li
73.6035 34.1929 74.7886 35.063 74.7886 36.7134 cv
74.7886 38.5581 73.2734 39.7583 71.0088 39.7583 cv
cp
f
79.3037 37.3286 mo
79.3037 38.7378 79.3936 38.8433 80.0835 38.9634 cv
80.5034 39.0376 li
80.6235 39.1284 80.6084 39.4731 80.4883 39.563 cv
79.6787 39.5327 78.9434 39.5181 78.2388 39.5181 cv
77.5186 39.5181 76.7686 39.5327 75.9585 39.563 cv
75.8389 39.4731 75.8389 39.1284 75.9585 39.0376 cv
76.3789 38.9634 li
77.0688 38.8433 77.1587 38.7378 77.1587 37.3286 cv
77.1587 31.8081 li
77.1587 30.3989 77.0688 30.2935 76.3789 30.1733 cv
75.9585 30.0981 li
75.8389 30.0083 75.8389 29.6636 75.9585 29.5737 cv
76.7686 29.603 77.5186 29.6187 78.2388 29.6187 cv
78.9434 29.6187 79.6934 29.603 80.5034 29.5737 cv
80.6235 29.6636 80.6235 30.0083 80.5034 30.0981 cv
80.0835 30.1733 li
79.3936 30.2935 79.3037 30.3989 79.3037 31.8081 cv
79.3037 37.3286 li
cp
f
85.0938 37.0278 mo
85.0938 37.7329 85.1538 38.2134 85.3486 38.4526 cv
85.5435 38.7085 85.8135 38.8276 86.9087 38.8276 cv
88.2734 38.8276 88.6934 38.7827 89.5786 37.0435 cv
89.6982 36.8931 90.0435 36.9536 90.1484 37.1333 cv
90.0732 37.9136 89.7134 39.1577 89.5034 39.563 cv
88.7085 39.5327 87.2686 39.5181 86.0386 39.5181 cv
84.0288 39.5181 li
83.3389 39.5181 82.5889 39.5327 81.6587 39.563 cv
81.5239 39.4731 81.4937 39.1284 81.6138 39.0376 cv
82.1836 38.9634 li
82.8589 38.8735 82.9487 38.7534 82.9487 37.3579 cv
82.9487 31.7788 li
82.9487 30.3833 82.8589 30.2485 82.1836 30.1587 cv
81.7485 30.0981 li
81.5986 30.0083 81.5986 29.6636 81.7788 29.5737 cv
82.5586 29.603 83.3086 29.6187 84.0288 29.6187 cv
84.7485 29.6187 85.4985 29.603 86.2485 29.5737 cv
86.3687 29.6636 86.3687 30.0083 86.2485 30.0981 cv
85.8584 30.1587 li
85.1836 30.2632 85.0938 30.3833 85.0938 31.7788 cv
85.0938 37.0278 li
cp
f
94.0938 37.3286 mo
94.0938 38.7378 94.1836 38.8433 94.873 38.9634 cv
95.293 39.0376 li
95.4141 39.1284 95.3984 39.4731 95.2783 39.563 cv
94.4688 39.5327 93.7334 39.5181 93.0288 39.5181 cv
92.3086 39.5181 91.5586 39.5327 90.7485 39.563 cv
90.6289 39.4731 90.6289 39.1284 90.7485 39.0376 cv
91.1689 38.9634 li
91.8589 38.8433 91.9487 38.7378 91.9487 37.3286 cv
91.9487 31.8081 li
91.9487 30.3989 91.8589 30.2935 91.1689 30.1733 cv
90.7485 30.0981 li
90.6289 30.0083 90.6289 29.6636 90.7485 29.5737 cv
91.5586 29.603 92.3086 29.6187 93.0288 29.6187 cv
93.7334 29.6187 94.4834 29.603 95.293 29.5737 cv
95.4141 29.6636 95.4141 30.0083 95.293 30.0981 cv
94.873 30.1733 li
94.1836 30.2935 94.0938 30.3989 94.0938 31.8081 cv
94.0938 37.3286 li
cp
f
105.688 29.7681 mo
105.688 30.0386 105.732 31.2388 105.868 32.1079 cv
105.809 32.2886 105.402 32.3481 105.298 32.2134 cv
104.893 30.8188 103.934 30.0688 102.479 30.0688 cv
100.813 30.0688 99.0283 31.4937 99.0283 34.478 cv
99.0283 37.4634 100.753 39.0679 102.553 39.0679 cv
104.368 39.0679 105.208 37.7632 105.613 36.7437 cv
105.732 36.6235 106.093 36.6685 106.184 36.8481 cv
106.078 37.9585 105.822 38.8579 105.613 39.2026 cv
104.803 39.4282 103.738 39.7583 102.568 39.7583 cv
101.098 39.7583 99.5977 39.4126 98.5332 38.6177 cv
97.4531 37.7935 96.6289 36.5483 96.6289 34.688 cv
96.6289 32.8579 97.4082 31.5688 98.4434 30.7134 cv
99.5078 29.8286 101.038 29.3784 102.598 29.3784 cv
104.128 29.3784 105.238 29.7388 105.688 29.7681 cv
cp
f
112.244 30.0688 mo
110.398 30.0688 109.408 31.7935 109.408 34.2983 cv
109.408 36.1284 110.054 39.0679 112.498 39.0679 cv
114.463 39.0679 115.229 37.1479 115.229 34.7183 cv
115.229 32.1538 114.104 30.0688 112.244 30.0688 cv
cp
117.629 34.5229 mo
117.629 37.7935 115.438 39.7583 112.213 39.7583 cv
109.199 39.7583 107.009 37.7778 107.009 34.6431 cv
107.009 31.6733 109.229 29.3784 112.363 29.3784 cv
115.483 29.3784 117.629 31.478 117.629 34.5229 cv
cp
f
128.233 36.9683 mo
128.233 37.9429 128.233 38.8882 128.264 39.3833 cv
128.158 39.563 127.738 39.728 127.379 39.728 cv
127.363 39.728 126.868 38.9634 126.163 38.0933 cv
122.698 33.8032 li
121.828 32.7388 121.334 32.1079 121.063 31.8833 cv
120.988 32.0337 120.988 32.2886 120.988 32.8433 cv
120.988 35.7534 li
120.988 36.9683 121.049 38.0933 121.213 38.4985 cv
121.349 38.813 121.693 38.9185 122.084 38.978 cv
122.504 39.0376 li
122.623 39.1577 122.594 39.4731 122.504 39.563 cv
121.693 39.5327 121.094 39.5181 120.494 39.5181 cv
119.938 39.5181 119.384 39.5327 118.813 39.563 cv
118.724 39.4731 118.693 39.1577 118.813 39.0376 cv
119.068 38.9927 li
119.474 38.9185 119.773 38.813 119.894 38.4985 cv
120.059 38.0933 120.104 36.9683 120.104 35.7534 cv
120.104 31.9438 li
120.104 31.1187 120.088 30.8784 119.998 30.6685 cv
119.879 30.4136 119.668 30.2339 119.144 30.1587 cv
118.724 30.0981 li
118.619 29.978 118.634 29.6187 118.783 29.5737 cv
119.488 29.603 120.238 29.6187 120.854 29.6187 cv
121.363 29.6187 121.799 29.603 122.113 29.5737 cv
122.264 30.2485 123.238 31.3882 124.588 32.9937 cv
125.848 34.478 li
126.508 35.2583 126.943 35.7837 127.288 36.1284 cv
127.348 35.978 127.348 35.7231 127.348 35.4536 cv
127.348 33.3833 li
127.348 32.1685 127.288 31.0435 127.123 30.6382 cv
126.988 30.3237 126.658 30.2183 126.254 30.1587 cv
125.848 30.0981 li
125.729 29.978 125.758 29.6636 125.848 29.5737 cv
126.658 29.603 127.243 29.6187 127.858 29.6187 cv
128.413 29.6187 128.953 29.603 129.538 29.5737 cv
129.628 29.6636 129.658 29.978 129.538 30.0981 cv
129.268 30.1431 li
128.879 30.2036 128.594 30.3237 128.458 30.6382 cv
128.293 31.0435 128.233 32.1685 128.233 33.3833 cv
128.233 36.9683 li
cp
f
139.992 35.7983 mo
139.229 37.6128 138.822 38.7983 138.479 39.6382 cv
138.357 39.7134 138.178 39.7583 137.953 39.7583 cv
137.773 39.7583 137.638 39.7134 137.548 39.6382 cv
137.383 39.2329 137.128 38.438 136.918 37.9282 cv
134.488 31.8237 li
133.918 30.3833 133.844 30.353 133.363 30.2339 cv
132.764 30.0835 li
132.643 29.9185 132.688 29.6489 132.823 29.5737 cv
133.588 29.5884 134.083 29.6187 134.863 29.6187 cv
135.553 29.6187 136.197 29.603 137.113 29.5737 cv
137.232 29.6636 137.218 29.9487 137.128 30.0835 cv
136.678 30.1733 li
136.408 30.2339 136.303 30.3237 136.303 30.4585 cv
136.303 30.5786 136.543 31.2085 136.902 32.1079 cv
138.223 35.4829 li
138.434 36.0386 138.583 36.3833 138.688 36.6382 cv
138.809 36.3833 138.988 35.978 139.168 35.5278 cv
139.723 34.1187 li
140.098 33.1733 140.729 31.4937 140.908 30.9839 cv
141.013 30.6987 141.058 30.5337 141.058 30.4438 cv
141.058 30.3384 141.013 30.2788 140.652 30.188 cv
140.218 30.0835 li
140.098 29.9634 140.098 29.6489 140.277 29.5737 cv
140.982 29.603 141.553 29.6187 142.123 29.6187 cv
142.633 29.6187 143.082 29.603 143.518 29.5737 cv
143.638 29.6333 143.652 29.9937 143.548 30.0835 cv
143.158 30.1587 li
142.738 30.2339 142.527 30.3687 142.332 30.6831 cv
142.003 31.1782 141.598 31.9888 141.088 33.2036 cv
139.992 35.7983 li
cp
f
146.697 35.3335 mo
147.043 35.3335 147.117 35.2886 146.998 34.8979 cv
146.607 33.6831 li
146.398 33.0386 146.203 32.4233 146.068 32.1079 cv
145.918 32.438 145.678 33.0679 145.453 33.7583 cv
145.078 34.8833 li
144.943 35.2886 145.018 35.3335 145.393 35.3335 cv
146.697 35.3335 li
cp
145.093 36.1284 mo
144.732 36.1284 144.688 36.1431 144.598 36.4282 cv
144.043 38.1685 li
143.953 38.4683 143.938 38.5884 143.938 38.7085 cv
143.938 38.7983 144.059 38.8882 144.479 38.9634 cv
144.928 39.0376 li
145.018 39.1431 145.048 39.4878 144.898 39.563 cv
144.373 39.5327 143.773 39.5327 143.143 39.5181 cv
142.633 39.5181 142.288 39.563 141.598 39.563 cv
141.434 39.4731 141.448 39.1577 141.553 39.0376 cv
141.958 38.9927 li
142.318 38.9478 142.618 38.8276 142.873 38.2427 cv
143.128 37.6431 143.398 36.9233 143.803 35.8433 cv
145.152 32.1831 li
145.498 31.2388 145.783 30.7134 145.738 30.2788 cv
146.458 30.1138 147.013 29.3784 147.043 29.3784 cv
147.238 29.3784 147.328 29.4536 147.388 29.6782 cv
147.508 30.1138 147.688 30.6685 148.063 31.7329 cv
150.103 37.6128 li
150.418 38.5132 150.553 38.8579 151.107 38.9478 cv
151.678 39.0376 li
151.768 39.1128 151.798 39.4731 151.662 39.563 cv
150.943 39.5327 150.133 39.5181 149.353 39.5181 cv
148.604 39.5181 148.018 39.5327 147.328 39.563 cv
147.163 39.4731 147.133 39.1577 147.298 39.0376 cv
147.777 38.9634 li
148.123 38.9028 148.183 38.7983 148.183 38.7085 cv
148.183 38.603 148.078 38.2427 147.898 37.688 cv
147.492 36.3979 li
147.418 36.1587 147.298 36.1284 146.773 36.1284 cv
145.093 36.1284 li
cp
f
155.354 37.0278 mo
155.354 37.7329 155.413 38.2134 155.607 38.4526 cv
155.803 38.7085 156.072 38.8276 157.168 38.8276 cv
158.533 38.8276 158.953 38.7827 159.838 37.0435 cv
159.957 36.8931 160.303 36.9536 160.408 37.1333 cv
160.332 37.9136 159.973 39.1577 159.763 39.563 cv
158.968 39.5327 157.527 39.5181 156.298 39.5181 cv
154.288 39.5181 li
153.598 39.5181 152.848 39.5327 151.918 39.563 cv
151.783 39.4731 151.753 39.1284 151.873 39.0376 cv
152.443 38.9634 li
153.118 38.8735 153.208 38.7534 153.208 37.3579 cv
153.208 31.7788 li
153.208 30.3833 153.118 30.2485 152.443 30.1587 cv
152.008 30.0981 li
151.857 30.0083 151.857 29.6636 152.038 29.5737 cv
152.818 29.603 153.568 29.6187 154.288 29.6187 cv
155.008 29.6187 155.758 29.603 156.508 29.5737 cv
156.628 29.6636 156.628 30.0083 156.508 30.0981 cv
156.117 30.1587 li
155.443 30.2632 155.354 30.3833 155.354 31.7788 cv
155.354 37.0278 li
cp
f
164.354 37.0278 mo
164.354 37.7329 164.413 38.2134 164.607 38.4526 cv
164.803 38.7085 165.072 38.8276 166.168 38.8276 cv
167.533 38.8276 167.953 38.7827 168.838 37.0435 cv
168.957 36.8931 169.303 36.9536 169.408 37.1333 cv
169.332 37.9136 168.973 39.1577 168.763 39.563 cv
167.968 39.5327 166.527 39.5181 165.298 39.5181 cv
163.288 39.5181 li
162.598 39.5181 161.848 39.5327 160.918 39.563 cv
160.783 39.4731 160.753 39.1284 160.873 39.0376 cv
161.443 38.9634 li
162.118 38.8735 162.208 38.7534 162.208 37.3579 cv
162.208 31.7788 li
162.208 30.3833 162.118 30.2485 161.443 30.1587 cv
161.008 30.0981 li
160.857 30.0083 160.857 29.6636 161.038 29.5737 cv
161.818 29.603 162.568 29.6187 163.288 29.6187 cv
164.008 29.6187 164.758 29.603 165.508 29.5737 cv
165.628 29.6636 165.628 30.0083 165.508 30.0981 cv
165.117 30.1587 li
164.443 30.2632 164.354 30.3833 164.354 31.7788 cv
164.354 37.0278 li
cp
f
173.353 33.5181 mo
173.353 33.938 173.367 33.9683 173.772 33.9683 cv
174.807 33.9683 li
175.587 33.9683 175.768 33.8638 175.917 33.1431 cv
175.992 32.7681 li
176.098 32.6479 176.473 32.6479 176.547 32.7837 cv
176.518 33.2632 176.502 33.8032 176.502 34.3735 cv
176.502 34.9429 176.518 35.4829 176.547 35.9634 cv
176.473 36.0981 176.098 36.1128 175.992 35.978 cv
175.917 35.603 li
175.768 34.8833 175.587 34.7632 174.807 34.7632 cv
173.772 34.7632 li
173.367 34.7632 173.353 34.7778 173.353 35.228 cv
173.353 37.0132 li
173.353 37.7036 173.412 38.1831 173.592 38.438 cv
173.787 38.7085 174.072 38.8276 175.168 38.8276 cv
176.473 38.8276 176.982 38.7827 177.808 37.0884 cv
177.927 36.9233 178.302 36.9829 178.362 37.1636 cv
178.302 37.9429 177.942 39.1577 177.732 39.563 cv
176.938 39.5327 175.497 39.5181 174.268 39.5181 cv
172.317 39.5181 li
171.598 39.5181 170.862 39.5327 169.737 39.563 cv
169.617 39.4731 169.617 39.1128 169.737 39.0376 cv
170.442 38.9331 li
171.117 38.8276 171.207 38.7378 171.207 37.3579 cv
171.207 31.7632 li
171.207 30.3989 171.117 30.3081 170.442 30.1733 cv
170.067 30.0981 li
169.933 30.0083 169.947 29.6636 170.098 29.5737 cv
170.803 29.603 171.537 29.6187 172.258 29.6187 cv
175.438 29.6187 li
176.397 29.6187 177.252 29.603 177.447 29.5737 cv
177.462 29.813 177.567 30.8931 177.643 31.8979 cv
177.582 32.063 177.237 32.0933 177.087 31.9585 cv
176.922 31.4331 176.712 30.9839 176.518 30.7729 cv
176.232 30.4888 175.782 30.3081 175.047 30.3081 cv
173.848 30.3081 li
173.353 30.3081 173.353 30.3384 173.353 30.8931 cv
173.353 33.5181 li
cp
f
183.942 37.3579 mo
183.942 38.7534 184.032 38.8735 184.707 38.9634 cv
185.308 39.0376 li
185.412 39.1284 185.412 39.4731 185.308 39.563 cv
184.332 39.5327 183.598 39.5181 182.877 39.5181 cv
182.157 39.5181 181.407 39.5327 180.522 39.563 cv
180.402 39.4731 180.402 39.1284 180.522 39.0376 cv
181.032 38.9634 li
181.707 38.8579 181.798 38.7534 181.798 37.3579 cv
181.798 36.6079 li
181.798 35.8579 181.782 35.6187 181.393 34.8237 cv
179.607 31.1333 li
179.308 30.5181 179.173 30.2788 178.647 30.188 cv
178.138 30.0981 li
178.003 29.978 178.018 29.6187 178.197 29.5737 cv
178.872 29.603 179.428 29.6187 180.313 29.6187 cv
181.228 29.6187 181.992 29.603 182.502 29.5737 cv
182.638 29.6333 182.667 29.978 182.532 30.0981 cv
182.022 30.2183 li
181.752 30.2788 181.662 30.3384 181.662 30.353 cv
181.662 30.4731 181.737 30.6987 182.053 31.4038 cv
182.757 33.0083 li
182.982 33.5034 183.268 34.103 183.447 34.478 cv
183.882 33.7437 184.303 32.8735 184.707 32.1079 cv
185.277 31.0435 185.487 30.5483 185.487 30.3687 cv
185.487 30.2788 185.337 30.2183 184.978 30.1587 cv
184.632 30.0981 li
184.513 30.0239 184.497 29.6489 184.647 29.5737 cv
185.247 29.603 185.787 29.6187 186.327 29.6187 cv
186.897 29.6187 187.362 29.603 187.797 29.5737 cv
187.978 29.6333 187.978 29.9937 187.857 30.0981 cv
187.467 30.1733 li
187.197 30.2183 186.912 30.3237 186.747 30.5337 cv
186.522 30.8188 186.147 31.3579 185.427 32.6636 cv
184.482 34.3735 li
184.092 35.0786 183.942 35.4536 183.942 36.3081 cv
183.942 37.3579 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Cicia Lee) ()%%Title: (Silicon Valley Club logo 2011 v1-o.eps)%%CreationDate: 3/16/11 10:29 AM%%Canvassize: 16383%AI9_DataStream%Gb",KM.4rRoC2JUIL"=['FHQU<\"I`rV6TM!%EK-oLbZV+YJfBqOm>-qJTtYB=3oaMpPLT8Xj4sa3<o*].<@;2+I1GY<REf(qmIc%oj"[MU8TO][jjP=ZFBS$s"p/+gXKaFWJ3;*6U5Fb(;u?:8iNnuYoc6Gf'%4)OUPlXPL4)"SMiujd:@R8Z<)Mm*-_73UbeHEFD"V*%XZ6Z/^#R,F5Nk8%?^rC*gJpIu&aUU?NmFWZQc\WpqOPD4LSocM00("o:QsYQ$[=eQ#N;rar@")Y!8Zo,Wb\<VS53dm$]RaNg0ssM%ZR:gg<A/Bmc0N`Zq<5eA<ZC7-F_[UOFl8#o'm-sZ>0'7B#__$N98Bl7J7I$Z[9oLP0Dj5OUc[n'L;.$Ge4rKnMsfX@i!3`n5J:eK%Hh?Z-E\SVWB8KdphiY;H\.mlqoQT+(po@T/\<>Ab(=b)QoIO:7jE3]_qf_Wudd8=o>+#.sG1?OVi3Y"B:$F`&Grd#mPNTj_$o(+G%9Io^Je4Tug';g7ld!_muGE=ucSJjWV:0o8'OJpQ7Nca0]7Q^dSr'C'o18..S$(d*>iNpoB$;65/9'O3:Y8R_N.RP#o_m)?8k4"(r%PNHrN3t7/Oi@mBC#V0s%@e+'XJ(Yq#f%>\spF#oG.QXg)&UdR\e0=5YR/\O-J`tc<)/@A]QCEr`EBlN**RP#9c9]*uh*,f%oqH10%K**S4&;4Jm46lst%9rp,ntt,c4%#-Ri1KJuG:E'/*96d*PG,^O5CFWGqE@+9I<sW3?uP<V-+8sLs,n"!8VsRFlu[Kr36!jrN,@Pk%eIR.=X#S+"p`"\&<m;u"C,W>0Z\_JH9l/;Ci6tFk9'kBui:B^!q@LZ"0B#8SdSoMSc[ER6LYo?OdY-M_("1$bdPI[)^LJ4Y#eqV?%bR*Qm1uWZV$Rrs]3"kb<7Ri:)449*Q&W/F(SA\-j+'Tmop`8+23XFd=6-P2+`'rYuI]&c*3FP^n'5fWg@a8c-/a+:b6Mg15N^PBg%<7<X,1&Qm1O?QuZiX5?IqX?TGL"+NHj*/?[+o!'^+as-V<fs22pe(/<N%>'e3Qhr:)<"(ja&^,;jpP$]fH]O3(X5Sto6O7AreG?P%3gNI8%XSl>oG$Q-n(<NY)sJT=:ga-\D32?O*_SEW%WRM@+R*JUAm&PV6d/,"8/>;\GYO%`KH5''js@_bk.Dm3)rZgZG]k!rqU9N^%8!oKPOu1XV'5qQ;Nqu9:Rqb%XWU-muVOGJO8nFWjS)li!5O=r`&8QU'b08sh*=sIX,kb!D_72874>2[e4^HZ:s6qC=79BKkl`^;a%5Ns9d0)V(8UjnZC+<X5OPQ$7ZrLNq`Io/U`7hO&fl$r@e4\:.O^IEkT:4L^,b$M,;ORsq!CU`QsoI'TYbWiDr\9@Y<es66s^Z[&l%kD?&A3\;`CFMbK<nN)6ji4"#c56E!W-TM-\E-UXQ^`@0@&Cn+IA('6A?AEN30uWAloPQ[`"$aJZ'@QpRLt_D*n@-7kn?KIj'B%>c%Ui=fCiP0]_J(J1De\kchkX_Td$'_D3FoW=+N!.GbKE4VA4i.t"4oGT",LqpL[VF=56Z8lo5YhPXgFE+H[Bb.spl[V>0SdF/1%;F8%8E:XtRN'X>OQY-.*aoSH>N-=7)ZPM.C'FRiMN/H:o+Y3C_8%FY+Qg%'glqa>)HtY:^fsQu)*^Hjja+nq.hXg[4XMT&N;ikr3\?_'%NE"T;re<U3$V'Lpn+h187P2SJ_?joK[,ohf.1GJ^mYUT#IVRuO%)ml-6NM7^K@MGTkYoMc3'-OWAf`+%>$@RNdpi8%3_EW+CjO>`%5>e.YY)Bu5rRC+A/&_ZG(lI=!-fmmb[tIh;k6ie<d"g5]KtKaDP=0!6_Yf\E'PQ_;OUE;"@Ad,YF$2ArdE:KA[6e%pP\pecQ\t+U%%=2[FX8("h3gq:t!_UaBW$f6P34$U(QAq)k(r<99W>21R>bAEU,_B^:jA]>I=qgQC0Xk'cq%OcSPGDB3E?@'$dKF,%>.?&p`b(M6%FNnpR;"kB#kK0kMbVf#(SR.)$=0bh=91UfS`/%3H3Pej1MYPJFbl!U?>ZjV(.eV"6osC@RSMX@^kDfl7\s@PO+#Kh40Btj0P0ANS%lr\:gn>4nuI:C_S<#E$I'k#lJjtkc+:5A_nWWAt$pWB*$I(kcD]&p0&\>U^[LptIs7II1R@G8cQ*3E(\bGOjfFlJ3pflE?_&B86p%M4[u2A^3?04N'6!Y$go49-*=Z[Ti)-Q4/2*`]:F3QM&V,EqZ#sAD*BgU#H:QX"]fH=pJV;;bh%4X%/XFEQ'ascF68<HRT-P*nqI"%H&aXtXIE?=p'7s26j<BFdKu'P`>A7@C)1%rj8mCKaZe.5/I>0siS7&S=8"no_`a6TMFi[?h.6IGWh8u1OeC:("blH-l,GS*S.L2"%!A.%2T3`O0YolPFl@4YV$--$;AtH)Ydn%tMqaC$Nfb?eRP],`l84+V!oRq?#C$+S,%BbS_a=es5;f%1,)0>/Mfh[Dd2Xd=k.7U).%%CG!7%V4>T@5_`%"s(p+^ol'\>S^WjHT&?a.u![6j[7"EL*%9*+@f;K8BUG$`_0`j]f:1d-oHG0@9F!'&9GmlAKA<Q5A>:UD17PJ%\RV-KH5]Hk[1Tkj>]=#&&WVNuC(o3!`lL=8'0RFO3lsTL7E^\#;:^?19YH_:/"Nf+9IO\LUr^V=l3:.BQ60<tU`H5+U4s:tA._Xm%.GbKfl-GC@9l3C"ZpN=E,s^Q(&ScE`U._p_*$(7!+O4A:Ntqu`Akbs/>LM-qpHV[#rWHk#qoEm>MI?lCdao2^MG^I?`mHUmpEjg<%Sm/<nS;Ho`]Wg8O.$<jC`bTmrQGu6gjB4:s3[;n*="5fC09T;!7NM029`3c,kT%T$2P0SlYTcY-5&d+Bd1k6DNZKq+hF)DXV.D7@%hBY&QQm3)q.W5PTl@bMLX>'4LEtDIL3;#d&$SWR!8!jbFbU?CN02Z&HjGRtECisV0>FmC0lTkI:'A#dX<GlVA[)M?,g.'L#)HnNW%:>)85hH09KW'FUU&iC&DA>Q!nqQhOXZunt39XSn'ZTu`5\o@kY?1e\=le5PNCY_A4\"gC[MIE'+k"m*Mk#JG%bWW<TBf95J&Zi:Z%&URKCGNNBR)5K/Wo3>2e::t*tk88mEd,Zl8Gs*s$93GA(ceV1!:7XC8U^&A)BUP.HnU2=44H[dJQ.;h^at^<6@d)?(A-nOfF;2b>%N]c5Q;]DD+6cq>k1&S$<R7qZ1_OPT)?:4tN:=MJe1Q;Go6]J9!19n7tXjlp'*T5>5s((.t"Ne*@XZB"Qd+21C>ia5PkG9]..R*?'%TKEt[=3I&lJu<`ursl_BDB*>+I$:3"3!RF/b-n8BW"[5Y*(BhuQ$81c4ft!KEbWgo(M'S$o#c(VY%+07UR&i>C<`M`DrMJUKb?dL%\:-hjEO9,'GM?*)csCeT:\Ni0*sbV"F^<=)5?7.uF&8+,C':+I.J#[)b&-^af3s#$\]4@C;f-I/*6VqBmYu8Lq4/".r1([ds2Wt1%_jW!HV0aclT1;kPaOD6]ogi`bFT"r.0)AqD$D!nX8Y*0:<%4L8S:@=68S6Ed-^i5fan6.CmX\ChrQ3TGr;TanV&<s[boF\c6LKDN%m9s8KiOm++<+g[iI#`@scO$[/lfSlA7/7UuJ(%A`1OR5U^1/pG?/m+H;>-kUYm80?`IRNjaO$]R@;f^E>?iUOT41"MCTj2IJEk)+%oi=pWLGODY?Y.2nXsU$oJ9d!t<AVPS9P\F?bfH4F<joK.Ke(KunmrjQ<KH)'[^BQI:$X$YP'1#S8tg^4X)f&S9^BdZC`)YFpdU1@%IY^,<n\;JPYWfd].8s!Bok`r_R>.a*?:fpTmk^U%"q+Yd!:%TRQW[M%FdC?)[p!N`fkKc^--tb#T$IQqd%XAPcOH+?\q%g1o&(sH%YUsih_6Z7aMg1cT0Oh20gbdHbK#`bd;(DAmk::f4>**:4iN-<`4:Y*a2UCE0T#73ImI`S"FidZ"7U.J%EJNks2NRH-XESul)R87@%[)ca/$AUXc>[,$SZ!<0m2AP2f?-_IMLH?L3DoQ;Bm'F6ZQl#<qqpRk\[PX4n/Gs'Ac:Y@eVGcl$nX"G=dhk?+V%P=q]B85A[c)%m%i@Bq%XDfYgCub,1f]FPc?fn9S9cRHC^I>lQk,leg3h9"]$6t7oE09>/8nXH:8ii_BcC<do.`rKaGQi\EB([==`OqCsg=0T'3GCmc%7)-\f2Uq<$2N5;"BIrX$/s*FDcD4]DP-n[:%3AZ$BoZ<PT6RYL!u9@g]WIs^BXag'(\?4\7:Tl=_)d<H(*mM>[`-t(`D4M2+JXGY%F@"L[Vh"VuhMY[((16ODFRmim\7Y01[)@m8am^q_4B0k"<o@PkOHPtja.o0DGLUM'Sl`b&NRDr[k*<B^IR_@Ep0n1f'*UK+3ut?W%>J07^r`6.;c7/YmY.*IO'BD.i/nc;=k#>F+8m.7b:T]YbHYrQ,To-sDV[XE</m,JZqTM6sQWDp%k639;[lLJ?4'LPNB9-1*#$I>I%aj%:?^;cS/[+ENBPid,j]gHP+e>'ZU.NIbWRA;<S;2g\$nH('W]LS6-6K`cj[Ba5$K<6sGTaY+5e]^Zr:,:iu>rFm237Z/m.O0!K%J&[Mf24HD#9gLkEXVO,>Miie6M$6OadGN$oDpp;/7Cn_:ZkhU[PB>=rFH0,)h_omV'f'FL',>e3l"`@&>5F_PJ!)[*RJL*0I_do:%Wn!2F,c\(iQ"=OMV!q9oO]:pqFhL39$s!7"<R"cUruP[)9<hr;Dm)=jiLsr]XZ<u.;sR@G/q#\s%7W#8RJC,O3D*oT0qJ2BIiglr%60nL]:LdHIX!c<biF!.VmS?=Dn\a>=W,f#s)kA8)B9Va41oif#q(k%%?*@S`JFp=GH%2.0])D0lPll.5h+:M@LX93&aZnDODC&qj%a[OpST^C_(A2"p+_\u'ifW5#(SW)/2I5pF#]9B7HRun6XYMi%hGa+5Z_DW5fR7tZ:0\&TLa\B"6Jb<]/M7U%bC1E>6HW)^YrL$*E%@-bip3lQ1;PA4S_T:T,VNCF"+D"`u/?%Wk+gQuE16e,W?A4R,4S4PZ\cW$O\8iI-b?9SHR/G&)MmU4Ck3U)RMqkljr'Ke<1dBdZm%lg;[5B[EAXV"/%^%_Ip-s)a>B]q*H3McHMq2pV9;*XJLGDCN#hM_SQ9WZI^Ta,(^UG2?(JO3E-j0j%i<`pW<!0YX:8(g<!h:V+5'%R.]44[_kKN-A#4Ql]hMghY*p,HBhhe?WY$9[+3_u"(M2<'6V0Pli\?Vn\N,Q*QX/mm<5PdCcC)@G2/,3@9^0m[V5PTYO/bQ`b`+f%X_+W]Wjgtg<,%%<#m#coq(8f3@Ss>^DRQ"YAtrLI`m(G"2J"[XMPf;'RVidDI\Y_424BLoUY^eG;'Tnu7aM\U^Yq'*L/Y'qlKrnu%hQ/[$lDR-7XNPod(NmL\e_N:).WIOf`Qbmn^+YMA3/hDg`$4nb06UhQl9t$<'fDaU<0-#eW^L8@UEC23+*itf6-p@T_cGCu)dtmg%_^Gp\)$Zc?rQkpXE6B9TQ7^dS%9]%&N+=?5%&B!!oV=".9$dmu!JG#M6Z!6%5o@Zc#]N_b$f&N0*RPXaMMd.eMc`@k'N,'##[_hn%'oq2AgO@=aq@14-a*q"X6XT\@07;[OI+NSXgUFk^fCTtf*MS)*$U*_XT(%-Ro3BU]4)Wei\P9Qlf%nu<gsD=2#Kl^FcZNNkikRlI%3!%fXJ7/q))ZaCXN:#P7J9r$/\p)qsJ5">O03JbBLSLM4Q+c2tZn\\m.E&U9^n=DsAYbgWD_o6&$3\sJ_$r2PgK)1Liemks,)ejI%@Z5ntU5ZsJif!s+WsoaZ`>ZKjpU1]Q&FbR?nV33JP]W/_W(j0%Ulp"fHD)T+AKR`j^Ds'P*Mj!XFUOnB^)@__#uh72$iC&D"Pj?K%IRp:[W$OcEMQaD+;]:9qNmaDWd[dhp+8Dia2/4U@C++5)/!Zj48:?3g9Br]GIgQ)8lRrd`.dDe)I6%"&UI/B2*+)bk#?1jP&!TP6%njlTO#dgQ@>1Ebug/05@5heEJ3W[q^5mnpa`]@dE;pjK_4*:f#eH<K"oq2@YN+YI$;!C$>FqY_CY'1d,TqM'"BYONt!%J6I+9K/O%='%VT^s[D$U[W=*G99@BnmjPX./IH3842pG"`+8F!\7Qq=<AB>/=3R@\.l2ORYKg<$W[a<&CqIqe5IkK.^7ER>5D'P!fBBO#m`.T%91_k`dieEPR6oRn)+.OoR7#Xp)+7UqR>`Xg4GfuC\g07PrPb`rkTYDbUlR.t*q/?DT),+`JP%L<d,@$)WX3^oL=u)8NsEf[5j9RC%Ifr66%`SM#Ziq^t49s)`#Ne@'foQrQ+*\-e%ec\)]P.K-0KN;S%kN_@b9Oh)7:;#<@$4>m>/68\E55S$@'g%R0/.l``Zd*LFj[.<%BXO(FF92[uSqiY?i%"dh(kOoh,7/LsN_NW+[c38KL=65,MW4hI:.$_9&K'+\Y./:K5XF+]JIYdi5Sn5k9F"U$dUaW,dkOs?&.U#T%l6Mg-[Zb9p&mQ,V(1%\^'OVV`']Mqp6&LpUUG+Wk*jq5'\(/ne9!D1";7QQ3a>Z^NauE!Rb'Be#e^]ql2j?@d`4'aB60_>8;=[TX%;>LI%!u(`8+KT6.M!<?OdKS,)e;(Jq(t&`?$IfI5%+Ga;%b)$=&C_;g,o'u4>"VfK9%Z[?>c$l&;ArRTWN68;:9<eR_rslhR2upg%$JH_9QUm6dA[P'sUp=[0:omQr<%VYo8[2C*P]Bcg*=[sRfa;>lfZ$Na0j;RH`p0B891d)Tg=\nV*:9O+Jo3t+$]?nYXXr1/ZF":\%akDok-&]r)Q`Mgo?#=j;`q[!$n[6Up(gq31D$s#qQn<9s#$4Xa(Q:&;@:OtU%;t9DE1mH<A.1/]?S]>iZFnoZqSqYeg>8!p,s2!H%"^0r2oN,7H;*;aiL9apq144PP^<d4Bl:\-13kL(kq%\$lh,A?E?YVaRWL(&VM3a;4P`1?[Nk43oap:TGb)'*'K$o8Ai`Gb8<Ykp0%M,&iC2RPM=,t'.N-qLTU-5<@SX_+5Z8e<=/!%rL"-&'3+-"JS7Q'A5@Yf04BkdHRP@\e7E7*ee@jsU7P;\=,9QeF\Xf4_%`R$DmC%bXJnifup3-1N,(WeZ=kc<0=E7nZTBkQL/5KanCoMW3;srZD,L%<jX;%@nPmJ$n@ZE:H;/T]n3Pj/`g4Vg:G;HonLW/P*Has-)mIk%[]Wf^N\\.^jjKX@n2?N3Y:HLm.2*[N1FuO.+Oh4L3f%C%"=khP:ju#j(2XdsZm]`lJO`(]+E_8)nVdF$k">kL'kP_e9:.BiqXSZ6%m_Y<SIT>`!Q@3=U"1#jK(mm7Gk`d`\CSBcZP;9:S6MY+CYb(]2blQY&7KE.WfLdSo2Ue(-g->d@l.&%?llh7Y6XLbe[;cmh9faIj%a]R6uqZD.N?pBr7:aK!3ZXg.SVoQq:EGJr<7+IP[JT#;.L0E,$NT=7P4CB$t?e%d2M]Zl$Ys3s"\q=guBb:O_lq1!ai+ko`Bp01X%VWFb#(0n%.E'4n??#&*h_4;ZQjp+Nt]'YZL>uL89-T/NQgTL%S/%k7Y^SQXnh8[G\2`>guTXtZ[:LF:sQV/#KhIf.94dL@G=`V)I%\a02/h(E%7>ahp9Eu%B]NgUB`d^_BZn=Q5A9p8`Qkc]8UP"b[:*MiL(*[hGLT]UoiX+!Nu$g>pEE"P$YHE7&C(4Q2qJ:CWhohkCK%hjeFW_1-d2WtH66V]M[\!.X*"cG1FmQ_T$?eaH9j"Qt7,*_&;Fs1b#'<Ge^8EC>Tj%*fUF_CWO:6;*ij6XfXrS\1C%Y$]Gr0Mj=Z%4/!S?YG"`D!ccP=K$bDO8"nlBY+?=M'/eD5ePngdMB0g#K,!<l2%`KUOo#m0XIb=5k?5s6j'NLE//l8'NC@*-L,@L*B(uFD5oA!C%U?;<$A7,WX9LLaF\hjcg/V;Z(LJ4>+(I6[bE&@g5DB7?ZEVu2)(!q-RS*"Kp9Q\21:(T2A+GITF15Z0#:\QAk=ZmS>bB3mZ<c9W\%>TtJ#+De;^fRPg"=FflH5VjN#A!gJQLfj6qWl9Du'S3dW6,@5;)+1/*5ueZ(``MQf<+(KP^b_Vc$RBJ,5f1bD(*Q_f+pkU+2E-ho%'@nOchlT`mPYSWB:'&XPE^qokphi>M=SEh;X"tkMgc2H_0$'#!hlD#6r\E]Q!m+X(GVN-t3Ym7INXH4*0f.Mupo[rt:Vmp"a,&P$%s1GRD=Yo0,2?sEa(5rJ0$q:Ot%!X`h.X2mtQ9b`kW925^B'lIU"X'jUG&;4F5ja+)%X@OP;?L/1%66s&b'J`:(qNoPaQb^c'M6]9%20PE8$U?%e1,!r]%9YH5!KPiqE_LXkIM@LGj?@+YC*$K:aE7sU+9f$43j<oG_<e>('\?gG&!d'M37:bu;Ko?%OL>bU+Y`M=-Q7)7%JUij'%r"IT`r_@QEC"mqAO+pf&din3HXXbA8LshTc=s0b=,moX$Z#n*rt4!988&Ir+9f#14Ks,I_<e<n2Cg`(`KIAm;\WV;J8a]i%PlhKN.N:3]'-W!(@0[R,XmUbj[g6U??)^Y,Ld'7.P_0[Cp9pU;@rehb#(m5D*Tf(/JD#ABFrLm6m%ibVHnC!di9L7Z7dNaT+neBY%2<_gW!AC/IU6#JXB+`AQM?l>JZmfn4CL7bX^Jj&2d1^ZWK#bFqHoUJ!,X&l/d@F:VF\&.inGc:6=6>cA6sUd.X(Zf$nnV*\,2]S5%\dd4A5lKFJ+mqV=(gGpN*8';E+ZmaXYSgtR5s[el*2(i6?U?\L&gMi"'n_rO(%Yh4BF"o6)2EaX/.@1u08]g_p]AYt2%pRhD?WuA%B;ZPV(RpAK:Gh!k:8$?rTr1D',B-Y:P;b")M@Io:aJ9&-\3_u'5ejG*JDV>ce-M9Mfthp_f(Z!BJcLLb*]Z]^hc'\G+ELq[#on1B%\+PHH$t=o?20;9_l'2`$:An[Y0V+"2E.PntL#^`h(K(@c2UW"T^aDDMjp`TLMDkMN^<jrI;G(+`!!BZ<Q9,StJer.p#,13qT^TIN%X;abp/qSL`QlcREXTrH)"&Xh10TsZO3/l;e+M[%B%QrP_38sH/&HcO0jTGM6rC%0RPe(Sq;,`#h1G]%7>6A.[(]am:blamIM[#8_%W&]KN,@eu<#GQ2@6F>c5>/Gq/&B?))^k@D-^k;_*8Z.i4I3'LH!<Y&ad_M4^9*k^F16Sib+p.;pY,%AY.+VLOE-NoR%`Itg56f5q%)V8))*Wj]$Ud>cCh-UO+l:#7[K3J[bA6nUVA*T+pO;DS<N/T,,H>#0dM\_ff#bqrB*e>N4PmK^trC@#8+[aN?aHL39O@W[Z2^VH<%iTG?;^7J)EH3hlO3:rVBi\gdj'5231-fT.%=s,&lbrV"1Y`'Q]Knu!X+u&^nOs1bV&-Ce*jT.]I,mhCSB\H]f?9Kq9IN^P^?4]VQ%#_?bX6Nhk:JJ(mb)SkshYVJ9Z%1?>X"i=^e!I\GZQ!r6/06B&QAF0X2(13j&\<58h`""H))j&Q7937o>.@=GK%_N?\)lP?E]a/'_%7SPJQlsT+G>0.-Qd>3l8@U9o:[UJ)Ja3hD4?kfo,8S`k/B1!@.KKqpK1;Qen#q,k`*HB<7O'pSe\fXFGC8)V#c<hDRH>KHD1'9=_%6BP4p,4c%)#fp;;"-43@-C^3>Rg+[g'm[X:M(#$)eQ"&tBrNfm_'59JI,?n'$"*hW+:O[C"rN8[Fk<htTT3Y!7k]+GggkT=N)V(T%ksd9u&S*4\e7mF"U^2LMSQ$quJ1=^RU^Cf?#QQMq9>Z[FM(mf+,<P#G8)[%=q$KDVQ!1co6"ZQ8?aBn@i2Hji9*AZK8Ha\NQJ-6:%PVC@>-#9e^-3f!?W\<*"6(6kE9fL%J"otkHZ?!Mj[NNq,IDNV1l3lE+"J=#37ZRp,k6WB;ObSEQApm$>6Z[gb"RF.HRf3=C,NF27%gOk7/%F"mXj0R$`nu0"D%HD@Y!\37sTHAo7.c4kNJAHV&!-2S</&5+2cb]Yt1\*+r8-?Y811l5+6VkME0tQaCWI_q.pb*[RHBG'_%5biCn_#]jQ-k(nV7LVN0M^'e)N#S4A`F\/HEEs>_p@k.8TlM%m@Jp;hLVk@S=p]A-"3hAb70F#>@I/VYD$WeW,3Kj:p+Z6$=QlOp%\ud>?Qim@'nGjV#@^o47#6;prN)p[Tp)X2<]>\.qn.6QiU[b7l%=k_R1EKSMGhb7m=rDb4R1KX4Y%4dR/m1@<Ji/M>YBnDs!(UI*%+\'7D0P^a'?smK8Lu"C:7]&Bu0ln\+gcorKY4*:/co2Fk>oUui4k:Q[IT6Kd\+9S0"2-*>5T,pi;A"-4:e-OJfFQdl%EA_Yp;=A,%83lG0OpcB_4D`rc6#LCG.PfBO^,Cd$'=]+oVVK6$+C2DhJW;;^)#LH?8l/%]@_KTd:PF/a1]W&3f+C+FflR@CY%4o\VdOZhEQFp7%GTK,+=L3Oq>T_.i*6s8,"Q->4RF<!@(iRh&==>I:J@9a!2ZRr/2YF(2Uk-8#;u*LR!61'udtgFIOl0BVJjX8Q#(g]\oGkOO=JlGX%f`Vmi?u2mm\A1Lb#]s2__"e?oJ-o83gfVS-/Jp'&=TCS45VUB?!>nop!0uC,GguI^:^q8m@2e@K683%43!$6*Z/R4`CS8ul,'AEk%UW0AY;K)UG@/+"<TSPn,Y`-!4>6pUN4BP>)!sfQF!!X.pq&mG(PR20'Dh*<#1!jD?"I?rad!d'MYjg=d-oXW2:iI$[P=\00jSkic%L6X)sA;\0:Z.4`Qm.mU./3om8Q[Fb"3=&He5enM&2>3'[if:a5eMoC/'6,ccefYLZ>fd*3:`P!l^l`_l8M"?^%J0Xjp#?#Q;_N63%UBWEhAjR^B9:$I6aIi\/Pq2rP*i+Y=",^uAJB25QN,kqb"i*;N#H#3Lo_I_%6CS>cFL9'/1_N5*Y"5Q_":QEJd=S'5$ikm%@0D7*%blGT`\:R@X#Zbi7^nI(RO;9^c%&%7/,;^<$Y2Ze=HHdCNTLQ;2M#i1$0\!D/687QeM?md4&I>AK8;5M!239[j9+h[FR@FP:>FP\5%59a\YWA?++$DVTLa<?uo><-5q$Ru.8_FX0,TjkNN-tPteU`)LsSOpi:-Z"KH$:RGI&E^8D6>YtcrF:""&oA'Y4em7a6XgQk5A#b/%+u\WjQ<`L$e2,Hg_n``u2ZZp49fjh*4Fn6!R(X]D[Ka<p=4&C`7A.sY+_)*r!+-YR8q%dg>]PL_PlXb?Tr2FnL0fK.HXM$,56nPL%5T$^q;+j<m)#_1?aYj%e5d-27FIiItiA!$L)Ct;4]$uIeE^`OWG-;K1Zn_k)*!J'D%s#&Z4GrU6`;3G*($HsR2P@Y.YZLs;NtQ4m%"i)t';:-cm".ec[!YEuK!O22EA/51SSNJLZSh=!!^ng;)UI9';aGiP.+>bg3eB&m7nQ71I&\BKCVV5[qYdUN$Q#'1EV?pbJnS.(L%ngn5-)PO&q"HJB:%)`sQKHniT>k+>R)'F$'B"@+Kd(UHOW9k(X&9?8=8<11_+<GNAjU7&"QqYP/YDP2^!cfRhr?-mU#^1TjFo`*r%nIURY&$93%11`$A54]o8ZX\;W5hV"s%2M"mPZ60UTGMT>/C]r2"Ia:5\P=2IQp`1Gc5$)Y@U>QITL_gcOi[&ERA0eep28l(O7t>I%X2eSo]Z@,>"ZiU_T]^A5,Ya<6f_0j37[d=?R=Kb1k*)k$!"9k(<<t:fj)NPhP8sbb+??D,Ff>bH1'L20P'I&RBBI,L.;93L^P[/K%VD'\2.FS2^E^>:%=+OKka4VI/ieF#o\<0?J6k!+]$OU<1JN<j\@9f:.Er\Zn#<m_/2R/Md`]EPmTEk\0eQY<@CYp=@&4Z/K1:$RP%NuE("37`W\!_md0%&b&ZFlJpEiW,,2!3ni5@q2(\jT$:=>gqj.MG6>G.\_hV!mgM,fFP;,mOsP5M8P,]ON%YYhl(2Y3?U8S[n+\b%b33Qu"K2XuPasPeeE7`\,896E/544k8dou#Kjr&P#2lbG+',?]!P's6WRR[I!&,[Zg.H>@%`#Fg&>MW+:n8WU_TaeaJn6Fgl?!Ab%dlLqfM#d10:P9Ra#Jc!/lT!A`\?MdEls>sun?BRI#%3<,!nWI[FC#)8/lH(`_oQ;;i%SSMC8%IbEhZsa3)W,i1YIKh#6E'6an7#D%b2m3O2?In+U4[+H*h*4biN$lhoTBRF"H4APJi"*,Y`;M0=c<@]4k=NfX)SCZ-Dm-:^ISH7"l!uXVW)!VK6@D4\nE#cAf".h[QP(M%P0Suf=WPk_$,+iWJXRJ1a@FGTbWHp+_C4tDT]@(nkRB0FH7i8SN,g)k<:J+8VbN:%$AS`5Bp6;b*/jr$G`e;9?oHCNRW(:i9[i)[%Acf3ZSMang^hl51"$O?#+mj[)\sbc9Che?/X:n&'#,,fP8'HU?YpmX/'-2`?h4(qb1t7Zso_&Cl(EB6U!Gu$j+D8qcCB:rJ0]Z*-%d;AqSglr7\J>Y#Z20I#B,>bnYQf.rH)=tAlVZMrSM)8GW6#88VD%+kn\BSKG>G4tgJ-ru\CFK<gDUs)/B]4bAbp#(ta50(6:+E&L%Uf3_.492qSX5bun!.a*s_^eL[V.]M[,Sd'\BMj\V63@3iB/PL43f],++)>`+@_0hfD.@'#Jrjf%`6CT7`sm<0%L8)c>l)&,,V`:1%ClguEJZ^Xd6KDk]5ZNqDLDCTN9&'FZ/Dth]$%O12?7?%?!/IP:$?URo?.G(%%MDT,FkZ>(cAZ-OBj4gVB"ng0TNjnmMZC)5%o?9-%f)1Q=]3=;I!Q((*F[_5o82]"o"2b9(mE&=!O]YO4Ouh#]>[8u\Vj2V!0':D\FV'2GKcl`Vbd:*^EHr'cmj;Ogaa5W)YZ,[hG<F<i%@@3^i(=gbdafS+=;YrIB!C[rb<+F6r&h2@[(os"H<@o(*T.7D:0(Fl(Ml%(FR)h(g-18;6r37\#8sYFOSAn,.HP3g%(t6t`.Ki)%%glhKR[Z8\fV6_Wh=LLJ^&4U-!`pp2"QiU:lH)Cr&\Lsq[cQ6LtGJ*RKVp[Zn1,/T$dTusu+kT>,cn3Xp7BV=p!Blds;Pd;15akDC%Bf7S_eArI>?,4>Y//Gh]!,`X[=4Fin!0j0e$jlZ`@"f1`AO)\,#SU:n]Kor*h)ZJV@,Q+Qm2<YkOW68uY-'.octj$1RdM6F\WKiF%WOjX'ZGkbn*rolB=9UD-AOk'nB)qS+,%5;Bj>.R7:S&^`el!OP/O9LG2CpJQiSe7,/j@@tPh%)pr!DQnQ3Oa34E2?^g`c@iXYhgL%];-GPUc"Q6GMhSO^`_p-i/.m$jKUP>3sQ$,D!B=e*,'"(V=X,1`1n3$VMZ%4"IcmL9c4)GHuLgiFY*_'Adb*"aDB"o:$7-0'!kuk%;khcG6I6j"m>Oc"aA;,eVn*_P":8W^k"ImT/1(1IR,]N,XUZ7_/o#SBdm8U[gk4W*Ds*Qe4b1B$Z:[/W6B\iEC$:fd0m1-,;oShF%J4"aL:JtLf5j>-U0@2DU%nLKF!f&W>5ThVpd`dA[nnKdA(Ze4^/YrKf)R%Mm_DFGt&F*3b)DA;:%=PpOddHQqVCU.Bq%.IrY\W4A%$3rF7?GRKf5Z=B:brHb#jrdOgS.IA.7NiLc*5I@=f-`r+$D7!RdO93O0:k`-A;Yr'ZV00-LXqJBaXu("%_/o,@`P/]Nf44`aQG:l%/tL@HW056i"l"c:.JIp]#_9WLU$(b%L]A.'3H8Fp*64&KoFOZV#DcUpVg,foJ>!oMkqZ.dcd[WL(%\L<7o`b"aE=nLaJ>YQ8RX"J%A\\L9#*.%qh@'Jh4AOY9X][DZPLPd"XQ?^1H6JlSj/b*iPGeM@V:%k063r'.?=)3&BW6.\,*Q-u!0Q`Uhf0+919L-4K7JcD0SKb<%UPiucaH[(9Xikj!Y+O`RVQ-hM1k9KZ;u&Zd!7TuU+m#7#F1Eh;Vc!M&a$aj[bP[BKC!%lhH/hR!B?k1B\A)uWs-P\t6i/,RDi]Sh%eXO(blrF+RO8hc)?.M9W:.u`k;(so7l!>D@la!9c7JR#p%O>7n49BH:Ho+l%KhDrMpQ173_X+Dhe+>J\0ZS4]/b+XAG*s?Vk>aKN%b]tUj-m<1k*;OmBbU.FET!/I?l+P`,>4gS^]0B<%1amVh%It*Z`(1]Y,b7BRK>o7cM;jaHcP.%OfuD-#;l$,cpJB61-#%liD]T6a%d#mI<C8fHmAi2hU\rn+/#m2A6j-@NtPioH`-_Lm9WR=bl&F?9cLN]O]8QXn,Sd4X9YFfI%j:JB1;;T:tf&hh9'eQ4]Ws.qZn7ao5%Q:p(4Q[YSZ`;-9\RKC_<6b4ERlF`+l?5+6"nc"RZZOmtl\tN\hn>r]O"Kp&eKn0PedmIt\@(`k\2o-2I+IF5K_?&(0%(c@l5f#r-%/1VDGk6UE9]O'h_0g;]P8h5KkLD"8#'HXT-+)-obl):J&LCUL]*14Cc*0CRSh<<@H5S7?OW>_0>A;KORAo-bW6H`*(%#BF7bs'Xk%,db3Z=of("ZP+ePn/26if=8?3jT3em=C=a13'bE&aBMQp<hIc3o2Pq5VNc][M$F<\[)teKpP<Z#k=p58<PasJ2AcR%]5f4lkA"LQ%,QNBJDtC$3?KrW[/p:bA4i5Pc)bgj<@S<I%SiIMtl?h8hjL!r?1C%t(0oXBQ*5,EErNW<A6K%/MNlWALblh#H'Tu6aUig>NVu+ls%0^r3QgpD8Rpq2O&Xu+#DT/ht6$P(frZ5R`nN\-7%pa.n[lj-K,.(\3q=tu<2P(<]X?u=16PBm=-`b$lm.sKW&%/H:!\[I'Kbt0$*%i_e1"bIg-#5fn,I3Wfn^*h78XN<Wc)n=eH9LLf%8nEKBik1D&uo@nZ4=6^6P#^9DGmYs8l:-dZVf#PgF!70GCdb#USE-h*!(Ne.\%o'+dN[ABB+?p^4lg/p]Fqg=GueWUJ"30cj23&+f^,aiQN!AG/K%)"jL"@-'p-;C_k7X+op=lu2@FT?Re^6o]!asI)jEt_5O<(,@"%9,j#(@"uRfZVu5k2tF&E)BZ3f+BVVb^i@g(fM\L1&,dIee%6HQW]l]@YA!J,Hp.b*+^%4O5jo'=BlD6K4Rp:Tlr7$0lcTMc"d`s8%!UYC?'pgdS\u&mUVu=kW'"*"YV'?7'!Zmq5,9ZHe$`e`PmTB&EFqq;t@<D;N\Z1+_K^q:FoJRbB!sVtnV0BrS3XR?h_oln*J9RZ2%1-SbO\`S@/T^*6EVW]<[2jL&0lUYH@('.hI2,7$kmRJ5Tnm.4H`%&2QG6Co@X+?H,<h87"7S<-M@8#3JD5-4bEbc2EG#"E?!$X:b%!T+jg9Z9]Y?f>-\H_A3H50PNTRqMn,]"oc4qDa#0A#@m<@::]m(n%`+)5)#4"AD0(g_jU%<2oQlq`oRqePFXiFKBk6KBoH9FH,6U%>B:e*=F:[O$!h]Kmur;K?k>,4eL<tJ#(r;H9CW$)bW]8f5b-ujTo9gihLWO;1LU+C8RJ)]:oPp[UD_Z.BqaYIi&Ns:/a08pO.0l*%n#ZUEjf\;D=BX!W=PnejJd%L_L"V3u15Oef!Q$h5E_O^9;qttW4Sg=bO!cMh;i4G=P8.1A,/M]/8-Zon!uP.gdmjKt&%SFsRE>53%#hB,!^7M41BD/='(pKQ)Y:Z^$W6aMhF1)&W]MQc`T.7j4XXfelF79K/^:NUiS'i%;YOt%8>l0WK`Tf".*n>(1"t&j/.F6eII2NVf%An#R7r,hbhVh;*`F&9o[5"4a9<V4Ll';)^0pM#C^*ujcBJG7U.CTKH+I$O*gAu_UN(S?R(]Z\KtW,Ks`ieDCtHtIuN_h-:t@86+t%pQPdBUY:%M=1ceXcu>e9qpZ+VLbKbm!9TJ<\-#?`(kK7$l17q$m`J2%q3@CkFbmi^?pE5_CI/]tkr[PpqI"oQBiSdWpq-[cX79o]%nj%gBl'bqlLQB5AO3;f7TQf#pB_Itcb_-JkI&\+QX$[i*hFOcYG`kF$;Y/?HN^-rbV>`N>%"p(iHKd-g=?:j:<hEITUF]"nBir'D%!5Qrk"C,4T#GBQ_*Pq]0Nc,,@*?Ka?#h?b\fOsa&#D>4')#/1YJd1^<DM"-=ZJa<MTBlQ<0[dp`:7X+KWE5Ph91QtMb.NVse/JkT%QqQ\8Z1``Y3>RnjFXiFEc8.u86F1h#S+o84o,F-RFOgp(7b.YT22LmfLjj9XJHcL1o@bu*!/,:U`BLsVJUg'X4[==Nd5S&+D_</i%o[O02qQu!VeY)_4EeoLL"fmERDgL=ZmZ=89m9o:]j4YWO7Y]R@+uj2rE;9L=CQA)`jP;[I$q&TL_q4N#\kbhkp=8DNY2H1_M21Nl%Ym-g5;&[4N]>H\)G5_aQnVIJ@Q7rBb&dILn)ibm,\=osADoCcJP>C@(#q14FpuW!<O&t!Y"/XEg!_"TYq>sK0[VgM>G8gu&R1#pA%H<2DglOLicID?'UeYH:b?f_Ygm=i(d`#"R+bSkaF]W*5[L][/\"+COb$(Q1?#kU6V5f^Fd'e%rh;W.H0FEJ<),@^pC^*3h[L__4B%=DO#TD8lBQH8EE6D^Pj4o%-[@lX6*sL0*badf@*Be`HDr-Jn(rfE:_ZDr3K,.Ih39N]f`%:4`rlkZ1EhC#IICgV17A`u0tW@XS7I%6$c2inYTp>g7aP#n'dh7]eQ[B[s`B`RWe`plR!BR4P0>#!3CAGn3mHU%&%<WnD*XcZU^?Ee,V*PILrdaeFsOekV*N1:[hR'pi<Q6%2lq9)cS6c,ne-VP@OTH))*E>cf=)r:***l84[+XY07/LXZoB?sTKZ68=Via\4Vf2$HdD''\rJckigD%g:2FfFH.G9$-T2R>B.b#D%:`"Q/+:8@0N%m3($f;Pj;gFF]&I/^[PV@Ejs1r*hiH=(&F9'Yo(uJ.3H?<W&Hf/$-[A/em.56N3%Q\dLITa_?phCdsG0@4p=ZDGp%(%WkSV0D6E@ERV./A?m0m87WTC8Z[Pr8A9>cR1[@m6D4QC$(*HG+eJ]9%lb]!5@,@2&U_V>DIZ(Y9UpY'R<aL_"71kOp$Ige6]ms%#Aome)sGHDka"EI#U2D[UQPbHdsPldPiP9):(UR'(GVRA-"/hP962j,NT^Ou"*7s?T28V^?ZS20UP?R7&&pTn->Q/I&X^biC&KqQ%aFun$LC"uB6mGCoX%QBI$Is,14uFC&QCO_#8WtK\OS#in$O2C!*Fk1mf(fSI+#(``!0>GGpl=%4?PrN&:FIbpW641T#)D>#D]%u0%9Gm9H+a&EO?Z-X(P(Ds[6=Jk7C$oB.4WWCnicB!q#W*!&S<W8Z.?#-71$0/qecF!7?9]]2)58PMG&;OAO#Ek[Rt3LQKmC^s<4C]k%k@_`KWC2-,=097AK3^qtFSLfG-[<\]D!njr'VjA:jbuF[aY[Wc>e924dFfSW7hg!mCV2FC<<>Jo@?BSaQt%oNfJ,W31ufaJ+?bk2%0a(M^b[Hce:FO2(WIg5nPWukCNsDJjoUWllMk.F@a;&;uj"</JLs8qW8G_J;@/=UA<?X=M*^l(W46FLg!Q@kO)U,'A]uPuu+Y[QU%o\iMt\HQ&C*K$Suf'AFG^9l&;H&Dsl2=c.\?C_GI0,P[uG=URsK`_NL>e*eJ*>B$9F?cZ^qmD3mb^9<Fjo'_46][7V\DQN]@$o(g%o5"#Bjjm4g%N^[W$2f,:9ED=uD]R)1N0i(1D_;5]Gd`[jn:cJGX#DQJ:LA;NF7n1fhKh/OAKT4SNn(I?ouX$,2EtpHCd'kI&!Gmc%nh3[b-[gGihB2A:a\Y-=ohT6!dBG^Sj$t?LH9U\f!b<$lf4Hoa.lnN+^%[8deHf\sdQa/GOsr;A#A-A^Wo<m8am#o()B3N]Ro_)&%D"P&eSTLc$B9N0MLLk_B+`3U;QAW<p&QoI=Zi9=`r)nNRn_+FB8#f@aBZuR#V/VSkkC_G'8lmLZ)#Kf'>2@EU^ujii4IYtVV)3c%%i>V):mp[]pDs""OOI2fjHub\2T6/-:rR6p,Pp^<':+"fMBX/dqlZhnPe!"7U7VT:Hh=IHBnpFA7i]>@kWVF?_B@m"KIW)[7QC!p`%NI7%dN?*/PBN]<!Da$iUhCP&8hAS=pXo@h"4rBo9O53]2Jr&;8aCtXlfr!0FkiC(NFOh;RLHT>#(p-rjJ!n.^4Y*YrX]BIC]sGoU%ri'`&Csn"OAFOinT72IhSgY=FmlTDWQdsfdHb4C'6oK"Nmd8H9?+TbPn7@sSPr_XnV0h%YEeT4ZFKb?$hYlki3ph-HNPYPMR!`\1%0qIu@am4BlT72m$;3l`*7+N`m6KOmlNN=cFcRH2#.^CIkgEKdn&'QZ$nn]UZ,=P)^,EoF]C!C+md+^D6.[OT0/]:l,9`qP]&b9O,%Kg-J'Vt32uEe*BS@/mDlmDDeN3'5Kd<9^L0VW,6!foY6Y8eg,BL"HpY7`n%5nUI$kig"CarpTee,.;NO;c*6:o/3XoIdoSu`Mkc%%c-^JklOGj+)jQ;^73Zb?c6m8\e)]`"44nXbX'B;rZ31lF@/J2n1e]f7_/`\N74Rji5]8Sf]7CG0p.n22dH(#YkHr9+,%?CrO(Yr_%UG_\5D??(^c[PW%TJE\!-bBcYYo86\Is0K3YObp>Qo-:ik3R8F$V9SYqQodOA6(IsCqF(RpWELY"*?pm8'%.i<4[!M/jdJX+_s&C%<^PRF68l5h,nhkK9AfOnRCrGVr+<dHph(I-p;W,cUtZ\imj<H&X&7$lBnNh'll?'#R4(q<_^b-69N9\9]%!.HIBR22]_e!afdM-T%F&@qXFYYp;n+K5#QguoULNd:md:b:!*t:[mhj2YYD3a+IX!777+/l_<,2DJp\g8kj02$n^8c%p%Dt0L_Utb4]2a*r#f#m[^#tBBU%_#*.HCZW/"ECmK;1/6F>Za.d/cBs#:B2VOJ'sV->bY>'m=gV_/l[-1.APqDF5#T""ZD4@:\(($*D>es18`%X-rGiq3HJc4)bN1C$%\+R6"YN8s!bPKhR\YVqYfQ++;g.Gr5/[bH(nXt5t>U75?U[GXN^1fYl=`_$F,^Qc\2L3uolOrB14sHONQ]*L#e^H+qW0`F.C!ko3%2pLs^E0q&oP!O-"H2Zl>W@1sr,.DFbDFE&K7H>X)>FnA+N$aUsd-+1A*RPWodKL:]T!^">O1',3jiY@l)hOC!n6O$SQ"sY@h2t$3%dk&eDnlKtm=#]_dWMjDI\$C5Xngcliah,Ii7CSdWs3LOo_8`m],l,2q<M9]q"Z&7+:,Y<$0_i9WG)a*2qmMdraO8W+p%l#olV3r0%,Z1OQW@1D2a=6:_FR_X<AL>@%`'@.IqInC5FI`X7@F?aZiS9ZL>T"5?OC_A:;D+NgW9:TVefBWC$e=@57NnA0%c$3O_KiI\:E.&:%lJK#`=^lE9St=4\k3GeN=Jb:kaipDH6'et4k_%YN6+#PDRjd.P%;4en%I``pBB<=`bGKk;9;!o"$C5I5[bd#=8.NP-Q:pUhLLEfc%/=/@*':"H<h-l\3o.Wk[?LP5tXMWe5(cLL;g)%N"LFo!*\qGtnf=HA#a'h`d[EE^Gj"P$XY=fjjq1s.,>V^K5j"TR%XEV]nG/n$7%a'nt0[CPpLR+$(U%5/ZPQHY.l_B"nW?/G<q(jC0Dk.`Zr]DWhHA*'_\>h8V6b[Ohop6BE![SFS]YLS!o(V,fJm>(/9p)j2^P\g[!%dp.S^^5:qAB2ROSBpMQoD2)rM8@mU2%*Q(EQhZ*.EY7k[0/IF)7Y=2+:8dPEkB6OI`dc#4J&JPfs+"Da[ak8^b#JMun82@`9CO:j%];:hg\6L$,]nU]Cd<6:B)iH%978b!S>.HVuZY2FYp<QjJA27>4hsj&jB]TRlr_nI#`YI?!BKLRLZY(A_4Y'Sn;?D2G/r"bPp?X"d%8Q)]I$Mfl2s+.o:COBA>md/H#1hm\i8heDb2W`rDLT*0Ra.'F_ai.rLMk"s/dWuEIjsTmMXf[UF]2eTck>^7;^,o?irsnr:5OZC?%C8o9K:H2_@9j?($^2'cKFR@ql[31YZ,Nh5'C5\VDdrh\$HdC8i-#`$p[_S[dh-"N'WU(.Ba]X,G0A3e)7E26SpS2!0p%s+1=4odI%rKI%2f$.P(<jj=.qBAIOF>4h2qrLMP[_"$.PWYA;ku&/%g%8PYA_q76`2Aia:3A2$F0pu"s)?`VP;`d/\fU]s/4(4;kp9Zb;HEC;%BtM`_oOm>'afK$mHeGjuX#27f8p]S;dEW?0B!3\dU6LQIYs?AK:7%4WGCbiM%:%"CbM1I#mVZ*5ic]HY]llDSQYs/HH.[V1$k<Nu%\&Te)l)/\tDNWGVFlDu+s%YF"Q\DmsfPN"N7q9*a:>Th8s(dk4QgJ<pRrCaJF7,:=:;)uGjP>SKmC&+#>KFE.jP:UBD@?7^?C9Oa%ne-8k>PMMIl-n<PDY;?$k0rAkh\-17n'X25RU$i@9B/472"#39(l\I.o5^!>_`M7oOuj5doO!XH]^Cgbam@:ul.m4O]#0lrU4&Bc%I5:WSa8'G^"782E:[sVS8k%\kanmoY]N-+:j`#C9hd'Esi$oV[$sR7eZ<S\I$iQSfrEoS6^A5B@UN2K.Y^bP30"4H"H^'YWMDLUt%CtR14M=7&,Q>q0W50Rb*3J/ISBT(3D.b?2mZNLtBOg^sc>R(Khph*1Q-C2e#5,BGX:Id$J-66i]L<<5?OGgV6_c?f\d5X.?^hpBX%472<.]=QIH?$F^s-E9/l,*XQAmHRHY]$mhM[&Z:MC#.=1G'0__kTKc"=mf\rVuHVW3UX&+<o"M<Q>gE8o;f1Qa8>W>C!?BiPP]Al%nKJ^7Y-5AX:4\D(Dnd/Wkcsq%QAiZa.c*Op%?e8"&\2"WgEKnuGco5>B_MF(^+<XB[G&;]j!->eKDt5AgL'-X4tqmkb5K@R=G&BD%+R#!^i+%1Z7_(kYh7GJc[P`AfGA!.V7CIVg`lI7(b9^;XFe7\(4l>(HQ86V9q9BMg;X]!Gfa-9EGNp:DRig[;Von8+5DjY[XjOl_%Hl$o!cDfnQRS3B-QOiq`;]k,5'?[0.]6>X(X:gh=+(WPCkK2E11b%P>TWR9jUrYe_0M-TP>F(?MQppK2L:!321G9@-*$K+7O0TDh%As_BPC["R8Xj,Eli8[q)ZL?RsOGW/JH+,a/HhXDts#02uV.M#Ec-#]&pUepkQ^[;>Zi=:a8uFh=8Bml,&TW`XXCR"N;R9YD[S+kg%WS-Em4\sYdG>.baI:o`_4D!lcZM\p]\+q=:;)4:knl^i.orIt-:bHJu4R8l)[<.YG=U<fk-u+u^YAI@j."+tQfmIfq+!ebQIlf^G%]cZL2'?T)-Od<-#L\#tjZcVE?e)Q_$Enq'Le?e4`]IuG%r$=WNk<"8j]$mH28cG02'3Pu4mTpLt?HHFJMP/X9A'7`P&%4dBo:G7]%HeZs!d0_&/&Tc5Eh:#MNn9EG9g$MfrU.*[QIdmQFID,/Re<7N&`5Y#7fbP@0Zp$ZD6^GOPX?Sd0J(>]X]QV3?Om5jp)Dbo/@QX.f%>ZpkK[td^OG&Uo!F(jSmYa'$1[f0[:;I>.VZsUUH2UVA#hn-2-fPXZ)STW,!CN`coh3D.sAZrR6,A&hWjUmUKP!kQ#SAkBN+e2gN%nY%9AW-"j[/57@4+_t63j>%loklbf=[/MjoCRgP.7!T;UCW],pV9[YVN0\ZO=]7(:hX+QB)RLTiH2l5DiS,Z++)/UdEUOj3ldk\)%:AN%$h(IaBAUGf0J\-lEAAmgi^0SbQ6'AUuprZ+IV),i+<QfS(?g0A\O73krjiSZgYD?9uT9f44l8p$5.bu:cI7.lF_M\piGKM:F%n#eDj(:XuSZOjV4hQ6Jo'=.#k4$&#ABO0t0IOeI5%l%F#\2HOd>WRHPFaZ;t]CG'nStVP!a)'Tr)0AY]h5M$#2"$t/B5_^TXdlMM%qfiIBT0cM]C!!jFjB_%qHMIui7pPn=-eggb0D&qDDkXU6JQh\[RKr[fPlLEF9WP?\?Mm&)bY)Sh2jOaB3Rf@e=0gcPP6'UGbo93s%F_T;k5>,)Ps8!Q'c*o(uEg;Xop@!>MC9)TQN1[/_.ijk#Gma,!q;eW(RN.lA2bkmGV2JIXMFuOUcrR<m\/G4NU^a^2hqoRM1t;JP%?FCY1jN5KnK1L]bUS3Q*50,TdTOFm7mmqs+lRpt>0B$6:,\%YXm@q;=UV3s^&G4!bnM02kBK*:h`$Z6(1@a`jj3]R6Hj.])?5KU9%6peadE];oDZhL*_amZO<e]5<1n4=N%rm^R<Xib3,67E:RQ`pZ9db2Ggm6PsET:K=7AU@Y1ZJE>uC[N%;-gaPq%\fL=ABd,oZ4\>s%#[*?+Pr*hSZu^n:C>DLj,2UUhQ>&K7lT<9/H+poj/EK4c>j$lNW->DNCkTI5lR\H;D<j6,+4=9\Jq/pDYir^?_?[h*-2,QLhjN5.%20Ws_qPP-PpB_W$LtfUjp>;e<ID(O%=ZPC7r*JebIg"&#h%Ft^KgouEE;P+#7$M=AMCeX*b&\X9RBAcOn6tQV8M.egeO(LaYlh-i%qQ&g=""=u,9]/qeA+u^\J)'Y0V\bV_2Po1hhs/8SMN9.H/mqp^g.G#iU;P^[jV[mVb,6l^G)ZB?g$YtLO7Dc,3?fcJ/'lB3C=(/l%4-n[7?"Wu=SGC.l.,W&`BY,Sf.,+D2C>6b3>kdS<)?#fNWkUotl[nO;4I^GJe$K)4'q_&mnFUE420k*0gT5a"12g#hA5cV0YYFr5%X-RN',t#Ll03eT.]>'Q8;G((DX?+mPd<-luC[C,`S9!b@^uk!U:K)`En)*A*b-gf,%+NFib'gSg&?8]Z0VZ#3]uG*LqK_gE880Zn%Xral1@sZ8GN$UAOn*<[-3u_qB_Y(a<<*\,G"4O^@b]]WX'U7roH/?H:5F%5(97?Zc^0<@-hYHc88k7"8I0.oZUJ^LAUg#U0]DMB$%[&O'"VnMpof/[^ZHfeh2&/68Jq!i$B#Sa6SZg8@8OhC#km0Aos@l9"67n7JN:.><sJ]VHpp[sDBXi(0'rEYhl0;nZBima^LF^e3j%C4YOU5>p[\?<,EP@R%P[5JDhYrWLU*<De0DrT,u9g;B&E<q_/L."#)sh-(AH=B7(Q:fro:E('Alid%p;*lB7`,9pOsaL'YsS#%e[%%:Iu##\JYYGT9]..XT4?PdASKm2]Qg7kF/%V)XH(rUb2\nT6TDRkB'.YT1]KkEWQ'm<\H'+#CYHNm'6^r:^_1JWn1e?PG>b4k#"j%G8r.lGmXp:SP@VHBg\eEX"bM%Z@`Uk>]G8Mmuc+5$lQ*FG%fF`7;sGsE]BH(pErSB5^IaOPGHp"bbsXS8)7VJAMU5KRIlZap!qBg%oW[!h%/MV+/(6)B!GT$C6$5;j<BGj$m$;Mr4FJsfC<rU0p$."f>2$K3hOU0s\q=5=X#7a.8B]reT'9O42UI`KI2ri##4R>('!)')%f>!$9bqTSpk14\16F^$D5"(%Vdqtb'<SXVF(TR>6.XZlPRV/0%`P9nP&GVlj/>ad[`=[Rg`3aRN]A_uBU&"j36@GdjE?>;VBR#U7%(ZRfu:XOUlY-h)7=*(/%[DVk$B29SXX'XjdS(@]=An+Jgm=+>#DQ2r%@#E2VnmsO:;K&hLE2nO"G\qE2V(+plNQd1QiEGl/<GKn.%TAkXigsSnr(A:+Fg'?`Z!>e6cRWVD5D)"AP47/Zoh'\t!al`ObojI9"U-%L"*frRS4\\[AT]SDF.]Sp!5]nNj>pms;7kn8R\QYt=%Zc6FO#h,fM3:'CP"dCl7_qr$jgOpu%Pfp7-%M*+%(;3dhdhr)Ie"lq')*[:^P_;u2/:LK*I9ba2(E)XQ)/dILOPOGf>*I@Db%fie%-hA67Uis.`IgdeojoS^6>'[8^`k(iE5?lGV/m4\QL-8hZ+GPlfI9!nA2%`i,4\`M?Wd_E'Lia(m!tBUJ9N8/13"5%o-a2lOaQ[ee%MLY*Lh9JNSs!qE4RMUbs%$28s++?ThLL?p1IpHZ/VPaNM3uGJXOhd"e>-_8L^ZLle0h@&4pEZcJe6lMHI7dr%Ijn*W>O=Akko=\F%DNfPNBQlY-rO1-SfGa@g_H.npgXng%9,rV*A)R)Z-aqS>*d.bpKQIQX_\4m_IU2ii%L.F#Q2,,ta[7S6V\Ul9IT3M39S"et)u*Q7%)X&[I!8)\kik+L)Uh:V#n/'2SJ2mZnEc[<0:D-3Gpk`KDBtj!*"#ohEJS>lqDa/IL&`Rc\V.VYE^rJ<3*eee//jLK6FWICVi[t@4%hncLTX_JRSHE=_$<7p3L>l]:s2f0:<b=ns-%@1iG(]m^$!1VoJFrNYJQk2O9$#>QYr=Co&L$0K:\WLMZoWIB@-CO[EJ__Y$DA-V#%KgB,l`42\qK6\@I:JFLEWT'k[q,R$cENJ@\/FtZ=lQ=gE6^o0[Rb"GEdk5ZcG%!<<X(qGN1Rr37r*:GbC8FHuX-L,6R0(FQM0(pJ%!aaXkXEN7E$g=)1Nl92[Q<oZ9lWVB+;OLfHX%hLd[dcr-r?,AV597uZm.DJ0/LjH++=in<>VDiZ8?8'h\q$ap7eCY/%pKCQV9nO.%dnE_X"cb&6Si]K^<;eI%/d=e!Ugs!Mi.dE!TZ2e?</m#`O[3(4`YQ/&1c69'."jKO%16NuUHYFa=nqgtKd_R,cVAdpo0ES^d_=Ns%eE`AX$r\_c/Bq5D*iYb\a$PDE851$N&:.\FkRWmF"H76-f*>62GOsIk]@HQMSm-'E"BfCp.Kr!-B^@#`k;_s0GRQ=F('?5`=H98f%24EB6BW`G%Ym1c?&'.h5rgJ$YagA(+.+^7bdFU&&^qWmi9=qL;OfD#S$\Y'iHCSs:@,,I=QC<G'-i<Oh><PB#?WO>'GT2QlFY$,2%fVfFu>`XDtd0+:M'/283O2.-516kr6[uk$3c!f*Z[,s&+,-pA#N0CO/83Kb1Fsi81Cm_G`USDZU#6te_fn#efe/,tXeaf8gWfC@a%`F8b<WN>5sDtJ#E,T?L0k]D7S'&2]s\l_kk^K!/]<j'#Ie]IQGYC59VD:_bepQ!kl!:LrK.n\d#c:Q"E49cVDXP3iq09<oK:$<;t%]^APk=:dVfe8E*PNl6F-_nX<I-!MUP@_6a."!??(Uuh<WMhrCQ`4rsh)j?N*)#LC)o@haRo_<MlSW,8i/88qZ]P;ZU+'8`E@<"<W%KA3Rg,7ijS>#sXEL7=Zgj#]lL@!)5p=go+Rm=qCpZ6MI2+c@37!e'E15Reec!nPbBdT;pBDY`M&WV@j;?jg18AnBYW8QjcFB7Kqo%*cO1(T7.LB:D#o@imaBN;UUdufc8gONMe<*aQG=%8VB5i\!8=ucYe/U1mru#H'7$e-"fFN@p(R-hA/R,)it\$6-2ZC;aedMBEfX=%6#nl11?lPQ#IN('*,g%dKW7HB9&a6p++<)Hp&-n=pOp1ZF=?FuLRV%/ZuNX#loU5^ou?r6mUT7?d%BH2H9*+lEigt*doUiLA"1Ko%?I'`oIori!B;=b@mW=agqZ!I[:'Q9AT!jNWh9#"oe=H63l8-\bDY9j[e_7+lM34.?'4/&YWE5X0*3GcaDTS`GAp=$]4$>?43pD2L%[qb1m&?O0teV!;Zjh1IGW?.)>o5Rf;EUF_$(a!rLpps6DVr+OMm;_t"=Blkja2nH*?H`Z*nM[d7`)(:BA3LsYB82DG@J+=i*=_.F%T=(1]aU^/%5>%g9CW<fD]X_#X[;$deF_;#^6))ecQ&T,[+d3cE))!?^B%aS!*[SN!r5+ol\&D:?714W9]Oo7sG]u,=YTTHJ&8UCC%'!J][:DSPi`F`7mBhh.XqBY=RiM4BU3.L(qc=7U%kq=>T\lb_.X*-Jf%qe\%_6_NfZKi?B?9?(eE%nG@l;8qjBd%L&XH'=Ne+k,S%fM98^L9\5Xn8?N04Ie/=]#ad$p5(&/L\7QJ5.179nY#dQOZq]3fg?fS0eG>LOp/8SPLiD!=n60*D>3n5mR_oTTBX@eoN\)&3D:dp%.3Q,7pH]7Ld2Uq<fAH<h)(oXW)2q%K7VZ6RUGYJm[bo;folYmu/Xsjid"LaO2tV]u@m1`\2NEM&X>kHM@tj33EVIuP+ECs.el90T%V(]^aE6oUPcUMEpMQ)R[G6JLU^8to);mnapVb!o0l%kArB$a[Qqbq$ec2B=!&Q*Ud5l)#I@=NS5b%=B1/>:)3RYSdeo&_>\*=[@"%nlqel^i6QK_B8Wrhgckuf_B0d,r<dI2cMbM9t>$#'Uk>^J.[@sHp2VZ_/q*jp9JMWeP:TLSS^r.b1$S=,8kAG%;LhJia?S`;`ups%#CP3t5>8(50LC'pQg27&][K#<lGJs@oY<IE^-<I*F9bU*nU*$u?1)`u;P^=f@*7i0^*IL(CcJe%2m\s,]p9T_Q#t[PaJnS4NjEm<%&r_EK-]5tkCU)"`lF18$#dqeZVbs#kU2ZO,:kMqDY`cPr79hGLaHi>1fO8"C\AinKkI,,l@CNj:Akr[10a')<NUm>U_NuB_3m\D>%q[[k2M$a[c?c-ss&:p@K-:h5NOcII9CAE>876.=g,d3EJC33R3VWrE2`^Ciqgr.^<17bm3fA*%]eEgBbYNcW[o>,sPa<+e<TH0W,%7W?S6`oqP#)<43VFL<OTKq`BEODg7f,f-<aTm(,-(\6ufl?ea(*cu$[(^uX&*k%qHfX.I9_<A6f^_k=6CH$KmH^6WAF(`20k"cc5%JSnU<;01sa&$"ct&b+TC_kZk:89`_8q+31`Z,N"):^2",#85O@/Z@?]"<0SQK(mLADKffa,?m,DRl+'>RTcPZg+'KU]?-j+35UPX%-;?NDreGUl8PT[MM'=gnZTNL,7.F"UaEcWR3NbD[a)KR?6[f^&/(pJ-ZBX+DeRb,M#$B.91bTr2;O+HZLWX5o[u>,Ge(5@6\Q`dq%k160"P8^?\PO@pODR&e-'b]?=J@jl9:qesNUk8ikSo6Fdj#i_V,BY)Ejm:GtrUC1Fm]4ToUfJr)(Y[h2[$9]7-Da(!Ilf]:3'8-[%;q&'i&]PU"+RO.#J!1;VAt:6GZQdX;7GL.Nnl@-AOD=uoBK8g@C@#P%Zh%2?@C852Gl&uVB6"F^V8S$]f:LTSC=ODi'@7a2NF);0%CI^TQ3W/Prol\(i>Sa1VSb34<A/*a&N-Yl$??R!Do4a30=Bs`O6WEsNE&^J7"g-<A,PK[:'j<m4kJPb+9bMT,ZaWYGar]Tf\<[oA%M^EuZUN(4dVSRB1#cFHZCB4ku``q8,1rP;1'QgII9=ISN*9B5=>/$Nf1aT7Wk?:XO/WFDb29a"-K`Ws*j^5^rcj8uc[[j8mq53=\%Y_^EdnHLVWKC3Pe,N.BOSL@XojoQ9D1$d#j)^[5MBf0m%UQ[lF*DPH)`7'g\BTTRZX>ZWA9NMd[9mVH^jD8@#?BLILZd^JG6?^,V%GZDB>:0pXbB4j*UXkL;\,cuuAd!@SgDqoL9Z$.hT>\FOX,3e3ohOqE5o`hN-ef2!@@(j)DfN&`f:V)`i_N!q0et&Zq:!oI)_.0[<%H"'WKgdDaKgYd4)AH_aj1Q3!L^%>kZc:NM/d2hDPbo4Wtk();E]^N@U%ruNdRp8SJPcrT=BTmF'KhHnVl.%IM*H]?0f,M/&_(BI]%lOV2L:8*l,2Ug.(i@<kQD8q3,Y!Nhl=_\0:,3-DGh>')M-SO*C!SX'5b$-%WA%g!hRR3+N1#FrrhJ+m`HtnWNSIQu(P@g>`Mh*D5%ZKE9ino]b9bLH0%OGg3#>12V`8h.57;_)<.MGHsY'7H$YeUY>Dg4)+fa3!jr;H(31X2FuWSWBj%iUUT1Dq<,rVmKp;e66-n-"gW#%HI\4ge^akNHGM--1)9o%Vs>!#?D1q`7f<_!`>O.>`+!k!b8\">lDDQ9X_X=#+g[rRf[T%%mVFLiB!JJZ,[llXD)e]&W6f49`+(hI%kiUoFDu%o89M]NZD(m`P7E$6Kk@$:4KSkpdL'pGDAI).[c=3j_fW4SUd9r'7b]U2cZomQ>:D6:()u+&l'ZJ5XleKn1kgu(pIX*mi%bZ4EmRT//tnqbt-X)k?RL1Gdf[H49@+O^kg!,#/,1S[.?!mRQoin^kO)Z"s8+0H/4dg<'UOM!e>T3n)s]D]PQZ\d3bm.5UnW.fJ.%3VQP'lK["Xlh&>G`(UJJrV5Za6Q7?Ron%<k_G?A$4HWQ1.c<E1>=$`d@@p9j(O5.OQ(uD-MQpi4@8>"*O!&L9AfXF$St`PpSqs5u%^a-4(+'htt!5OZHkjK\N_F]Gn#u7P1.T`r_X](P[X"\lW)NIS=-_lTq#f#Af6"[.(gTlFc#&9t.SQ9@t)kX!21@NrAX2=e_BSm-G%3l%]jAG5b2nu?,DlQn>:iBF%Mgr&)"Qpu3R@aJc<>iS+p#bi73Lk[]Kgfe3ug!6;S'ueWpf(U<l$2'M0ld[dAP`KG4@BVcW]aJJ4%*>TU9mFKjUO!)sr[6<d"%_?SBa[Z3LC@R&F83+4ShRDOjdkq!V8pp-):+AVWfE3knTCk4g=DLTf)8+BQA3#oVd-]#_3@BRe$e,rR%V$=b6UTqWYa]5(j8uAro:nMJpF]YYT!/fqc6tHa5Tg`/(NT_>14mH$8/MS\4JZH@t\\O.^Dpo%d_ODW@.'>_:nlFMT*EIS=:;nH6%+A^8MQjt>6hp!/]XKFZtU65sjLC#_4n`gcgph/c?Ihe]ilKgX4lD1*\Qll^alJLdHYWD0c7fDQ]X*-=[.pVI:&PVX4K*fa&hc^bh%9cOe[B*WcFRTIP64B54HKK,g*VVtk@leVE*M/H@&1=L@Oe5g3,*9&fSp=4>&[lW`e`P]V*oRYYV6;H^AkD8!4@7ujodU?gt+YXTc%QKmZbS\@=jcA/UmPuY6:$m?%-3pD\a/gta)rM$7"O&sn9Gh&Ip*MY59Luq(Y+-Who\n.6aR&uLb9084EEY6[e+-R@#r+Ju$J<S5q%RZ,Q$`7r!rh:KanOQ\m,Fa[]=S6@M7?9',+rLi&kffZY=\LluaGK:^OlZ[XkGmGk^?ok@)&#[u!bYABVZ%D"MCL=RE2eq_k>Dki$%aY^JeUTMMrCm+]R:G]n_-+(_<Aqm@@G-biumeEW\71DSFWHGpo'cJ]j#05uiU#Jd]HZcR2RdM"/eM-TiY;o3`&"[RN%N@?^c+<Ut%Y5N+l3'#isP5of2$-3T`PS!"^>J+*oNOOF4Xgg]3927tLnuqso_d&>+Q>\O@^DSIE:Wb`;'t3,)Q8qh.:X^O5lY4QM:f0&]\'D,/%C4QpVJLF.;19KqGF;&i0Rpi#b;HR\N_CG3;kh]q<[`mU>Fa(8m."<cHq:cf,05itSpT-"5Ogi8u3%('#D_aA-n?bfk`E[?8;XI[3%Q)Ej]Rrsa":$'emgfC,V2V!7^r$M@2[L*0.gf&.g>jp3DDtM_!a_Jj7&[Q_lc=T)Fc!!'o(.^F\e_,V6XNS"j?2JIagtfs[3B$KQ%Eq685f1-%GGD.e,8h,t2E/dK%mmQYWZ)j:9^RAd5QJ;*+.4'81Ydlc&gE[p!E7K!c6a#rRc9!b&1Rm;R,R5j%=9eBId?nhYc0>km%b8S$YA(lgOD?]u_=@$j]$hk/)6C:/?m;Y<0^8g2Y"KV5jM.IReOO$YV=j.W0(KG*T4,C5ilNm#71-_h<'\S4Kr`MI#5("1NXTT;W%*;.=bi/dBI2a<hfEc0]XFS!L2k;+30o>K8<htG<In',e9_&`QFB<t(n/AD/L_<4V_G$AV)MgOTcGN8*iH%+kds5<=1rEEVmXmB?(%EUVH0=0=de3PKP*]FU)&33->q0u&-YjlW>1>$(Eg8"OefmYbjqqVY!;qY+Ia9cjCVX]OMO-\'qC)j)5aTB4&<?gn$B)21<O:+q%\%4?-*)Q+b<#hVFClc10h4s7]e]]b`j,qSucPoX"=d4o+b`VtG,o`O!kGqV>*EX*QbTZhRmTJ"sRSePhk(5V=:J#cd\*nJB!GKgl<r%alLb>),,)BTlWjH&K*$0e#5)"_>AZQlDi=FlDg8EUr,rVF/E<^f[9W:^&(m6.`0`IZsM:#9r%S0qWlG!nE9`NoR>31:AX;;[n"2^%?TdTOnFtl7_r#6`PQ(R#j+GK\DVB21g&LL>?Lagu?b&(_\pKY#8IsWa`Fn&pYL5umHg.od05j&.?SZ>7I]`M/Mg"Wdiqfi;^@kkK%;u0Y[G>[&jr:tSV:dhA5BmfZi-'QKt^DK_Khd&#%Mr1)Ng#JiL;P;!tpAU>\YI`U45:`8rrWDWB;YGE$hg>'PRM9<&Un(f?+$l'>%S_lNEBs01mlEqH-0*Cr09I`L>U3,<MoV@7LI[QZ^#VM.Xl(k:(e$R/Zhp.#'Q;%.iXpdC!\:p.GrllN\QVI=LZM0'&mEVoS[!mGb%\*<)=aj]6@^MdGnpX^2t#=Xj5\21XC0:`g.,qDSpIIm(1SeOsM?G(5<Z1GJEda's-__7TfGYa2DXmA'=hgXlBTiHQUpM0K%\ST]s%F8tAE586n>hl2*n>ROo;8Lo.5#1#KJq2M!<`W!7bK>2[_mV;I(Isokh9`"A4c9\u/ihTrC-EZW/5C8KNjO<P2#LeFf]_iiKnoK#s%V"4-H<Nl#kZ:S9GUT]-)eYFU'3EdO(Fo-Z<:*)VOSFl$jQi>E)^IsT7VeAu8r8O&kkNM^;B191&5Psk7o(\QDY?rfMoS5)T0:,F[%FT24\-Yh)PhBK):gin5BDZ"YIU^-nUo?RBM^0<_aptO,P-3]lte,F<6s0LAk#6484q=0sC>/c[h]%9.FrVPK$/"H7@-a+Sk8^Y:(%de`-bT\!=%l*$6@gN9Z,4R(lj`tqP2aNmQfZ`%T!+79Z+13g*KFQ:N,8RFT(gAQqJ$R^oTmsfNBJ%tB'*J8'Es-6ZSq/LY\-U%"'%kEP-*cNi:0e>1rfpT?[#;L7:!n^["f:3n^e'P>0q@G!gE@\\EsP+QhW\p@FR3rA&/Nm]GmG(7%tP;ZaW&$q#[k%+>dhA)C]VQDFR%V2+r*<g^6S>;1aA5*Ihf2stne3CA%4/0:"Qn\;Tir(]tDZfl,<QqY(=6_)ZJ9fe]lP7c",[o[U6:4kcLCJXQHmI+gNp3nnlrchJk%nO(_fQ<C")4MUaikk<H&0>;W`ITZ=9gj/D0hE64t@/7Y2[]V7I%;TqU7[*B=1C8+uA`OmsdncmFU'7Z`_t23'.XFiZnaPN)?^Es9%]W[q+Z2Ej3p\-<M`tk<!]rOAi/q&%bA,)%mr9;=eZTIF#*67.':Hgj'H*F)go\f"eYFeVTl.MDQ`OW_/DtH%L4``j"]tgo9-f5sS%Mk6,tCYa4m=o.d2]ouZ%Q9Y>UFo*e4XPimrHbY>C/:IBXlu;l1l-i]uG`D1@V[FKVGh'A!qm,(/de@s;V,+l!`4_e/F):;eG]Io1%XS:6q=!.G<e^CA_qP06bl-jRaDa&6/F0'i0qr7J>,u9-u:AaH\9_7XeGB-Jt4SsU(NIKT_I@]!4#LECZs&D41/uIXjdqf6>FF%<n%da\!RO1bQX*U@gSEu^;+BoJpMl*lTlo4D?;L=s5Fs)%Z81<_tTiO9`B3`g4-Si6,nO",W8fc/TM4^[qtK.Z!A1[iN!L\oes6_9Ku%a6nBDIgI.1]hl:kR?"*U[iRuU0-QDTBb%$5Z`>e;g"0iMcYrLFSm2NdoN?Mrs.d#p0t3@m.XUEe.aqNUWVdb-S6q.$'eb#B3[m%N%5M]R,B%*b8SY_OEb<&ufC!WAM*'oU$9cH65**JL!Y$V&hSQ&&XAl:k6?B"jmV=t4_8[#m*frI8QL;A)IV3@qCJ'"LJ%mopgHTEV&%P+hQXV3:t5VdfIt)#Z+Y['GJWs*6?$?XKe7Re5O]V3@pH,+TEj5;On2'[JP8R`%>%qFrW]p#aT6MbVq(5/.rg]"b&;r;<bUgHRi(%gFbJ;Ei6$.").\AY-$f;lMbej!kIpP.aZu:bU;,S>Wqpj:?-9c5JMV&rH<+,XnPL:lY)J1hnM+arq4p&GYJWe07NE0T*gL'nblfu%@(<dbSCp\4PFhb[HV].'q.QQO:a%Mg?t)dE#DfuRVFJ,]':?JQXn/?rB>-O:,A(4;HX[o&E0gAZ\UT#(NNO]2b0LS!E"rK/q,bc\%MVGO![O=,JRUr.k\,jIl\&$pmqM#(I@l?t06L%SK0SbmPddd6.&D]i8]e@-?X?'Of*2lsLf(-:qj1BG-a);lA9'-NFqsqm-qC6h@%L$IF@($,$LqJ?-,I;\9G9$:<KKc%Hd?brhgf5IJGP;8%*RC-KXpT)<+SY\\R2A(.Fet)cA,V,.\N(55:])V)'gN1)jmh":PX<m\j%SG*pda5=&^HY#4DZDQg]U?VKeSM`S0;U\QI-bA\P+&6VV)O*#d]Lo'!R!6<S0o"'a?@pMJp.bC\H05ZqH1teJb#5RZ9Ij++Y)p",%T5@AmmDTcZr\m&(HaJg`pV4>?G7t;qC#-j-AU?.iWoUC-<NlCR)/[8B5E*#pW5ui+lp*W+PJpb$L:3WPEW%@0pJYkL1>Nq^h(QKi%TQ$Pbs#W!U=mi-47lTkAjB.SHME8_/\XO(01mI"3[EJ0lU>C#SS*JgEXTMq`rTpHXb-h0&^%pHsM;Ncm@;SmnL]po#C[LSJQ4l5i%0.;:%"\fBPMm<BU)(W3F)c+1,-s:dD>%[L:0tVZ0A@d`@s#J3fq5o?!CiN%pN:5/R`?jd)?PeE5C3j2Te&pNFa0\.VQo9\4k*Ob!%[oD&8Aps+m:EF<o4Vd41n,M#5V/''U?)(K:4b,j$!h7E!36SCtiXF+_[!!rJKBG>RT6'C49i\TaSRc@DrOgJ2O*d!gW`H6IW7ilI%ko+(qq;i?0bET0t4_iK3cX+\?\sRRnV.PA*DV`fI[iGT)^X]P*AFl.2n8,8XYS^jL[eEPq:e\u@%/07n_n:LM3t54k.)X?RAp@mk%K6AVSQpkbjDJY8[^6g%_aqAR4H2TA9@D8+e50*?]mcB8UE@Lnho@^*a#+H%T=p5qKm=1`G+NK^t?-ed;pT@5L/(aL@B8:Pm3?R"b%P<5-eg%Dj@:OIER**iBAX7P:db:7]'?95JV0T8hH)"(@V67oq\hPRoOm4M^V,!sEM;]-\]3_cDZ>E4H%!Gnqd_ERNgK8TN6K;%W*%6ho`4PUmUg\_<Y=j5j-6"gm5q&!?!5L\O,%:]i8bR2-a=<dZ_XaMW2-@qonK8R3E8!0j<+ZJ<L$\TYC9<<,/R!hcU/hn6]!%Odt7%L@gY20K>Y$[H)b;n)&nfe9a7`U>!*a2a:VdHc]*aKr]?D)LQRurU4`-qNQq=)m[&]Gba"\?4nAr8/<j%bHX%?&^M4W<m(pN#hMsd%nQN,CE-)Dbp0+p28R!b);)KV'SP<<Z[Ls`DI8mZ5)k>p(+^%p9@O0Y*Tu/.:YV+m+fC4OdP,_H+oV\dV7gO#5*LoX,+KAE*gTBmj%<RIcTEM'5@[OBtr,>@MHN"u(QZj_uf<CB,?]EYX)FeWCm2bT9fh^)4trh$2>%<Tr:9GEoM_3d\C5H^I'_r-RB0q-Enqg>up(ZKeF%c$Y3hPV4qZ,(*Y#KLb'hS'Mo*QSt5V++*,4oZINfkhhH%HEV$K;faOT%^]/8HD:arH`uV\W<%A&%5FI["R2g6WijI0"mf2&h&nkV%D-:2';K\A.Rb.3O\13#O+biIh;j=p)oB?]#oBouWrl[?>=3c\H:-la):%?fGBIeEF:%;7(C^B1(pQpDEVWPln;UDSSX1YFWj-1S+%iFX;pE?8at%cgKW2sEi;13o7,L=^dthldp!PT_#AM3daco42,X09e'6FXg=\8;:QDMGL/4#.%_CFb><8]qKLp%7UKOEo-#58nEJ.%4>1ERW^OJsZ.LGO/q6h6GTA&5D1lF?&9Il!>`&1.9/PtJ%V*=V#9,5AVE/=NE3R_9RcDQX2np[^d9tSk,hgVX&*"'OdJ@;g4O3^7%%7_:#pIaJQA:p3"(0hVfF_\)))CR&.2o"'/BUq2c[o&=M(Zfs9n9Ok>is6S_!GhAOht-$U@]6&5[LR]am&H)63<DF8R"`B5bR>e.%Vreo:m"j1&AS-BY^3%I1+2pKr?)nYs2+a1Oj)d*E)b6S]%#cuk#m?79i)!K1mt8Y0-f$k=QYWl51tX'_eZ9-eI7n6ZPdMZ"=2qN6%'p0PDHZ;'Sa1))WCG\]'/fM.VgS+!2p)#=j2SOV>iOho%%]dQff7jfMokQ9%B,peTNT,'=kZWqbWNkpX7WI:#_`1r0@Cn-;$1m,'%Ci*;&KqGDk@epEs-W5tXnu&o+96=aEGfl@]1ti#'03YePUN3n4p2,;/S60n[c4>PebM?o>28%aOCYaTI:?J_88c22E7g+1llbqs<%g!b)ZkF:"faAn"9]#p6U.=u;]#-q<10s11NqUEr>Dmbd9fg.>]C\qHXbO_/Qf,FR8Qs%oJPoZ7Xk]1^o[P1fnm`%\B\e`f5@.ETc%a1IOkO9!;EE$e%A%3k6$k?b&'/.^=Ilj'Z3[nIB42LaOt;B73\O1@Y'1[B@8FuOhi<pNo0*`0?$jgUYCZfdrnQJ[)DS6:+KJ&8q1%c+4BG5.P8&*]gFBqE*mj*CD(Gd'\)EO\D?3%pe3cWIq@Y>B%Y)](QUph(:T]%paMe?-2@NUPH"cK<E]U3(=EaHO!hL\):(GFR:)j%e1EY2*kM(.Upk[:*kFPT/ToE#cXP*>](QUpZH!1Dd$4s$><:"%k-sWWmH,>^k"_RAYtKj$eOFjD"rD17kghDp<Ul2A/r&2\>/)r2%JZb-lpD[[\5MXhh*8a5n?t3_0h7?H-f5e'ne+!fOR__bu4aAh3Lf2Og[11\nLXg6i'^H^f3S/P)Q,lri^N<!BlL7_ek^4?]\S@U3%?-=4jAZ2K::9nK<;@;E!H\Q=/\f.R_K^6ZnMa<(.)`Iq[l"%$'j&H=7f@uWMeZmf0>R<E,@#ucSp3bYO0fQ^%V/=@]d\(3]B)f5$%iLm".Ans+laYb+"L29o%)+pI:h$,Br@"nOsS"o1p;!2=IR<?"sPg`91g#ViJ`Q]]n6a`:Zn(X%d?&+&\HU(V;0&,&hrLpP`J\rT*%mn/rMhL/[61cn%DC:hm[C?u"#Q;Y+$CnTJ3\W?4*TGmSKqY6'TotO`b"g+4te!cb6g.gi2)Yj+ihlet5l@*#sB(Q!2XF]hF7IYH3%*5S`4^TN!4q8K"uQo8D%=/Y(d'C-4Cn<o?7cBM`A)bfeX0iedgNet#lD5,i&kp>%S(b5i?UUC&QQ#`SI:8P2/VN\'M/__*5m<>lV%X1tTo>IO:L<JG0(i5`727]mWg9Cs[Os*SPBm[Xj5T(D^]3.'P+3]h[_"&s%M7i5^^d3u6FmSo0`X`>ZRd-"f@I^(4o4^2<PgYa3l%<,5#C]@%Uf\3@3:l]IYTd,s+,j[fhp5Or?bcb4(u,B$o^Q1?SE>]i<Bb)A/So"P]j$h)TT8o,pcBTVPD3mA[B=1-b0"FKKD=-!%Q%hIquKqf'(7:32n1[=W(&4FJ:_Bpbp1'$V[UA43:OV,BN59I^r-r6[9r1,BHl@P)gs\k]6<3dksG>hbLCB6WttnR$0*RRBR+&Og6M%XAT-nGd]t-7WNkYg2gkEpAPsX,,>)78)m*M@"<rslAd%Acpil5oQ:P%+-FAtZq<``W?ZO^IpOm07&Dlfs/8;3::K@*Cs`?>)beB0%b4kD*NhC2>5PE*;F5;'W@l_9tHKf_\@VG4%r;CjqPmk/U2kSDl-E%#>]=BVgVRK2;g5#q!>/+GI=`\\!M"\*fdY6Cm_*NKl6Pn#@%=/]#(?,q9)f"O2q3ni"24?*WC\Fkq5`P'F&Cb=2llT^:A@3$)Rm<NV"9U\X>*.DH320J<bE5S;42G-2=>o!"gl(n48`os`GU*$P?%6?R>IE#>u(P63o=_pt7_g=X>$H9YZ6)TocM5O!X,lFE\F&NAs'\:LO\9V`c5Pd0LMC,oH^>h'X+9']k4g\@?4W8K"''+%$kCEf6a%b:YZ7Dgli/M&aJ2QTsJLc%'pdO;P_OS]4eR[/1lal-`)M3""DM1sQ4b\b[cn>&)t#9/LIfCCZ0nf/p%FC`4dpkKe)=<BSU"&(l[F%'/i=,p>:hHL;*IS72<gR6Puot=ID31f#WRN^Upd[M`$Oi*mS,o-+(da##+%ca$'t2a=tn-)Bh%?]4nO$j"qhagi/]_;jhe.Oh_&p%6Rt['/#P6W0)*DjYkbC!@&JPc[Hg?mYDl^.U=S+AYjb1(WJB(hGA&2ffTCK)mAN\!?pLdM6on41S56",'uu_17k44jNSfkUUJ.C,%(!#Q^%!9H7Y,gk5#&-7XFm($E`>.))1)oYBc%_Ka\9^.nkuKdDkARKdR7&Q1mCl9,'lNZRAJo"F^AAIjjVY+=q@"Q_LAObMiG,(o%s$8/?I=/,kIs01N(hup@cVJFoI/;]%X4lZ'pp*&khAbAgFY37&U!c[J`=;oZ*3AsH]-2$Y^-dX19eNA^oRi/QS@6ml6'U!#4TC\_%c-=eQ\dse@iDc(pNK2Sg#LC/0CYWsdpLFfuMT`WX^2O%!F81%@qU[s$>K,t-:Kt$jmVUff]p]2J^\-l`3M:0*2r8CXgjcPl]m@'"%eiR2F?X%r;QOph-D:R%hcgm;Hi`,?bWp;]501gJShDb2"jj.l5C%<`4]A5Msp-].XeOS*W2s,#(r+bN$9+L[MRbb]\2L[L8HF;>T%@5mrIT-oCg+8sXYdI!2cIC.^dF`ZeF7H(8kDTVnP?$A)5V$65>6<gd#fW0D,Hlq7Je#!Vem/$DHm*CHaB".MO?"^)&*Ho2(]k[K/%?b7]C^G^N4V#<KkkPNLGh0f'J]+M`_BCW+M9cndim]`Hl"br:Be%^R]Dg$Nr<o%g:<@C"uI+[gC@^<Mac\^rBc"[[7Vq+MP]Ck?"%<M?k?N]WK\Q7^ac1L<^'8$r$BYK=0F%'EF/7ST??Yr_>--']9^RFInhe3S3um(H0b-Fp^'7r$=Kkn%-8]1Hn=.,=]Zc6\VU\fp<3%a<BjF#$iG)>1_AsSd&FDf=8Q+Hf#$52UZ_rKC9`BN:]F1N)\)#)rpq-mejA=dX2X(A%?C,$g?:h]q]\uN>@9e[[XGF&$U7t:9L(h%j7tB=G15!\"KVGUIQ(P<0AWRtO3QL&Fg:`<9)EV>kt5V$Suk/*CohNc\tK=u&2HR2h1utpaDST#4H7gT'C2Nrl_W)0ra`V)l?_\U%f(KO"9ii-H[l:NeY+)S3G:Cs%d;HNVj$qX\:8XM`Y*Z<M[.uGfl2%=MrHbfH1hnsTST-\J2sG4k])A\/L)RCfXub(J4,$2iVJEIh%-ehAI*Fn,OdoD.&k/8Xs9fE^)L@1pSmBN*^2dLiMoq]4al3;dB9XpRp/mD5QJY,1d?(H3gH`rXsVAkU7R8>iu@/Vj;DRql>G\_\)%h/n91\L,d"=4^*sGTYi<%cE4g!)*'E%<Zbko.=;IQW.#Sk31ImF?Y6.9?9nX2;Mh"qL*L7;nBgsc_U$1CUPk,iTY)kIOI=(/<q\.%YpXUc@F:2?8du+:?-c6/W_BCm.-PW^>WFMrdZb;Q0WCbK?#H-0I3D%SKPA8$bI,M&+qq@dfd"'E5.[h?7.G*`HbdV_m?'DQ>?9KI%G@P!$Vp;j<BTeEsc!BAsEfW<T.WrDdY,RVc>9dFO!f?XIA:N"_G^HiHn@Qjq1TaNS:=n81N$olZ`kLS1CmapSm`*!'NdKXf>]eRL%H1_"("O=Q8n%B4c2mI_%`T)f?./eV]:%"-jH!k?1(;&"-A!R?QW#Jic3/Bc'N=MNBed-Z$7_12ebu96V%%E/73qjH-='E`VLF=?6%lnjIrb*:]KL+W2kp%`>e&K[Cp\E:B/TpkO8gO#hC2Kk@cTn''Ge:VtJL4Z*'erOsVL4[7Q<HP\d2O!Ks8E]%.W=Z^>YiRi`g&6rk%FLp57DA6+(ol:Zb8>Gg"ZIa7,&+4#,_)aI)2VeC2D6//2f&'U,nn`?E!odT$\]C.O$te6_QtbC,LrreAW#U'>CKh8@NW,.pG2i0r%:q(c19f:EJQTlhFRGpt**o<(D+):PrUi%l>5O:8*Lcb5-l_,r2DT]]P`G8tQ'0Jlk<TaqR9]2-8*bX9_Wd,<%KQSX^%Tf_-\jI^[%:`8-/V&D7>e"Mnt;ZqR9)t%NlA^_ZD,HtTNEQ+mN<Y'Dl?!HLP(i3jl9l@J1aA$p^qh_o?PW*JEOh3&\Ho>fOiNCt&e>5B?PT0&E%mX)o7mY8L8Y3W(Lf_mXUA*o%mDrrm%YFQVJ@BdR[c;YTIL[V)ZXg,=gq3[0]5JmE:-ai?g_jtj;j,>*>qp(#5E@0,[q'>1dM[^Z(%\JM^&`&'@8QjL>VDj^Ot\gAbp'h&/.grG..(C"\DLU`Y`pT7pE;jSi.q)b4KSuC(H?.t[gM]<9iog?9<Bl%:j\^7<C^"$tD>^:Ca%$WhLc@[b&Q<].T]odfclC1:qX+Mt`(>;Y_dL>fl=n;_K<J&O+C3@o1MJFA#U7$$Y[YPD-PoO!?dO`%,`*XS+Vp=R4BNi"k1m+[2>%>Rqa6VAe<G3P$3q]#Oh1jfOQqj/Vn'Q!nduH61l%$<-6Fp"\-Y.M3fYLg<sZ4_sn&a4nn1<uXB@osN=?D`=hk4F0"F[rH?Njf:JX%^+<jbYO+L<mb?IqYk9lB^O'gM'b?"A<U<ie<GKBtHLHReBW3(kC@:ZhRtEjEW[coDG'!W\5smll@WN4>`LeeB_m2t=[,D0IRX5">%la,`mil@oC]FTuDKsb1?qAhMt2;#YBmWIP[k8tc<^,=`a[cfs@3k7A)pX2T\[+q*n3H+ofpB\d(0#tqbHgcI8I<936&R<"jY1/2M%=RH(9k^@i*YMl80oss/J`YT_LX`hX2DY`MiCtAO3mH<*YeU<\MIEQh,Xd.Ft^1b,KnF<"1O)AjLhC;NK_.RENn&t-+dY.GZ`gtZN%mPd6EY6U'5l2Ji`bDhu%3fLRjo@MNi=-KlNK;<7(\n$dgHcjKP]d6G?'OAbb8O.%%8D0Za/S9VC-TgO()#I(9Z"[U!Uq%eN^U1"\%8k@(KP?RG'g,-=El#KZ\ZVWo2^s+E9,=rjAV,`LZf69"YI,O*?-"q.$GEn@>a66,7:nc!5Rd*@<Q)*$9lZ5p=m(455QGnS-oi5^+%q5#mqLT8dkRVSBlF.@Kb.=njBY1&R0o[Ur^`7="*]/RmSlcoDj;atgS@-iXhNkQPGKDi/;WP]Yc<bAq6E7gj'WAV?D29YT*F.AG-%I8=>0O`;U']@Eg\LH=&`e)lIKjmjjhfEF8&+gcB)`AR@I%J!^!c\cLXJEl0)je@m+'^O`/;"kte9:2i<q8e=q<=(HresdWHReW7*%<eITZ/'Y.6k8t\LU\jg)UFOB2?NJ!(r*jntUuCa>q)eJuahcpSankG3(unf.p.hKYHE<!tc8e^"Wq=&Rh/8,k&%'>L;c9IgP-%bi%4(Kl"O4b#FSGJbVQ<(de<uMV%5G*6$\imQ#V_^&,mPV/\AS-b7#2Q"0?gY"5)6BQ4`l$HE?CpSC/8$TU`7Vm&FG@ZbDXsK0YeG;>%3pTTr2I[J1f,h`QkE%MXLiqt`CoL1ucir(0#I$Fa4A6Q!f,d2*_VsuiJ6dL%.;D"d(LW)!>!1#D*UI`NJ6dL%&S%S[!IB.%bDgP'%eZ`>0?$cRBO$$;V@)J6*H2r*%P3:</Wpqb(l[C)531'38[JYfHo(>Edrf^"N#2R?YR7m@cB;F?K)?3UKWOWqJE8m5Tp"ti.?X1b*%Hp@0I0BMMAJ)rYVo'*(S:+C%LPb;\dCN/mIIcI%0ok4tN6Zp&nYLD0$A)HUMQ8X<#TpkEB)m2qMe9h/JDtP(6CoEeLrS"#5oq(sJ%p\NDR?gHBA,M_TDR$&h:Y?uWfLl5MtH*?+u:9Fm,FB`\VS!k9GT\F^p?i/8$Z&=b5od`b4moI18D?-ZLf<9TgFVUpOh!8%rNnANT%H$@2KmZah:$[RJQrRt'HE]NYEn+CHrFR,aA-?-.qHWYNk'<#+&okSboCTF*u\C[pe:"$B)Gk^`&T]^a%Hi;Yg_)VH?me(?kW(_=T%B:R!9C.IQfp\NF-Rd*p<I60eM`k?g92@Ra;qN]@m)S/'XE;02<m!G;E]mf@XqDh.ho3T3*Jnro!3nCun^432D(+\QQNI7p:3s*NU%S\Vpf/\H9&,G*81HoKbLl$OT1JEu8Who@\,]maj`>4riBS"oFY^QuThJ^q1V_qs_2DTUpq#Eu[LY=XMal-CW8f"]bOS@=p)6#8OE%?GH2]F1I09oR$PZfWKOYUYa$M>`hMII=)]9+*XdCq"O<$Bjr!&H:*1a`c,#L<BF+!]@X5#f^?B%O#r*9^Xpf>9"!J*3qg79m:K)q%N=C<>?i-sSA"VI#p\Kjelg&f!?\cAI$/FjuI]MAQp[O6mKj0\*rV-/Jh@-T*oi#38lX%@*:pRgcYN_:X@INl)0CPoSZ'"MJCG0e0%`0<a*f<8dne?+2ekJDAVf5L;kAJo!qpH1>.Q"/V8k64rCXaVKr%p&,kCS_;Z"3>`]qR%8sm(JF/Y?uWDXD$\"n+A1aZ?iQYT0:d$%,cgLLIa(=ngFr_)ZKc\<?RHe)m!J^':A-&S>.SJgpp9s+^NS_cg;Q(WL03%(X#92$?(6iIlud`q8+g,dmsLj=799Pt3OIOIG[G/h%/5_V-0qZ.iHfqm+KBLmOHto@N+a^sd@Y3-C-^hm8dul)iH\oFSdH1*?:b.T=QJOis%9E4Q(k)bfWFfb7gjRf_(=$MmO5Kt4if!8d%[dO.m=?M(]@q"J@EIR;&/_KmmoYL4l5ASrrLVp;Mr9MQ)\MV(/o@K1=k:b9T*s_84k"OK%Nq4W&qn:%`Mj\[248H2UilCA3?XH"=%hL9rsnh`LZZZ,L0m+Vc'ai;*I?G1U]j6"\BqnGno/Y&A]2Wo,tpWp.C1N/oBS"GZV[^3NZh`lLupuhPIpW9TL-T?bRWOMKelW5as%bk.2bh4KP<S\J==*REUR[alM'"^?Hu574j*^Kt/MHmog`0(ZO_0<]lJN\8eUpNs'lo$u0ZeWmVWGdk1pgYVp8]t""0$SRu"Y&eN(%^C2RaQem%tqmgrjr;8K7eF!Z7]MJ+EQZ2B4KDW9AlB"HUJE:,9L&2M/c8;\h3Z8eEk>1fS^NoS=md/WGlIK<>o'OcrT3l6F@OLCb%gDi9GBDHcB'^O;@S5E)Ab_*$!YNCGiPHX'9n,4`*m(Y(;"&%BQ=&!a"hPukG@]^+NGI+jQ5>uVBn$Z!bklT-&O4u>]Z`!+rYMER!%])CjllK-W%>K-7WH^esBa.E?KB6Uh7^=iPU?mhF(JoTY;gL9pSb_:$#LV[$2K2;5[mESt`WZI]06:u^rq!Hh^9:KknGOStDi4YaG%Ct`0,\,L8kE'^'oY^3^-eHheN=;%g7]m9LYE.MK=J.Zi,5KsZ&q?;HAn2L9XZV2"oqE/GrpD3g3n(AMd<jsu^-TMUI'.duOci)O#%fQm6G>b:upfhV20UAdN"Fm/h/V#R[2F?DGDrj8F"oZ<W55HO-7r*KEcrXc(oCp0C>GJV`I)YSL9L`WGLJ%D`]oI]lRa*HC6q[LH6%g%tfMK\:<WALkbbKHQ,#r<RW8]tg8dp"2dlQ4UCKQhcd(=``'R`BY+]H*)e@.sF=-BGLE1:;c+=%hW[)A_?&+YA%*TC;#$9Z+Yh(%`MAf3UW&K$XoDH0/^`RkqmZ>N[kQe>@dRgsgPlGba+*Pq4FT9]dZ^JBa':8ZY'"(6>-tfGFh9CWd+J-252X'6L0[HUp1@+/5JG=U%4a?d8p7KTR?hXWUQWKlYjQPWr:\WK@3F!#GeUpZ&-+$a16Gg`*F)8>Rm0]OBg3C>l](#*eAUq5j(fMOHQF=8rbOVHI8Mg:]J&Uh_%#nO:dlSO6dmpsA_a$^!t<pdNf!r"?:G??!bO/K7,Z2W4lO4he<+6Q(sqW$J_Y2u3ZZl(F?k!AY2jkT!=Ym;m%]U@;9RkG/4>NH%A%s/7`0,]\)frRg]`NW310(*F%bF7=>RrtW+p7JaPBh\(Sg27!<jD!T96KCt5#HuWq;o?!J,gBs\)f<lb31/$rl_t1N<%tbY3qJ0^5%p=!PeDJ!I&rXEW'NLAIZr3khO]0G`B+!/ZXTDs@pIt4.%iib/]:\K!EDOb(K:mr?t$KTk)?cYD=G))ZZM6M;LEaq`:C&ZE$)^6MX%fs/n>"j&ct+l[ie2\3A]0>=?*Llnrd(5QVNrkhjjc40ae7]rJFQ1mos,For^OjiJa:njMgn$[%0&t'k$l[@%M@=WOUEsYn"LdeOo%2d*pWoNq$0@GrOf"o9lrDpgBV_Tbk8D[WW$]t[5p=QGB]q"\kd8<4f:cT^c^KkIX[kk;1[*dJNa/jZZ;`!jpq[s\K8#,:VE]-mZG%B\upZD1CiE5^LQ]&oR``M(JB8raXgOXFL'9huo/<ob*"(TuN,]]q5$u7le;0YY7,[$TDL0^HIdQI45=+Vc7T1V&QN)XT%O%L7R8`%>.U`/$3\=X$D%K0kKZ!DnV\]1f?b)<n%D[f4T)G=.hD.Jmd&1Xcief;L%aSC3aohYa[G$Qf)_??@C,O.GL7XH>I0lCqjAPcH0ON!%)W4D*J=XGu#XRHQ+AV\;"Pe&0EQ_-&lt;$#=l*;uJ+Xdte\Qd]QX?=/H7rAI"Ui"f%]Or';ep+X0?O3&D5o[[25e4s4.:Tf!A&n7%]6[&ULau_,ZM4a.`u2E=HK4QB?9UQ*IlJRW;GIL#](P[f;seZL\)G'j<SRN*NYeV@VeYBI+%NT%4fc>%g3+C?Sc&H+qht6JmK=-V%!*:uFkZd:<n#O(`9Jg.r`_4SNM$",*p&#BHeGe[6Cq?;[7FO,P'/f6Mhh]^^n&J@JIO"?4O,j_h6&4EChh]E5ONmgfQQ+q:*obc8%$TH"Qit-SZTcN'$h#Mg48b4Jm/j%o05$q-nB:L-*/j#_hDYe5jid8R\kW@:Vp-8Im-UVNNmX8sqf]n8?DXn&$r,^sU>k#:21O_Gm%9-'VXp1j'URetU6qUEfSK4Fl8_$?hfgAQX7H;Yi/b418#e'cR/B;M4J=/DNRB1fLUF&p-0_6;;EO"O$h^R#/ZqsgR@jj1\75EF)_%5>Nn(Q,@eV^0d1Tr[<bSE)n%WU,;=k5M,PRGLs$b\ans_1mOi"dSu7@QWA8$UGS+.ZdM7%cMq#@(X8JNHV8G]]ScEe4pXodmcPk^%]KTEZ`8U(I#I9c5lo7Phb$*R"9W#mg28h^ai_O2Un'$,o*5@J:*)*FQAJ9tQY%@F>hBRBKk?_A8rkaHchOED<ed+k`gb_6)L=]U'%A2F$G<=C8TLM6\DmTo^FXe,BAnk/?<#5Tir!o#XM8L*OSDr4pm\C4gAhHKH!TIWqA[_"#4lh7XbNRO_K[Q(re3O\lI_QgrL41m%R%LqWI-HtZYfpq;G5er]]K6S*r)h&\^GNS*al7=Y^p'LQ_UT*GQ"m&XjejMfg/U'(u:*n"B3=4Y8negl*uUT_UOH(<bQq6]qkqY+gl%g"OdMHEPLKdcOr/nPIcYY"E":L4-<fcEQtA">K3.^^lpJ^2nAo_<\jRI9HSf*rg]YlG;.X,lAiiH[k&h;tAr<r]euEHkh"K<:BG+%m]q_f*.n(8"68S."c$J>&\lEe3kY/uL&U2)O(dod]S#1g"!FVu&*[H.aY:N>PW2/W5X/TL@"<*uq-aML\o)!]`dY/-s#QZU^E`@G%E>U]63e@mT^1[K8/TG*0lIKtY-M\GNK7/;8AFEPW<Y',$?[;7tg&10<gRH=".K[W[Z&3U3>o+=(]re:)lMW3X&F&W!%K=uALIY#0%00G0.chm!39[IJ??tlr&TBtCucHhKbk:U,t^O:#bH16&C\1W->of6m`r@Er%p\3S@Ic)G4n*e$_rVGU-J)^>cIKAp+^[_8OrP,sC%-I:0*4O).ClAIkk:G/5Er:B<JZg$SN>>qR5*erY>Z`h-P/l#/JSc%BGNF0_U:/B0<VJf555'XX;n6qo+S/hS*H884Zkk'dQ<4XW%%(EoK9&ga04_b_;%(Y_/tY.qJf\FFc^E*(-sEjcbDSN@[9GVM(2JV`&:F!or,RH<o;^;QXJCpS),U,FJr1jn?[`lZ3RT?X2[]5K23%1ib+qT1>C6)t15`*=sAUktO:(nb`3k02J@0k4/CsbOG+J`HlbGOY5aF<:lqC]]+PoYa3t%I!'%Hnc!rsX=QNLp2jp2\G*?o]].p0%_ICn*a$l77f_Xs/]mIMM';d_k&2&J0G*h4AU.'N9ld=H<k.p@hV4YhF$hCKN:WNN<'L&!Na%HDUQK75RKb`Q%pke*`]86sdpZn;M%&n(l;np4H^UUt,8l$g$l]6BRj+-^$A]=n@DijHOaW5)^<&+T"gD\)1V.QiCt*10=^IeDgiFfdnml#1K)lsX#q"u-&^P*q6D=TA@D%`hK*D;kU_jqlr@a4WqPK8.s\XH$chde:n:?SD;TL*0eQ$f\4#OX)&BLm@V_Acds>0!3ChHhT)Zm?N*2#pXPE69='L;f_%/G(]+r0%g/E&<[g-X[-ia%M8-(M/>Hd7Ab'71Rgj);7Ua_;5paCVujP*o5k>,E$4T'M<`nC^qTo1^JKG6g9LYI<-^+SJhE1"/3+):@-HH%F@%N3K)/X$ZMMqa#J6qf!/Hofa(DFS%#n><IjPYDs)Im4&)7Ra;VO[6J!!YT88%&Fabu)MLE4#PMMs6Da4;g%s`EXT%^'-N4Eh+iEHc%POgdRN'>KIfig;N`XDA;iR3*l]3Xgu'YbUqZ!;\a_X6jl!rV@<[/^!f/X9gC=BGMLIBuMKhJD"M]R.i7=h46:lcYL&_NbE&5)?e7%Z)!f>X@[t7Dk#S3;8.BhroRS&U1El_gA.68X&h5<Q3siG-rW&^GCT;VpHA<#P=HRA%elR2TC1Lh.V<%8?2s]`qTdpgg!edB@C]ip%JAgRj!i30D4M:BDXMH4[#foGBn/_a:*\SoPaZ26Jdp,_(Nq+cDr+.<EpG*?NGB;`uMSK$=FLWb,a*1pO]\ru9Q(XT#*-DF!q7a;-%q!V#Q5?.1^oEWV)Xk'<>Q7A:b4T8u;Bn_aqA0<FQ]<c7S%IH`<R/-8nmH:m`X`.kFiHLW>>L^+$m^8XR=l;I%Y!&JY!BU)Cr\&;_%=>DW4U":P*cdP,lG1j#?40%N1<m'AV[,&)-DQX=&92q_5QgVNAr+]`aa+*d&PTR[51$**IePXa2QG.g>rHVk-pbGnkim6$/H$`51%B'.CTBkpg33S;eJUqa@<6c9Mmq]T9d?rAJY!$d/"Q?$3%kG-#F21m7L!pn,(Vf)U)-&Vgf4MN&D+4lh*j7M3Kf+R5n]&9OPbtpi/%n%ZPU#b/N7"b.Z4F75HKE_AnA;ea>DJr[uF\Fl$q\,LdRZmjeA@/#A9LOMk@(7g*U/Z@0eFGcq9JNRiX'C-D=51$cghN_TLQQ)[8%Po05>bITqdm!dP_-f8'31N3,gCdcpNNMpZGZo<")p#m>Lc`-$'^c?dR@-E!pVZoV\"!*Z9]ei4RIU6r/_Z6)#BH;]MSf2)V-tHC2%`_&UGXAHZ$H4(TC1h$)&"cW,<If6D5R0B$h_[QDXl-fg4+WST-3u]i6go&H?cRlGSjsduIF'E\Sd0[=*oKZHJ'C64W*le*AlMF,>%D+*ijX7%i%2idX]ebAT@)9)L;lMFEQF(Fa;X7([J);Y2SlMF87jo';oIFs8lebeUrq]NmJpO9^M4t`3]P5!GUpR.Hha8>,dqe.Ws%GjgD\B.Fi<`lO\QQ6d4ek/+eNf&(`J>95gf7mTJ,J]WMI%!5@jH-UG_3*Hr7KJ?:LNXgO2\0Q%mrldn&.ks2n9L>B2frP/>?hLoG%m%<C/94VdiW7ZJsG:H13n'0>%(%gK-?AemgZ:i5HKZ5KnMolc#AoS4n9[+[G?BcoF!uIm5>"RA.HboVh@.WrNn[SOD+m1<hWZ1#l%kI1RKL=Ln:A'Ef=0$a0sJ>JG:#][_9Jp3R]n*\[W=NSH7r4I=K<JNN2k2l[7o&T)^DgW]+]QWl5T<m@ks#mo[$E*]L!W3K.CPq@1%b,;!kKc_a1GE8U:kh53>EI.@qC@:]YK8ZdiIu^`3q/pk*n\<O3&[_RKp[uF`l'p0"lt:S:f(9$f-MS!F_k.]!VYV0Bpj"?VIK9E*%s.?8T;`F]k^Ri7mJt@g<'"ouk?J'Voo[U:GS't4U9Wp)Nq#=(m1.QTXJ)SEmprC,LqOd"_qT8C,O2:Hi*:h'JPQnh>'^9]TRU0TH%1OV;!,t0Ht&jrl[%a?gsP!%[#U*;)n&t,O<8.\:'qAA)4HUSia!6]\&(/H.t8Rhn!]dubU!$B;a"N3H5ie$%0H;PC8f7I<KkP/$+%.tT%<c@WPB6j<l'HV'OCdqJiT%I("!(Zfp3O<BH[GUDY9#508n?lC@$$'H!*jrsL@TZk?bH7CQ*CP>V1!Q5+\VS37r3"H@J'OcmF%_!>t@lOO%6#B9m.1cG[HH`#`/`MOHL$/dC+i/dF#/qC66OjN+9?5c7_ar%Aui^6j%_0$tJ.VPc^QR<(_(LTNK)hQ%#)So@&e3#EA%;AL&d6)(*0l#V,`GR?1L\DV)_0HllPN13R`cU#KD,61c0'*NIl#EN83KjG`J!bs+dS[@A^hT@&EjACpNJ>E?o4To+"HZ9'G-p8<!%H)q2O*!2h!^BU0o`sGIs8M5Th#iPS_&0^IM';E,ULP34F(FC;B<<R(f;PCWX-CdR<Ca]lBlpmY_JcPq;=st#E_HrZLI`B=1"ro-Y%PXP^"7-tU<c#\7g#>0Tu,6WH4Js\+2#Z;ok5?!4IT`Mk5[%%d\#?&Qu7TmO1d9!%jknt>m6gutcp,'k`;l1?HW?0,i6%9?"0hHWp%7#VDn1?-7mE#]/W9T])#iHt(?,`ETK7@);X!GN;`j?/"/iXQ:("GtT$#'-@j.11CB6m<%ui<dKE#Ug(t,SsWU'A?9E1D,SQ94SiO%0f)K9i.@(L;8+0@S%K#`IY0lk56);4F<>.h4;?6h3Gp,u98LcIP?nmab]ZE+Hk(N;">P>^jMEGsN/abEnm7P).KL1En,brI+tl64%J5+/pX'ee^dLRKu9RtUu#KtI:EO4F+QN8h;,XdJ*Fr;l?W!+q3<KKY@>*31/]O6EU.BsF<9O;7DR='o6LfGdf0LX\>"?r\S"b^-P%PfX_e2DLo'3o$#FaqS7cL9j"a9'#<"i1I<\bme3N*_TirYW$Rd2<<P[WBQ,Prs\Lk-=7TP1Bf#GA6C5\2i]ZR2&o?u<(E_i=@7al%2(4E8N+O+68O>LKE!ZdVe"@gS+pnO@_s@HsQ,*<@#o48oND,!28:bde&E[+f&ASKZ!K#Pb.DQ^])NI\H-DY+6,`m#-\.N1ZRM.*:%^uY&i6%f6f<?t8UTYK`4JG_)L=N)!uP=ABq8.#F^b!bVW=CNIA:Ltl02<o_'K-^'PjVc"8C,Fo.@R@ul/gpdm4"np;9jD!Q`8W0G%L<iBn$b:chO2F9l6u*-C\cWTiM%`TK8IQ5=d;P2`>=hfj(r4Qr7cGj?`#('`!Fhn!YZZPr-]C.lG5;#(A/+/+''5ipOMkhd.4kZ2%JV*,&(71nO'DP0c6jGgo"Y:r%<q<J]EP[kPRB-rNKdOd:5QRX/MhRMFW$3*UJq2gGb!%g&aT."T+INP!jCprQ$_fa18.[g,.LD40%5YQcQ+rq'7#sjNVR#];d!iZpnk[OH4+=iO8!<CF]Jik0sKSE)n*YO'gS9UFF"B\?\ZC"(^j?XW@eJJJs+YQ<ANI\)9R6(dDHflM\%[.7uBQ3Ll_K(TkU]J!uMJd$piA$>Ck2-<dPb1dRd^d+uZ+cr?4!(\)!RX/@S9idrBpH;0*5W&]s`K;VuD\JB&!3iq`=L>S,b<7;5%+".;?RI\Au"ST;OBS9o1U?"O(i[dXug=C&PJtGtk:Yg8Tr^W3i:hdbQ7N1Gh_gjg)K<kYNSqd^\kW?##S:l_a@"&ti"Bu06"2&5#%U-D^t![PlD*^'sP'cFRn`&hD2!6%<8JY=#o\X/sK((aZ..MlJQC+Fsf]JUT/@PWl[P!qBn#s;4`,h-4R=<U%n.-3I"0mHtFK'GI/%V;Yi*!Ds."Oat0^g54ASXLZ[GnZ2ef]crp=1Ih^K\mHO?!%(9Kc&@DXc)j)?r%YWf%Ns"5IuMbT[g?=MLNa+l>-[s7@CoHe(YtQu%V\+OCS:[F$(t!Xl%-/8L`fA"l0]*8UDh?#q&0sefV@enR.6/nmats/R1>!.-RMDpd?C8"(68iSC7Eful:r9/X#c("W)!1F$7]7;=%)$M1_/qAKe93>jrW-#A9of,:$!,3ApBpS9F6-@cMIgS=HP]f#a'(bkM!X8qQ(%cN3"#-FB/Y'(UR@jP7V4_g(^Cujm)6/?4p(0Uu%(a(R.7Lk1:9j-ZU2cDCCd+NDKVb#$/<gj$(^qo)e^fu\n*J>E9304#b#U/pKhi#lC,nO373.lnal;8%QPY=1%,^Te6Maduu_EbbH%;(=p>aMo1Si(g!")(9td"ZhHsYU$(H(1^":1cRf/dJP=dF+V>U<HJ:XA[sQ5!5W%IC6J_-!VB/eP1-XbH(nk/9-MZ*g=+5qKo9%B%%KL"%Ubi1(j[%+o-0S)J!O8+-U.n:^%=Fd[@PD>oXRN3VYQ3`%,GX5\ZC&n]!\#06JI0t$"W\Rc>"f>dBTWUXA)]IZo+j0tQ=^cg%@7H0WPJMDtL`<6hH)gooJ]X-6`,'97[@^Vhpc[1>nF/;':p=9$Od*:0)*<g'M9q\NeM%q5!!pPQ:r\%<Ar+Bud#'7XYm-"=7r@N:%&O>n@;&!raF\5A3&k+hEPrR,djWL;H:lD%fr?QKF;&"St7dm2;TITgfc\-77&nOVD3BC(as$9qDCd[?p=Y[*4c099uasJ]s!()pD%,lpaj&&#?kd3]QA_#hTK".U&O;.K[/OVU`sNs<t"'j;:h5U%&+9$Di_cbl\4$h8.)8YQXn-?6$k/[GkFTI;H"+p1@F$H>($`]O:k%&Qq/_!9a[gbe&EoAe`/k+pUJJ$FWfd&t!)ddLYaS7Q1M:Fn0#4e0H>;K[\7V/W)B<78\d?`iSM9)jJE`ihZf&3"32LBX^9c+p7`_%'rcWh6UrJ("(>"SXaCTW)2LGuF4(Vk[sua$hCs0d#Y/+V)u1s"#Emn3a*Sl"%O,"^YMi[(d07Uq/1O73m9u<U$Od/lU#P8;R3kNu%*"B,7+c`iJ?%C-T;5fkiJ>n<,W*)/N7`q!nMt-aB.#niO_b<`:)U6Y8.ua#Wi#%;(NFL5]#g(OXd2\-"K3l1MBS6M>k\/sh*1Dte%(lBYoMSO4;!=TqSf.gdPEq:t[9.XA%@$]nCM5:SfY/i"LLF%N=;e/L,J91pj<gG0P#MD79,=Ee!Z#l!59LPgjkrcul6s*p_*3I[P%nLP+Lnn:-YH\c<K#?*2@@?q&Pi/XYi'GO4'W.WN=3";c-KfVDj+j<.FSrpOMAMV21T_(J,2ouD<9"80R*"?F"jgd98$4IfM8i.6L%9rWLK?nN3g1K"4E["$9j1QY(h"\"9?MhKn"cd.XC*&9[qo5c#"H@Cn%`QE5g:3r"HP6<9^egEX)R/=Q"`/XI;A,IGg*mU760oDF<%qF*6SdaU@B#U(9c3Kj^NF^/Tm1<*-.R>p2d+oo,5.78t@/@7'eYaj_)es@WfM0!Y_*Pd#b*[HcA+3$@)raXfIoM`&UUmndb,Q6''%+6cY\rCDttlUO!@>%c2,gq/\tA%WcF\'Mf<4)DT$%rb:>#<<mSK>`I3JB?9]]9)f9n?.ao+V=q@C[/ldN6sJG/"n#Zd2N83@4Yj9%4dBO61/W'U6Fi@#m6i-L'<+_jA/p;:aX#_u6qCe89`'q:.IeQq+L^C5S-MTL6m]_W-^A*Ofns6D99+D[Uc#:k3F7Pfi.bQm:Fe.A%@u;LkP[bR9)2ALRfXN9dP-UfRGiDKB4,@r%h0Vc@a$C't+Yqc0N%sp&`*0Pe'TL*oOUC(N]n\Tq;LucCFCSPT_G@s/OU)%R\eOJJ%ab/EF`&p3u"Ha=soNmZFZ6kC@b[`n=LBnA_/gG69d>3tW\:7!$D(L%>a=(m:LR8O1I/"3Q=^JPu&8"7s-+T*C.EJKmrY&1/^_&lq%6IJdHc*/fG66[V$lTufG'c\H?/gO;'8rba?O9gZXeaY8f&r5%l6kEbPGS^u=9bM/Y+%8ndB56n&XYXF/mmDEOiEfI`oH6<43KSY=%884t-"dDT,]`=uYbfPIolX@Ra5jlK^#/gO-@O)=nJ=p;O!\?/t6justN/;7@$j"E3.B_Gncns!7GqTF_FW$l=NrULWKV\0!n-D@,%Xb\DZJWi\SnLmlV3,^Q-M$:^ET>oE<?5<gZ('>3/6pHASaZ/8c*0h'`#Zr@>+i<sn/-Ti*..sgM,37C*!6e-o$fci6Tkk?G>Z0]@%6qThjZ,[#M1*d#D,c7:=7Yrf7L.($Q(+8@2!gt%4'F-Oc,7n1OKTb.iOU]'8%L)hGA#;49LNVT9n``i:$bhD-:X\u?!\+j,6J4Ac%#iL&sK.GTY!nSIT#nX>_3J9`UXb'*lLYicZYmfj2#ESr5iocQ!.,]BjPlIEs3sGn.H&:W%R/h'(#t#4`-7T7a6;J8YrkquR)$H''%^s'ZWhm+BH7cH*N3F156_2eakcE'H*jZP#.31haa?(,sY:hW9QiA'Iq8MpLiTW@;XT#)KR'IRQ_g,a3'6Htour]TtfST(iaE[3e=%r($s@<fam8M%K=8PT,H%:fSu5*FlsbLfHu,`\^J]Q0jJDNDbt>Vc$p:W)0<NE=.lF)AC\_`6`.Z)=L()YgPq=nfq'Idof`B,;C;\%PE<"t,XB4;"buM^#%Qt&]AoF>'lO.!@$>&Ydp!-_>ZbiDZ7chW=NS3H^mmuTnhsuM>is%eNHous7d14e8f\SuhRoL,]6K.q7Nrs1%&o"f*"_OHL_77";0pQqDcATWuKP'C9.Yp#9*6`bl$7:do)r!E9IKJA_`/1@2;CX,iaX<62AEuQLfXelm$E8NZg)Z:lL#._Ur(:+C%[1[!`Zm`h62'm2>6Qim4VM;noZc]a2D/"l(bt(3Hf)@hq73Z<!88ql\nJ'S8M&5F/cJd1PS.F;nX\)/tThRFk+4A'.'+'a_1l:c,%ZNsK&$3Cmd^j_5@;fX'<O>C#Rl8LNfC9eXIdJ>sUH'&(W,hH_#8.=-`+sP]Q"A$fJWIs9WdBlXo4B/Q2BUq\IUe.Mt8-`"0Uk`);%dZ*>c8GbF/7_1T?2q#t*q2oi?b)LL&:i<)HP]J&i2OuejE3B+0[l;HjF?A^D$rqnB*(^\2Stq-e=45!f0+!`WV?PV=KK1`[.UNhO%PlrQC&7^$o.($(r`(=FWN6$=+;YLl+O!Ucgo`g4$aRbQJM8A:!$'d<'iF%kIb*g3;3XH&Q9_tZg1Pm>Zhj(%O6.W"0E]C*B;%a`^%;rg"3LC5HSf?t_h3T-Tq`-htLQg3KQHijLDlm%[$+bRK8MmC'JAJrl./FG+.H^".d/alV3O+_f#RnRZBRFe[OoZF_.*o\K[K6_[h%K<.0!#'\@IRtC2Y0eo.5V+^m+!\;MuG,A.Vkeq8*&r*b%`jDrB0M,*=kcSPJlAs\]-&M15ECWq=ml&fHrZief[6'5eQRGgC@fjP[%+701B-@#mj-;@lHNRjRU(`?,uOuJ4nAKoCPR)R9E&SK7U"Gdo;hOD_CfTIQ;Rfl"#QFZZ8]j,[9,\H]oE=LQi6kP[%L"[n>8Jku0%adWFQ2Q:j?[?0lrC'aX!*o\3_5)#es<K78hTe]EA)J76U*)&JPd990h:KWT:CBgZ+V`bg`_?@IR1?,s/@3iTN0?H;EiS[pC*;`&'%S5*2MqLU\^=b)K=@X1nFi)^Fd#082[dD.ZnYM5,+PV$Z8,7AL4[]aE-`mg7c:XpA)-HB$Q;#/S-QSKa#(lo`tRG5WTCj]=%^u<+]%1kMs)\)&WIH]@!a):2GQD4#Rk,PJVqEJ%c?>TZS`.6>fUTV]6rh:R6S%YQ*eE!bYtZZ=jCKH0B#eQN)1Tjhto:g-N^.HUl7a1sI:%8Sh8(HOK$]MbQc>_"sl'com(S*Z\e6d@Vr3VI>K"R?E2q=<TthW\Hj@=8=;g&B52IWMIb$,*?/%o+IX&Mf"^aZ^Z\/i_V>VCbQDr%4N#rW6;%VZ^h'cj<7mV:m%$V1ceBaB_0H3`5)aQa8N0nL(*oi/o2,"O?tdMf5c.>;dR/U%=C$bWPo?pe'!+4g*/m3;%3jch,`c&V%"lLU<J*)HpiZ-Xu&2$^1JJ_5a!M[n&2Xtit=*j<;@'h=V@k^c"a/-)1+DE=65%_t$]lHCubrglJ_T4Of,@mc$a3!Rf'u#u,`m[/K%Eo8bck/,!2<!J:8PM+)`U+m+NH=DOe0!ds#\NV6l6mNt"#q!r_6PTgP"e>rT%RODtUpN)>Ef*ChHQsfsMK^Q#?tnp^6CCN`ea82r%c8Z?@R*F1nUB4$i^_DAKee$'cK-e!5UH:lI]UkiuYHLmXoYTV[r`a7T$`>pE[YnSZJVYU@$Q6JWZZ*u+_!>]f`CV=$UK"PC.;h%k%SRQt[Au8NG"A?W$%Y];Y$k%WK)6p>+`O)t*XA:8^ec@(%/J*R4#>V7Rah'd8W%nO'(`Wsk0$[;<Jnejpm/>q3Y#@5@Upo-"-ki+[%nXEglPb2D*1RQQl3(>"6JFcVl!hDqD=r*2GjC`uY7:oH27P)J-')g=_LA<]YDf;kbU`PhrjUk'!5;i9[$j8Q8/1J(/)]*B!W_^Y@%1o>3l66QplSYM!HMO#[)^Wn9ON%$.LO"d<Fd/l3YJuL19-8fh&!N4!V1!qU"[pUre0l4EfX$X_N3_fsCo%BXG(K&?'9oe#.+QApo%].kV^(aChNC-dQ.e`[-'+g\4X%Vlp90OZQOm/TU)&iUS)'F*Rf&8N(%c!m5c@FUTQe18Wu@3!n'bqAKq!,P/^8JJ`q,43`+AQ6bh%G;)W:U9U1s6*?p"BZbHbLp[:/M!Jdh0]![&R2.77$/BSe$jH?!(2>\Mf99T`?\FDKB>?fnCZ`3DV+MojA;-$M9JAG]D2"ld3=5ub%HZs5`l/M=Eq\X2sbfDso5OCfmBIPu]n<Ep_@LTA07Ynl6i67Y3:nVG=IL``3a?jhl"!<JCB_J"N%bh/g@#pHn=e&fHH$/Z'fsg4"%[C$7[a+$ikr44r-7obIa$lY4C1dP>RHjM4l'IK#3#4#T9phYM$kF?iXgHN59KcD5i4+.nQ70FG%cS@+,;.:,;<<"pG0/0gmJti\n%KrPp,!Idb\W2Pb"jM:p/PI-7(\l#>eSs,a$JAp/PS"k6Qmj/\F`R:?2)A4bEO4AsZ9HJ.W-J2=30&Yqm%23010dB6*`?u8[9`dC(%KH)4;0T)([Vc&Q#i96Ec:_7Gi9r[@)_f3IH#9:kH[(_';$gE#jL2$`Oc+'G.fnWriPRb]a;QTa_8=%VS,?Bnb(-u8[afg:W9Z'Dm%_?^2EU6*q6#%<[8K./nsd-!_H[:PT#-k>55$"c3If3BM^qGLgNaqU@G6"CmMg-S=K'-n@pAg)sEoSE$Yri).Rats`S3(Fg*bnqn&%cffFP4HN&q9:-;[1U6<`D-fn6.1""aJ-j3410FnnK3fnm)t,&,FYF_uj$k_n?o(bUqZ]50k#<OFU(#KWVAaGc4D+[K6:)*b\n?!6%#TlV.QC,ihi"JE/A1J=E4j)33(rX6WY!khdfp;sfZ:9Wng'kLTS,7>^c7oSN]s37k\7dhD\VeQr\5a490iq.Zk0+<1M*LEkc?YT.%^'4*^L.Np^LBJbl,W#^g1a`P80SE7<LYka&+t90GK>`Wl(%SU@,I.$K*;s%d$kilS,s02%=:DVj;\*eU+_^Z1E_1O\!3Rp8KS+nc%)_/krOSA[2=<_?#4?.Ms+eI0t,#iP:5=L!?#bgH-c9,Sp,CN*&S>K6h#U<K@N_pS]"=TF(#S2c#'+Wn2_@ul0ZjB5+1E?,GeM))H%!q,*7Ym^1@MePD,Jog6?VpJ=]#WAaUW>AV7@9&KqONg440io*kYBZieQA7/XNSi'&!Dk_JgAq[j6?V1PV_U7t_%1'=Vn&uK%Oh-%%H%8Rl]gXI3[mZ)\#'O\b(+B7lf$);>_5)\h^=R.f<Rh;o&_FY)k>*tZNf#:cLd"Ls:R*PYCQN1&bciL[#4.!Q-pU<HI$MVg%5G:j%`?eJlMf^6)0LE$?h2]]Ma+SjQQZ`QhrK5M)LXcB-Gp!O<8*-:-lVM19;t9pV[!G@`hG]=>lsqHoK[1HkI%L'9$QDuB_OuMeSu$Y&%@0su1Fu9^%W^sWuSg$eFM]"*8\tU`@RXS1tRIX0_c&S`(rXBr"UuC1H;P*$RL8!mrZTS`!%P)o?m\e=HL`opDjGH+/P_-[c@gs;u%fHrr7<;0)2ZUn]MP`s!g9VEm?*?r<HaW?%u(eDF&p/6<6G+AIkc*,b+SVY_#Zi`!3_H0MVl-`Jr8;Wj)Tt^gdlH]+06:`<hn\k*I%mLU0-T,%/IfM3n@0qo:[Q]X`ac8%+cPUD#>cg8Xo,U/'2SHm4?bA.MRThCuNJjlCZ-o!>t()q7ubu^U0'=)n:8.Sh3#asj\B(,,`%3+I,37MW4*)O2A\FJdTZ@EMiH8"u6pF$HPn.59FI`^GLBKpP^Mf757Tp7eB/rV@e0P(!_'H:2RX&M?g9//MfUo&qe/./c^8lYI'l%lqqh.G2UF^<>bJ;;`Ke\3tdEY,6;X26\pc)6!KHH_bKf$,,SIs('sS)>FV2i&=]Ec'',ET'8ghh06mm,G623J0#7lN/&*k9>`.5S%*GA\3=V^ud@U\CQ5tf]p$l=onHNMB(gt^7S_&OaS#>[Sl%+Cg8;o&4)A:%^A0BM+"/3b9`bI\D*Y"ZYuB$paAal)XXhBs0+Z-NP=%As\68lf@6eYs?g`*RG3-0&e-I7*I"RF5$k9f\Rja^l_;],?a=[YmuG-1D2\V^melaX)9b*-e>?(&8lLNII^11*0B[P?6WCXg/,`1%WhB8hm+iSJJL*Wo'IJrP8muoETEuI8GEbZ),E)%Z.E[Vna;NQPV^Rbg*jOij5`ESQ)R`#!`7QT2,[e*H(3E`7nQA6c@4TZd;9"#N%%O18T)s!U5\R-"5XO%N23/Ddk4Y4)"1R?IkK#d=_X[*LY@%f!:!Ij1^%+()lED^!ri^,pU:7.:8&->o;HsT/[>MhB$UCi1;"iBTI%m$>^kKq2r!-RpQ9`)ZNJF:88?aoaYpN3s5<lU&>+o%l]nofV&/)Nk?&$mE9ef<!X5C((YOkADHE9.>`s%3n@^_f<WN::!c'3JpH*%#J4?dY()o1Td;N(AfMKfVOWNCE%nZN"6lp>8EP^ENT"&')+f,-'I&J[oo,BHiS[B/b)S&<;#O/-PXiQ[;sFH;1)#!O:.(u;+;XlN%0MDj<JAf?7pA2#]+gNXoE?"7)c:m4@goF,HS#N:u]AuM)K81_"8e\re0Z3S,QmD``QDds\XmNX2h^7F%%ZiKfjuG$2d(mKT"lUDI%bu%VRqe9K2#^Gkdk(KI]m8=lUeH2d1'0]*Fj@)U6Ri'i;J./E!mbZ2t,=.cKSPXhSl7g=9nq0YoVP3pJ"G31"#`,<Y)':X+OI0V_%amAan??o)Y9fqp;Ks>C`,K4-.]$J?5,Q4.J:;NYE2/@<=;Jq>V[DcUX3X!B;Xmfd'9CVmh>2^(n5jNCA(5OdS>8g)Oe*q_IhK6B!%E7p,#`4a$rp'O4[af^A<+9I!"LKJ,)YQc]=:^,P79GPEeU?":Z7YTeR38sp5<P$eH5/lVlo:spK=ITjl.YNF;cV3b!Iq.kAA9B[k%KloR+deXp/aY;:(ORHU\:MRe81b/g9'6gW/'qXM.0/fnaIH<@jb#-4'k/.=krjNF(GaK$-GaR$)IV]tSnM:aVLM)l`U0VV@#7h6"%7;-_#6poTT`qKg=%Nlnj&i"=XGJd=Y,#[q4^CeTr1t6E2GSjA*&SW*TLDs/1h3Ro:3G967A3Ik7'IL`S%1^i`5Z-B2fm/KBGqB\J%N`(oD!<(*0K::EfXb[Z2-JRRdeB#V)2L'`^4d0rf+g\UKAPQ4=80.5OO^JfmA;+#C8MmR**6^:/83Kp]5PLn,Ua01[,W;anqZOS&%bYXU:.MdM+Va<e^0H$qYS.[7Z.3e$s%]u,9qAH0\S7;MU^sR^E3G5b5LIBE[^]H-SNtLth6rE<0rCutod=)GTD78Eu>`+\`E/O#B%]]gt6Y=$F)b*;>5pTXFgoFQa"1PS_WNIp)VA\=!D(($j8/lQZ9WIl0$G0JV!%lk3hE/E^O`bPqa;*K*WQ%Bj5:@[<H"4fE.5^K<u%#\XA%hV-p;dTIprOVEijA!`N;fR,/=3SI*E0q#sk_NZ"u1X,Yt:Dj1`FE+0V54fRgC/LpNA2nuNZ9Ot7W<O3;TC=^!pssa:l>)\+%rJV/#-[m_+6Uh?nTnkp&OdeUF.DdIs:n]ZE];Okg"-qS;&Anf7hDY[L]*_%XBJj16"K9sMGpWTdVuuJh-Xs;"Khj\HWFmCOkN"9p%gO57Hb-^XL7GnXkE5N_,?GrPGVlSUR1.MN5k)][<e,j`l@<cl--;t7&-kF:0_9+Ead-2*FK,<%MUtjI*l1gV.8.d%rpqc2eHnEIg%P"%#WrKHJ>9nE3]C>E+tbb@^\(O.o[VOV\.OJ-,e57iS9_Q9iS8J$e2j%27eS[Wr?.<+i/NA>">,UX3AUC,[(bVV@D7$,]($-[@6%a0(0M:mW8pc\mn2(S7qf1qiVVCU)St6TA8Lhm8d#iQg[hLL6s3m3X5YiHE@.'M3MJ+39S%s-tGO4"1WtM<jnPC;uI3TOE%:&Ss2(%kh2]X6Nl*.24U>#Cr'R-eibq)l9I8>>+kbkPH+ik?aFcr'b;u)KH3Ts(2+KkJFfX?<h*_Nhoa!I0M>Ue(4uoc-+f$>W'kX&d]3Y1%du8]B9!?[20)TudY9JYr(0,[GSr,nD0Zb6-Oc4[Id]3Z4NUU1@F0]gUR'tr$6,g3E-#1LU*UeP"P<-B\?r<#ni;(>k*#h+%f""m#%@HBtqa7UqHP&R82(I/:t19()::=0[DB)*:X-Ruqn/Odfp%U)6Ts7V2WLNu8B_lP$La0p`4T7P>-i-@OQKp?ZKWE!9K&IK^e"7O3?%:.F;uAPNF4B4Xi(?-o*Xr!_Y[S<%Ga"6%p*'u>I!TLY_uAPNRVo2b<?:<!dE/FuurV)^NZE#?o@SjTCZp`+(7@9*1+*XEpJ.gjUT%6pSe7Cq\DDGk+1Y"mAS9+fq=L:p9?WI"]:'5+PK"<9lVl/M??NKS>QJ*1R'&<'(<",.\DRn?E_@M>j2:2VJZUb9#rP`SP^'3E_0-%G3mIZ@1t]U.4VA[3Y`mhl4+u/9c0@V@['P]c:C'mLq6M=Oje(;@Tn3:WB2t3a!5=N6>IkQd:;E(Tj!L=9A:N&QN#\eGUDrBjWD>`%I]`#PV5V^#8o^%m&=L%S:RFOIU/Q8n?AiMnbmoZ"it#"1I8$;p1Wh_M5\<+pgQc/GCe#%QolnAu#YF8W$"%M(YTsl$SVlfDgFq]H%mH>7W1_[oaNEV"3G\M[Y[_pNlZ)bi1a$N_)4BH\gSJ#E6URqnTBGk#jV]`.p:;NaYN^gnW.%CB1kNh%LB$*cBZ\`qOmO:7=,SRd4%Q4d>8GZ!"7$@>Zf7tn<!f7[P:*WD?FFiAOr9Up*E*K0:j]m69.mF92SW?#+:N9=TZ@QQak8L+j-"FPGjQ>%-9;.,LWePd('!`s2n%L^T-&&KoVI=E[Jg0q8B^o3m=J`(a;E=)FjCR9^.Xh$H4^]9aZ[QEK#':.l4Z6,=S323tF@>PFGL7[&!JE(lO]=f@oHI)rg=?2M/t%*P2jfIf>N+:bZ'pPk+n\*d84iW/"df_c/1D&JpMeJitt1$Ln+_p[B:sHdFIWo'!@%+c+!70,Y9QYqh0-nIq4q8,ol2g&pO+ZIG'2%TJKkO_*#%B?4^R)/Ccsjg-`\9m6RYhKV;j)S9npbh(5$aL<g0&:DpcT8UDkA97&(S\EA+XMTJ1:+SsYi:4(o]"?DBa/;BnGQ\(nG%NZFQ0,"XqNE9+nP@iY)e@?u.DN"F<l)!=0j4*;=Un*tk<VrGQ#>>`?o*IKMF8)[$'KLHl2PQQoWF:\kOVa:Ck,'CP+ViZud$#VeW%,mkN.&s>O_Q=R#VTEJ]^mNEGe"/Y`GH7;@\#Xg@=h[>C83h<-WAA_-XXU9(-h'nM5#]W$>k(=6g0gb-g@iS&7eJi4)Ng>SXa6lVp%BAk@naM"Ip-MKZ9>iEV"PuXLK>Hg1_>A8?LOHg"?<($s,W,Y/o!qk/q[W8?8PrU:c:So.Yn'P<QG_K!?d7eL!q1&r;g;l<7L(=_c%S3tE>KN["?O$gH@9Z:pDAGO:5SV,;gb$191:Rk8'^OkQP0g^sIirE9rauMr8pc5<=_-ANW\==O9W^t@d+JRjH>cruGMWa%tVlW4t%s2?;m@[;4H3QaqGUkTt&V'4ua9N@].`9@VS0=DI(D\XJ(=qN;],sA;*A=u>:^@^S$+"nqd&.)2tBD?QR5$K=C<CpbaHrNcXUkLaB%pja/]NL2Q"XX\-p-K`r+6AgG8*_Z;@aVl3L(-H::V&`3j4I.4F*6]-N.Mru;WUE]t"e@WjN9KQjBU4TsWO@_aD(O^qU!tJC[g4:`%ml'!q5]+(P@&#VCmlAiZP28CsRbJ#=6.mbK$-[<8<odE,_eqLN$CW[":OuplL+5V,@p,P6:[Ii>C6_Ki-V<B3+M4<'Z`X9LNYA7c%njS5.2CM+ajd>IMM%i/DVNW]l8m"T+`L[;&N)s\uFWM\&]3_6OPoGiTCp5%A:m:c**Q06"397piKQmk?T;'5l@Zct"E[`&)S;MHH%L*-*#`?j7q%0Y/&^;=)>8s+(Gcp^F#Om%2ZdeBtCRT5(^$rg>]0p!_H]["HOSM/Y$4<Z5^$BYg9gm)B)1)6o680EG9-mJ8WJn,dl%3g@.e$+Y:Pb0le.!_#'`+^0GK7qU+@Gt!0Z.@ZEb_7Bu,QmC1%&$(peZ3oL4Xgd>^b'E6/P`'tkL4tELff2k^k\ql;2qImUA4d^l%6KjqgmF#HRBP*[(,X(#08:HLFA-L*NHoqk49A+8,3WP.%eQfPC>u:!g,!F?PLa^Y;ma";$A!\teV\_"b@FR`OR<\H7DaL8!<LdCg%Pd>q.Run@..HR5FfONnX^8'(V<ULKYI5%-Q_@t7)CX]RVS&TiF#N]t.GJIBo":^T(U(c+p<9e-qH-\eI`4b>APeU0BiVA4A1#i\Z%5RIY4ID\G/A<WEdrPYQ/\ccGf9d>[fCAPcm-%V)I;"nmb'(P=Y>`2`KU]rKt:_0CmPZ7foQ!p,J5F73haJFgr+`;E7j#7VXiTN-n%`K'\48ie9=RKZBgGTonSMB[shiflJN_996g#g;GM^Ke?:Bu-c^brDqSB/Mlpo^s-uWb&Ar?ik-:;h@QU5o_N\0]C$Q3Y3L-NSI*\%G[O;i8W?PA&^%1E_n.3n`YeI"UZG#j7RO\A\c`X3T3:4&\kK*.&KMs'V*g/=E=g*::CY>_a:>Y"2cbatGS2O?B>^n'U/'f^4)]=Q%Dgblrk](B0bUN_Od[%5sE?E;]EIOG41]=jPjG,PL!CE^XGQZe9[l<6-,$7!T"!53jXAPUc4OM6k=E7k[C'0)3?b+9W(Kh\4\^1XY%W?ckinq3$cM<qQT>A@7KP)Kh&Z:K'&RG3g1RTkD)\(WZ?>ekbFGbgOj)[2T(dNMCeVGJrJ&)R^\?)E,pB4fn2MHgQ41-/o-eKD-@%b:O8[?*0?jDe4JGFET/G@(8hIYT>ddUQ_uK)('TM'%Z$`2Gh(=6JQ0mN%,M*mC),DcJK:Hjs_'R8Rs99$m1.uQ=>\114'Ui+sF&9%$qg/K1G-uuQAK)M:D7O[8hGUD9#>Y,cn.:9`>0(Rn.]*rk<-Qr2HoDQ2A:2r]DuEo]%A9R&40Mr0**mt`.S?"eAd&Ud$(ChV@04U%NkX08@4%.fKNCHNLdW:RF=^!t20g\U$gS!Q@(f?Zg/<0C1hQ?78fpj,'[[PHINu/?iM(Q&dQ)AB_FN!0N[#m=P]abo_1X0lCMDjW%+tZ-%,Fg&t]s:g^CKtI\Q6Q@J@P;\r%(V\cFmA@'@r^eV5=qfZF6I6)`2p$nk7*O1l[:`A(PpPFN1n/s,\sPjOu=\DYu6Kj8=!Hg%\\'r>6q/o1d*ZU5FW<sMiRr+2n>jg')\nt,VbH=)(['$PT(ejK4!pX9X&DC-*cg,-/d)M\>;De+-0D2QS)[GKhJM-)d*5.9iZJ)%%'U0=9*IsuSgn$g0pbs#3eQe[p/];pUKR#`!Dl2OOH4c;GeS%74La:U3a<a*-=7A):!Hjp)g5*E$r0.`*F,=s!^FteAOX[g\M*20u%_d)2+_6!+da0sq=56Du6^sb9F%Ziq@-5Si?e=),rUOo[L4``Zs-I_**@Q;eb^Y]9-Nb6:*5orpD#9Kd^MTU@KW.k=07&K?YZVc6(%[rTMnUB#@KTrbfa4GQT8EI%/)SlJgf1&_%:@@!OFWU_k%3`b?T@k.Cm9U25EhTsM=Me.@_K.9)q'l'//;,<GPRF7ZQIa4^;I`A;.%r/;kcq&-qJj_()^R@fBe59&(tcWG-kj_'cXq&+MZb5@30_,Ys(UAlu5S%->]FJ`E!T2!b[cWHT?k%BmBq:YfAr9Rj`T0:D]THDqZ%Z_)g3B+t%0Z\ba\X<GeM-LU&0CmQRAZUq4qm.Na8ZcO]pN!*DFB9W)[1L<"Ak%>-cC$0pBCeR&Xj6;\;IeK;pOD4Re\W:Cr3M)X@%NkW'-"=)GlO=931&kDjK6Yi<NfV5$p=-@p_/tJ4s<rf0XF)(tiGRLWpF<%e%+gVU`I)6rXEmh//A%=Qi7eo57:/HL<kE%4-4f5"F%`95GLD[<&Si,)4_6,:SLMo*2@@@Z<J,>!PZI4od3Wh3;8ql+0KMs9]^(V;5`a$\)C`+p-)M3XqlRRhFLa1FTsVpt\OCj/M=U3kAV%Zm`d(,`p6FLLH"mNtmPYPZ!/pQch?;9L+A5Os)pS_PK"<XCH2^*tPG&974rOpITaf;"mpt,=GSl(\/rB,km\R=c0cN(s.425bXVa%j$MJN?+2l0<9UE$&b)3Q?JH@Vc'6.p+e]>mOYN)Q_*BZ]W=D*DLD>p+9U_7-I@aF"4XOHJSpp<fSVbc7n1+*1bBjJ6/uO%l$%+!j%]0\QWK$STsp.[i`>U\T)\idohHk/$)mMsFd,Pf``4%7E1f6(N(8<fEO51\$oJZ=,d#W[EA^ud,fBZ2Z[2)6+9,[$+d(Ib@q1rT7P%A.D'h$6*?=E%K!%1b?ou]C,tXUt%n0!F`JnKQ4T2O@f^LIg5J8"Sdst(@`g`@S.^FIZG$+ZX$+D67<3F6WHE=Oa/(W*>tuh?oDsY%@O9?@-88bHDMu*)$&N1h&sRR_E0*k<+iP^Ge&'!p;Sp,H+V\/3&446[NE/pq$VOHe;M==122mM,r*9HZ>UcI57#)Kb]Y6l;1,_[U%p"Ct9`'SJEa&MIa`Hjs"<ha*NU<a,r`:qjL?V%%p4XG,MN?gQ[oY"?VkkqM5`(f%$VDu8F4^P4(=!ShC*7-0O=NY+%rUtX,@1cl!%[B!`@)CZ7Ma/jm9j7kpWkqO/.ZG&WM$5^_imG?n>0d5HOic>Y2Tc:I_%K[0j[BY*01Ji[9ng8!U$6':m/6i<AZ/lg'WqR338!lHf%Ba?i'dM<d*Ti'a5jWsq),Z`[3O]#t!W:-S54@C>^PF=ME=3*q`<\1&!hke>(0<@\WCt[10j1H!M#qSA'Qk3;-229@"iH:\2!l`S;%c5GS(RirUHOBC?cOQ^@?jccQJ=Mle&,\0qJqC9^@qR%bKKlrQs=dbY%<EAfZYeo$D&ne?T3@)R$`K_R1LcM&)0S^pkASSs%TJ1bo%L\=.D]K;f\@YW4j-FK)sak6qkXa6[7=(+5%\h07p%Rh5F23AmKM!Q[T=M[&N_%ODS/IGHh(*Q7!CQ\'/bcQUjX9>4r(IFW*,p\4!%gR`2%ZUNh57SkDokP3g`*hgp'PC+TN?0%/#lRd/&f=6!,'"U)%;eF90_Zt!;"+?ML7?1??DEt$&Ua/ApjIG'!)?nQ2r:KF2eD,\3%l0$<tYIfSiHZHBs1,V#"GPLRde]$K35>No/^0MfZT9JNWZSO]Wp#J(0Abt0#alV'VMj*DKn%\i,+n1A;Hu<ing"+[Q#>dV&+T~>%AI9_PrivateDataEnd