%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Merrimack Club logo 2011 v1-o.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Cicia Lee
%%CreationDate: 3/16/11
%%BoundingBox: 0 0 220 132
%%HiResBoundingBox: 0 0 219.3809 131.0811
%%CropBox: 0 0 219.3809 131.0811
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 76 8%%BeginData: 9260 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0DFFA80D2F54077E0D2F2F2F590D2F2F2F542F2F2F540D532F54%2F532F2FFF7E07542F2F2FFD04FFA9072F2F2F07FD05FF072F2F532F542F%532FFFFFFF530D070D077EFF0D0D542F0D84FD04FF5407532F542F532F2F%842F2F542F0DFFFF2F2F2F0DFD1DFFA80D062FFFA8060D06FF7E0D53FF7E%0D2FFFFF53060D53A87E2F06FFFF7E060D2FFD06FFAF060D07FD07FF290D%067E7E7E2F2FFFFF2F0D2FFFA82F29FFA92F060DA8FD06FF5A060D2FA87E%5306FFA80D060D7EFFFFAF062FA8FD1EFF5A0D0784FF7E070D7E5A07FFFF%5A07FFFFFF590D07A9FFFFFF0DFFFF840D077EFD07FF0D0753FD07FF5307%0DFFFFFFA907FFA80D077EFFFF840DFFFF2F0D07FD07FF590D07A9FFFFFF%2F7EFF7E0D075AFFFF592FA9FD20FF06072FFFFF2F062F067EFFFF0653FF%FFFF5A060D7EFFFFA9FFFFFFA8060753FD07FF060D2FFD07FF2F0706FFFF%FF7EFFFFA8060D06A8FD05FF2F0607FD07FF5A060D7EFFFFA8FD04FF0707%06FFA80D53FD21FF5A070D84FF7E0D072FFFFF7E0D84FFFFFF590D07A8FF%7E2FFFFFFF840D077EFD07FF0D0753FD07FF53070DFFFF5354FFFFFF2F07%0D0784FD04FF2F0D07FD07FF590D07A8FF7E07FD04FF7E070D5A5A07FD22%FFA80D065AFFFF060D2FFFFF532FFD04FF5A060D060D0653FFFFFFA8060D%53FD07FF060D2FFD07FF2F0D060D060D2FFFFFFF7E0D060D062FA8FFFF53%060DFD07FF5A060D060D060DFD04FFA90D062F067EFD23FF2F0D07FFFF0D%070D84AF0784FD04FF5A0D077E7E2F2FFFFFFF7E0D077EFD07FF0D0753FD%07FF53070D5A840753FD04FFA853070D072FFFFF2F0D07FD07FF5A0D075A%7E2F07FD05FF530D070DFD24FFA806072F7E06070653532FFD05FF7E0607%7EFFA85AFFFFFFA8060D53FD07FF06072FFD07FF2F0D06FFFFA853FD06FF%7E060706A8FF2F060DFD07FF7E06077EFFA82FFD05FF8406072FFD25FF53%072F0D7E530D072F59FD05FF5A0D07A9FD04FF84FF840D077EFD04FFA8FF%FF0D0754FD04FFA9FFFF54070DFD04FFA9A959A9FFFFFF7E070D84FF2F0D%07FD05FFA8FF5A0D07A9FD04FF84FD04FF0D077EFD25FF7E0D060DA8A806%0D06FD06FF7E060D7EFFFFFF592FFFA8060D2FFFFFFFA80DA8FF060D07FF%FFFFA82F7EFF2F0D06A8FFFFFF5A2F532FFFFFFF7E0D06A9FF2F060DA8FF%FFFF2F53FF7E060D53FFFFFF7E2FFD04FF060D53FD26FF2F0D53FFFF5307%5AFD05FFA92F0D07537EA9530D53FF5A0D072F7EA95A2F2FFF7E0D070D59%A97E5307FF842F070D2F847E5A077E5A0D2FAFA82F075AFFA92F0D075A84%84530D7EA92F0D072F7EA95A2F53FFFFFF5A0D072F7EFD25FF7E06A9FFFF%7E077EFD04FFA9FD092FA853FD082F7E7EFD082F537EFD092FA8FF2F2F06%07077EFFA8FD092FFFFD092F7EFFFF7EFD052F7EFDFCFFFDFCFFFD99FFA8%7E532F077E2F2F53FFFF532F7EA8532F7E2F2F2F5AFD04FFA82F2F2F53FF%7E532F532FFFFFA92F53A9FFA8532FA82F53532F845A2F2F2FA9FF532F53%2FA8FF532F5A535353FFFF842F53FFFF5353FFFFA97E2F2F07A82F5353A8%2F5AFFA92F537EFF2F53A85A53FFFF532F7EFFFF53532FFFFF842F532F53%532F2FFF2F535307FFFF5A59840784FFFF530DA8FF7E7EFF2F2F7E0784FF%FFA82F5AFFA80D53FF0753FF7EFFFFFF530784FF7E075AFF5A07FF847E7E%0D7E2F07FF7E0D7E2F2FFF530D84FF070DFFFF2F0D7EFFFF2F07FFFF532F%FFA95A7E5A07A9535AFFFFFF7E07A8FF2F7EFF072FFFFF530DA8FFFF8407%7EFFFFA90D53FF59FF2F2FA92FA9065AFD04FF7E0D7EFFFF7E06FFFFA853%FF2F2F292FA8FFFF7E06A8FFFF070DFF2F077E53FFFFFF2F2F2FFF072F53%FF53075953FFA8067E2953FFA806A8075AFF5A06FFFF2F067EA80D06A8FF%7E070D7EA9067EFD04FF53072F2FFD04FFA80D2FA929FF592F06A8FF7E06%FFFFFF7E077EFFFFFF0653535AFF7E065353FF0D59FD04FFA907A9FFFF5A%0DFFFF847EFF542F2F07A9FFFF590D84FFFF5407FF2F2F2F7EFFFFFF537E%0D535A2F7EFF7E077E2FFF840D0D0D7EFF840D0D0DA8FF590DFFFF2F542F%5A590D84FF2F5A075A840D5AFD04FF7E072F07A9FD04FF530D2F84FF2F2F%0D53FF5A0DFFFFFFA907A9FFFFFF0D2F5A59FFFF2F07FFFF072FFFFFA95A%7E0D7EFF7EA906A8FF7E7EFF2F2FA80D2FFFFF84067EFFFF0753FF2F2FFF%A8FFFFFF2FFF070DA82F53FF530DFFFF7EA80684072FFF8406A80653FF5A%06FFA82F7E0D07A806A8A82F7E5307FF062FFFFFA87E530DA82F07FD04FF%A8062FFFA929A82F0DFF7E06A9FF847E0D7EFFA8A9065AFFA87EFF2F2FFF%FFA92F537E2F5A2F075A5A2FFF2F2F7E2FFFA80D072F07A9FFFFFF5A0784%2F2FA8A8070DA8FFFFFF7E0D5A7E2FA9072F842F075A075A2F0D53A82F5A%2F0D5384077E2F0D535A07A90784530D2F5A2FFF590D53A92F5A7E2F5A2F%077E590D2FAFFFFFFF2F53FF2F53FF5A075A2F0D2F5A075A072F592F5A0D%075A077EA80D07A9FFFFFFA8A87EFF7EA87EA884FFFFA984FFFFA97EA87E%FD06FFA87EA8FFFFA8A87EA9FFFFFFA97EA9A8A9A8A87EA87EA87EA8A8A8%7EA8FFFF7EA87EA9FFFF7EA87EA87EA8A8A9A8A97EA87EA8FFA87EA8FFFF%A8A8A8FF7EA884A97EA8A8FFFFFFA8FFA8A87EFF7EA87EA87EA87EA87EA8%7EA87EA97EA87EA8A8A97EA8A8FDFCFFFDFCFFFD21FFA984A984A984A984%A984A984A984A984A9A8FFFFA984A984A984A984A984A984A984A984A984%A984A984A984A984A984A984A984A984A984A984A9FFFFA8A984A984A984%A984A984A984A984A984A9FD30FFA8060D060D060D060D060D060D060D06%0D065AFFFF2F0D060D060D060D060D060D060D060D060D060D060D060D06%0D060D060D060D060D060D060D2FFFFF5A060D060D060D060D060D060D06%0D060D2FFD30FF7E0D070D070D070D070D070D070D070D070D5AFFFF5307%0D070D070D070D070D070D070D070D070D070D070D070D070D070D070D07%0D070D070D0753FFFF5A0D070D070D070D070D070D070D070D0753FD30FF%A953532F2F060D0607060D0607060D295A53A8FFFF597E532F060D060706%0D0607060D06FD092F060D0607060D0607060D062F2F7E7EFFFFA8535A07%0D0607060D0607060D062F2F5A7EFD36FF7E2F070D070D070D2FFD0BFF2F%0D070D070D070D2FFD0BFF530D070D070D070D2FA9FD0AFF2F0D070D070D%072F7EFD3CFFA80D060D060D0653FD0CFF070D060D060D06AFFD0CFF060D%060D060D06A9FD0BFF53060D060D060D84FD3EFF840D070D070D07FD0CFF%84070D070D070DFD0DFF0D070D070D077EFD0CFF070D070D070D7EFD40FF%2F07060D060759FD0CFF2F0607060D067EFD0BFFA8060D0607062FFD0CFF%7E07060D06072FFD41FFA9070D070D072FFD0CFF840D070D070D53FD0BFF%530D070D070D7EFD0CFF2F070D070D07A9FD42FF53060D060D067EFD0CFF%2F0D060D060DA8FD09FFA80D060D060D07FD0CFF7E060D060D062FFD43FF%A90D070D070D07FD0CFFA9070D070D075AFD09FF5A070D070D077EFD0CFF%070D070D070D84FD44FF2F07060D060753FD0CFF2F0607060D06A9FD07FF%A9060D0607062FFD0CFF7E07060D06072FFD46FF070D070D072FFD0CFF84%0D070D070D53FD07FF530D070D070D84FD0CFF2F070D070D07A9FD46FF53%060D060D067EFD0CFF2F0D060D060DA8FD05FFA80D060D060D2FFD0CFF7E%060D060D062FFD47FFA90D070D070D07FD0CFFA9070D070D075AFD05FF5A%070D070D07A9FD0CFF070D070D070D84FD48FF2F07060D060753FD0CFF2F%0607060D06A9FFFFFFA9060D0607062FFD0CFF7E07060D06072FFD4AFF07%0D070D072FFD0CFF840D070D070D2FFFFFFF530D070D070D84FD0CFF2F07%0D070D07A9FD4AFF53060D060D067EFD0CFF2F0D060D060D7EFFA80D060D%060D2FFD0CFF7E060D060D062FFD4BFFA90D070D070D07FD0CFFA9070D07%0D0753FF5A070D070D07A9FD0CFF070D070D070D84FD4CFF2F07060D0607%53FD0CFF2F0607060D067E060D0607062FFD0CFF7E07060D06072FFD4EFF%070D070D072FFD0CFF840D070D070D070D070D070D84FD0CFF2F070D070D%07FD4FFF53060D060D067EFD0CFF530D060D060D060D060D2FFD0CFF7E06%0D060D0653FD4FFFA90D070D070D07FD0DFF070D070D070D070D07A9FD0C%FF070D070D070DA9FD50FF2F07060D060753FD0CFF5A0607060D0607062F%FD0CFF7E07060D06072FFD52FF070D070D072FFD0CFFA90D070D070D070D%84FD0CFF2F070D070D07FD53FF53060D060D067EFD0CFF530D060D060D2F%FD0CFF7E060D060D0653FD53FFA90D070D070D07FD0CFF5A070D070D0753%FD0CFF070D070D070DA9FD54FF2F07060D060753FD0AFFA9060D0607060D%06A8FD0AFF5307060D06072FFD56FF070D070D072FFD0AFF530D070D070D%070D2FFD0AFF2F070D070D07FD57FF5A060D060D067EFD08FF7E0D060D06%0D060D060D7EFD08FF7E060D060D0653FD58FF2F070D070D07FD08FF5307%0D070D070D070D0753FD08FF070D070D070DA9FD58FF5307060D060753FD%06FFA8060D0607060D0607060D06A8FD06FF5307060D06072FFD5AFF070D%070D072FFD06FF2F0D070D070D840D070D070D2FFD06FF2F070D070D07FD%5BFF5A060D060D067EFD04FF7E0D060D060D2FFF530D060D060D7EFD04FF%7E060D060D0653FD5CFF2F070D070D07FD04FF53070D070D07AFFFFF070D%070D0753FD04FF070D070D070DA9FD5CFF5307060D060753FFFFA8060D06%07065AFFFFFF5A0607060D06A8FFFF5307060D06072FFD5EFF070D070D07%2FFFFF2F0D070D070DA9FFFFFFA90D070D070D2FFFFF2F070D070D07FD5F%FF5A060D060D067E7E0D060D060D2FFD05FF530D060D060D7E7E060D060D%0653FD60FF2F070D070D0753070D070D07AFFD06FF070D070D0753070D07%0D072FFD61FF5307060D0607060D0607065AFD07FF5A0607060D0607060D%060753FD62FF070D070D070D070D070DA9FD07FFA92F070D070D070D070D%07FD63FF5A060D060D060D060D2FFD09FF530D060D060D060D065AFD64FF%2F070D070D070D07AFFD0AFF070D070D070D072FFD65FF5307060D060706%5AFD0BFF7E0607060D060753FD66FF070D070D070DA9FD0CFF2F070D070D%07FD67FF5A060D060D2FFD0DFF530D060D065AFD68FF2F070D07AFFD0EFF%070D072FFD69FF5907065AFD0FFF7E060753FD34FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: 
%%DocumentCustomColors: (PANTONE 280 C)
%%CMYKCustomColor: 1 0.7200 0 0.1800 (PANTONE 280 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic CMYK</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2011-03-16T10:41:31-04:00</xmp:CreateDate>
         <xmp:ModifyDate>2011-03-16T10:41:31-04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2011-03-16T10:41:31-04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>156</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAnAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYqwr80vIMXmrQ&#xA;Z5LYyxa9ZQyHSp4pZI/j2YxsqsEIk4hakbZlaTUeHLf6TzcfU4eOO31dHjP/ADj9NpGs6prnlzzE&#xA;Jbi61G1CQvJPMjGKJw00Io6kGvF9t/hPbNr2iJREZx5Aut7PnxGUZXfxSlYj5H/Oe20/zBcz3Gi2&#xA;V9HLE808gUQueVtOxBFfSJVmHQlSMs/vcFxHqI/ta7OLPUieG+/5M5/KvyDpfmfWtX8zzC6Xyqt4&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:999C0E020A20681188C6AF33B70074B5</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:999C0E020A20681188C6AF33B70074B5</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:989C0E020A20681188C6AF33B70074B5</stRef:instanceID>
            <stRef:documentID>xmp.did:989C0E020A20681188C6AF33B70074B5</stRef:documentID>
            <stRef:originalDocumentID>uuid:E3B705F59336E0118987E9F32614B546</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:20:43-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:20:57-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:10-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:28-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:53-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:25:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:17-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:45-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:008011740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EC80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:14-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ED80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:22-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EE80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EF80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F080265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:30-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F180265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:41-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F280265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F380265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:10-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F480265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F580265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F680265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:30:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1405FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1505FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:26-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1605FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:34-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1705FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1805FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:11-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1905FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:33-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1A05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1B05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:58-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1C05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1D05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:24-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1E05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:30-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C62CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:45-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C72CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:51-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C82CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:15-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C92CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:23-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CA2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:41-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CB2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:46-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CC2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:03-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CD2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:08-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CE2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CF2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D02CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B44FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:36:05-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B54FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:36:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B64FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:36:39-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B74FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:01-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B84FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:06-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B94FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:30-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BA4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:40-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BB4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BC4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:38:09-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BD4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:38:28-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BE4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:38:38-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:929C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:39-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:939C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:39:09-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:949C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:39:25-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:959C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:39:32-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:969C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:40:15-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:979C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:40:23-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:989C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:41:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:999C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:41:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>uuid:E3B705F59336E0118987E9F32614B546</xmpMM:OriginalDocumentID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>8.500000</stDim:w>
            <stDim:h>11.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>PANTONE 280 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Red</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Yellow</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Green</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Cyan</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Blue</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Magenta</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=90 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>14.999998</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=90 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=80 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>80.000000</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=35 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>35.000004</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=5 M=0 Y=90 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>5.000001</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>19.999998</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=90 M=30 Y=95 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>90.000000</xmpG:cyan>
                           <xmpG:magenta>30.000002</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>30.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=75 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=10 Y=45 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>80.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>45.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=70 M=15 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>70.000000</xmpG:cyan>
                           <xmpG:magenta>14.999998</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=95 Y=5 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>5.000001</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=25 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>25.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=100 Y=35 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>35.000004</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=100 Y=50 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=95 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>19.999998</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=25 Y=40 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>25.000000</xmpG:magenta>
                           <xmpG:yellow>39.999996</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=45 Y=50 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>45.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>5.000001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=50 Y=60 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>60.000004</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=55 M=60 Y=65 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>55.000000</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>39.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=40 Y=65 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>39.999996</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=30 M=50 Y=75 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>30.000002</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=60 Y=80 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=65 Y=90 K=35</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>65.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>35.000004</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=70 Y=80 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>70.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 282 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>68.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>53.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 280 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>72.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>18.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grayscale</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=100</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>255</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=90</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>229</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=80</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>203</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=70</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>178</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=60</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>152</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=50</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>127</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=40</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>101</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=30</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>76</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=20</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>50</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=10</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>25</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=5</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>12</xmpG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -131.081 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 131.081 li
219.381 131.081 li
219.381 0 li
cp
clp
[1 0 0 1 0 0 ]ct
53.541 1.61475 mo
52.8662 1.76172 52.542 1.99658 52.3364 2.26074 cv
52.0142 2.73047 51.5151 3.66943 50.7222 5.51953 cv
49.2842 8.95508 45.9658 16.2661 44.5269 20.0835 cv
44.3501 20.23 43.9395 20.3184 43.5581 20.3184 cv
43.2354 20.3184 42.9712 20.23 42.7651 20.0835 cv
42.4424 19.3779 42.0015 18.3218 41.6494 17.4995 cv
40.416 14.7104 li
40.0059 13.7705 39.623 12.8892 39.3594 12.4487 cv
39.0952 12.9482 38.7422 13.6538 38.3608 14.4756 cv
36.9814 17.4697 li
36.5405 18.4097 36.2173 19.2612 35.7476 20.23 cv
35.6011 20.3765 35.2197 20.4648 34.7788 20.4648 cv
34.4561 20.4648 34.2798 20.3765 34.0146 20.23 cv
33.5449 18.9966 32.3711 16.354 31.373 14.1523 cv
26.5571 3.64014 li
25.7642 1.90869 25.5884 1.76172 24.6191 1.55615 cv
23.8848 1.40967 li
23.6504 1.11523 23.6802 .528809 24.0034 .380859 cv
25.0894 .44043 26.3223 .470215 27.8203 .470215 cv
29.1123 .470215 30.2573 .44043 31.373 .380859 cv
31.6074 .499512 31.7251 1.23291 31.4321 1.40967 cv
30.9028 1.49707 li
30.3745 1.58545 30.1685 1.73193 30.1685 1.9375 cv
30.1685 2.14355 30.7852 3.52344 31.6958 5.57861 cv
34.603 12.0679 li
35.4248 13.8882 35.7178 14.5044 36.0708 15.2095 cv
36.4229 14.5635 36.8936 13.6826 37.48 12.3613 cv
37.8618 11.5098 li
38.0674 11.0396 38.2437 10.3945 38.2437 10.2178 cv
38.2437 10.041 38.1846 9.71826 38.0674 9.4248 cv
35.249 3.22998 li
34.5732 1.76172 34.3677 1.55615 33.2515 1.43848 cv
32.958 1.40967 li
32.665 1.17432 32.7231 .499512 33.0464 .380859 cv
34.3086 .44043 35.4541 .470215 36.7461 .470215 cv
38.2437 .470215 39.3594 .44043 40.1221 .380859 cv
40.4746 .470215 40.4453 1.2627 40.2397 1.40967 cv
39.7412 1.52686 li
39.3882 1.61475 38.9478 1.73193 38.9478 1.9375 cv
38.9478 2.17285 39.0659 2.49561 39.2124 2.81836 cv
40.0928 4.84521 li
40.3574 5.46143 40.6514 6.10693 40.915 6.63574 cv
41.2085 6.01904 41.5024 5.43213 41.7959 4.78564 cv
42.0605 4.19873 li
42.5596 3.08252 42.853 2.20215 42.853 2.02588 cv
42.853 1.8208 42.7358 1.73193 42.2661 1.61475 cv
41.3853 1.40967 li
41.1792 1.20313 41.2085 .528809 41.4736 .380859 cv
42.3247 .44043 43.3813 .470215 44.3501 .470215 cv
45.4956 .470215 46.5825 .44043 47.3457 .380859 cv
47.5801 .528809 47.6392 1.23291 47.3745 1.43848 cv
46.5527 1.61475 li
45.5542 1.8208 45.3491 1.9375 44.3213 3.69971 cv
43.6162 4.90283 42.8818 6.25391 42.501 7.0166 cv
42.2368 7.54541 41.8555 8.39697 41.8555 8.54395 cv
41.8555 8.63184 41.8843 8.80811 42.0898 9.27832 cv
43.4697 12.2432 li
44.2329 13.8584 44.5854 14.7104 44.7612 15.1216 cv
46.1709 11.7153 47.5513 8.07471 48.9604 4.49219 cv
49.1655 3.99316 49.7529 2.31885 49.7529 1.99658 cv
49.7529 1.79102 49.5771 1.70264 49.1948 1.58545 cv
48.5493 1.40967 li
48.3145 1.14453 48.3735 .528809 48.6377 .380859 cv
49.5771 .44043 50.752 .470215 51.6323 .470215 cv
52.6602 .470215 53.5112 .44043 54.3335 .380859 cv
54.5981 .528809 54.627 1.17432 54.4219 1.40967 cv
53.541 1.61475 li
cp
false sop
/0 
<<
/Name (PANTONE 280 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 1 .72 0 .18 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
61.8208 8.10352 mo
61.8208 8.92627 61.8496 8.98438 62.6431 8.98438 cv
64.6685 8.98438 li
66.1953 8.98438 66.5479 8.77881 66.8413 7.37012 cv
66.9883 6.63574 li
67.1938 6.40088 67.9272 6.40088 68.0752 6.66455 cv
68.0161 7.60498 67.9868 8.66162 67.9868 9.77783 cv
67.9868 10.8936 68.0161 11.9502 68.0752 12.8892 cv
67.9272 13.1543 67.1938 13.1831 66.9883 12.9189 cv
66.8413 12.1851 li
66.5479 10.7754 66.1953 10.5405 64.6685 10.5405 cv
62.6431 10.5405 li
61.8496 10.5405 61.8208 10.5698 61.8208 11.4512 cv
61.8208 14.9448 li
61.8208 16.2959 61.939 17.2354 62.29 17.7344 cv
62.6724 18.2622 63.2295 18.4971 65.3735 18.4971 cv
67.9272 18.4971 68.9263 18.4097 70.541 15.0918 cv
70.7759 14.769 71.5098 14.8862 71.6279 15.2378 cv
71.5098 16.7651 70.8052 19.1436 70.3945 19.9365 cv
68.8384 19.8774 66.0195 19.8486 63.6118 19.8486 cv
59.7949 19.8486 li
58.3853 19.8486 56.9463 19.8774 54.7441 19.9365 cv
54.5093 19.7603 54.5093 19.0552 54.7441 18.9087 cv
56.1245 18.7036 li
57.4463 18.4971 57.6221 18.3218 57.6221 15.6206 cv
57.6221 4.66846 li
57.6221 1.99658 57.4463 1.8208 56.1245 1.55615 cv
55.3906 1.40967 li
55.126 1.23291 55.1558 .557617 55.4487 .380859 cv
56.8296 .44043 58.2676 .470215 59.6768 .470215 cv
65.9023 .470215 li
67.7813 .470215 69.4546 .44043 69.8359 .380859 cv
69.8652 .851563 70.0708 2.96533 70.2183 4.93262 cv
70.1006 5.25586 69.4253 5.31396 69.1318 5.05029 cv
68.8091 4.02246 68.3975 3.1416 68.0161 2.73047 cv
67.458 2.17285 66.5771 1.8208 65.1382 1.8208 cv
62.7896 1.8208 li
61.8208 1.8208 61.8208 1.87939 61.8208 2.96533 cv
61.8208 8.10352 li
cp
f
79.4668 14.9746 mo
79.4668 16.354 79.5845 17.2939 79.9658 17.7637 cv
80.3481 18.2622 80.8755 18.4971 83.019 18.4971 cv
85.6919 18.4971 86.5132 18.4097 88.2451 15.0039 cv
88.4805 14.7104 89.1558 14.8276 89.3613 15.1797 cv
89.2148 16.707 88.5103 19.1436 88.0991 19.9365 cv
86.5425 19.8774 83.7241 19.8486 81.3164 19.8486 cv
77.3818 19.8486 li
76.0313 19.8486 74.563 19.8774 72.7427 19.9365 cv
72.4785 19.7603 72.4194 19.0854 72.6543 18.9087 cv
73.771 18.7617 li
75.0918 18.5864 75.2676 18.3516 75.2676 15.6206 cv
75.2676 4.69775 li
75.2676 1.9668 75.0918 1.70264 73.771 1.52686 cv
72.9189 1.40967 li
72.625 1.23291 72.625 .557617 72.978 .380859 cv
74.5049 .44043 75.9731 .470215 77.3818 .470215 cv
78.791 .470215 80.2588 .44043 81.7271 .380859 cv
81.9619 .557617 81.9619 1.23291 81.7271 1.40967 cv
80.9644 1.52686 li
79.6431 1.73193 79.4668 1.9668 79.4668 4.69775 cv
79.4668 14.9746 li
cp
f
97.0244 14.9746 mo
97.0244 16.354 97.1426 17.2939 97.5239 17.7637 cv
97.9058 18.2622 98.4336 18.4971 100.578 18.4971 cv
103.25 18.4971 104.072 18.4097 105.803 15.0039 cv
106.039 14.7104 106.714 14.8276 106.92 15.1797 cv
106.772 16.707 106.069 19.1436 105.657 19.9365 cv
104.101 19.8774 101.283 19.8486 98.875 19.8486 cv
94.9404 19.8486 li
93.5889 19.8486 92.1211 19.8774 90.3008 19.9365 cv
90.0366 19.7603 89.9785 19.0854 90.2129 18.9087 cv
91.3286 18.7617 li
92.6499 18.5864 92.8262 18.3516 92.8262 15.6206 cv
92.8262 4.69775 li
92.8262 1.9668 92.6499 1.70264 91.3286 1.52686 cv
90.4771 1.40967 li
90.1831 1.23291 90.1831 .557617 90.5361 .380859 cv
92.0625 .44043 93.5308 .470215 94.9404 .470215 cv
96.3496 .470215 97.8169 .44043 99.2861 .380859 cv
99.5205 .557617 99.5205 1.23291 99.2861 1.40967 cv
98.5225 1.52686 li
97.2007 1.73193 97.0244 1.9668 97.0244 4.69775 cv
97.0244 14.9746 li
cp
f
114.729 8.10352 mo
114.729 8.92627 114.76 8.98438 115.552 8.98438 cv
117.577 8.98438 li
119.104 8.98438 119.457 8.77881 119.75 7.37012 cv
119.898 6.63574 li
120.104 6.40088 120.837 6.40088 120.983 6.66455 cv
120.925 7.60498 120.896 8.66162 120.896 9.77783 cv
120.896 10.8936 120.925 11.9502 120.983 12.8892 cv
120.837 13.1543 120.104 13.1831 119.898 12.9189 cv
119.75 12.1851 li
119.457 10.7754 119.104 10.5405 117.577 10.5405 cv
115.552 10.5405 li
114.76 10.5405 114.729 10.5698 114.729 11.4512 cv
114.729 14.9448 li
114.729 16.2959 114.847 17.2354 115.199 17.7344 cv
115.581 18.2622 116.14 18.4971 118.282 18.4971 cv
120.837 18.4971 121.835 18.4097 123.45 15.0918 cv
123.685 14.769 124.419 14.8862 124.537 15.2378 cv
124.419 16.7651 123.715 19.1436 123.304 19.9365 cv
121.748 19.8774 118.929 19.8486 116.521 19.8486 cv
112.703 19.8486 li
111.294 19.8486 109.855 19.8774 107.654 19.9365 cv
107.419 19.7603 107.419 19.0552 107.654 18.9087 cv
109.034 18.7036 li
110.354 18.4971 110.531 18.3218 110.531 15.6206 cv
110.531 4.66846 li
110.531 1.99658 110.354 1.8208 109.034 1.55615 cv
108.299 1.40967 li
108.035 1.23291 108.064 .557617 108.358 .380859 cv
109.738 .44043 111.177 .470215 112.586 .470215 cv
118.812 .470215 li
120.689 .470215 122.364 .44043 122.747 .380859 cv
122.774 .851563 122.98 2.96533 123.127 4.93262 cv
123.01 5.25586 122.335 5.31396 122.041 5.05029 cv
121.719 4.02246 121.307 3.1416 120.925 2.73047 cv
120.367 2.17285 119.486 1.8208 118.048 1.8208 cv
115.699 1.8208 li
114.729 1.8208 114.729 1.87939 114.729 2.96533 cv
114.729 8.10352 li
cp
f
131.789 20.3184 mo
129.088 20.3184 127.413 19.5547 126.797 19.2026 cv
126.239 18.5562 125.857 16.4429 125.857 14.4453 cv
126.063 14.064 126.738 14.0347 126.973 14.3579 cv
127.561 16.2661 129.527 18.9673 132.024 18.9673 cv
134.196 18.9673 135.194 17.4697 135.194 16.002 cv
135.194 13.624 132.963 12.2139 131.201 11.3335 cv
129.088 10.2759 126.768 8.51514 126.768 5.60742 cv
126.738 2.28955 129.321 0 133.58 0 cv
134.548 0 135.752 .117188 136.927 .470215 cv
137.309 .586914 137.572 .64502 137.925 .70459 cv
138.161 1.35059 138.453 2.93555 138.453 4.90283 cv
138.307 5.25586 137.572 5.28516 137.309 4.99121 cv
136.81 3.49365 135.548 1.35059 133.433 1.35059 cv
131.495 1.35059 130.438 2.61328 130.438 4.08154 cv
130.438 5.43213 131.643 6.66455 133.11 7.42822 cv
135.048 8.45654 li
136.868 9.4248 139.188 11.1279 139.188 14.3579 cv
139.188 17.9692 136.223 20.3184 131.789 20.3184 cv
cp
f
147.146 14.9746 mo
147.146 16.354 147.263 17.2939 147.645 17.7637 cv
148.026 18.2622 148.555 18.4971 150.698 18.4971 cv
153.369 18.4971 154.191 18.4097 155.924 15.0039 cv
156.158 14.7104 156.834 14.8276 157.038 15.1797 cv
156.893 16.707 156.188 19.1436 155.778 19.9365 cv
154.222 19.8774 151.402 19.8486 148.994 19.8486 cv
145.061 19.8486 li
143.709 19.8486 142.24 19.8774 140.422 19.9365 cv
140.156 19.7603 140.099 19.0854 140.332 18.9087 cv
141.448 18.7617 li
142.77 18.5864 142.945 18.3516 142.945 15.6206 cv
142.945 4.69775 li
142.945 1.9668 142.77 1.70264 141.448 1.52686 cv
140.596 1.40967 li
140.303 1.23291 140.303 .557617 140.655 .380859 cv
142.183 .44043 143.651 .470215 145.061 .470215 cv
146.47 .470215 147.938 .44043 149.405 .380859 cv
149.641 .557617 149.641 1.23291 149.405 1.40967 cv
148.643 1.52686 li
147.32 1.73193 147.146 1.9668 147.146 4.69775 cv
147.146 14.9746 li
cp
f
164.85 8.10352 mo
164.85 8.92627 164.879 8.98438 165.672 8.98438 cv
167.697 8.98438 li
169.224 8.98438 169.577 8.77881 169.87 7.37012 cv
170.019 6.63574 li
170.223 6.40088 170.957 6.40088 171.104 6.66455 cv
171.045 7.60498 171.016 8.66162 171.016 9.77783 cv
171.016 10.8936 171.045 11.9502 171.104 12.8892 cv
170.957 13.1543 170.223 13.1831 170.019 12.9189 cv
169.87 12.1851 li
169.577 10.7754 169.224 10.5405 167.697 10.5405 cv
165.672 10.5405 li
164.879 10.5405 164.85 10.5698 164.85 11.4512 cv
164.85 14.9448 li
164.85 16.2959 164.967 17.2354 165.32 17.7344 cv
165.702 18.2622 166.261 18.4971 168.402 18.4971 cv
170.957 18.4971 171.956 18.4097 173.57 15.0918 cv
173.806 14.769 174.54 14.8862 174.655 15.2378 cv
174.54 16.7651 173.835 19.1436 173.424 19.9365 cv
171.866 19.8774 169.049 19.8486 166.641 19.8486 cv
162.824 19.8486 li
161.415 19.8486 159.975 19.8774 157.773 19.9365 cv
157.539 19.7603 157.539 19.0552 157.773 18.9087 cv
159.153 18.7036 li
160.475 18.4971 160.651 18.3218 160.651 15.6206 cv
160.651 4.66846 li
160.651 1.99658 160.475 1.8208 159.153 1.55615 cv
158.421 1.40967 li
158.155 1.23291 158.185 .557617 158.478 .380859 cv
159.858 .44043 161.298 .470215 162.706 .470215 cv
168.932 .470215 li
170.811 .470215 172.483 .44043 172.865 .380859 cv
172.896 .851563 173.101 2.96533 173.247 4.93262 cv
173.13 5.25586 172.455 5.31396 172.161 5.05029 cv
171.838 4.02246 171.427 3.1416 171.045 2.73047 cv
170.488 2.17285 169.605 1.8208 168.168 1.8208 cv
165.818 1.8208 li
164.85 1.8208 164.85 1.87939 164.85 2.96533 cv
164.85 8.10352 li
cp
f
185.931 15.6206 mo
185.931 18.3516 186.107 18.5864 187.429 18.7617 cv
188.603 18.9087 li
188.81 19.0854 188.81 19.7603 188.603 19.9365 cv
186.695 19.8774 185.255 19.8486 183.848 19.8486 cv
182.436 19.8486 180.969 19.8774 179.236 19.9365 cv
179.001 19.7603 179.001 19.0854 179.236 18.9087 cv
180.234 18.7617 li
181.557 18.5562 181.733 18.3516 181.733 15.6206 cv
181.733 14.1523 li
181.733 12.6841 181.702 12.2139 180.939 10.6582 cv
177.444 3.43506 li
176.859 2.23145 176.595 1.76172 175.565 1.58545 cv
174.568 1.40967 li
174.304 1.17432 174.333 .470215 174.686 .380859 cv
176.006 .44043 177.093 .470215 178.825 .470215 cv
180.616 .470215 182.114 .44043 183.111 .380859 cv
183.377 .499512 183.436 1.17432 183.171 1.40967 cv
182.173 1.64404 li
181.644 1.76172 181.468 1.87939 181.468 1.90869 cv
181.468 2.14355 181.614 2.58301 182.232 3.96387 cv
183.61 7.10547 li
184.052 8.07471 184.609 9.24902 184.962 9.98291 cv
185.813 8.54395 186.636 6.84131 187.429 5.34326 cv
188.544 3.25879 188.955 2.28955 188.955 1.9375 cv
188.955 1.76172 188.662 1.64404 187.957 1.52686 cv
187.28 1.40967 li
187.048 1.2627 187.017 .528809 187.311 .380859 cv
188.484 .44043 189.542 .470215 190.6 .470215 cv
191.714 .470215 192.625 .44043 193.476 .380859 cv
193.83 .499512 193.83 1.20313 193.595 1.40967 cv
192.832 1.55615 li
192.303 1.64404 191.745 1.84912 191.422 2.26074 cv
190.982 2.81836 190.246 3.87549 188.837 6.42969 cv
186.988 9.77783 li
186.225 11.1567 185.931 11.8911 185.931 13.5649 cv
185.931 15.6206 li
cp
f
114.828 54.2432 mo
120.016 54.2432 121.805 57.6206 118.919 63.3003 cv
108.888 83.1738 li
98.8574 63.3003 li
95.9707 57.6206 97.7451 54.2432 102.932 54.2432 cv
114.828 54.2432 li
cp
124.957 114.964 mo
113.611 92.5225 li
128.657 62.8135 li
133.04 54.3403 134.11 53.8535 141.513 53.8535 cv
141.513 49.5688 li
76.2637 49.5688 li
76.2637 53.8535 li
83.665 53.8535 84.833 54.3403 89.1182 62.8135 cv
104.165 92.5225 li
92.8193 114.964 li
66.2329 62.2285 li
63.1162 55.9966 63.8955 53.8535 68.229 53.8535 cv
71.0049 53.8535 li
71.0049 49.5688 li
40.8154 49.5688 li
40.8154 53.8213 li
42.373 53.9185 li
52.1118 54.5029 52.7939 55.0229 57.2734 63.9819 cv
91.2617 131.081 li
94.085 131.081 li
108.888 101.857 li
123.691 131.081 li
126.516 131.081 li
160.503 63.9819 li
164.983 55.0229 165.664 54.438 175.403 53.8535 cv
176.047 53.813 li
176.047 49.5688 li
146.771 49.5688 li
146.771 53.8535 li
149.547 53.8535 li
153.881 53.8535 154.659 55.9966 151.543 62.2285 cv
124.957 114.964 li
cp
f
9.05957 29.7681 mo
9.05957 30.0386 9.10449 31.2388 9.23926 32.1079 cv
9.17969 32.2886 8.77441 32.3481 8.66943 32.2134 cv
8.26465 30.8188 7.30469 30.0688 5.84961 30.0688 cv
4.18457 30.0688 2.3999 31.4937 2.3999 34.478 cv
2.3999 37.4634 4.12451 39.0679 5.9248 39.0679 cv
7.73975 39.0679 8.57959 37.7632 8.98438 36.7437 cv
9.10449 36.6235 9.46436 36.6685 9.55469 36.8481 cv
9.44971 37.9585 9.19434 38.8579 8.98438 39.2026 cv
8.17432 39.4282 7.10938 39.7583 5.93945 39.7583 cv
4.46973 39.7583 2.96973 39.4126 1.90479 38.6177 cv
.824707 37.7935 0 36.5483 0 34.688 cv
0 32.8579 .779785 31.5688 1.81494 30.7134 cv
2.87988 29.8286 4.40967 29.3784 5.96973 29.3784 cv
7.49951 29.3784 8.60938 29.7388 9.05957 29.7681 cv
cp
f
13.8149 37.0278 mo
13.8149 37.7329 13.875 38.2134 14.0698 38.4526 cv
14.2646 38.7085 14.5347 38.8276 15.6299 38.8276 cv
16.9946 38.8276 17.4146 38.7827 18.2998 37.0435 cv
18.4194 36.8931 18.7646 36.9536 18.8696 37.1333 cv
18.7944 37.9136 18.4346 39.1577 18.2246 39.563 cv
17.4297 39.5327 15.9897 39.5181 14.7598 39.5181 cv
12.75 39.5181 li
12.0601 39.5181 11.3101 39.5327 10.3799 39.563 cv
10.2451 39.4731 10.2148 39.1284 10.335 39.0376 cv
10.9048 38.9634 li
11.5801 38.8735 11.6699 38.7534 11.6699 37.3579 cv
11.6699 31.7788 li
11.6699 30.3833 11.5801 30.2485 10.9048 30.1587 cv
10.4697 30.0981 li
10.3198 30.0083 10.3198 29.6636 10.5 29.5737 cv
11.2798 29.603 12.0298 29.6187 12.75 29.6187 cv
13.4697 29.6187 14.2197 29.603 14.9697 29.5737 cv
15.0898 29.6636 15.0898 30.0083 14.9697 30.0981 cv
14.5796 30.1587 li
13.9048 30.2632 13.8149 30.3833 13.8149 31.7788 cv
13.8149 37.0278 li
cp
f
20.0547 31.7788 mo
20.0547 30.3833 19.9648 30.2935 19.29 30.1587 cv
18.915 30.0835 li
18.7949 29.9937 18.7798 29.6636 18.9448 29.5737 cv
19.665 29.603 20.415 29.6187 21.1348 29.6187 cv
21.8696 29.6187 22.605 29.603 23.3247 29.5737 cv
23.4448 29.6636 23.4448 29.9937 23.3247 30.0835 cv
22.9648 30.1431 li
22.2896 30.2632 22.1997 30.3833 22.1997 31.7788 cv
22.1997 35.2437 li
22.1997 36.9985 22.3945 38.9331 24.6748 38.9331 cv
26.5947 38.9331 27.1797 37.2534 27.1797 35.1978 cv
27.1797 33.3833 li
27.1797 32.1685 27.1196 31.0288 26.9546 30.6382 cv
26.8193 30.3237 26.4897 30.2339 26.0845 30.1587 cv
25.6797 30.0835 li
25.5596 29.9634 25.5898 29.6636 25.6797 29.5737 cv
26.4897 29.603 27.0747 29.6187 27.6895 29.6187 cv
28.2446 29.6187 28.7993 29.603 29.3696 29.5737 cv
29.4595 29.6636 29.4893 29.9634 29.3696 30.0835 cv
29.0996 30.1431 li
28.7095 30.2339 28.4243 30.3237 28.2896 30.6382 cv
28.1245 31.0288 28.0645 32.1685 28.0645 33.3833 cv
28.0645 35.063 li
28.0645 36.4731 27.9297 37.7632 27.1045 38.6782 cv
26.4448 39.3833 25.3496 39.7583 24.1348 39.7583 cv
22.9946 39.7583 21.9746 39.5776 21.165 38.9185 cv
20.3848 38.2729 20.0547 37.1636 20.0547 35.5278 cv
20.0547 31.7788 li
cp
f
33.5244 36.9829 mo
33.5244 38.1528 33.6743 38.8882 34.8442 38.8882 cv
35.9546 38.8882 36.5396 38.0327 36.5396 36.8179 cv
36.5396 35.5132 35.7896 34.5981 34.3496 34.5981 cv
33.5244 34.5981 33.5244 34.6128 33.5244 35.2134 cv
33.5244 36.9829 li
cp
33.5244 33.5181 mo
33.5244 33.9087 33.5396 33.938 34.3193 33.938 cv
35.6094 33.938 36.0894 33.1138 36.0894 32.2134 cv
36.0894 30.9087 35.2793 30.2632 34.2446 30.2632 cv
33.5396 30.2632 33.5244 30.3833 33.5244 31.0435 cv
33.5244 33.5181 li
cp
31.4546 32.063 mo
31.4546 30.5483 31.4248 30.3989 30.7944 30.3081 cv
30.3896 30.2485 li
30.2544 30.1733 30.2246 29.7231 30.4497 29.7085 cv
31.5894 29.6333 32.6846 29.5737 34.1846 29.5737 cv
35.6245 29.5737 36.5845 29.7388 37.2441 30.1284 cv
37.8892 30.5181 38.2793 31.1479 38.2793 32.0337 cv
38.2793 33.2935 37.2144 33.7886 36.7495 33.9087 cv
36.5991 33.938 36.4492 33.9985 36.4492 34.0737 cv
36.4492 34.1187 36.5244 34.1636 36.6592 34.1929 cv
37.8442 34.4487 38.8491 35.228 38.8643 36.6831 cv
38.8794 38.063 38.0542 38.8735 37.1094 39.2026 cv
36.1646 39.5327 35.0396 39.5776 34.1245 39.5776 cv
33.5845 39.5776 33.0146 39.5181 32.5796 39.5181 cv
31.8447 39.5181 31.1094 39.5327 30.2544 39.563 cv
30.1348 39.4731 30.1348 39.0835 30.2544 39.0376 cv
30.6895 38.9478 li
31.3647 38.813 31.4546 38.7085 31.4546 37.3579 cv
31.4546 32.063 li
cp
f
49.1543 30.0688 mo
47.3091 30.0688 46.3193 31.7935 46.3193 34.2983 cv
46.3193 36.1284 46.9644 39.0679 49.4092 39.0679 cv
51.374 39.0679 52.1392 37.1479 52.1392 34.7183 cv
52.1392 32.1538 51.0142 30.0688 49.1543 30.0688 cv
cp
54.5391 34.5229 mo
54.5391 37.7935 52.3491 39.7583 49.124 39.7583 cv
46.1094 39.7583 43.9194 37.7778 43.9194 34.6431 cv
43.9194 31.6733 46.1392 29.3784 49.2739 29.3784 cv
52.394 29.3784 54.5391 31.478 54.5391 34.5229 cv
cp
f
59.2192 33.6382 mo
59.2192 34.0435 59.2339 34.0884 59.6392 34.0884 cv
60.7939 34.0884 li
61.5889 34.0884 61.7539 33.9829 61.9038 33.2485 cv
61.979 32.8882 li
62.084 32.7534 62.459 32.7681 62.5488 32.9038 cv
62.519 33.3833 62.5039 33.938 62.5039 34.5083 cv
62.5039 35.063 62.519 35.6187 62.5488 36.0679 cv
62.459 36.2036 62.084 36.2183 61.979 36.0835 cv
61.9038 35.7231 li
61.7539 35.0034 61.5889 34.8833 60.7939 34.8833 cv
59.6392 34.8833 li
59.2339 34.8833 59.2192 34.9282 59.2192 35.3335 cv
59.2192 37.3579 li
59.2192 38.7534 59.3091 38.8735 59.9839 38.9634 cv
60.5391 39.0376 li
60.644 39.1284 60.644 39.4731 60.5391 39.563 cv
59.6089 39.5327 58.874 39.5181 58.1543 39.5181 cv
57.4644 39.5181 56.7144 39.5327 55.8145 39.563 cv
55.6943 39.4731 55.6943 39.1284 55.8145 39.0376 cv
56.3091 38.9634 li
56.9844 38.8579 57.0742 38.7534 57.0742 37.3579 cv
57.0742 31.7788 li
57.0742 30.3833 56.9844 30.2485 56.3091 30.1431 cv
56.0093 30.0981 li
55.874 30.0083 55.874 29.6333 56.0391 29.5737 cv
56.6841 29.603 57.4341 29.6187 58.1543 29.6187 cv
61.3042 29.6187 li
62.2642 29.6187 63.1191 29.603 63.3291 29.5737 cv
63.3291 29.8286 63.3291 30.9087 63.3589 31.9136 cv
63.2988 32.0786 62.9688 32.0933 62.7891 31.9731 cv
62.624 31.3579 62.5039 30.9985 62.354 30.8032 cv
62.0991 30.4888 61.6489 30.3081 60.8838 30.3081 cv
59.7139 30.3081 li
59.2192 30.3081 59.2192 30.3384 59.2192 30.9233 cv
59.2192 33.6382 li
cp
f
68.1436 30.0981 mo
68.0239 29.978 68.0239 29.6187 68.189 29.5737 cv
68.6987 29.603 69.3438 29.6187 70.0786 29.6187 cv
70.5737 29.6187 71.0088 29.6187 71.5488 29.5737 cv
71.5488 30.5034 72.0737 31.4185 72.7334 32.8286 cv
73.7236 34.9429 li
73.8584 35.2437 74.3237 36.0981 74.5337 36.4731 cv
74.7285 36.1128 74.9683 35.6479 75.3735 34.7632 cv
76.1387 33.1138 li
76.8584 31.5688 77.1885 30.8638 77.5186 29.5737 cv
78.2085 29.6333 78.6733 29.6187 79.1235 29.6187 cv
79.6182 29.6187 80.3081 29.603 80.8481 29.5737 cv
81.0132 29.6636 81.0132 29.9487 80.8931 30.0981 cv
80.4585 30.1733 li
79.8433 30.2788 79.5435 30.4585 79.5435 31.2534 cv
79.5435 34.3433 79.5732 35.9634 79.6631 37.853 cv
79.6934 38.5435 79.7534 38.9028 80.3384 38.978 cv
80.8184 39.0376 li
80.9385 39.1577 80.9385 39.5034 80.7881 39.563 cv
80.0981 39.5327 79.4531 39.5181 78.7183 39.5181 cv
78.0435 39.5181 77.2183 39.5327 76.4985 39.563 cv
76.3184 39.4878 76.3032 39.1431 76.4536 39.0376 cv
76.9033 38.978 li
77.5933 38.8882 77.5933 38.7085 77.5933 37.7935 cv
77.5635 33.8931 li
77.5635 32.1831 li
77.5332 32.1831 li
76.4233 34.5835 75.2236 37.0884 74.2334 39.6235 cv
74.1587 39.6831 74.0537 39.728 73.9336 39.728 cv
73.7983 39.728 73.6338 39.6978 73.5435 39.6382 cv
72.9585 37.7778 71.1738 34.1333 70.3335 32.1831 cv
70.3037 32.1831 li
70.2437 33.1587 70.2139 33.7437 70.1987 34.5229 cv
70.1836 35.4985 70.1685 36.9985 70.1685 37.8979 cv
70.1685 38.6479 70.2588 38.8579 70.8589 38.9478 cv
71.4438 39.0376 li
71.5635 39.1431 71.5337 39.4878 71.4136 39.563 cv
70.8589 39.5327 70.2139 39.5181 69.6436 39.5181 cv
69.1636 39.5181 68.5488 39.5327 67.9487 39.563 cv
67.7539 39.5034 67.7539 39.1128 67.8887 39.0376 cv
68.1587 38.9927 li
68.9238 38.8579 68.9688 38.7681 69.0586 37.8384 cv
69.1338 37.103 69.2085 35.7983 69.2988 34.3735 cv
69.3589 33.3687 69.4038 32.1538 69.4038 31.3433 cv
69.4038 30.4888 69.0737 30.2632 68.4736 30.1587 cv
68.1436 30.0981 li
cp
f
85.334 33.5181 mo
85.334 33.938 85.3486 33.9683 85.7539 33.9683 cv
86.7886 33.9683 li
87.5688 33.9683 87.7485 33.8638 87.8989 33.1431 cv
87.9736 32.7681 li
88.0786 32.6479 88.4536 32.6479 88.5288 32.7837 cv
88.4985 33.2632 88.4839 33.8032 88.4839 34.3735 cv
88.4839 34.9429 88.4985 35.4829 88.5288 35.9634 cv
88.4536 36.0981 88.0786 36.1128 87.9736 35.978 cv
87.8989 35.603 li
87.7485 34.8833 87.5688 34.7632 86.7886 34.7632 cv
85.7539 34.7632 li
85.3486 34.7632 85.334 34.7778 85.334 35.228 cv
85.334 37.0132 li
85.334 37.7036 85.394 38.1831 85.5737 38.438 cv
85.769 38.7085 86.0537 38.8276 87.1489 38.8276 cv
88.4536 38.8276 88.9639 38.7827 89.7886 37.0884 cv
89.9087 36.9233 90.2837 36.9829 90.3438 37.1636 cv
90.2837 37.9429 89.9238 39.1577 89.7139 39.563 cv
88.9189 39.5327 87.4785 39.5181 86.249 39.5181 cv
84.2988 39.5181 li
83.5791 39.5181 82.8438 39.5327 81.7188 39.563 cv
81.5991 39.4731 81.5991 39.1128 81.7188 39.0376 cv
82.4238 38.9331 li
83.0991 38.8276 83.189 38.7378 83.189 37.3579 cv
83.189 31.7632 li
83.189 30.3989 83.0991 30.3081 82.4238 30.1733 cv
82.0488 30.0981 li
81.9141 30.0083 81.9292 29.6636 82.0791 29.5737 cv
82.7842 29.603 83.519 29.6187 84.2388 29.6187 cv
87.4189 29.6187 li
88.3789 29.6187 89.2339 29.603 89.4287 29.5737 cv
89.4438 29.813 89.5488 30.8931 89.6235 31.8979 cv
89.5635 32.063 89.2188 32.0933 89.0688 31.9585 cv
88.9038 31.4331 88.6938 30.9839 88.4985 30.7729 cv
88.2139 30.4888 87.7637 30.3081 87.0288 30.3081 cv
85.8286 30.3081 li
85.334 30.3081 85.334 30.3384 85.334 30.8931 cv
85.334 33.5181 li
cp
f
94.3633 33.9536 mo
94.3633 34.478 94.4087 34.5229 95.2935 34.5229 cv
95.8335 34.5229 96.1484 34.3882 96.4336 34.103 cv
96.6885 33.8481 96.9731 33.3687 96.9731 32.4829 cv
96.9731 31.1333 96.1782 30.2632 95.0083 30.2632 cv
94.3936 30.2632 94.3633 30.3081 94.3633 31.0288 cv
94.3633 33.9536 li
cp
92.3086 32.0483 mo
92.3086 30.5483 92.2783 30.3833 91.6484 30.2935 cv
91.2437 30.2339 li
91.0938 30.1587 91.0938 29.7837 91.2734 29.7085 cv
92.3984 29.6333 93.5684 29.5737 94.9937 29.5737 cv
96.2686 29.5737 97.3633 29.7681 97.9331 30.1138 cv
98.8032 30.6235 99.2534 31.3735 99.2534 32.3335 cv
99.2534 33.6685 98.3535 34.2388 97.6636 34.5835 cv
97.5132 34.6587 97.5132 34.7485 97.5884 34.9136 cv
98.5781 36.9233 99.1934 38.0483 99.9131 38.6636 cv
100.303 38.978 100.693 39.0679 100.918 39.0835 cv
101.053 39.1577 101.053 39.3833 100.978 39.4731 cv
100.738 39.5776 100.258 39.6079 99.7935 39.6079 cv
98.4131 39.6079 97.5435 39.1128 96.8833 38.0327 cv
96.4033 37.2378 96.0586 36.5034 95.7134 35.7085 cv
95.5332 35.3032 95.2935 35.1831 94.9185 35.1831 cv
94.3936 35.1831 94.3633 35.2134 94.3633 35.5132 cv
94.3633 37.3579 li
94.3633 38.7378 94.4536 38.8433 95.1284 38.9634 cv
95.5332 39.0376 li
95.6387 39.1128 95.6387 39.4731 95.5332 39.563 cv
94.7383 39.5327 94.0483 39.5181 93.3286 39.5181 cv
92.5786 39.5181 91.9185 39.5327 91.1387 39.563 cv
91.0186 39.4731 91.0186 39.1128 91.1387 39.0376 cv
91.5435 38.9634 li
92.2188 38.8433 92.3086 38.7378 92.3086 37.3579 cv
92.3086 32.0483 li
cp
f
104.548 33.9536 mo
104.548 34.478 104.593 34.5229 105.478 34.5229 cv
106.018 34.5229 106.333 34.3882 106.618 34.103 cv
106.873 33.8481 107.158 33.3687 107.158 32.4829 cv
107.158 31.1333 106.363 30.2632 105.193 30.2632 cv
104.578 30.2632 104.548 30.3081 104.548 31.0288 cv
104.548 33.9536 li
cp
102.493 32.0483 mo
102.493 30.5483 102.463 30.3833 101.833 30.2935 cv
101.428 30.2339 li
101.278 30.1587 101.278 29.7837 101.458 29.7085 cv
102.583 29.6333 103.753 29.5737 105.178 29.5737 cv
106.453 29.5737 107.548 29.7681 108.118 30.1138 cv
108.988 30.6235 109.438 31.3735 109.438 32.3335 cv
109.438 33.6685 108.538 34.2388 107.848 34.5835 cv
107.698 34.6587 107.698 34.7485 107.773 34.9136 cv
108.763 36.9233 109.378 38.0483 110.098 38.6636 cv
110.487 38.978 110.878 39.0679 111.103 39.0835 cv
111.237 39.1577 111.237 39.3833 111.163 39.4731 cv
110.923 39.5776 110.442 39.6079 109.978 39.6079 cv
108.598 39.6079 107.728 39.1128 107.068 38.0327 cv
106.588 37.2378 106.243 36.5034 105.898 35.7085 cv
105.718 35.3032 105.478 35.1831 105.103 35.1831 cv
104.578 35.1831 104.548 35.2134 104.548 35.5132 cv
104.548 37.3579 li
104.548 38.7378 104.638 38.8433 105.313 38.9634 cv
105.718 39.0376 li
105.823 39.1128 105.823 39.4731 105.718 39.563 cv
104.923 39.5327 104.233 39.5181 103.513 39.5181 cv
102.763 39.5181 102.103 39.5327 101.323 39.563 cv
101.203 39.4731 101.203 39.1128 101.323 39.0376 cv
101.728 38.9634 li
102.403 38.8433 102.493 38.7378 102.493 37.3579 cv
102.493 32.0483 li
cp
f
114.823 37.3286 mo
114.823 38.7378 114.913 38.8433 115.603 38.9634 cv
116.022 39.0376 li
116.144 39.1284 116.128 39.4731 116.008 39.563 cv
115.198 39.5327 114.463 39.5181 113.759 39.5181 cv
113.038 39.5181 112.288 39.5327 111.478 39.563 cv
111.358 39.4731 111.358 39.1284 111.478 39.0376 cv
111.898 38.9634 li
112.589 38.8433 112.679 38.7378 112.679 37.3286 cv
112.679 31.8081 li
112.679 30.3989 112.589 30.2935 111.898 30.1733 cv
111.478 30.0981 li
111.358 30.0083 111.358 29.6636 111.478 29.5737 cv
112.288 29.603 113.038 29.6187 113.759 29.6187 cv
114.463 29.6187 115.213 29.603 116.022 29.5737 cv
116.144 29.6636 116.144 30.0083 116.022 30.0981 cv
115.603 30.1733 li
114.913 30.2935 114.823 30.3989 114.823 31.8081 cv
114.823 37.3286 li
cp
f
117.268 30.0981 mo
117.147 29.978 117.147 29.6187 117.313 29.5737 cv
117.823 29.603 118.468 29.6187 119.202 29.6187 cv
119.698 29.6187 120.133 29.6187 120.673 29.5737 cv
120.673 30.5034 121.198 31.4185 121.857 32.8286 cv
122.848 34.9429 li
122.982 35.2437 123.448 36.0981 123.657 36.4731 cv
123.853 36.1128 124.093 35.6479 124.497 34.7632 cv
125.263 33.1138 li
125.982 31.5688 126.313 30.8638 126.643 29.5737 cv
127.333 29.6333 127.798 29.6187 128.247 29.6187 cv
128.742 29.6187 129.433 29.603 129.972 29.5737 cv
130.138 29.6636 130.138 29.9487 130.017 30.0981 cv
129.583 30.1733 li
128.968 30.2788 128.667 30.4585 128.667 31.2534 cv
128.667 34.3433 128.697 35.9634 128.787 37.853 cv
128.817 38.5435 128.878 38.9028 129.462 38.978 cv
129.942 39.0376 li
130.063 39.1577 130.063 39.5034 129.912 39.563 cv
129.222 39.5327 128.577 39.5181 127.843 39.5181 cv
127.167 39.5181 126.343 39.5327 125.622 39.563 cv
125.442 39.4878 125.427 39.1431 125.577 39.0376 cv
126.027 38.978 li
126.718 38.8882 126.718 38.7085 126.718 37.7935 cv
126.688 33.8931 li
126.688 32.1831 li
126.657 32.1831 li
125.548 34.5835 124.348 37.0884 123.357 39.6235 cv
123.282 39.6831 123.178 39.728 123.058 39.728 cv
122.923 39.728 122.758 39.6978 122.667 39.6382 cv
122.083 37.7778 120.298 34.1333 119.458 32.1831 cv
119.428 32.1831 li
119.368 33.1587 119.338 33.7437 119.323 34.5229 cv
119.308 35.4985 119.292 36.9985 119.292 37.8979 cv
119.292 38.6479 119.383 38.8579 119.983 38.9478 cv
120.567 39.0376 li
120.688 39.1431 120.657 39.4878 120.538 39.563 cv
119.983 39.5327 119.338 39.5181 118.768 39.5181 cv
118.288 39.5181 117.673 39.5327 117.073 39.563 cv
116.878 39.5034 116.878 39.1128 117.013 39.0376 cv
117.282 38.9927 li
118.048 38.8579 118.093 38.7681 118.183 37.8384 cv
118.258 37.103 118.333 35.7983 118.423 34.3735 cv
118.483 33.3687 118.528 32.1538 118.528 31.3433 cv
118.528 30.4888 118.198 30.2632 117.598 30.1587 cv
117.268 30.0981 li
cp
f
135.388 35.3335 mo
135.733 35.3335 135.808 35.2886 135.688 34.8979 cv
135.298 33.6831 li
135.088 33.0386 134.894 32.4233 134.758 32.1079 cv
134.608 32.438 134.368 33.0679 134.144 33.7583 cv
133.769 34.8833 li
133.633 35.2886 133.708 35.3335 134.083 35.3335 cv
135.388 35.3335 li
cp
133.782 36.1284 mo
133.423 36.1284 133.378 36.1431 133.288 36.4282 cv
132.733 38.1685 li
132.644 38.4683 132.628 38.5884 132.628 38.7085 cv
132.628 38.7983 132.748 38.8882 133.168 38.9634 cv
133.618 39.0376 li
133.708 39.1431 133.737 39.4878 133.588 39.563 cv
133.063 39.5327 132.463 39.5327 131.833 39.5181 cv
131.323 39.5181 130.978 39.563 130.288 39.563 cv
130.123 39.4731 130.138 39.1577 130.243 39.0376 cv
130.647 38.9927 li
131.008 38.9478 131.308 38.8276 131.563 38.2427 cv
131.817 37.6431 132.088 36.9233 132.493 35.8433 cv
133.843 32.1831 li
134.188 31.2388 134.473 30.7134 134.428 30.2788 cv
135.147 30.1138 135.702 29.3784 135.733 29.3784 cv
135.928 29.3784 136.018 29.4536 136.077 29.6782 cv
136.198 30.1138 136.378 30.6685 136.753 31.7329 cv
138.792 37.6128 li
139.108 38.5132 139.243 38.8579 139.798 38.9478 cv
140.368 39.0376 li
140.458 39.1128 140.487 39.4731 140.353 39.563 cv
139.633 39.5327 138.823 39.5181 138.043 39.5181 cv
137.293 39.5181 136.708 39.5327 136.018 39.563 cv
135.853 39.4731 135.823 39.1577 135.987 39.0376 cv
136.468 38.9634 li
136.813 38.9028 136.872 38.7983 136.872 38.7085 cv
136.872 38.603 136.768 38.2427 136.588 37.688 cv
136.183 36.3979 li
136.108 36.1587 135.987 36.1284 135.463 36.1284 cv
133.782 36.1284 li
cp
f
149.487 29.7681 mo
149.487 30.0386 149.532 31.2388 149.668 32.1079 cv
149.608 32.2886 149.202 32.3481 149.098 32.2134 cv
148.692 30.8188 147.733 30.0688 146.278 30.0688 cv
144.612 30.0688 142.828 31.4937 142.828 34.478 cv
142.828 37.4634 144.553 39.0679 146.353 39.0679 cv
148.168 39.0679 149.008 37.7632 149.413 36.7437 cv
149.532 36.6235 149.893 36.6685 149.983 36.8481 cv
149.878 37.9585 149.622 38.8579 149.413 39.2026 cv
148.603 39.4282 147.538 39.7583 146.368 39.7583 cv
144.897 39.7583 143.397 39.4126 142.333 38.6177 cv
141.253 37.7935 140.429 36.5483 140.429 34.688 cv
140.429 32.8579 141.208 31.5688 142.243 30.7134 cv
143.308 29.8286 144.838 29.3784 146.397 29.3784 cv
147.928 29.3784 149.038 29.7388 149.487 29.7681 cv
cp
f
154.243 33.6079 mo
154.243 34.103 154.333 34.1636 154.513 34.1636 cv
154.827 34.1636 155.428 33.5933 155.667 33.2935 cv
156.462 32.3335 157.197 31.4487 157.677 30.7437 cv
157.813 30.5483 157.872 30.4136 157.872 30.353 cv
157.872 30.2935 157.813 30.188 157.617 30.1587 cv
157.272 30.0981 li
157.107 29.9937 157.138 29.6333 157.333 29.5737 cv
158.097 29.603 158.652 29.6187 159.192 29.6187 cv
159.747 29.6187 160.407 29.603 161.007 29.5737 cv
161.188 29.6333 161.202 29.978 161.082 30.0981 cv
160.558 30.1587 160.107 30.2339 159.792 30.3687 cv
159.192 30.6089 158.548 31.1782 157.572 32.2886 cv
156.882 33.0679 li
156.732 33.2329 156.688 33.353 156.688 33.4136 cv
156.688 33.4888 156.777 33.6685 157.228 34.3433 cv
157.978 35.4683 158.862 36.9077 159.882 38.2583 cv
160.287 38.7983 160.572 38.9028 160.992 38.9634 cv
161.472 39.0376 li
161.562 39.1733 161.562 39.4878 161.427 39.563 cv
160.677 39.5327 159.958 39.5181 159.268 39.5181 cv
158.503 39.5181 157.753 39.5327 156.913 39.563 cv
156.718 39.5034 156.718 39.1284 156.882 39.0376 cv
157.257 38.9478 li
157.423 38.9028 157.513 38.8579 157.513 38.7983 cv
157.513 38.7378 157.482 38.6333 157.393 38.4985 cv
157.302 38.3628 156.673 37.3882 156.522 37.1636 cv
155.728 35.9478 li
155.188 35.1235 154.933 34.7632 154.603 34.7632 cv
154.257 34.7632 154.243 34.9731 154.243 35.7837 cv
154.243 37.3579 li
154.243 38.7534 154.333 38.8882 155.007 38.978 cv
155.428 39.0376 li
155.548 39.1431 155.548 39.4731 155.428 39.563 cv
154.632 39.5327 153.882 39.5181 153.163 39.5181 cv
152.487 39.5181 151.708 39.5327 150.913 39.563 cv
150.792 39.4731 150.792 39.1284 150.913 39.0376 cv
151.333 38.978 li
152.008 38.8882 152.098 38.7534 152.098 37.3579 cv
152.098 31.7788 li
152.098 30.3833 152.008 30.2485 151.333 30.1587 cv
150.913 30.0981 li
150.747 30.0083 150.747 29.6636 150.913 29.5737 cv
151.663 29.603 152.413 29.6187 153.163 29.6187 cv
153.882 29.6187 154.632 29.603 155.428 29.5737 cv
155.563 29.6636 155.563 30.0083 155.428 30.0981 cv
155.007 30.1587 li
154.333 30.2485 154.243 30.3833 154.243 31.7788 cv
154.243 33.6079 li
cp
f
171.433 35.7983 mo
170.667 37.6128 170.263 38.7983 169.917 39.6382 cv
169.798 39.7134 169.617 39.7583 169.393 39.7583 cv
169.212 39.7583 169.077 39.7134 168.987 39.6382 cv
168.822 39.2329 168.567 38.438 168.357 37.9282 cv
165.928 31.8237 li
165.357 30.3833 165.282 30.353 164.803 30.2339 cv
164.202 30.0835 li
164.083 29.9185 164.128 29.6489 164.263 29.5737 cv
165.027 29.5884 165.522 29.6187 166.303 29.6187 cv
166.993 29.6187 167.638 29.603 168.552 29.5737 cv
168.673 29.6636 168.657 29.9487 168.567 30.0835 cv
168.117 30.1733 li
167.848 30.2339 167.742 30.3237 167.742 30.4585 cv
167.742 30.5786 167.982 31.2085 168.343 32.1079 cv
169.662 35.4829 li
169.872 36.0386 170.022 36.3833 170.128 36.6382 cv
170.247 36.3833 170.427 35.978 170.607 35.5278 cv
171.162 34.1187 li
171.537 33.1733 172.167 31.4937 172.347 30.9839 cv
172.452 30.6987 172.497 30.5337 172.497 30.4438 cv
172.497 30.3384 172.452 30.2788 172.093 30.188 cv
171.657 30.0835 li
171.537 29.9634 171.537 29.6489 171.718 29.5737 cv
172.423 29.603 172.992 29.6187 173.562 29.6187 cv
174.072 29.6187 174.522 29.603 174.957 29.5737 cv
175.077 29.6333 175.093 29.9937 174.987 30.0835 cv
174.597 30.1587 li
174.177 30.2339 173.968 30.3687 173.772 30.6831 cv
173.442 31.1782 173.037 31.9888 172.527 33.2036 cv
171.433 35.7983 li
cp
f
178.138 35.3335 mo
178.483 35.3335 178.558 35.2886 178.438 34.8979 cv
178.048 33.6831 li
177.838 33.0386 177.644 32.4233 177.508 32.1079 cv
177.358 32.438 177.118 33.0679 176.894 33.7583 cv
176.519 34.8833 li
176.383 35.2886 176.458 35.3335 176.833 35.3335 cv
178.138 35.3335 li
cp
176.532 36.1284 mo
176.173 36.1284 176.128 36.1431 176.038 36.4282 cv
175.483 38.1685 li
175.394 38.4683 175.378 38.5884 175.378 38.7085 cv
175.378 38.7983 175.498 38.8882 175.918 38.9634 cv
176.368 39.0376 li
176.458 39.1431 176.487 39.4878 176.338 39.563 cv
175.813 39.5327 175.213 39.5327 174.583 39.5181 cv
174.073 39.5181 173.728 39.563 173.038 39.563 cv
172.873 39.4731 172.888 39.1577 172.993 39.0376 cv
173.397 38.9927 li
173.758 38.9478 174.058 38.8276 174.313 38.2427 cv
174.567 37.6431 174.838 36.9233 175.243 35.8433 cv
176.593 32.1831 li
176.938 31.2388 177.223 30.7134 177.178 30.2788 cv
177.897 30.1138 178.452 29.3784 178.483 29.3784 cv
178.678 29.3784 178.768 29.4536 178.827 29.6782 cv
178.948 30.1138 179.128 30.6685 179.503 31.7329 cv
181.542 37.6128 li
181.858 38.5132 181.993 38.8579 182.548 38.9478 cv
183.118 39.0376 li
183.208 39.1128 183.237 39.4731 183.103 39.563 cv
182.383 39.5327 181.573 39.5181 180.793 39.5181 cv
180.043 39.5181 179.458 39.5327 178.768 39.563 cv
178.603 39.4731 178.573 39.1577 178.737 39.0376 cv
179.218 38.9634 li
179.563 38.9028 179.622 38.7983 179.622 38.7085 cv
179.622 38.603 179.518 38.2427 179.338 37.688 cv
178.933 36.3979 li
178.858 36.1587 178.737 36.1284 178.213 36.1284 cv
176.532 36.1284 li
cp
f
186.792 37.0278 mo
186.792 37.7329 186.853 38.2134 187.048 38.4526 cv
187.242 38.7085 187.513 38.8276 188.607 38.8276 cv
189.972 38.8276 190.392 38.7827 191.277 37.0435 cv
191.397 36.8931 191.742 36.9536 191.847 37.1333 cv
191.772 37.9136 191.412 39.1577 191.202 39.563 cv
190.407 39.5327 188.968 39.5181 187.737 39.5181 cv
185.728 39.5181 li
185.038 39.5181 184.288 39.5327 183.357 39.563 cv
183.223 39.4731 183.192 39.1284 183.313 39.0376 cv
183.882 38.9634 li
184.558 38.8735 184.647 38.7534 184.647 37.3579 cv
184.647 31.7788 li
184.647 30.3833 184.558 30.2485 183.882 30.1587 cv
183.447 30.0981 li
183.298 30.0083 183.298 29.6636 183.478 29.5737 cv
184.257 29.603 185.007 29.6187 185.728 29.6187 cv
186.447 29.6187 187.197 29.603 187.947 29.5737 cv
188.067 29.6636 188.067 30.0083 187.947 30.0981 cv
187.558 30.1587 li
186.882 30.2632 186.792 30.3833 186.792 31.7788 cv
186.792 37.0278 li
cp
f
195.792 37.0278 mo
195.792 37.7329 195.853 38.2134 196.047 38.4526 cv
196.242 38.7085 196.513 38.8276 197.607 38.8276 cv
198.973 38.8276 199.393 38.7827 200.277 37.0435 cv
200.397 36.8931 200.742 36.9536 200.847 37.1333 cv
200.772 37.9136 200.412 39.1577 200.202 39.563 cv
199.407 39.5327 197.967 39.5181 196.737 39.5181 cv
194.728 39.5181 li
194.037 39.5181 193.287 39.5327 192.357 39.563 cv
192.223 39.4731 192.192 39.1284 192.313 39.0376 cv
192.883 38.9634 li
193.558 38.8735 193.647 38.7534 193.647 37.3579 cv
193.647 31.7788 li
193.647 30.3833 193.558 30.2485 192.883 30.1587 cv
192.447 30.0981 li
192.298 30.0083 192.298 29.6636 192.478 29.5737 cv
193.258 29.603 194.008 29.6187 194.728 29.6187 cv
195.447 29.6187 196.197 29.603 196.947 29.5737 cv
197.067 29.6636 197.067 30.0083 196.947 30.0981 cv
196.558 30.1587 li
195.883 30.2632 195.792 30.3833 195.792 31.7788 cv
195.792 37.0278 li
cp
f
204.792 33.5181 mo
204.792 33.938 204.808 33.9683 205.212 33.9683 cv
206.247 33.9683 li
207.027 33.9683 207.207 33.8638 207.357 33.1431 cv
207.433 32.7681 li
207.537 32.6479 207.912 32.6479 207.987 32.7837 cv
207.957 33.2632 207.942 33.8032 207.942 34.3735 cv
207.942 34.9429 207.957 35.4829 207.987 35.9634 cv
207.912 36.0981 207.537 36.1128 207.433 35.978 cv
207.357 35.603 li
207.207 34.8833 207.027 34.7632 206.247 34.7632 cv
205.212 34.7632 li
204.808 34.7632 204.792 34.7778 204.792 35.228 cv
204.792 37.0132 li
204.792 37.7036 204.853 38.1831 205.032 38.438 cv
205.228 38.7085 205.513 38.8276 206.607 38.8276 cv
207.912 38.8276 208.422 38.7827 209.247 37.0884 cv
209.367 36.9233 209.742 36.9829 209.802 37.1636 cv
209.742 37.9429 209.382 39.1577 209.172 39.563 cv
208.377 39.5327 206.938 39.5181 205.707 39.5181 cv
203.758 39.5181 li
203.037 39.5181 202.303 39.5327 201.178 39.563 cv
201.058 39.4731 201.058 39.1128 201.178 39.0376 cv
201.883 38.9331 li
202.558 38.8276 202.647 38.7378 202.647 37.3579 cv
202.647 31.7632 li
202.647 30.3989 202.558 30.3081 201.883 30.1733 cv
201.508 30.0981 li
201.372 30.0083 201.388 29.6636 201.537 29.5737 cv
202.242 29.603 202.978 29.6187 203.697 29.6187 cv
206.877 29.6187 li
207.837 29.6187 208.692 29.603 208.887 29.5737 cv
208.902 29.813 209.007 30.8931 209.082 31.8979 cv
209.022 32.063 208.677 32.0933 208.527 31.9585 cv
208.362 31.4331 208.152 30.9839 207.957 30.7729 cv
207.672 30.4888 207.223 30.3081 206.487 30.3081 cv
205.287 30.3081 li
204.792 30.3081 204.792 30.3384 204.792 30.8931 cv
204.792 33.5181 li
cp
f
215.382 37.3579 mo
215.382 38.7534 215.472 38.8735 216.146 38.9634 cv
216.747 39.0376 li
216.852 39.1284 216.852 39.4731 216.747 39.563 cv
215.771 39.5327 215.037 39.5181 214.316 39.5181 cv
213.597 39.5181 212.847 39.5327 211.962 39.563 cv
211.842 39.4731 211.842 39.1284 211.962 39.0376 cv
212.472 38.9634 li
213.146 38.8579 213.236 38.7534 213.236 37.3579 cv
213.236 36.6079 li
213.236 35.8579 213.222 35.6187 212.832 34.8237 cv
211.047 31.1333 li
210.747 30.5181 210.612 30.2788 210.087 30.188 cv
209.577 30.0981 li
209.442 29.978 209.457 29.6187 209.637 29.5737 cv
210.312 29.603 210.867 29.6187 211.752 29.6187 cv
212.667 29.6187 213.432 29.603 213.941 29.5737 cv
214.077 29.6333 214.106 29.978 213.972 30.0981 cv
213.462 30.2183 li
213.191 30.2788 213.102 30.3384 213.102 30.353 cv
213.102 30.4731 213.177 30.6987 213.492 31.4038 cv
214.197 33.0083 li
214.422 33.5034 214.707 34.103 214.887 34.478 cv
215.321 33.7437 215.742 32.8735 216.146 32.1079 cv
216.717 31.0435 216.927 30.5483 216.927 30.3687 cv
216.927 30.2788 216.776 30.2183 216.417 30.1587 cv
216.071 30.0981 li
215.952 30.0239 215.937 29.6489 216.087 29.5737 cv
216.687 29.603 217.227 29.6187 217.767 29.6187 cv
218.337 29.6187 218.802 29.603 219.236 29.5737 cv
219.417 29.6333 219.417 29.9937 219.297 30.0981 cv
218.906 30.1733 li
218.637 30.2183 218.352 30.3237 218.187 30.5337 cv
217.962 30.8188 217.587 31.3579 216.866 32.6636 cv
215.922 34.3735 li
215.531 35.0786 215.382 35.4536 215.382 36.3081 cv
215.382 37.3579 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Cicia Lee) ()%%Title: (Merrimack Club logo 2011 v1-o.eps)%%CreationDate: 3/16/11 10:41 AM%%Canvassize: 16383%AI9_DataStream%Gb",KM.4rRoC2JUIKr4Z$AB<;X-EgArd8`C5Y@\$V)3=(Kt'*cl@ZtRl+`XWS^g>u01&kDDG#r:C3O95mN'D24,qX(f]s&T2b*7R%<S^bX72/aU)cifu<-EHQpR`drr0U[S7fa+$H*/N&[&j(@lrU#&f=]`Hi4de+G]oA]Vu,N%EAEq=7t]36EiZKEIh3TCqLbS")P;/M%<S+?5#^!bt`iMDg4eA2b-0&305E6?B+0$9P:V*`n>?1>XJKG;]#I@aB5Nj.9]a&1hH%HjL6hU=B17\KX'0t,8V)b#=7qWa(lIGk0%j(D./\#Wir<1DKI>k?@$+0729F4I7D?IaTKDH(SmFYuKTC.'32&RIMpblO>u^951tR_8&aVW7*O58q8IVPtSscHj)^2h3!o$2jFq%@I2CLB?Aj&TK>lt-MWV&"i-r7^Sej4Ohb>X.bI=j)T8?gL4ZS)qi\VZ-\($RhG:_rA5!q@+&<FDrs,';KlA%.:04%4#0HZ9YWkS#%&/<U=4<!mU_6'_MmdCRqY;Q"`ZA63DJ7m^.lXU>82&a]#mT\4t=+Hk!lb607Zt[%cPOi>[D"Nq.;@tA\!T1S*,eU,c>pKsDp,lHp%(OAeZc_^(e2,8hRnGFHrbW^j)PB$VFIs=Ur(EVEPpNrn'^s5IB9bC3[XFDu),><[Pkqj8mbX%PaO4&:nVtT>)(3k!0i]ZZ%JRbhf%PKR\DW&-aNL99mN$Y4S3JK9#;D7lL86p'n1n)JU@nTu89pL]V_^5kL,+0YN)?M/`Xg?IPOFI/4O8kT"S8fT-'Nfp]siAop8a2B]m%M.>%!r/%3.(e<P'p`2j^RlIG$`&jG_][CWUQqdmiFuiO\h45$^mr[b7_O0g=HtYs[MKeW6hllD)G8u;niHH8q1bkhK%4T0_3!LhK%mmoBYK'l'rn2pW'']F8+M>0Ip,=VAJl,K>$7@J0ii[1dgUQ@,+Nak*jK^o$ak/:ch,&mq(e"&le@8FBHDR;H6c?mJSkW^&@o\k"a%M0=uZVJEPKp_-.@ID!J9'tP4G_sd@:;FgVFh[+@Wi--/po\k#J7?S;C/$4j_Z4%l</3gd[KHG1S7hOXG017g/O-gSeZnBVIqaDb)%59,=*Z",&$GW/Jo=-5]ENh].ZOZqb2h2C01$rU0[@EE-;+jSIB,i(#h/1W8gLcJ$6aTCc3mj[dtYTp="]#6PGS9KX#,M[8QY>2FQ%rH+V0,Kr_88XaA>M)R7Y8,YsKRqb%@;qYSr9f7k)Pfc0]2p6V!Is?/e6`fP:/i/jCI6`aYPB_;o%E=\'j`P9D]$kdBocO/YX6AjK%_"au1d\$.R\h<n6rCR#hG(P5ekth./%-d6Q-iFiMoQM#>g6)B<?Df=<:\q9BTYJsJoNu1-eKRQ\PQ#@,l0n6lrTBRJaI_GKiHO!W%qO@MZT0T"rRNgt&S5uOdO.;Nf#m:gg`o$89Ls9jiIla^Ia.JV;q!KB.dt'SI*W`SRQn<JJqV);W'#:O4Dn=Q<[=++_!1;5U6MqY.%@2r[-,Fhd[BJ.5[n"UUJ4-<pP&GJpiYLVpF>YU,$EIR[WipR4E^`7h*G?Q&k/.l'H_D^2Oj9WasF^<g'n#6,GL(IAdI_abpCuZ>Z%hGNUe=oaDAG#-poO(aQH:,ClZ8@P$h@Hb([@Tir="86Rh*``C.'jkqh5XN.oqR;L=)^h`-H;>7l,,)QGYf5LN@eDga)C!uo)L"^3%&/#1l-e#r^AlleH`j*TTR(#gM!7l.fje6cfggN@$`.'VM,6R&2eG-UDZ^t7cOMTE85#h-,ZmU+-^.[pmib^qr)1:i),Ea(7!U8/T%a&P6'N=;)"Bkdolr#K2]G9^?3GFJM8c<oR=i!4Q<`#j9-p/5<t^tjfiRBG"f#BdGt/^Heq8Q(B%RQG7!ehj+irWU$Tdh^)0+]hlq%#LfNZ+A$2W,FfjdLAI-TQN%g3Djc#kH+otI8L*#m3"1seW$f-a22D""k:#334:US<d!Wi5,D'+)f!>!V8LEgAgE!^TJ>6Ldo17%l%jI#(?TJ\sP]@ArbS!Om<_^m0LN4LW5>%hO/,M<)99lQPj<s6\<HsWIk*oa8onNP>;`0uRpej[Q387Z7.d7%653$<I$e4p@FSfm\c%Lfs=?g*/,8MW\_+S83"*dO)Z%(SifbO,u_$c=Mb_XjKMA&^3]#Fd-TF7GCj[*KVq!(\*dO&2>?/DbDQX?u2pY)b9GPX9V@=$$3e8%Stu0r"Be1GBqd]_Zil,#i0-s3L_GR^_!8qs.@CMsWJf;EKubQOZ%0tfONgh`dIJgAaD./D5d&LqiArqW6.9tDL3.j]G?NPf..3aj%!8K*3a!?S#Qg.b-F/e&+dVe.qV:&0lO*%MQTqA]5lAgDGm9mT'^LNd6O)Ssk'qE,+0X_5fr$2';,DJ6PW;bO!b`t]MqhimU(QM(N%4>iE]'DPM(qsZ)kK:YWU./m5eEO:$;;EX.jmL@,X4<n=<E7/Nb]HJ8-8nm3d]M:LDXj&R2bt%I;mZ#UdOnZX3-+cpY.r1o_OZh=^%P<\=\gX\+5ihr@i8!1PVH(qf;>;ddYCe&KYLjYc`iA;X9-(<?;+B]tX.,Sk"E%R4\'n:oa2JS?a,%Y:"am(CYLc]oan=T8Im(ljV%5H/M<[FHnLlsGtkX5=1uOsH?=*D%_ck\fHS&E@o?,XAp9*W@dkUo%:h%'g>ihE^<Bq'tKaI#:Es2O0TJ(qg)&HII=GP&2?`nK*hE%^bp*7aVrlb2"K1_\'>R%mU&K)d,o)ed0<cfVE'nDg2C6:`*FNT,0KJcLsQ"2dYF4a?Urak?Gf]^Uc`A7g8RnY_]2O>M_Lj4anf\?%*S\u=d_+4u0pWcC0kHbVKJdd5Wt!!a/Qj&>.P7<!#FcX:*0>Q0p(ECm)n>JfQ^T!E"d8B:B[>..RUh*N-@M`7TVLLdP&_Qp#[1GF%%Nl5G8h7<[\;s#obXbX8Ak=^Qm>@f((NLOGZ5q<+Y[r&T]3Rq/8'?S@6&B40ds4S,n"cJ2]F=0TGquZRGW5U:$'Gsb*F&^0VVNOl%!i<dAcT:*Ch>k%tPIG#he"155d-Iqf;08Q3;R$?"4/+<dm>3n1a+#B'opC4A*4SJKQ5YtDB4eu"0lgO:bs2+m=_!qahN]%VmcM:O%Q#OM.Msc+?25WGPs*5OLJ$_,:Bs4@GaEUG'3fn7V+3"dn#i`rG>4o)_mR@.4:Y3+ge+0%db?FP!U-8&hG!<1f5J"K%T?$f4nnthj%Lb$MTbPpaBe`V>H6iU`df'u(TeQj#Qq5Pp>]WU_ffTl#\oI'F@3bgHr#9@0>l^D^>#=WArZ_7!>Z(La(W0u>Nm?)&a!'a'&ZAlEc%NfB(m#";VAapl7R2lUk)7fOm;;6)P&b(n)@>>CB`Hj[!"1fRAd`P>uiXsFaKSbVOZ%5p$F7bBVR<9pj1WJH'Zd/OY(*3+:[4B!<8%aYa<TWk049`e;K]kd=EFV;V[p0)8@NM+?9e.ulGcXiJasUt7MK,<*CUA@TJ9a;Zh',5`GL22<Si@X3JAI?N**?J:dI-mIeG8sY[*%qt!&-*?hq]UH.SbF&MCBW7RX$jW#YE]jiK5D+V-M1Dt!9q'a^\8!]?[Hjm<.9JNpC<]GiF9!X>8JW<qi)!,=,nM+4c8%!N_8WMG(%o<I0:fQOAf,3S:!=[&^,.o+ZR-.:p#78WV<EQu?RbJV>?*n&a^Trd<^1Wr!g+e-sF2>GbJb'=TVnuHEbNp83j;p6i4lZqB$Ga/&$%Ud0#/\CA[LDf\BJMC^_R"/f80PV3M`Ni73)J1#nLUm"roOR=;5m'Lk^^Q]D"[51!7AV1/,@S;Et,j45Td9^@Ul<+Q?8Q?P!Y%s4Z%mIU%MT%+[@(;>s,4]c-i\rC!^[::QLC6f*%IU4C*'_P:^W.5OYQ8W$.Q!"W1s"pVnH&gBgG1I9i;6_?uS<`(!('UA)N<7rBRl=lO%CcUH/\f,AUBMS!*)IPCT10b3.Y!(,$W]A,#:<Fr,\)\HcX[QK'cge&QYCQW,7+^[lCtEa:3@@NN&'aYra/u^(DE*r&$MPKRQ;2Vc%*1,/mc!Mc"__n6ZV)&"K]O!R9>I6=c*1'uor?BOfe#V,j]1t7aqF)9TU,jp4XGDiM-JE7sW3#1P:p^COg2n@G_3KIRK;>$(Sg&(q%1Nl#lgp/Y8Qs*[rn?Y6>_G&La%$s&7O30cljh*\B@1Tu+kdT^<%,8EAgg@EQ*XtTBl'hER>rbHQZZBlG;L]cP*l7(>&DNO$O4BNZ%E.9Qo9D?H$g%g9Zaf'6fhA[I]eS!q10at*H3VkNlSmJI(eU[;$K3<\me@PVMCJ-&?%(bJp8f-GuodBcEI<R2%)3)tjgBlRT^.eg,%F)+q]kmi'jT=a.TePkoI]#3sGWo.LO^&D6GdKL\gF/Q6"-;DLDF'tBH71I?jY[i9,BoRhXe'i&AO:6IL1H59#7@[bdk;tZC7^mBF%0qM*7X3X81JXJECaipp($B!leZ,XMh@JFA(%%:Np&'1qR+&>P=$B/<(!aI;Jm*4s+d!n4HStG_;M\[_NDH<KIRg@UBZ_Pp@5<2Bu%ab&l'a4(%X+?=[2R3lRiAj^I+oS5R@6tP1PCe&.$fI:)h3:3:bC<l'X7u]Vb'*a5"JSc@<]=Z#VMJ?X7?+r8cpA/1JDkYkp'4mO:%;K]0C$=ML->Aa!^0.Yp[^e<%Z?_^Qg`1<h?G%;uaLlN"[a6eE'Bt)j!G-g"<f@t:,K'5M/K=5IjD6N?8Z-Ld8[9CgUUK)6OXf0YT%>I#!N7*BLo/JjsbZe]FTS'=F/hMdq$1Mk3GckK3hkr%9D\C!dXd:tKWNCLSn2kidoOH#nV)LfS>\.,?6n'p+b<kVXSeEa-I)qJR`%W/J5opZcW:4FQ"F>B)H:`:Z*MUH"3D*5j&p@kW"8Ljc%Ae;B\l,H=7R'NLk]P#2dIaH+!TNPHQ%9[jE=@3_k/E>XC<.)R/ATc\TS%MiB0k/R,M0)mV)+)9G]I)+Yp!kt+r;Q(Set!sfNl"s0$4;%Npe#QbV5JJYfs7$ODt+=.a3;&?Kn6n"i:KFkleKI\%Wj1"uQht.k:%h2hN5ieP8?"(1i;n+j-TGTF!T[CiBgnEO?H7:,1L0CXYXH_0DHNn\R.DTcn.%CbcFDWHPTF9>US^?`>4lVnkV8-g/bgC>p]M,_h'%LcI/uKC*`(.o(6MYV??MTPeIH%H*#:TEgaQ_]6$<WOOCqN68qD9VZ0pS)nQO_=\-<f0d@`1P4@^_MdE3!fS=^6B#B4JrHF__MmK5%!q!%`)&L71^XVXf-/Kd&'d_lL-0H]@.-ja"qS/hhH'EWK,TgS>V'!GlV#qa7#Ar##f2Q+:$E+(W"f_`TJII-JKM"J)dLjtATes_i%g>XQ@_(S=C9h4GC>NlZG<KnCZPq"YU3n9Kfd9!-X6N&5'=.m<]rpo`KLL1eh_mR2uqlA,<0+a04.Zjh5!g3d\,=$N"-rC-$<!TO?%!bLbt'0Dk(*b_)Em?=2s&SPYp['H[pDo\E["8_;6hMQVU!@86KM+o!i]*XF2f/jG':saM!ZsS=u!0mY5&:n,cX(KI#YdE6M./[>c%h$9+)4P:,nMZ+GPdSN&@!S`-U^e.Z_ed"Yhb9^s)DFLY8VP-!(Jt7N7KY>;Ep!aJ0$>ajX[Q[ZbJ0Iil!eOY);NfMF<"?W=VGO]t%`_b5_k"tbJ##Q.5-KBsr:Z<hj/dY9WJ*Hu0(ZEO`I<:&7f\$UXl@ZeT.cH1KL[2aT-HJat<l`3]&!U@MdS!F9#`M"hMui?\$V9Q-%%[[P5b_6&'+Y-qb,-W;7YU<0'9cFY!ftl*]?uZ<O*XNT1!`N&'PD&MT!fhAU"3/IcUF!^#Jb]C((4eKHMadk<X/2&U'0'Ci4D^"0%Y5mos#kegj46g2oS$2p1`>]$jV[!D?k6\qoL1"%,0WoQRES7FDK!Z6p*O*>00%aW8%]lt3p04cM0j&3&%OLQnX&[AeZKtMAMk\D3%MrKWrN$=3I*3,ml=G\d?F$o1h98RapD4RF))at^"gTQ-TUP,D$UQhOD8#d*5Y,&b)e<)#jNVa2`O)g;EO0Xhp09@3I!2os-7;G1_%D8Jm]:`E4Qg.GgF-Vu<i02OH$2cr.<5>X^D8!K<=P^-pk<G<sl,B\!k]),*6=Dak>(8NsqZ6p*V5:pGm5YN].n\@#>j=@9"as<6@%,DBTl@\mfgP=USMWhkr\U?lQ$eB:lH>K,/oZAR$b<\[W.X]S1F[aEAYg>Q]m2%]BgJ[2LnA'rGnSL$pe[[+!HfitblCid_`ZJF&s%[pk;7b8=U@r.4t#p=HagA:rP:B5DMjFahUAZPbYj=P;V5c3>(gi(CuhZhYp-gEatCmB1ADDPZYOfik\fhc5b<IRemqobYS'*,6m[%jX\73a6F&7E2^LHqP(\f,g!6g8%h#2#Pb.h6hO*[Pt\QL>bGUaP]YCi(K!Xu8l/9YOqj2sPS_*/TDWY*E0TR.-u;hOdo8Ye@YB=I%.q(ba$Is"u8uMl$JeR's=&;dCHrNG`U/4F<)@B]M"=@(l-^>Mt*\#M.PaFI'!8UTW*Ta-Kd*!/mBe*fW6Srj*X]>(8TuG719PlX;%A2[F5/9Ulk/Z3/Afm9t&A..\gBU,ZtZD/.O9$*H`3@0;M-Il%Tdm:11ltT0Rf7p`:Wm(ftYk#bHAOT$ZWi(fXX1#C19Q"(FoVOCV%%HZm@b3;F="Gb,.9,/3JogQ.rU0/YUMFf^jT2M@O>6Plr$JSS=d>7)a9?kTi'WE4/^/U1n;>-NpK_b2@0/*(]c@%_;=2k/Kd8s@,%+A8eiJU*J]VgNJh$QVa+P]=eVarbDMFk)Og%d7df!jEcc<_BoER*J+K!@"I7Y6LG*:JlK[m\S$2)b1LkUa)UuN.iMGIR)3em)u[=%W[+TnQAh*hoN[e-D@LE:W4K8]nBki`Wb')t9Wg7g"."N1<NTfGq!oaLqc!9l433_Vk$bL0[a_Yn^(us%egVcE>E8Pf_=\-<f0dC)%V5C@:h"niUI^#WAgGZ%a-8kgC;R7sfD$t::_V7!B>?H.)*c,*N?t4N`\ig&l!Y.J&?D*\U0afHQZ-7:*P1)kB>p$96G4>Xl_Mio,%?7>LG6>C,/^,a:(T:DEFP%jUIY??(>9Xpc+dej7b'S\nMF2H!u59n2PoOh@;Lmu/l=+<De?iL8ehc3O%<.4SbWV.&(Q`%DEEMe3M%=fQi<=)R./bY`jMqWC]Rr^9+mm5H+qee@iQm7cn^9C7T]6JPsfY5$^;$18Nti^t7!Wt5*geU2?7C/p">@L:oueVnqdI;0@Mn(]F\%NH&qP)BRi%8HCSDF$3k^("Au1OUTo9+hh"kYp:7`^*8qeV]tt_QLaD?B>leFc!Q"@4K_%=Rd1M@Hi^YuN+aM7F+$8.YWW@@U7*`@%RYC2^K%]l.R6E2UJ@$EVD@1bU.IO7spbD.cT^>,g:)V&>2b`WB+[bs$#V7-o3$@kcI75jUc8kE8SNsjmdu+g)8;S,g>:^LI+:U(A%+?T_P$qSATk11Y!f"?iSYoa*;+MMp#@(*.qU!\OdWX;i5&M400fEjYBg9X&=('c,/I,@')\ueN?CphNiV!*L1M;`Yo('^U.c(e3f%ZWZ)29GbD^cl5Q)a49G`8..A:X.B]>UWN7F*e_9:g9X&M(-#XEe>aGq5h:p9)\4YZg(jCchN(=H(P9\`h(&FeZX?oljd7cL"o$7Z%%j2^J&t0[,E,&GC2Lm?2p+0%bQ#Y%%9fEi<X;eKmM`UrS%ifQ(PFmsUi(dt,?4'Q\,:(7T[hXFpqhC@[.=/;::=EYQaJ;Vo78L!.%$W\pr0fr<oa\L*AU(FfhLC@4c"1o/UXo[pd+?!,Eet#5`qpn`(CU*2\8q'2KBdtF.4'3ClgPG5.R/+N2%GJ-R5Y0sk[%mK;!g%Qb%SFf:nJ?n,Z'_5#mb^us[<rRN4dnUd`*$m!LfEB:q,IU[8cl18;$=\(dBAH\nZYqG$=h,9m(>N*#6ieV<pnj'K3RGRDZ9cqt&Mj+q%[V*G/lL%gL(;]?aQR\49U6"pdjWF`*^$R3=R%,a1_-d=TLO"gd@.q9Z]8["VG#EAf^)"QmE:nYh,Bfp;&:5Y=)RO..J/;&_;95>O%B+`A!'bP[sBiEfGO*sk6r'>mX6s%me(-KpnkJLa&/Eu\W);T",>_D[J%f_"R]/$Et,3n04>"-oPOC*oL'`!1mdqu=$!UAQ[#]U)Q%`n1@]jhMoB%G=;gJB]@W$47,$j8c:tr"?T'Or3H$Y8GcBWgF#q78l`2auBP-AmlerH;P@f`"ugiBpa^lF=X#Q34lgG]@^YqI%gY>%F94T`$p?bS)hG%>>eF3";/Cb;5UKbJ_A/MR!W$Ye"oRM5UILo0a:@@-Z+_k+&-OD'oZT&dr2,o*!gs/F9]3^-H)r[k@Lt%hBqQt#%9s8X=EOnAh#h+V9!>d_S<&ed?FWiV=@jB5P#CI-m@,=/sX*=_Si<tXH-`*Vu">F4&B"?rP/9m:hD\.6/#5YLGaL\(po-2h"LA>h^%a*M,?1_=e#"!boMO2ErJ!:jp^i5!fOJJ14C&2>k^=[(c9^0fBo8?%Ba*Xri$1,BS/YVjdmJe;sPh`QH^Y\4(ULRL"I2_rr(G9@eo%+@J;_UErTY!HD?G##&,9"ABY_O`]=!f]NQM&MOau-4PnOZ'6rh/0ju5/0YWi+$s^&MIMP[#`$I;iBTM$pW"E0;WAZ'bsML-N)YUb%YOC)[KmF?!qnXif/@$nc04VR8iug#%^_dqb5kNE<!Z*FJ:Cou=auf_o9KNo<P5C@G7RDiuf9%H*"<`i>"`@#2.`)_+#^sCVnFREf%$ZYAd[DZn^$7F3QqG,!#]!Xdm>+9X[6!tQj)@I--I7.K0ZQqsp,Tm6*J]e^[;G.XSL![3;TY,SWnGP[eI(^Y_oFqB$KVf%Q:]i#@%Zo!?sRqZGW24>;f1^\oT1]mNn"=h<jJR7PT"N]:/(bEBjf5W%7;2?7L?oK4-JW[*+G>^-.BH;=B^c'PA&:5#-/<$$$LtTVo0t!0'%!hp8M=i@s,e76D3@?.+&f>&eF*L#%WZ-S.Ond0l'6=b\AAeRuDCcgXDFW\H&UNJe][+%K$@%9G?Jb7SgJRess!ehht:.44TJ.RgS%/-d556;09bjYfgEj"BnWOV:SW_5aP6;DV3\&;!>+'DT:]3"j"0PX--A@gt+-+mZ:>!C.[O.$!0R(qIcTEZ(iIYg\S:Q6OCDPc3'4%0hDrW;`gsP+ot]LY"9AV9Fq214I1X>',+feNCS07_p=@*;Y(WTMCOU-nWQ0o<PE&Q:;BL/EgI'K8<O5a%4npC`[P>b'hd+gT1fXn%j&BBmm=R7;a-pn''28I72e;#l.;V;Ca81C#HdrpYC^<4s4cQ$L<6c.H?m?*_K?X1HQA3rlB*m.OV`"2RaGc)PnSA^S8iJR?`/`/)%&'CZe_JL->CCsAd%g)\`e4]U$MZ?H51BNXWdoldL13jW>YaLVlR6m>B-Bg/7$lXEnL5sYu7nO4):<%eR"O`2b[/h2:4Uhn*$q+Mh%*&1pt+W)2-\Rs^F6nBr@#L;Y@aKiSTU^<=8n-J>%+?phe):hEa3uhpg==>A$kQkZ?1i#J2;AM:=W4/Zh)+nhM'RHi.3LBpK(%DDJ%7q-^<X![nj.?%=AOnKgr#.qi^)=S=[/#2X4\.*tnnM;4eKQu?5'NuB&baB"J@BO.G(G8iS!.m(efWTVF>6%0%?m/"T:bZYd]jY;Y%SVZ*g)b/t=:h&Q\./Ekl[Ca:cX?tf(cua1[&+itBJGE1S"Q.K<3"5GRci@Wb-:gS\M*i:D@UVKC__`>X(t]AV@NkiLa'11C=nB"O%is*&rM5eQa'DU9(_Fia831+_21P'Z$:'<Vd!+>0*)CRlp&W$)aLHQBD^!d)aG$RW-"D#snkdcl(,+jJ?H,LkeMW8s`+_&[t%Wd%L%YAuT=C(bp'#%gV?&7N4C'4@MuGQ?I[Okp)bM:pCZlAu5H*\ZW]h>eBWJ4(Ut`C,;jq$IV2!>l*NC!q(p/mt4oA7lQDA:\a%:?)Bh%%3j/19`X?0bQKCl+`_'1l`jj)oO7jj8-?[Z1Bq5pblh!hZf=p?2aK<["bp`a(CS'Ljkp9WI`.,A=Kd9>CP^I@*mP\1L.K,]3.Tt3%4b4d]J\j1n.W6J<)Y.8n5u/UsDugePI-6.[$;r4TRD&^uTuTEZ3=o:&1ICuPVnp5_bG!].!CO[p85(?B@?U'i4Ys2s.3hao:5c5T%6tXb8Q"C%(9t97oXNa%]Op(mkENHEhU_\1HFf`TVZ($Q5Z*=LY\BU:$JI]X"kQMqt8!q4Mp+Sa-^f`ls&2<cD#<-B!,A\\`!jHcl%;iD,W:g_<W^udqOpcP55Q7%JN2TR;EH<UC9PB('r90o22DCr6+5X7hTN(bHnK]8#fH:5OK1)__]3l_4C=;OFl8CpNX9RnY'["VoL%jp<#B.1U&jZeH$p<]WRB_=K-?CTZ4$5mM-m>F-0<(^`V^].*qnY-*RW"rDiPb)94YSPTDkj0U)Z"Hgf_:q3n^!;@^I[ZNW"!h_4c%(PWp(q6?2P`k%fE^aP-E0,?$l$\qWGe4-GEKK>N3%",om32TM_F:M_39-V<_IX6Lf/k)M:+eWH^060VM!U.QT0i>jn*Pmns*0>IN%H>FGn[d>E7Wj$2-`JQ%I64gJ)7+KjR=7@j=,dRdKGpHoO_G&l\j&X:*",om5Yd6)-$9[sFm*j<Sd/>#Q*PS-J>*pE@fV>As,%-@Y%?a&OZqluhr7j0oh!2/fu(eK]%GSse%_b%B_,k/=q#T$[44UmF'R(Wa8=of\`pK:sR.]!LE&mQAP\'VKa!b@?)CHi!<1q$9/-ijF@%liI5"fBN[HoI+5c!=YM]/_lpM</JDdlaEQVE,<UT6_5DW0oXW(+onl"P_FqLPX&171L=2<e?_cU-L/s21#Vg`EclYn0Q<#u;]u3T%`H)7CMb_,$kVB<nk@Q%H*L9h\H3gnH`ZT$.K-Z*i[0Dd=/cgbu**i;+@gaX4ES.=$%A&)TaZr)3iAcE0hl'hr'1cq+dH[Fu92_Xg%`P?+-K\/A`cNKK7f[F6%j%`0G%0ChfQc)3rWCNTfVj6T/H%egH!ps7_*%U0r#m-"F";Zh6hi^!g!,M$MT(_pf"-7d+3R*J`b$La)%$35B9LI'ALq"&"i(i6!NeWU='a)!rMapl/%iDYF1F$#sPNBGlK+:aQuMGTYNE%+_)<%aRdn9ehCN00:C_"as4Ve-8<UQ?\5?Uue?%E9&K&$fa496XMs[1EJJ1$&FDRWcCBKN$qLmTJ)7>dsDS?aQL>d0]".bEl2#Bh#J.?i3E,,87:ghKQG!9^/7A.T'BHg/dKEX&3unF%%[6uO'=^f-P>Ibl1*.PrBR+Eqe%-NLK:$H.]O.oMa?`7:;+=qhT8EM#X5WrPE?]B>0`odJ@HAI$8j3L@-M/'f\P=#*/Xueu@@jb\%#+YNpK5>)XI#E\mfg(B;0;_Ri(si7F[dh6b[3Heq"soO\e-#c+jAB+fcJ&Ae('A$18-5gJ0eM0#P9O,+iiTdj&=h;`;b7+bLO:;a%83Hr"]NE4BNlQi""_RM/7#%W$6T+pCe.B-5N2H1j!-42'o,:(6!sFAc,?"sp<Qg5N.H<r$4jRXX-6*.BX!cMkYa*DTKP^kQ'LW2P%I!]Z:'S`g*.FCd<TG%l$3&Vib+]uc4^b!J*J0+$cMq'ci$5:l]3a\ZhY_$`%*E-r3cp>8F$=1"J!cn\ql.DRS5Y:.`euT@[BgQaG%AtWaj2Y%H$!&IEk\1ief&L]Yp(&G]RJ=arL%&7&52&/6[fBH*WMSe<PFkYn0+U=bB(1*fu*LKR.L*iG9!7Q$MNL9dJEbEX!)=UbS%dm-^tCIfg[['/U#%#5a.)=)qfJ3iB;`t@p=@;JOj`^C%T7JCDr4UneE"2-jK_$('XCd?%,$HQAVcrpFP.h$](Bs\hp&J&Hj).;'m%Z)0/LC'4mqp+e`r+Ch!Eqc!R$.?WcV3/B0+We4`K!0:8VE[u6H#uI=VF"KgGbKW*:#q[.%WEJ;Zjk(Mccq/q5N-%ZjNs?fZI!'h6%-3/!)F*PZ\^\#_fS>9UN!A/%`;eQ44l`::&;sh(#p9E2g4/V=;0K(gI+pc:[83@l6H/=XDk&:CDaec2!:D-S0_$2@\)!LgZ,=J[=%!)s[NF_F&AXi(ka_#gdcPlMY1k*8i['6'<gWBd@/crD)Xko^",<2U09kKF4_Og`4t@F"0="3OW>YQurGpAe44C<c47DcaQ@,s[i<%X0.9K"KCO0e1aR(5+YH5'T"]T,,lf8`7<ttIp0D'j^LE4<K.hX0*Jh5Au9D`cHBicqD9(.Q[IAYR\cI2Do\.R%`8Di[A\Y:8T$tS%Prd57$7OV)U`+TWP=V[u_cXTWY%l(opf,@8GDSHu/=K&`?m3k7Q?_E3lc5m$-s8;,duBP,p*:]-0rCpK<!\.(\L$j.@i_2L94q6[%Y\\kE+cO?!NT47#0b^bsnjsFRF'Vg@T0:&cg[UtE]p(]hQ[q/HP4fAn%`(W'K5QPF.rm4H$0\pYQ7AHR"O\998ons&ZUVrrkQ2f#%@'S'Q-ZHtj]qR\B"/$&C@n?BD#Z_dn<!K-)JhV2@_]&`Ug9%\)!!YUlh4F0&'$4PakN[AV%*aorXQeJ,l5N:uPAXI@::;"prrGs9%M,aO3?$>jfFp:4h.MBa59(&sGgj+Xi=A*e0Ns$%?fW_m@_o'G7?$q`r.BQ/kp_2!f/.H@GGi:XE\3oQQ>AIY"G"Fb*88BuKgO5\q%!e[FqJh&=,PK2+ASfAkTYbaj2Yc"1/Pg60K&mI-n9bf&H#W-=nLGB-Y\T'@RFY*_'Adb*"a;i?t:$9LrM-2Oq.8f@^+_VG"GK(t"%jJV[r;dBf$JqPljF!dJ;QBM25b]+;T<fI<PMqVITe7ar#HZ3<Om9ESi#;@!!<_8'=8.lF]%DC14VV3OXAK7?C37P'XP4C((8iLm;%JVJ/m5[('#33>aP!au\,AgUcH=)7WB-r4;e.1Iu^G_M.mVK'pJW4V+J?=&m%qKaB_ID7.tY#(JG6[TN">mk:G32n@s$I3#ZRL1&W%cJbQR#Dqa,KReV.$E8R9"@cq34rHC^poI[lUX5jDGTt\%.0`hu0)8ls7Q]$D[ogu/j3aaCN^Gaq)&pW;k:s\'F_F3C8S%RI@mdD`%Hb(U.5i6\Iq77RYJAO5c#=cXOhM=f8Z1N9maQ7AuO4s[P\j;Qu,MhgVRZOpeSe^7`C+B=qY*KZfZrAY,$mhPTfHA8N&K8`G@=WmK%Bfh>4>Gc.uHEi".4P!7\`%F*r>156`R_W#Th0K]#p`&etZAugnF[?Y-`.B@mI$aelCWMcTPufmG,$Mht*mBHnNg1ei-GZl=f9s0u%N_>e?^&l^c^/[kgL)'cdmEm*=SHs;I//G-]!+<i8DnaEmNdYWa.?o,<8c`SMBS-#.iL9XR3kPmg:.@Dg$SeY?EJ$9R!&1n^831&-%5f$2h\"+oaS([Eb&#XR'dAir=Sd#F_/N'uP)_eb@8ucjp.J+K5nR%Zi2;Lu&.ga[jMf+Aa`85'K+IlNlN%sLh'V^8J'li<tR@[-_%SU&'n*1-D/.r*II8*p4Sc-i9GEAY`gqM:7dHqETle<@m!d>?kI-I3A>N7l4i6;s\RoCl).nKhn"kr0-,.Hj=OT,QuYc)_*T939Qm%PV=5s1L<'M9R0rkHNM?OR4:r(%)HiHH0AcgPk7LO`q,l%jo+dEPT4.t36L"N^cFRi\tXncC:1k+*U]4lA%CYPFm0.N6C_s$W%$(5%0VeptU!DBulpZJ6(SC`k0H4FtX9Vp0#^^,W'=dH`$3LqSVbM#:@(`jqDLs=q5VR'R_?nX+#$q3qT\pRib6eEk3<K'fmoS3j`n`,<%Zm$pKPX#nTn<h]%8=M/%Xd[ra3kR7g@.HY5+r*^rU/Pt37=:f)C1LA,+g)?CZ)KYi/N9de+9G_(qb[0Qd.053"Z-Y48Yi0E1BMm*%EH.,a';QqZ^m)cVJr&NMO/-`rma4Yu<<U==P_1<>-O?HRb!`0%Li!jh9mLDP_3ND+(^+*UE[BVhe]+sB!.caEo;eWm\j)ofm)Uf*%KV<*!9q,""Ueq9@F@ClZ\SWp=g@;#-K5!U[A(.'FcO/oc/F'JOq"fXgE_'7f5nsBRjA(Q=%Lq@g4IQKZ5&5_=hAlskGB)9#7TfLC%rQ)S.JG2];6dEMfUeqrc`9*1&5q2t*%sPQb9]`lshuF$bRsnmGDZIr4S4.M\%Yoc^[qV>P2K5nb"EG]X2/QX]")7s2VG#GWGhTNE%b0`*cJ5O*VYH\SZE2;F[mjR>N-c5k"mdZS=J0MiD(4PsH25LtJO.:@i3)/>!B:UlfHQ&DtT)!tA%3qM!(25>]PQ2B6K[@^W,1u)A%aAb<::P2S+<.ttf2D*&K":tPX@=%-[2\Q1"GF:;(65s>8+LB9N9m$GZ"+E!Sd$7<*#3JK2D,CmNQQOq;bQDH:Xm)D9G210FMJCpU%$UCqr4FuOi'<n<&f,siL2Q"f0+KE"'5sM*c'6&F03^^3/Lk.`)_JX;:0'miAL[7u@bkoQmQ\%jfLk'Y6Jr7_i-s\V_NmmmMdj45J%6;'f[C'6Zc<?iWY]*kZgUn4jPmWK>NC124pKj7VB=@2gD`Umk,":#@D(/(8;j2Y"n)'%LN$Nkb\MAP<eMT@[$QO.tC6JE3f"m/B&%)!F"Y=JA5LfKkL\eBRr*,@#[5,OJUPZ/uoiQ.'K@AA(uKSD$NuF#=s%qPd3]I,8c.J^MaLo,*!K%;!?$%=4m\VX1MUXKC=-?r&`Q%MUX!,5aH<W$*e@Q&9c83)^d1qV$eNsS"B^2(J2D!jM@$7<^i9gn$*DQ]rZ[OI\L?6B/d>\$:*2[%WsVKJW.PQiL/%mL]9OU=98[]%o2]ugE\nWOr4!G"pgEgSRL.t1f+)B1\FKq?AsrbT5>V-e-UFT/XGpguO/.K<LP+csK3M0U2p[t.*hTP80]fJ26<IC;?<BDu_Z^E#%P7)F?LLh$F<We"pK]SSg_l(#hP^%9tOH5ruYpmYjLQ`HT2j%M4.jTc*EruW4oQ4lAjrmgU4L5k`L1!a&iQ'Esn]WU#'a(n.l!k+$%2!X\F]$D.BJJW&]iiZ`AfXd7116#(3o$p_^hit:JI''#._n?Sk?EAH%oW73%1,+97:O2(TS]cgS1)"/=i2=cU4uKd;_a,<Tq@oo-%<RETC-U&QEma;E@DB&.<J9TPSCTJ$XI$O*g@B-(I(S?R(I*0X3W,Hu5nN]&H4u:%8Bu0$([&/#$B?C8H;'!@<Wmg-1BK4GXF)$J1%7$rT=!-@<9Sq)tK7\DA"qKs!6Vt*`#I\gX^2%b'Om)Q]N-8]_6IKk.#2^Wd<<n2i<r<iI-NDJ`'HQ&tVfC\>aHiuob?Hro[IDS`E%F68-='0<)`WG8rDRPn'WO]lb0P=%R1k,/G(JUX8Wmamk;+A<[)9A::klh!QK\mL_,=d3OH[/*/kJ>(!h\@Op85cGiI"SX!!^6ucZ%GQL&Q</iiAcf1c?KKPG8ps]F4'6ki__+GhQE3&LV4+SW8FKqB84[q!ql4@@^XOsZ!];W<tBEH4:PjTE)+#oQr@HgToENFAUBf-:C%dB.?H"/5TN1_6S;%Kf2O!u!PJoH=hFhLI`u(Ac-gcSPV-hpdR4H9D<1KogV4[#<<jWN:"Z5SWI`%FjFe)Q%\1ei1\o2Gji_%nAkK%JN_d399D9OfN%=m+J_J]fZk[#B'"!BJ_2hsI6Mq#%1L.9[FXh)m6gWI2/638[rV^3Ptc)+f51s\-)*5I"*THB7\0Gh&E4?4j<J(9%ROnqAq]!g"n@YHqTAGCK1JC"*GnNsMm-m^[KTD2"70ZA\5m3'EN:d9<YrTDgl.p256"D#rp![PR6@.F<fVKO'n@=u%/*![X@B$po%Ns5'+aOmggSd$9:Ot9"PH&2R:"GR%S4&uK1*`J`l>jDtMh^VO^qqlL<'aZ*p#!dW*&>B^f7_Z,#+FU[5T=<7(&UsRuOt`HAIepPa%L+-q`eO_\oi1$l%T8tr$af^.W0R%m@^3N;,?Sg$\,?19\k\u*EW_!^1HocE)<DVFj#3;7U++W-;DeV?uW>W!bW&F9RHKJ9NN9fD=%=$7YM-\.f],SiRgY+L=JYW`B/(CfRL6I21[\`om5*^/SX-?*DbK8BK(INB)P%eJ'="M[rf+7Agd$#?-JF,YsN]EDZB(^fk8##D`'%qGu[9e*<[4a*jo]ZA4f9Mc0Z[lAdXGHLM!n@hFm1pWV<ll^7)Oca<%#Z$D5LZPpfRfL36@H,'E2]',Uf;)gjPN2c>Qpl5oVb'R*H%fOM.YK[HRd%gI@jmfU>""+X.^pkHBEd>?-4JS,/9Nc&i8?k-ZdFR4VXZAtjQeMt-abHi7rE#`pKk#89Pn(-I7PfKV&Hk29!UXZs,%:'KPN_^,AV4#cZr5S-G"k(NYUT_*q1g.'El^,[o*)1','LON.),Js0hGujINoCP\="GJ<^?GBhPD40<0d$=RW,CP"Q7+s&aOp%-#%HthH%j@,Y8&6Ydk0q^HO@6,9!di"-7oSgV;H"'0cW2ocuBhm6X+Y_io(ahIW%;@^%F'1Q+hklB<#aF+<ka3-F0R[85RR0uPg/5@q%4Q\1T7fef#9c>2>AUe>$%f&*(+<dld#Z!CHj#MY14U8]2:@.0+h9u`=M\W6IH)AEOC$,p-5*?3SDB2VN0^\.X,#9tU4\$no>URcP%=R&S8O0?(>D'"8*_2OR5h3Z!GE>2oo+L)Dag3NXY4Cs>CaN(^QZZpRG`Q&C7LagP0?DMo4X`/\X%%Kr.%D?K]c5>n'@\L\&#+j`d%;ffJ3RP%'P@`fR<HBMug10f.T,GO$9_(?#)jY^A4G*RT>65X5n)WmEG5B[H3#L1mh';QYj*(++V^bi(pgn>G26PY8*Vu5dXrn&@4%V=,C)>3sbFK3Vhc2XX7kK@i:Y&P:kB-CDMN5ue3aMC6fXqi5s,=$SLiR0L!3:S6[cpCN]51u5g$0Xot;=GNV!Xn=`NZl`K5j1KX?%oH&:loj"$pbg.+GRs.B\ZO2$fNjs,-IbQBE"R1A1Dt[rWH^XX)IE;9d?&($Qr,f-k+2B^uS*&>fXiemq*pl*3ob.&mlA5RKX55t+%_Aob[=5TPXL2^uG^YoP(Y>oL?MQab]%VG"3>J9i?36bd"^->]NDUukgmecpVag9[qBJrD9a2u*#o^2;InS*L")^e!q^"#?=p.*$g%30,0+E:`n0IghEMkZsb5KIj[M@-i:uN3,Ag/*$WVCmn%:(gJaN>#YrDB2=Pch7#@W/_[j8O^t5Z-1%Ql8NPnmY8M/oq_`**m'KaQ%jbUuU319K<a/@8[K=1Gk3''n1P`!Hh)-I<ea^d;sDP2*J,)ieAZ#%pLS.0:pcH\qDrj7n:YWlBdrT2iDL&-cK2/<hG0Udu^PC)?X%q.]l=A5qZI)P&89mW:9lPI+=Ppm:5:Z!X1])iO,udXQ\VXsn?2B;\^V@I1=IrHH"8?"(q"99Mb.9@;IR\m2Vd\`S+.-6;R;9Or'q%)nK4&E*+3PT6:b$;Gi%%h^HQ[!5n'4dF.7BcfB?)(sRdu(t9D)f[PD=_@/S#Xl[f.E`0Tac1_.9D!toiKbS(eGgr@5LA@Dh'hKK/%h^b&Dg895OFK\(jE1?94e%KV0pE/m9S*lP&:"lIkh8=8eL"g^Qo]b5GmVFZCGDD0om,(om@ui@4p0,SmIM]2:P,V<EJ."cr8$kYF%Te)2)0+cGYZW/K\.%8m5=eH;L/u.uR,[Vcb7cQ:gZI3I3I'V+'2r6$N@I)1W>J5.]Y*'CfDF9+B3)>QIKC3spdfI8`?[(6$U],5D%Vc0SC=e0]SGo*b0a!m9%HuKFt)jH>H\Lcb?eg89ch7!7=a0.mIj;KD=n5!XH7W87b8+qiSD.]94iFLX_Y$Eq8'j:,rjG9=c:V+Tg%_/X\'m_Mr7HJu.4'^oH,h>(`OXM9DLZ9IkZjA1<_YJ#,^*AZt&Ns;BLXhRZrN1iYX&i$$)But"'kgqs#.W:pWiFbGfgnuh!'^0Tq%#(uns^Y<,W[6?<\:eo9gSdH9qefFL_Ve=,YA9?LJ_5?X[s%*FYLj"f?($2Fegot%:LcIe&E4W-(\9!>)CY_T0>2G"Jo2.8lrGVJU%JlV?e14&;p*C38X0/c!gqE/qrPd/[UHZ@FjrpcR.;6jf!O3eP?2Nf]B'=I.kN1(8AdO6%\+4_7Y8DY\GK@=^VoQM`+LACIFL)u>o%kGP)kkk4g.\u:Tdr,PfU53mrl$REU&rh*K$1ARXi=IGs\:\*We294NZJ$s6UVHYS&lR*PFbl[@[a/kQlToTSM[?>7HesM_.hR:Gj%Zft%E.TaQ;d@Qh*&Mn@If%9Y:D9KT/YME*g>I%;ZpD`Dnp1aJTH:pHEe,&0@g%s>sl^,e%DP,M;^qZ1NlRqI09BMNmi*aa90.SQ<%H+2;g:X04$j5_a/:*4W)bNPERdutN[%40DcFcXYf-=.MPs7qUq^0EEO+&l#okYWuL/X)pkoQSR/mVnO%%['+u]RKhABrNMM-R*bN%q-c\B91@o(&K>nh%S#JK>o<4:N/hS(,jC8E.*p`aV+7#ceoG?[(C`[RAb[n;Nlna_oBo-mY\k6><;ERUpT'eZ[8^*]N>pQ_J,,?N%p>Xn:s/]GMf)Ls5@'Ff+.S9WC>ZE2hIa6/4]Ap;'*<q";hlfkCJ)Afi!Em"F]j?3BJ%Mj^*%*5d//;_F#s%)eO3Tr2<b=Z\9+1sR%a,`^'Fn]Us+"#fa2<UhNjN=.jJLp,5Q?)5S7Qkr8ZDo?7/QA'p)MNF]3q/NW$Kq('H<U1l;ZF1ra:a]3o_<ZS2I"uh@$RaI,r:/h%"^0QVUJLIA"O[5$Dkd#W2k6/V2gi7sS<[lr0:E66/:kAt.Tij%g%[D`1MMS(/sk:1Rpeq"/Ji,UM+U4Y[Me6!CkaCll[?46<Ocn$%@8gL8F7BWafWmN7$b4i0mE6='%WbmX;m)%e_j!m.0$k+")<lOZAF*dm0]`YC\*Ym(G*m,.bWiBl(N,!g/m$TmU*43lN;*S3;7ZD^%A%0@cgNJtab2@-_IuKDQX)`5XgK-.gE<4fqY'nt_rSG7hn&&Mn<jo[`I`UAqo".`,'A+sZ(WuM"P)K(/I,&V*0E,gCDTPG\f\6hX%[Qt`)J>R?!nmO1-ClUu;7esXE\"E9'I;.`Vj+9MUfDU1c0*^1pI9P_^!Nu5VXj&/:*V8)b>C9O*Nbi&i]<u<VMmeI2PGKJ&$l5sM%*8+N&X[W,"/6XeMXa8jo;`&1L$:t.pK@\$_hF;0_Ha^=pT<:=-=#a(ZHWDbRI&co,1[HA9=-#\^PN4sT(OM2RbJg$Sg6>'D_GU\0%g!lm(h"`eWk4<h]ei5Z/Xa6,Yp.\^4+iO<<hP@PV]<b^aDgP70%H+isKn$SjGPHG&/lYJ4DVF&sJN%F?cLG1EV4qc&VQDkH//^Gi%kuCsK/>'(Cc0]kd4t:gchm3J54m>^GCJ/5gfLo!9_g]^fm4:$,oOgD2'jQ7$GCPnFKA4/.%qAoF2.1"MU5^5tBo^Ka8!AB^e#LY6%Q"!@WbZ<Ls'"(m:>mt:.Cq7?ZPa"pc/p_QFMY-r<f]\5P#j$@po]'&,14%@V]V_O,k53#=Tf_[<:X>2<ac,tgA*#X"3^$+3a>K]_%,@nbr<E_g?(Em7JO;49<.j==#+mU&VP)5L6Tb#sC?%%:%X%VcdbP?8E>%`uprHH@kJ'`Un=>H1kBhujqPIe%PSA+aTW<VIin.l2^%j5c87/@W[AgZ.@ENO"UcS?-N?*[lB\mIJr0O)fodrNN0d&b>W$H$b4W4[S!H+ofG!ZTUW]5YlY5hfC&k3Ch/mrlN8uP3h.SU&b"+%)J<0Y:#iZrgaAB,]h\ibdGME?O-=+!)_=p.)a]njld>+/rQuaUhB"&XgS8b4pps_;DtCRo-GTF?5E0l[IHU#QIM+rG.,6.p?Y5JQ%l@YuS:A=Cm91p(+,m.7XK+(PAX!DDQT2V`hl^uGQJ%'/l0!YoZ+8_2DNRHZ)AL+,3bXF`8[WH6CLSqdrgn'*.Z^QkL+NQe"i%qLX%oh+d+!C^"a9kZ%Yj$3hK/8:Tl;Rs`D<$^VjaG%j66d="T\`ln1'Ba&]-pTdP:Q?T;)fP%;gUbkBmdt5FSTL-Rl;"nrV92Tg]$n+U%[&lE,lV;_/[rnTch<@.=A7%:=*N]7iTDq$oh%nD<gEP>QY"Wqd<OV)\56!qfF+2U!^0FPu:W8%RC[S*!?t8KVn'3*K=FUiS7c>=%%+/.6ia]tg$S1h6d&?^CEO3<#fpAR^6=MCk`[=*hMB4_h^rTSd?^WLtQ@MYZ%kDpF`#%`6LcirgQkPFV*EeWf5GA!0-B_2Apc7%A+%D#3RYcd-g$9<p284Ne[iI^fJ3AX'OoSY(Y5hYPO'&[HiRe3E:Y5KELnQ.&re(@RbsTmct:.HpJr;i<`+9D:'*:\pV\TB3Zub,*tL%G:+rD&si&-AA]hYaiVXM.:mGE7e/E7A=sq[-b](fbNIbpd<iVT/`liQ911j3aGTJ^XG"7@VDnNYH;ej"Z`t2=4EdRf-[21nid#Ls%m>_,%^?PF-brW>5=UA!4Edc%-2Ds6dB%ti%5F8h,C!Qr\Z`$iV>TbmS)'RbaCn$l1;mU=U[Q\1sPL[u@VW[<[ZVr?F1A4jRrk%&l%ruj^+16OKb=c1f'X1N7G/o'N2lai+aFHjG-$f!WgC6\%cD-PL<I8T%XCj\&Y,fAYl4$)-1+6fC2amJtf(@B\No7!L!n`XfFp<$RL%SdHgoZfHMJ00NM=,se0d4+`L(PGC!0rgJBO=V3i8?P2p-a]nOtT]p-,b>GDQ[R%k'T'Hc2gX4$g$6d"sF&'a2j(W`,GgnD"e#d4O%Mlu%*lj7(sG3rVcP.fbk`]m,L"r=PP5!DJ(QGCVL5<V2YefV!,GJhgZ\u/LaB#qKtETD,MZLSAE%iq"<EFS?TB^Ia_Q#'ecra;j+%577:!^OW.sU@k@sG@bj#?)uU=m?[.=fkm^2>ACj5^"slkR+d4X7mK71&lGeqMiXDr385_<;b\H4kt4BHRRV*\f!=Ya77,SR$.q.L%rF^FlS<>b(I"^@FZB97&hO9VTo"gkS-)9M<qJ+HOrG]aQLUINH2W=O,'>Dfigo+IR4b)g_Y?]Ro1VR_G=!ATnc1jn#bVnM9Apg3r%8_]3-HurUQj""3=I%0Yk53)MK?P-/<r*fJ[Lo'WUGooQTTE_OHD:6EU>2'j"HiglX4u)qRPo6jBQ&(m>\7PPL`W)<e9jcf*)2q%c%@d!;dZ1<=!q#\IAFougM#b'B<an5PcTAOsH@R_HGH0].j4aqIa8taRWpUEG9J#dDICe`^J;\8m?U4RM\^*P/q6LF%!1E<$,l1]gH%qaA-EUKP<jg,&tJdAL^Hktb1Uf5!.D^A<*E4^B`pS]P/A,1PdPQgD8G3Hq)(!/F;*5[(=G2D+R-FERVeIl:O2Geu+8l.BDDZ-T+%%MAOG1\[pPD6)h>k+J5$\:V+Tg_/X\d[%^g:QmJE(KY7\/ja%b&K7B2oJbK,UCW)g!]"_%ap*,8S)7b&)WDIXm<&)E@\VG5_C_Z7W%k`:5LL3k!ggaeY#Cnn[\['tLk=4Rn6rqn!)k56UoL?=?fK&T$B^A[JI1ecKX_/bsqGq-OiORS/j%J\H>rKl=8?.Q^cS501"8>Etm%RU3""\YqqFAYJGlf&0Kl*Sf!_FN=@Ekugom[l#`u*IP3Q)<8*Q^/X/9g,VK#oP'PT&2?\rMQEbPfb:*N,@k*G<jEb9[_B(Aqf,Kj%=l.6k_u43s2eqY>57KunFe*(gjMP89a[BoCf=CjA`e#!0HnN[<+!M)br2u::1LL&jDM-d#^5;'GhULp?=KE]aqsrEiT>lrb.\^S;%I,jfgH"Qn/E7X;'JO`u_o^3C%mq5<^H$5t(Z>ZO$pAg>tl8F>l96X!C&a$,8$A#T*E7N?C7DB^2WCUV&2mO:T(R=pYT(aJCW2-dL%jjs6.5GqS14=PITj+>][>.Wi:f%MdtfI^/gFb.#3m$>h<Du=p?cf`La.7%6b<jl(^?M*$XjQ>hRa,f?+0=J!1T51+eQL(A[5?b"&%)o$DVB7Ib]VmKM'""IShoIRhbEHaB&q%$g%fpN;1T9`?<2lO#V]141=(.CYML#l+"P]+3L\IMFk'Q!K[23>+j>:D)!Ph!XN;_8ek%(Qu,E<mJi:BC7-`cMmVrob[,sSc6-(4+G(3Xj!d"(L%ED9(aPVC7@B<=O*gn5.h_1>0F.PLMV<20A+NO@Uo&8H5]$#:obV>%gJli%b*jE>[P;DQqt-eZA09"d&O-/mCa<<Me":g>P#:heTDqkO8j;STTRIrAHEYBFOu_=ba$6CfouB;ae/u3G@=-W_*s74i!$R,Y8&KbJ%8A1C%Qb\UAFan(3W'!7FEsT@!nG_cf1]S+)O%4\,X#SWjr;5UEb"R4DeL)*0(58n)MlK\`4C@lGl3DZ78\;oiGn5BeKO=]]d,.i#%I8kXjb,P)RVPf^8TG@mlPuY:/6m@rIZP4,)U^S5?h5bd,/V;0MLuZRtQN/e9G10kKN+W50hcg5i5^>Kc.OULP6eKOqB")pnYO3SM%pn+BBNCNmAG]re&1c:%@4,:$\LR%%f\9dgOop;:,^D5&<1'RUMpL/]<nIT%A1nHn[K!fY:bR\t+)`=%De[k!1Vg>[()@a!9%C'/X%Dq=B>e7]7.X&O7Uf0;ZB,.b'ER)/ME9".'3HD@72g)/-_Vq";n@J=n"Y!*`tP4>sAf;`qtfc:LtY:2!N,G,!N2lf7;Hs3Ro#2SN<%4VW/;A-g\V_ROC3h9+8iE:^Fu4s"hO2m64sKIN"K_=Jo#])Z]@/&hB(2HU1QKo-MDs7P!YKr*$K$Us4/2*=48=a`J%KA"^`@!G],%XR[1-qTUL;K<L_VonVO6C)70R:J_hU'qjOd5BpX8\bX-^o_22\JI\A;</7uE!IHZ9#Q;"#6,H^NIK?UZ:gmFHU[$D.qVu3a*k/1V%jA_W#!;p_O98;JUkuDW$a/cuiRnr+g@W\:"@W14)#930`i,hmtMSL1!&+RQNkRX^NTVF`j&(.qeLSucjVuEJ&b)I([cYtT**l$B9%L.6C85IPJPO5;/Jhs[NPK-t/WA'X*8l(dLljELfBhG_%\L1q,s(\6='ndK^V_\JZAQ0M@b*d3FFXP/R1mW_o#=`ZFdc2,n3LpC[(%p`APd5^%!`pG-V)_uG+I[,34J-U!?ME/Bgu:F`H,93h-P_qcl]c(&RTRnQRm4?B[O)Rt^I]SZf*>claF#F-HR!M^=14BF=[h0deG%Y%A63/<0qPSh=F__p5lB<P+AN&QNa59tGtWI^^VZF:CP=%==S'<N[)s%-_oTDsV5[nRR$+J+)+#SW:_i=1f2(0+]iT+>8mAr.lI*%_+4h2]#a;5NX#o80Q7%;JKGi<@'b`?c#7$#O:6IX8Q9W.aYq`IPf!(lKeueI[biCO1W3_,9n!DqmVFS*[FA4/)Y:>QO$`cK[Y&N8%3!eWc_!e*pCo&N7mg]s9knFd-7quZ6])'hb#%-?7r%b84Tp>RdMjCD.X4Kk=5Snt\r2_=VF;93(Cd*186hP0A1P9Q>Me"NW*!%\&%\P)\:#p_]^`NcR&hfnmJS%6n]1lI^000FglEB*@6[@/&mjVfV06G%LJ+HPs#N`1@G#D/osi)dp!NJ[d#f,YDP*:`"uJ:>"lNf%dd%AlPQQbDlo<JSI`+6Z?%PN$$7q#b^O92+PW7L`;=?oF:@RaKl_0a)gm7b^-\4*YT6K#r@4NTPtHO>Z:O94H5/pAgHtIER`V<WqeJ2%<cf7Gq3eY`O6lG2c&YCIldUS*(HK.>YQon_[Jc,R:(9Sic4OQG;P^8I8k6EcJRd8!3ZfLG0CAto3#q/doZ\:Eio]2j01a3-/`]g/%bjLlV-?'=4pa"jJOR@mrcK5B*ILq5L'kU^4'hq-"QVdp^e]S5(^si]9HFU27,DA9Ykl%Mq-E=<PB,(HN*Md/Er^i$+JPdTTfK9Re%THl(%0]F5*@&.(=ckUl2Ks!*s%7`8_U!6Jf6C?`1cR;0s^:llVb2CIDP?umhO9)DhD\!?NI\d.a<6G>9Z^%mfl=\8EcsRF5d)HZN%hH0IJ_k]?uUYG2/_,TF#H#2-hCAR^s>A_"W=_KWA"aB1`fLn%rET3m8).JC2-D%t^0q-t=BR9!<\U*924)eZb+C@;,CXsLRPH$70%>g(>[?SAO<?WGDghTFD=W[_.'&9bqTEPe,rnP.35e/XEbZF_L>l9<Yn\oJP)gK4lc@nD9l7[3u9H3B1c-K%FeJ>(A<"NCS/WP#7G%NVlCa%AU)"[>+2`OgTpVS;ajFl?S!RG1*>fL'a>/3ngBMYQk2l*=/*%I4dW\,<r-*lI\O*SEBj>b%e*Q7McjoU60ARNb;uIZ*!H$%M^:gk>?)>Tk,O>?SUBVil;p,3G")(RkA\BHnBPITU_KusS5]pC@rR`-]0/FWiWq(sKO08Gg[;S4"jqrjSJM.d8GqX1r0pqnE&9='%[L:DDnC!;A>&I'GR(/h^r6$%k2G%&1nXe9E?G/+a*$3EQe'Zk9"bSCsQ^pnM"5CUJb\r9JE9ln;jFJ:Gb"<Z%E+9o.r'2\JN/ld@%X,^Xtgi,)Te?\ZfZA>b=d)YPkeF9^e?kmNKI<>h]QB+5!MLSM22R!?r<gGV2PbieKo(RXr!@NO!nRph['Hts<Vg97R8Q-C9e%2q,%:KRCTcXlI+#^b:7Pp_H9[lusD9]K0FV"ZC]faYi$QAh@.Ki,r1UdS'V1/csDO`E:I6:eVQS4oQ6qla"Ped@i*j0"PA2,?J/*%^l[%:Y`^64=B`_OLL)W75o:/e+&5(/p@eRa3h-JH,#[2D!DN,PFP<Bc:?@=W3bpQNLnAHVXn]/B99,XW7GV1;>"XI1/5des3k1"K>:9p%Xl=)>4?XU*a1\ML9XCa'IB?8Pef/sHj<a;K(G-]n<Q?(LCZh?\EbVH)*PUo9%Lee$g(<CI:&P<Ke_,4jY<.+plb6,oqkNc9Gue6k%m3t4RIbl+*lTTliI]kf;kN2]J\9d!p:W@ADCc8NOgXP?s6ZLJ:g%9YM2/H4oX&"r$BJ<*J=imY-r#dfmUL\DV@W&g>c)n:M<VnJM%4&')n&sZcS*W0LTREPrXGWd*&bHAR,Pk=gY1Mag.o3J(Z)h9MHdpr`sgE.eF&5G$;Q#^8hf?1?gF2?T.YcP>ka.r8&39a?4d<p&+%ms2#+>Qo'B98Sfaeu7-%m>q+]l-j24D"NtY3ej))p[K+\QrdSdkU,D*+`[ji)qElEZU$@TSUscL@rLc!h4/>,0OZ/IOnZ-J'1pXG%lVFj7C@rt;KC8V,]"u:iLHLu6>&Gc8$Yml*Dj0ImjP@2sme*L6U]-oNeUp$L\O*L*T8`;=5]A7AJJoT(2nYLF^[Hk3>VNN@(lcOp%e@\1=CPjHU^RH/-lNW8:2NttM$/'qPkQM@W]KZI7*"D@@EU_u($IpNeh.+?TaGjKX;rQlJ^'OK36$J\Y)kF$,9Pkc[96cipAL._V%ZJAA;7:J,L#Lr%.6"_A.:Q[q$pVRP17'3j$ks'<GrQ-K:S$eWiJ/V'r*XmD;]7]0h2!f)#DhW'0_o6'lJ*JD2",?GVj2]8rbVU9o%:uS(TjKb=TBNg8p7Kf%K\`[^ej\XIoD-<4+Sc3jhh2oX@WH1Hs10dTne/Sk7_:Tg,H=@j)pp*28QrKtkK_-<<e9a&uVgFr`LT^qs%_`81?2]*QX#>^QTfjJ:$gr1b>86)d"b3Yh9,V-B@34.(MAiC+d>&9:"dUClTVn*g,cH8:@0FE,q-mBJo`A.h"hi:8Oe1qu57X626%_F;a:9kl,n;WahlENp?'>B3VLLM_b:)Y:M,gM0uJh<k?44Wa7A+_\]%S9GMU^'8T+JUV8qs'X_=<e95t>?D@:,*::'":6S&dd\/D%/O.Ol-n!QYjD?YSNXi,:7(!hH9N75<3i46hl+F./l39,DAj8`TVZ*5E)[n]`r!B5%g>V=;"OB*V(qiY`kBKfc=Y:'V5Z'E[aH&k6%,f-TiU3C50kOS%7l?eU$mWYQo(eg0Q+1*@qfX,&IhWVI2^_k<;CCbZEB9p%WF(_o(k"cc5M/HLfW&aMANN0O*"?^mTrug\Fkmi&$%5KRI^[^aaKPel/QM$14p$YhRE_8/pSi&rm)gKcf$^_Y5k@80_#VH0[o[Rr-mDDGo8cEJR\8WsX?rumq^OqY`,U.@YUQNs-G;7og.%Eh7JXNiSX-A%9*]9n!c09A,jRZB3gUe4#b,-<SRZ1bTr2;O+HZLWX5o[u@C3doY^2\XR<\k2r;2UDg%lj6lDZDR8q%'b]?=J8`Pt%T_rcM8I'<s4[3Tg`d'[<7d>9'V5mDKoZrS+F5O'S,`PD65;s(E6VD.-D,NE*oY])(KAjqNR[TgBM_MU'"mHKnrHH?`Ct;0u4>"u$%;T(Fl-Z=.u$FrJWMRMR?XN#-i1d,-Q*S/<lZhJCDIO6ub:eFF6FS0qHTN;"O3<J";dHFS[]6`u<PPsCA<SnS)_.@N+d7Jhl6q1V/%fr-iRk[b8*3M4g"a5Yf6)PY5qLVlu(/nhHN#-kA'/C=eC3#`pB(m:hq3.%.EVX->"S_):VGL7Tg@!(7pXV``p28ertnQs!2N:E2E%(_-"$)[a0BY,+Xc)3/_X73c0#F./9CQZFClq2r\'j9B4*bsDFjVsRj*q(N*@I!2$Vr;!%a?*K.,o(`JB\qBEmkoep?<-=EV*HQrB%4eME/`XS-`h6`W\@*hamXc=`I!TIfa?8TdGE*AaTN[@C)_]c_0q=nK29O<jGdBM+Ma?k'b5'p3il]0jr7OKQ@3iuS4pc,C6XYG,_%3a[7#!+PD%[Q-8`bXBn&A%fm$$gTZ>)m%X.S&'E"mr>EY<ZcJ)bCghTNNHi^<X_E8h?T+TC?;]h8b!?\L`V20""YY+Q^hHRBUttQ%$?;+&e$JIfhV,&M4DG>8H]$-2Y($\e[a\#(,]gh`e1DQ%EC5FaIm!/L0K^@tcYIIN*4LT*3,I:jQkPuV-P']6a2c)/`du."&!"1-%;/BiY)!$U6qoWoVX(WKf?Hi]lF)!1CKt*c@6]U7BK)D22';paYNQ.>]XjEd%_74+*N$J"'i6nms\^*eA3^eF-C3nLQ7@$FqBllQ_%Q!.[r'epKCVe4_Hm\F#E@5"&@?Op4Xo)*l?;l?eA_uL%5NiX_hiaI>?2pC\g=u'5qXff*q'<kiWlI#KDCCED?i0A[-MZC5aq\'0?%Tk/mCrA1[s)1N@=@ejET)nFAeTuIhL)OU@EF.tWYeE.[@Cb?Q:Z)u(miK,*$3%hJ70PH*W@ko(giTKC;`Co5F]sJZd`lp+P'm!dU%_lRhk.S;H;c4u$K+[k?NMm4>=?C'c6#(o<TY4KW1`BhO\P!Fo\^d$:K'J#fZo8Qd?^T)DHo"e]f;rPc1>lD1R,A-hTcCmQAP5Q]X%QA=m\9L#``S9[]NbkfNj1`&oEc]0m3d/Sn#E/CN]S$6W2anrEng"FcWgE.t$Roo'pH_+"G[1U_9kIumY>oe9(Fg%l9b`k@nc`]Mo%Zsb.T03H1>r&!+&Ngq:k!U'&q.qi*GmB^g4%%@`m3Jso2(lRMlk-R8G!&CH_g4@3+.6=NKM-.n09Hs@WlbZO#!.M:EIh1cmS5a/;%i3`E\E]NI95%T#S%'rI!iTU&Y4??,mn11XZA<oi+>?#QG6]L`Ke'\YSm;Ap-l`N@_.a0Q*VPoTN",s7@VgjcID]4qN?Eg.:mX6S$%4W#5mBiLW8K0H?u$4k!P&Cl"p1n<jq<Z90S:(BFj.%XbL^CN"hW#q#U/mhbTHnaptHei]16TAlJYZOP92n$`]JlINTp8C(/lb607%C[iXM`G;b(jl@V2hi'Wme*q,tn\LPQW=8#W&&bDrdcW;oV(jE2n5@Gkj]#PP2_WM>S/aF&W$<EX%>':'@uVhWAYRsP-I_rjG;Z5.%/!_pj`Ua/*Z@T4+,-BiooSr)QoeN6WQkZ%*A[cHc^l10idgAablSg.)f:J=SX%h@ZX1f=H@LFC$;mUgGNJRNDEsI'8/!$*sA.@.!%JdbVkqNr#sfdYidL$5[#4\_q;BrD([8A_2!pLuCa::b@@J%EOt*KB(h=1]+Ke,.-m!Rot2X$X1M;o8:qAFE$pl8`ZV'pL$g:8t((%]%?_'[shq_)c^"agc>RQX4%YUEL^#*l8Z4V*H^1K1GK#\+?$$WPM,ITUA&'J;C-s;)Hpt`%#'Y:3]]j!mn]sii>[/U<Gald#ZDh+%qr_`2'_srkU8[gIQe#>bf3ks+UFmsNk!RjpPE"t@AXG6?XcU7)4-2=?&^^!=P9Xmm1oVe:a_!J+`b-XXA)Dq,gZ/r;F<B#D5'LI2%UZT-h:.Kfkn+Ui\&++i6aSEJ1j9(Xs-b]+6KTpO3RF^;O;sOpja+LX!_XV`TY=JJ*NV9ZQ7A9'YL0O%Y.ks%%-\'ChbckagmCBQk%iNfH=/D>e*Id(NCK+MR&obT5J_o:'^H2@#,nKG<R4'5rd:Q13HR/,E:Zr5P?kD$1W`m%quC:p/X^RR5XN]4!a^thrkZI9U9`;.dr%DcU<,c!aO$Y#*i8P>T$k.t:SR=(JAnlR_,#7uGBOZ:]+jXglPc:=T-(Zt3c*NEH93MT5#1\NO.L&0`J571!.0ZlP(-_esZ]/G*'P%92/MjKq=pm>E@U+fitlQc=RFFDo=ki;e+kLNJI1ueO=]C/b(mIa^siYO,bAGXjUu>=.?Wtqj'e7EVbL9.`\cfEbQb9X3aJ.C;2BM%*I`5P"Tiu;WOI;Yp1hb]qJ<TN[:=oH=Zfr#ZQ._3XdXG9,b4f#XM[KXj]]0/r$E'EDISA@RsAU-q,OMs,D5*U6CAZ:Q,m.=6D`KK%,'^e'f#t[49s];lm:uN_P.XE>gmkUN'9KE.CH:i,=84-*K,D1k9lT6XK;DU"KDG(ObdW7;GmNbJ%GoMnD+.a<KDl,BTXUMHqZ(sd%9HpL^3$/Rd<:P*_<Vo@E72b6Lq^-4,kDJM^WjAlL`)Z#DK\27-f.&7=[NV#fedn2[*^i:E_*f8U]m_p8,J=$S:Id@7S(Ab<\GlHk%eApH/n_K88Hun7:o:*=1g].9+[*^pkn%H:3e^HV9eqs"XY.<h'^[kEr?Fo:V^N4,`ju6'd4.!,-IIl9kCQEt)0ASVT_kfRmC6u*L%DB2unn`Z=jV-W8HkM3`Aii60G\CA1bUR6:i7t=k1NVNLp+*[ZQj@AcBH1pQJ]74oliQo6e9<UDN&!LU:B0<nTkGWjir:.])r=Dcm%7ea[p\^hYs.Xl,nJ,@c1rRuPeXE1:gkLfaA*Y.imrmsA@Dsi)O'\;$&Mo[2rCAqQ;2/mALd,&:q^--`GMqiR8g_9u]7Z,kEl:c]u%INQ86iq0C`C?6i-[,Y65j?&_jRU*[Tn'Vq>\D!;#S(c+YFAG;Sh>S)e]JkAQ?aR+sr\f5ukdMXl(VLXa*o))2H`_87hnOWQ=4t\I%Rk?2f5MY!B?M(j&=2ttuB3`+5^AFD0m+qLr?*po$/j&mk`hV>nM[$(\]AL87(G@8@rHA-$mr^@]QTMs?b0F)7cNeecZoXbt&-#k<%W;PrHiV;,t"cL+ih<CFl5"HIn>-)<(?2EuHqsa)XiM-)7Hd<J5fDG7/ZTls6+H&bWm%41bP5O)$mN+!-D15Qi^@5J>ghX-m(sRoc%T$u&EmXOh&DUBRd4$6:T9dQ3n4WM3t*Bm]3kl84Lm!S190)GJ>Ilq#Dkl&ZLfDa=T^D55oh5+2:Y>1:Z`Ja`J]QX%QYKup"(;50D%E9hDQ.-sT-PeR+qfDdu_?<"R^iH/PlET*XY40QQ*T:U=(MAE>\31X-S3X]Vd?gYKD5&)]R[-QMZn]+GEMr&O?h]u:@(M_@?:7f;N%YAS`k(O`Q8294YD+,`4L^$X_6F>AdRqOOr/m^fpl\%+pX4-Rk^PEC7Hh=Y1/n2rA=HS9m9/m))%'u&pTIUBHqbB`aIX&ps217"^.%_-a\NpZM>Ae&"NaDL^\">kEg4^itYO7E[>jmQ(T.f.Ile3k>1+rT*Ll?a!`e>kFq4L9DCGH>r`@+%L(nb0E,O0CLncrG_aAnY1C0%cL]?]^:R=VkkW->7>lal`asW\]Q\Y4JAEn23'Vom6`YIZ7sE^C^]4)o<T0[UT"K?A(.J6Y:[=W+JmN*+U;'.BX3"bYGgXQ]StA0&%,<rXcXJ2"DI'>\;aPcU6_=^G/(4G`.C%opp(+pLghS"=$J$4%3Nkr$1rlQb9lnCQOM]V]GE_:E?f=gU]C/OGh]3"H6.G](Eq"@`/%(VPq`$EN*j0^YK^Z-g<Bc7_3r?+H^HSUQ&O8*Ql-\hC87U5]uWK<-6/0qLMBHO3`(AS^m<l+sNs'c(X]k=jk5bE<Y>hYgkAB*`FG%MoXmmr3(#rIo)'_.XKdOa5cU8&/TJ0MiPjNAAn'9n5=/O8atmpm:j;Loj]SohTM\TO(T1J5:#&PR76E?o..S:DCrNti^`b0VaXZ_%Sbmp'bgNP5Q6/e=lcOgk@1TMGD_bXK-=Q>BN82<`qWd-91oHUZG^B1PU?c>(pE/2eD;j$dqtB7rMm&^qJ,dN-D#Sb:]CP:X_Q/%8%LYmH:Y9#he\Xd'OED1iSjRVigr<7C8pTNBPmeMO=Sp^-2S@eOkof`VY-gp)#Eu]OUo^H6jFIfL<lh[+@_Q,oi*8S97q!)e">BcHE%"kWe,q*"Y%iRL/jqrd\i?@DF/fD%)63leM32k@Rq0=i*!qXJa5nENA:h#1e=a**Ju7gFC!m_3`+b(JTc?$Nb_Irpo+]_^"Prj'/'%A+`LOf@Oml\/O.Hg3:8BRVuKFS\'4HfoM?cp!m[A]=_2$J+gprDsQY10bH@9Ai$Zge,/9=;qmp/Fp<3a>c4?f_gkEV@l/I)^Lcc!%2uOXNbiYbXL[bbn0`QNTheEG_>e8=/g;InoX8L4QDe(*bHJPJ.[X@,YhD]ZPGI9Sh4=:f'h>PLr#&\g5VK;nr*D7Vp5)P*P5T]gG%$r$!K/$RmPG@nOlDYEN=>m'D7\NQP_;;9?_g[XCJ::dOLF;?DW^VW+rAauMS`NKXc"Xil=Ru>='>#hH+E)C_&a,:`#fo(^iaH<T9%UW8>rCXM"(.po-2Wp&=klK?fXdD)CIhB9/g[21<>[?o,lpl;h&;&0$_=;:<lM#Mm"(Bmtt[(]_R-noli(,(Qms2%2T3uJ!i(=W-9%V:r4DpV'e?W/<%P78`e8b@408/@2BKbfd'EoL<)$rn9G<BADs^Z_=Mu$V&:Brqa>,bEJ4OJl=7Fg0-=`k25IX>0a,8+'6dM4&;s[%c/$Z]XGtDgKE($irau22>;suKGL*JdT'9c+D%bt-GL*I@GA_$*Wi!9FhuEOKKuMmChTHZOY&51[p/BG9QbV;3dGJh()X.E)#g<[D%fFmZSipN>cTNq-rb[0>lC!t]ihk&O6Z`]]Z0nW]?auu6L59>9WCJ'-Jo6gUD_16_&/TZ^,G&<6k$MLZ6)/(L;J?\W!f\'-Z:`t85%Ak>E^]nmilOKq_ES:(L6qrie/c1d5u8'@/"(!FEs^7$p.=N,C[VNIce^4<q9/hNm&ZBJ1b^+J,+hS4]dX7u'56f5@V`el1_i:ZmY%B!&gt,:/tH=ff`H-'Pms2ZE%oS>rlT\21I/mqsCRWEa!s1.g'1hu;?"o7_RIi9")maVX*PfD%4P\=E#Q`QZJnSnmqpkP'/No_8eg%:M#gT[XWWX[M`aTc7n_pR@[mErSGO27Pf8i4u_1SkaU_*4"TOMMqq#6c1W?`<;!afdU$28S2AuY.H:9oIsUg%'s$g%E(-BG'I(u:%StjI%@MVtcIdN$LrAc[fL/i[@D+%3_K`TkXFRBs'[mggD3WJ-n'gV2Req.bMEUJ"broUr3Ja3.Ta;AQpQTcEq^Vc4E8[9i2'Mmko%4'Bs1MXT+FcaWLlfBoZ?GK[B(HtE'C0=.L%q3?<e\U+Fn]tA5';Tst$=N7E/+,[K?3+d(WIY/)($dnRO!V@6[3%l4HIP`HUGUZgn%pBiXeHgbXRLrfTVan5DR\L;9C9@AdfdIm;el.oPYKro-:hF*RMc9fRY7a.50L1o`2FJ2p=ltiuBpQ-cs2ijPfFME#QCSqQ-ok9RN%hBaRE^ONc?=$Co0nQ@68"-aQ+FM)a]Sb7.;ZM^PM`N#:iZ\-/dV1HSiqfcuY/=hYDq#Za#%+i9&ZuW:jZ4:GE]_I.]:\J7C'!hn,%G#WZoNZF-E,0-u)D*tt]ZZVX"_XUmj3k[WN_!!b!rW;lM01lEb"gisng2$V,H>/'RZNBK&Xdjiiq4hY8j-RNphCMO$o@UUE]T5Q0%HRWke'Ao<A0.pU72u,/4AY(u--cRaA/0bi6LA,aYTho)sDq!Oane<a4LmI+I<*!+P[1LI!Q64,1'l%Y1694W0"YT*5I4S[=g`RuB%6cj/.Om29'?;6Gp<^@[RH[mm/hI(m<71G%U0.i#h$I-Tm"aR=7m&98eK%*jDBE5?h&lnAMFD&-g?Io0>8.EAGq>Ok"^0-*MQ1^N9%M%s(C1\-ZU>3l(W!?UP)r%Wl)20IZW-MLE]OQhHL9RIW:j<4>trjq[":TTj:COHq)R.dI0$(/,oMJ&;f<*\8<IiZ;7R8ra385!"&%$a]9OeKp=2bNi/!QIQThk"E"*CmL>sEtskELY2r^5uPA,,R^DNMPPHGj"e_Dlq;T1DL'-18U48VcE_?`"3MQ*#Ch#V+P!GH[p/1e%<R.KpW;BP;Q<!1p*oc/HMuR/=GAg!2D#HPKhn]F+2MSY>$73M"D+l]na9IB0Hsh\B_Yrosc[GLk^V+hkm8CF)eS_"%esSsF9;MtW%Vcq11K5I%Dlg(d,*e+WBV]LN5MJji5L@9sKIJJ(gQ$.E!mn=Fe4@#=S0&Q)sddufGlXMcDQ0IlXl<bql4gq7L(nkcN\HLmYN[B-5%H9(`Og@V5d`q.q^p]^J6#]KA0gKhAA\"KR_.@BOB-P^r_@/uW8Y>e.Nc@"9a]Un)X?g<HY5$cb,:.N[UP!`E>jg?L6LLAX]S\K_U%3S4mRkbU=oad[03U\T;oj(j,;E0@S$US<B.OD_9dJ*S@u.pEd;r`0Fc#OtNsQQ4C(XXkHfTMq=4ns0K@P8]VUbsl1%4O0Z8aJ/lR%161@>niYsV0DC(35@LcA69(SK:#gl(8@pjfRVJ@^PbraP&Va"P5$_?[9nibg%0eV`\RU"M8d'/p:Cl/OV1,!t8>K@SU](+t2TF-n%Id..,#&pr+*g07,0p`Cdj_0]"8+Y<t4;rTkYh:"5Bj_&MK,pPY"ff67jP(8c1j<\u383/pn&CcfUQ,(%Gau`5)Fdjlp.F@=M$BN]%\f.;&)bV]F["1UN4o%"\K%?X5aZ<%>k!>GSl"lqGh`,#%#%5,lq9Q$mIPs#Z1Y["nIdbl6@V-/KHu.@Cp>jk29Qk-HQd$R,q]R9J%-Y,jtQM=l&'R+;_Uo$<c1OGX#WdX=ajG.a8/=lo/U\#DQS]L]pERLNW5kji&BEAWd'Y\=JKl2>)cn841kb)Q)dI.g5^-2JRkJA"l%Z_p1(=its9.h/,rV;G)C_.'Xfp%t'\P@WXb;@KH]^Ir?IMIE#DoQrGfOG/IV@Pl@5rI30C_0YJdB;dYW/dmNR]KB:u)CDcZFZ3&h%?ZFF;8Oij^R@&aUZ8,"CMJ3p@]"mVR;iX7ajd?.s[qF#&nPsf2r,/`-WE[V_!c:`Z[@X[6K@F1VP5%YA7HDa71l0GT6r,btIQlGP%ijfth:=kn301JcUcV3op$Du(qfeKb=3SG<\<t5d8k3B;I^$0h@R;4tZ^71N.[ZprNleTm^bI2PGou:m$[qBA@]c4%4H2dN_;0YXe%NnO5-N1M"WSE0"`+<N-FejJf9;j2,;,F6"BIaFkp@`0+'M*tt(NUlFFFm&'Yb<jL)Wo\\Y3-P#]?a#N]H1L7SZ*RMh=/_V#2Q;:g%41?bI6`6d5GQhBN@d)/rFOMc(LaO91%:/EmWIh:^>&_b*]'0rO\ls'8)S5/JFG\SX5RlQA$G*$:E.Jq=knS;=WWhRcTpo@S8(E2]%:d[2?3N9,e\;"m[E0CX??s,$_6T;]1NqBU020;DVnrsKfqkpkMC"rSHnGSV;SRe&f;juq7h3snEI<o#/e98l%5'/RH<`f0hi#EU!%l$]h%9)JFE:<!":\d9=2hP]tC'6Hra7>$P+*E!<Ss6orN=\b2<`]%b=l$6CKejmHg=d=&\f@TOtNRQ)?:#D=f8j/H#1H\afVDP8_%%VqK5BPnBb\^j=UM7Ge@'i=jt.i!a/a!N-cbjRIXEuItiY_E$U]4Xo5?eWrD@^e0-EaHd/@Bqud76SXqm+)u]8Zedk`GYYJl1BLY%ig/2n-A*S@kq"XO>,Rf4W>$C3=IOi,O%4$CR=eY-O2H4ng[2P1?D>S+ZhIbQT0bP>M(-uhh&0=;38:lcRl)X\*V?UVf@_^qiMYgb%a%bRMI695up(.h:lb.%7D\\YfPe)!F1Y&YEFaUr:jhT2>a7jIPrQC&9C"6RZemAP9?'QJWJNn;9j,(KA?(P#ifmeH,F5R:9&\PlM%H8$_<hp=Euk/XQlQtaX'AuB.C,HDCS&L/BGPpu;52B1\3mo\j_?#[hrQAH)YAE7EZg9K/tCT]kU4e!cZh<6-8:T3=mVTY"qI)jL5%5jAk,q^n_tbB8R');s!6<$G*Tif/5Kj$.IZ;YQ.O`a5nEAf,k:D@AGsq?H0G-luiR=fkQV3JXaU_b0##F[E:<g%*+_1m?#_-#U&[%$qjN)d\oe(1#g4"ITh`ddYosE!?k6Bd.EVO94R,7'Ku$Bc`pIKeZE0\[Tl6jqCqa&S+F17-C@E,.Es9&)rj!X'iD^m9(PF6@lK0@%I&-LCII,j\o=9)AbNueX7#0WsO#&m-9-$s**sLg!a<X\VlB0nubWP<S.8riqH+"EVZ;9T/.8A,`T3W-iD+`X@*M\YpQV3L%_BX,[%4>I:VWB!]Jj8b7"`;!r/kF=XnqI:+uN3`1r/aea@"0>8>m[0aXm4]TLZ"h+o4YeEQlZct:.T0p0kEU+6A1%0KD[e,@)-38[&j8a(%ZS?`-qAug)aAQUFG#Xe)o>ZP6bJg<ulR)lZ_t9D9n$e?)P6'iem]TPZj4&'A41@6qVftZLg*%-^[<t7@=hf/pNq0H[e:ib0K!Xb-%k"_?ccVUIL\q0[';sW^Jl0+@(iRpuQgJaS@.I'pEjj[8Cqr>@\!?3HNI*I"F@a`ZR_r3+9O]+3P*cCuV@u%%=S!4))s3"9k__"\t%0h4C^ZjbK[X+u>ZH9hlX:_,LY,A;!-fAZ&SP&)QHcDdSAL[4XSjbgRCY(rM"-/_>ZiKB#IJ5j_0e\cNHZ+dFP.bPT@XG;<fZCFHE%<14KRVcsYQM1"l2:ep(&gAguJ=B#a^U]cOnX3kXO1UBi+i&F*h8:!d7I>l0+JkE2N9SOuVn?Y+nMX1*Z@cR:0l7SQtN9=+EVoLQa%:E@Y=L^k$jH@)5H=bI2nnWEAl/4tY7Yc2JN-Ln?I1>MglPROI'j4Nhrm)=g;Fu8$*Bq5"?Vl(ThNH6A!OBW[AUtEn2qHF$qFOTMJ%ZQ=#k4L5u1lBUdZCKrqWm__B]g%<9Z1C`VGOd[@VCk@IHF'iG96WKqr4oTam&a@)ge@3KU%<390..oZbMU[st7oPP-EK6b;(%l$o%=/9;iUSp`&35aH8G>.!fH$r('rCp5R:,6!7/#T#&iNn6[YYtlfR?&A2.3.I@:X/)`MGgs@kAoX[E/40lVE6]lG+Z[T>bDd+pE62>%\Go/Mg]XgtJ"[QoZ@?\`IC;431"<9ipJ7A]q"1gM=*7&(pf&?i*6g0qL*h4TW+qDaEI\-/KCsGsRo>([CGJ"jE'[L!mg]cb9^C!i%=SX5)(V_`;\@GgFpTh7K:00E"n)soE&Et"?`grOi4ZNVUipu*BO4QT\H2DpR`;AHD[bI"4?Yr$=GlQLZNF/S'kML`1amRTbiEOX3%rO@7:7fDQ%k1.l9k2t3RgUMppiHHr8<^*E[(6;BtM`%L!$s&P@.)"iJ4)=gVG@.+H>3pE]n(o)PHr_>k5+Z*Vo@UOd$G1?QfsG4t%pD^dfc*e^"SQ91.EpoV^Du2`pB$*WIT5E+K]<tc(epf/&>dr@fI.hP-ge??L!B\"VXk53IFZu8Na*7MU?\Md6il".]qdj->gP]cG%B4%N;fR8,=W;!':m-K4LhtPOsl1a`HorS1gfC$A_hRgHK^D?!>pO2\;[).hueIemaRf4UXIW"(bk9iF5?A7I^o&\/i&^.TZr1&Sg%SU,l3HIl@m(UnmDmL%HX^>f5C\#BSDrfu)u`/*j]na1!^HY-ohG.f7$pK/FER$*>b9psM4jO@=X*c/M2j\9cZXrWqW;e:K'C"c:%%F*Z_NC^j.%S5B_e4X'"0l^N$Rgsj!NiV57i'"Qll9tL(9en$'nf/NT0J\dg>l^j560=:uONuLhIfD#.q,3hmH*I7bBFAM@6Wp(#V%LRGW?DNZ$un)?I@C:\up@2>rAS)b7Ld`^Y#FH^J(%U8b]?VNK$(I'q/IZ\BVA6X_!-h\WdW1%VP:bt.c*28niO:liaC:ZuVRNO,A%XI=$)/Y0?EO/A@`;D$_?gn$O+kpH5[r=/*`=%tX<FNN!YUt'RNPT-/TH8O/oPA9?.]$2m)9fG84O!jc]V8H?_9i=`Q<fXb[DUS>T%aG*m&R]\a%bWCLh<DD)C>97W=h=)FhUmeGB<&Z.Q7+HC7g9J2hl)*$6*Eb8UjP&moY,7[FJG[J$=49m$Q?70*O._qZ&pm0Of;#:A%Rh6MuU2%9mo&V:"kpC7:eAdQLRVl.Pf?mRH9rb&U]oR)O"7U+`!0d<!k%``%IuDqR-'d;u3<g6_*R#Z"AFmu_I<X?ark>tK.K)St%kG[jMldmbDmF/93;fh>)gnc80&iH(5'oRVkO;',8<'BtMW\^KFXC/j2EbSqH:fG5k\Ok%gmIIV59hqMJjY0X,C!*j,4Y.7E/@C9d%jgT\^/>D-7qgHK'k0lJ7iO5h%(YpZjc(4-@2,GS`bVaUX\'*SK<3%kFR_-:+Y$m$+K+]H,k9n<.mM7mblau&0gbL\99/Yq%]9s^/%Cs9cJgkcLsrM$oXYIW]I[i$"<%1=5*^O665Y)5l5oBD#i][#O1OejIS^E$>B6eCn=V-R1BMP%RZ*aDN#1\Yi(I\Mc2`q*.?r1HBf%+W8NtZRZI]P;icu(V6eD8NWFeM%%#FlhX7/H.WR1m`QtQFmFn21pqPPPBoUh`I"cFs)Q2tXs=t/+k;O!nA3dSDQ'!!@tV+]ggJ#T%\u-o6'CS#Gb/_Ig+h1Bg8ipuPrINu;]%_AU-n;RhiDEDoNA=PV5-\"1FtGcb2Q3jgmgb.k@I:t9j+XlO^E-Z^5R_f](E!mH\_.I$%Am0BNDWRWb><2;hf4d7pVoM09W5KY$TUonTpZ56?s86saPprEunbeiopeX&eO6Qp:pP8YE+l^>Fs*1])Wr&N/\9Mk!Fb3,OQIS"9%3(M=AJB(gb[V?l&'B,_sL\'W-4s!PA0NWpOD1)I'4rI2<0ZX@2n-sTU^9[3f]0h\=K]J$.hHN/#%<p8N*u?%eO(`ROh3$KW2m])h%fM-XLee<b,neNUj.6$%YF\+sc6On1Th6d&cEQ?o52r"l0C6%SW`=$Hg*^hl`c[$U:=R-0\Xl_/D;0;SN]#,96Ft4Z87K#`T0>'*G%*.#=_=#A2GpuY\>#`NgMopg63@CFh4EVaHZ4%2h9ZeA+"Fa<T.[neJ_dSWjqLbiOOG]%ZD5n*6uq0V!'Q8&gt@QJYj<S%j`;J\lA%;nC$f^=,&@31&JWVK8ej.b(Abm=?b5XU_&I+[o)&/q!%9hhSTiT?UBSe<`IS]+_)5gA)H#B2ZXZ5ZdrF@Q:&aij2q)"6(_D>W51O%?,^3db^1Sj>h;-e<qbih]1:JAC6tZ57o\N[gY803IN@S,cag3*S8hKa`Z],&'n(fnMucr)ZYNh%PQk2P:TJIM%hK4[a%lW*=8btc%G2pH7X\\cTeW!d/[nc;IHFU>fF_Ug5UC5u9XOllIfC)X\htFCCg[ECdMoW;/n;qEeq2XQD8J0h89+UYbPBsa8Q(KFqm,$?sWq7@@%F.4h+Hg9S@qMXilr-i]>:O-uY$nj]u=8Q'k3,'J9rS:P.pTjOgDCro<^DFS!c*![`rj_]tVf'3fIH\:uD(U2n<-#qe^0_cNdBkat%k:-9u]LT3i<&q+`?@)-edRTX)Yef-WkE7U5\)#b&]tLoT]\i>.qSZ!OGO%uq_0.?g?;LC\oojOu8$Dr8iq]C2d_0SDNMNqeqp>Yt%mLd,1V#R4AY!(W:1:u=S:ZChU_S;lPoCqJW)sQV]4BH?2^!Gs>b3[C;F&rR)\:3l#YA7!/\i&rB?)9=[CW+tk$I?sGIc;L6#,Y,+%9s)tp)O0#d2EPo!J8BC=?g&7`c1I+iQR%Qg<qT2oR+sp*boroXZO<7O*nALdjNsH;1WrTjdan'?WnsKi]:$Wdi8HdIB[a!L3h7W7%W(NPATujpR1^p!;6*GRc(VJ=t]:8\``L\N<ASH;OAalSCQ)1mq12TqfIcC1#jLAcNSsIT5/2t#TY-,INGWH:??Q6a9j`%)M)uJcJ%f%2^*Yck2M<V+5dZc@fC3#kbS1tB9%1s5FTg*3)$@nkrbbIBnS]1ic<cdgYDe[7bjQI@ITVug52$14NpEP;$SZ`KJ_??&mPTZR2<%1hgJeM"U0/>k]92F-u>>Z]X-_G<*lUUY]6pf13jqZ'p)h>r&ahT7=;mNpbrnor=5]@gN:1RNM.e,<^68S\"<l5<(W0+kbLr((4Bj%2SG8fXr=?aY!*)*8tGgFpXc>=Nb<+eacoc)^-o":e]q;)q!$ji;GQ'2C.]r5X=K9CS6q5f^V;tE:hMI;FRD#XGg";NK?^trk>\q%%G0425WNt0:c)g"E^;r-O\_rLm]ME1C*SW#Mp'`i[/j)]ePT;hr(#[FW^qkFiq?k.FeGr@d:*3:934&m/gn-])(#[FW5i(C<r[P^W%21Xbq5'.NIJgs\Mb\eKgHrY\aCB1VLLT^c<q`13cUbu3E<WN]4!=UmWTrJ*>VDM<UW8j.*TCGo5IOX1D)qc";PY\FC^N_3bQri7]%E[fnI)qg86;Eh6$RBE26IOX1&aonj9a=lWo^E<9dE@G8prQ%KS.Gpfq.i5a\:O<g1WOd:OZ:2)lKDTT[>J)oEXeY(h2=Oqe6+rs-%^=Q.4m0J#*p"epm?_5\Sn+E0!X5BUs6VY)BDn9"`Z6_^7]mc0-Dea3h6epud)j??B?GG`m+i/6-i4XTG._1S\Tf_pJ^SR4+*4iiX%qFt=#a*2OeHi9+aN8<cCL`8T+hWm+K6'F''%s+r3`,`e1?-S.Cbhu+HM7oPmENe9lc<h_A^>Q\R;[(u(8[0MMf5J6)GchNU;ss=J%DX(!@Jj.,dIZqo",O$e'+5[[[][(`(ht0e(k<FiNrMBg!Q3NDV8E"p),5&27qFsdDeZF;sG(sgaHi6!9R&.:g,sAm&/l0U+]m_d'%?B=/R^Zi6("\`7l?GG_2f;^$;TmQ`IrRN6!m.@hLoY#_&2iolK,Il?D$Ea:)<#j;6I&Em'1AF&I):ut>^5m3+Hi:f0'?OnDC6#QG%rMJ(-bfmNOTD)[,l'a^q*ZW/4IXO!La`o*$E:mE;e9N--S4/1=me*%jDbdVE%Y(Zh]%^M+nZ_cXc'P6RIimP[OAEC:Dt3`"L(lAe%lJ=4dX"iL3I,0\0`U<Cl*8=u4qJjL$iqN;';Q4C)MCs:[hfL`R#KPu@f5LMfILC@:P'd-Co^r[+f5Eq1lOhq<2uQdl\aSQ?<#';+%>E7V,GPGWlFfV/2b!Pk!NOtAHXaY\(cK;glDgH_27uA>`?GG`]:*#tTU$qZDE%^EV^Zg1*L>V<@Ge[h$A+S;7p"5N;h!5aof;)XL%%\5c8\^taL7]77k(;&1:\mib3lf.[89eV;;M7i>kId&&g\,)*K@tQjGV>'iZ.m^8SbiiRpn6Wjq3m>J8qWX1`&)^-\Y3hq/anPX+%(CjBE301-`QKA+c"S(u/RZ;R[n`5XiDI9B(gek=$.il"S[6$PA^/MJ-@$AX9(qmJ)iOc7FBA\r$C,M-8UMk-^ZAj5.FkG$PM']b)%'=Dc@kJq(-XP>kFro3@fCua1rb7C;<lIa3?(N5>>eZ["Op0N,"M]X$ZD.!5=GPg"Pe#R,rXIZqKE&G8tiU2sE#J[Ina'QK.?atU!%\\(ftkAU9<kMF%-lJU.ZMkq.mNQSrscM"TlmEpu)e^!jYc.*&k*aa6nn4rrSj.lRbe\RI"rVrC8H=a56qY0c[#Icpgqu#W`Du5l%%^E1%r#:i"kJ$&/\H[>G7WKY<dom5^a05fWOqu-''Mt5WGrGt=&<82]gnY:k8NfDUs>s;ja*'@C(ZT*(fgV/"2C:=)5]j'1_qMtkG%I_9ArJ,F,ShY_ZY<W2>up$Tft:hf`=rPHS-Vk[_!4mpMMrn[A>oAqo92V4PYg?NZ!P15hiJ%kNc]s@CaG8Sig$:rr"q>3n#Er*r?%SQh:9M`/I)pX^KHQf@)2hR-6Mj6GAtqtElKH2d$eafdoe[f8&CLYjIC^H_E5Q)(m:ETj[bB>0^VOfrrk/(Gmd]<_D!d7SS&s#o'4%pV3OSqtCTr\>A$=<(1lUhl<")f\3-L\6,qNra&d]HG7)mN%WK4r;6>CBD(**pW"q*r;-$9jc,o$cYp9?52F!IoQ'KED;3[#f0;KF%p@?@cqUdkgcBA>p/75$[R]h4H-tV1^Fnts\Yog?Q.pp!kPHWbjqXjIW[3s:<i*UB<pHO^8[!RPPqMWnl&$h_2NF/a-7X4li3UoQr%3p$C,YEJA,m>1`+IbN7Mp$3I?c0t)`KepYU:7Q?&m)9J?fGs]'[l:b!R6-BIp-uL)F_9b0p?IX,2tJi'5/-_(]tL<Cd/J>1riiR*%Yd;'QZkE@[<r_ELh%,"fd!ti)q'#YZ=+@`/o`3MGG>E#,j4/AG0V/4!1\slhb4g@T]-FoE0Y_VuEX%YF1;@gP]>,M/a,.NYb&:O2%J=h>UZ/9t3a3O[,L*,)1C!VLCQt(h8YH.KUfaBe]g-FKBQ[J8M9l/Qk1@3k)O(h]1[JkFQ]=j6Y@M2<]c.^h`gA`D*/S=Cujn&D8%o*BS*\GCLCiUiE4HiMdP\pa2&_haJL*-3nn>UN[F=3]HYm6<[b3ZM@OfY;S^KOM&b^[@`L^]+!!k/3I>^JFiMmJ6YV)4esG4CYVl%qtI/7S,^.WaKpl^=+s/O8#=pmX\3i`+5PDP[$>7hY>**TV]23-Sn:`cqAZoN4j??YVg:sui>_brKR]7L`3o2DCA7>1N;.^[:uM/(%J+n4(rh])o$*sS!*.)#U5Abg0H#<$!6(;_=qR?$2GqKnMAnrc`b^=lLEpZQ4k"%U]E`+u9hQ0=cPo&N]UO!K.kO)gPpF(Ktpg`\t%#+5;6maG26.hDY8qRJ[09#/RUZZ3G+p7!GARp54'g@k6J4&6cs.u7$Ze;Ccr=]u<M4_T0'Y`lr=r]%@[kM:/mjk/7G;bnNu[uR$7%CAnq#I.>Z3r8H531C)h+i=GA>Q/_bI1O#GH3-P/V`"+0)EE8*\D>XG*=nO.akGp;;Hi'_-KUtqEG^*D:Ua(%.HCY4#B/E"rl05Ub%gTT48:`j-Xp5N(H=m1A)L#"`5T7Z7KCn6!Z:-:9c_R%[=NYj)7XCpM5eg-@ApuZ*kZauPjDu31t(#EG_D-SVnObZ-ChQO)R,GK_e%Eq(,$@l;$plJ/!u.Mjb1+dcKpK*1l>k!iCb]+(4B4\D,T[WUo^Djbt5?;@d/<;27VS<*+7"h/!%(&iOl$uhc_NLAJm=!KDp]1a@C%p$_'/Ed->hm#rBXDa%I[GFSI.V]4WH)S<NOpt5%,QkQe2;r%2VHHmPuLO8T5/>OEVPjXO<FG'7?NIQT+E$O+%?>XAZ!^Y52i32MG%b1A6>plBR"f?b(Y?@&Q)\G>^>-lq7+`Q,/X6Nqr.$i8pol7`eBAA[f--QKMhc"c>^ccn&<>I0pokIijn?V0Pi)W5fp^l:Qrcj#><%JN_s-#WQnGim-=:W+U89EotA&r\Y%eN<"$EIcfSi[eC$uUhk2G4Da:);:SiR_'RcQ]M<UcG]h/C@IHrTGj.&<np:%nBOOtE:q?9,%g>aou/:-XF6X2g(%"HnU[8K&=XIoOjpoZM95]&Is^1oa<m<J->]]rPcE]]/ZotAIk9D_=Kerr=iIds1X2lVFc07]NGDt>-_d/2G6%"%F3,`>7e<pPCsEGW1LI"BG?fW+FEej^:g'rLTs5O5`GNZbBZqXi,iWK9*co%YC/.%mPlq0p']\jBEJ\V&nXoQNprTB>$ZO5=.TM%hie9&4s^*5@))&;F*RY9]KM/]na>RjXe_H#H\_CKEuOlbFl<8Bn'fZ<ka(sMpE49r`;MCch<4==["f$\qfXNNa(q*M:XdVSrf?*u%;d\%PDVWq$e'IEqAA"YchgMIOp%OHqs)A!2o(1hljQHNGjQG]9a_[PrmHiKn\)d#HIO%-B-A1.SoK/K3lgMsAG6c79r?"VnnAX4E%5Eh_3P-K5GVITWsk.UZh\Gl=%`/0^.hn;[[nnp[[b.E_VWnr.r-M$S?16Hbc^V0FN2<WSfFh.QZH$`X7AGa+o2oP'W4BLgdgQPuN%P0W.<NnoT#XK0ZRP:CV(/)i43ib-W4Dk)^=35,hNmSp::WJX+_f,=Cp3?ilf'OKN"p;5#4dZa-$]b4;IL2$XH#d;jK88!g0l6oEt%&*DB<SW!IXgEZ@rAX-NUan/[,"KnA$,DiM:I/WV^gcPJrle?(4+6^jH#M[oC^%M68%*Ig\EO,Q6$[h=;@tV%WlM(!R.mr+L>fT3E%`.YmTo;l#(I\.BMiVq,Y*hbo:p[^ZT!L8S;G5iEjlKkj\,HiJuSK+bgo3h;>SYc5+Aq&T@AbS[dQ/ZOW2!=U?Xo2o(A%d<ZlK@:t%UX_/`k"\)"Tt6XtS[bgAp;+`m_bSK$E5Olbiir+9$g0FO4T=C=S'@#fp@g(uY'bX)`,EoN(T1Up-Elf"qo9YBO,@V<l>qE`F%5t6%hE(7<jHQ9\&(h&<5l;Q#lg=3iBB`dNpb5dA(H::?giZ0\k=tdh*O6XB6Ud4a*hZ;i7rEkC:?QgKf[+a[BAM3A<r$*@:MsL#q0[L(%!\1m)+*`1Ts5?<_XNi;sjdf>l[o!\0`r2T[IWfMem@V\,4SRh#WQ3bC?7Z%U*\d;KFc6uP\cdfVT,K50^"C+/JTk0jo=qHA]X:N7%68*pMmp@.DJsraPldn2hWLn[NnTjFb.mG+]rq"REo#g?4fa0[fmFTm1gX"msXM=e,mH8<H@/^&uCqh\gp0Y*'!kgSZn%WB0IJ\L1%QYb,Mb>$O>jc'M[5O\W^pZ%kVs*S*9ZZLY1j3#V/J,K!<\*Y:7qiCINn#rj3Hb[>^J,Qd&DL(9b_p+Z0Rqc_gn([a<AI:q/Df!5;%1GX/_&iqG'fSo0OgA4TlrR6`>%kbNNqG4PH;=PDW[ap<T(Z9[cYd=I%`1P(Np@I%Zc@#Qa+b"=8cGJOsM-b2=iR90_p4$?GI;Sr.%cI7dYNQfQ1o=JcC>L0dZ)ifX-W6V(aj2Vs;hqU("mHr)`cFBKnB>'!(O)u$7;;RA5mZm!@EGISFeSH3eZZc."HWJ_t3e$hUqVLH(%AG8^ch[#(,FnU_C3O&HCG^Jn/,>)(t#XEk$_hX02cP@u#l1g(kAiAhrc40UV@U#+IrOYi4^m`X'W<6B,E+<1&Sm+?.<9AWR4`I<`%+o_*.gb83%3D,0L=nADHG"p)-[=X;Qf$tiV?b3amet#HuredI3lAC'>:7hK)`W)W!;rHSoR$?r=?bX7R"ir4mmHZ]$E6Fks`;c!F%k*dNrIt&,?d8-Jc-b:tOZ!UEnTS%(p-TLMgmJ^,&2?`(Z1/E*4-VWs=UV2.qK/J7]cON^]T9"%o!E]Q^Io1%;H2%[]m\=pdQ=^`<%]+]=Q2uY>E[?jpMDpOXlJcC^$Ok.eHlXiWsFN3>tkJ8D>QDQLug9'M@[^j,#q:,D=Xdec4*:l5.ZTS#NfgG%,41j63^HNh)[JRB@%97O"ileO]>nY1]MHb:M8s6a$U^Y?<0k5P#t(P25HQ+>Q(2"%I%]g^RPrr'R,+lm<$4ZLW2!-07<cY$Q5r:D3)s*Bq\M6GF[:[\\a%LKDNRf5<19fY"b9Yi;5$?g9qgQM7WRK&V8>2*^AD^RgE!^$H'2r-FXifCR1dmU'mRs0)/o;qVh8p$:LUCc9hI-ekQN/tTOJc5sa,%rT;Bt)cD>u*Q4b8Z%SOKHBeOtD]dfa?G9)+e@@fXRI](\Ws;EQDu;Z0[GEsHJg,>1/!i2DI_XtCFQ_6+n$i&[\NaB0[,%=$n:'ut%>:4;n4?3.JVqWb(PRkg>q1RP#1Wt/mr"a"!li%L:(EJ'faO,$T<EVl/W,Y&h%uS_2]S5'H-5!hEV6I^UWs>6p>s:p+9u.gA4*BTj%#661Vec*Zs=2un"9M?i5c`>5B4)kK$"(HQq'>f%\SOagUs6QhZjWGTn#\Q>+f^RUL[\On4q=OLJkMopYo<Tf_ILHgu26CZ\*$:$+%jfBi"g)\<ST[mJ:^QId!S<4Bh<g.2ZG;BQXeN7bedui6\0o+6)G,h^W\]`2Z;NX(K^[UaHHganiqd\EZI/@XM.@\RPn&dAooSJ4s%pDlK:S!ECQ^Ydj3R-mm:G3m*6Q`4leEqd9hUAD=S*MU(>+qF.)*KuY;j`Z<#QFYfElVhE_b>eobHe"\1oiE4jW$Q3\I=#p:@%WI_%_r?X+a89E1Tj=m(oj"Z4WgB?LId7JjIG=^O'[Q[6`0Hh!2Q"uc1TT4[-goPeg>2W$n_HBQl`*/cD@_/^N%O=Ir#tCeR1/Y`]lX+a%cV:K6*4V^2pq/\*W6b*\K0)9`F$D$43o0$2F`m8G`=qB.+-hK"7s#<5A!$7.Y.m0u6(Hr]EhDCII:];Ar)=(6*-)P=.e!61!q,qa%qI"XS5j2_C&Cc&AJRsARDYP5FLA8B5rHcqjT]'YCcMgNJA,TqCs4$P^.a>52L1?.#iIYTrJ9'>&XbZA^VnT%SXg*E=.6Y6\Nb%nQ%^u.+ZJSYH63&K'Ta8-ZgqhUa/OOh`SgLk53&aO).m1[6T)!bh5m6g<f6X)cBD'+/enCGo^gLk4DlY!0`_`H"MXe2;q%sI=/f$@1I%-TL]-Ac3%FI?mnLZ$qG]52&Vthtl<]fhR3TGN?Uno+LU)F5l%jDf7c9/e>WY!$e2]^iD;E"pQaC.?8F1G-img#X2)(Ncr0s3$n(D%j^Wdu?&A'p).NI'ceeH[frku8KDflRgcDFgN`B>r25r)tETtU$gR[`N+!-=@jER$b_[)9F(`0#!3hF;S:oA&W@e1ec+O#G0npMln%6fnR$Mfjg,jLgQ*+0RSmKgL';m.C3P@`OQ^82eK0bML1JIP54!U`;]@YT`2cci83/l+C6BbrgK(mH],dhHX5eEKGtQ^OC[Q"4c_<%q]Gh5](>WFpO=aUbP]-!r=Aq9m;d*5AQ)Us7g8,%];8MRFu`o6hYFainp9?=O'c,km/?eDgXio!rce/X5gSlb4MJA6Hu>@EII3Uh%^V&iDPJ)-8]0EF6Vu#,lnF]\fI)Z'ag&EW%?98&>rTg&E75hFUP8NE+o'60(G9>YQHYqFmg%+9o"978T9]kQqqd9*XQM\_;%eN!/%jmnu((Op)@mkNmU,u\BMd^I\HS_I"Y)nZ#Zacu1ka\#41WlXQ_+D$c,;l6[$Jf%_#"N_!\QhT9^c)@a<m9oUcWf(Egb,PH7)V(^,%!;DU:"/$K6>I=$'4Yk%8CY>X7)E_S#D,qFqF]OGV@kgeD.dO*:Y$1SQSDMCYVJ0dsA9Cb[B<kBEh0Du%Rte%cJs:+X7gRsm>@rd_%4]SlWCTUS]3Jbq;>(+X]MC**FdcM:9EN^1\>CVsLENhqC;Df5OHt6Gf>@C#j<P!V%9)$A8H,kL$;-VK.W_m>dgWBT0Q/eQa<+=[6%R$NK,7nm.7juQUF'UE,q=W-sugXIRV1f@Vd2*jpj(A,-a[lfA]c+)kL2/Y`;LB<6+F)N%V>6_mFWZd0[9akppi+dTnP&].$b')3j%NI.]\"DCJ]$+QhDm>V[iQB-pSm6U<-adYU+jS$qD>5C+#GYM&`PSiM@4+th+^Wm8]hAq2^7R^'6=,lc+VkZ"bD/CRY<u&+*`jc*s%`,t1iP]";Ii\7c?-uSTQ<EXdj(2aQu/&RYjK$d'T&?KUb]\,8<EiTG`rNHF0F]fBR/TZB<bmeNBqkD!iL1$!.APCV')8AXJ0r>pn%2g0l420\Cef''$u-uUV!OP^6?22@-%`A8WI"Ji2W()sa'RI$NilF8mfkPeWH"n+c^QaC52Bc`Kr4Ft`F*=t/\'NH^e"]/O6/NmX(%0EZ*963RVq]HAjH_3M$r"*K"2\<1q?m>AJ_JgiK,(q9nO!]7A\RhPd5R36t@=:!r8;<RLH6'!i^8e=XUAJF7)bSqn@[LbKDFH^8>%IGZqL/<q.n>F@>n;dh0s,]DHGJ2D,,5TBj[M@!>"9EjhhLa`U+=eT4@g2YoZYsN"3R4;[?6jl)h/U=K:15IE\9uL)Z9A[%giCu`d%j9VVslRG?\G3%:*,>4V<mf7>Le#;8n>Z7N`$^rYa*jH3qd[F>_VVC(@.I.+b_^<="4DtT0=iSMCCY#%NOh:n@/K!f[K$M[trFtnH%K@dQnNO!\4$c=PiD52d%Un$X&$@t'&&6OR*PLVM]/1X@S)2fd@P#kdZOAZ2iQG_eCn>g[&gEDquM&I6<!N7"#&0PoVMBHdqYR<^6%bGa?ZLr=65=^.&F.EbE)!HJ9O$_!7m0UZe=[?_B?@96Yg%QjJ\T6$KoB.]%O2J:O\=rKsugih3lp&_>&`mRen/IT77%_K'QNn_`5%-m37]iaFRPATjEJ):+k?kLh2JQOC)%9Q7o$`.A.uS,b55<\m.I$>@(n.R[F()M-&JEI<JTAa/&$:%C"DX)])7VZ_g`RVOs?kCu<8%,pZ6'iXY>EpKM.Xc8g\p7(rZ?B\F1Q`$ka>j0)Zl<RIDJYI&t)NeU9J>V]e4n'84P),lKr>M5k.<d;an@*#fDBGjDWnULc%'Xp][%.DU`E!7EjP9TZQZ9);e)RXuYb*gETY"6hg(l(f!7=LXgUZ#OC)"fYjhCDi'`aq"Jp$gMg6pM;@Lk7FqpTdngX[)$<@1e_Y9>>/0S%S&MNe=^Hp8QtI^^?3-&q5i(QrSZS`p$P60=q6^4'1/^]7p6A^,/l`;!Jt\)H$9Yu`f$ofNNX5#[Nie3`:dPLK8<FjN4mlith8-Ac%4cbC/CKan65ZK2ED3jGf:>^69U=h+TpTh2HTZZYg9g@c*:B/lN%7jciMZ5b/;.jHFgZAX>i:GBHQ;0Z!rF%07<7Nb,Oi7'i@?*Ba%MqL*]e)UqZkW<Yc%5ANI\G=Yb,?RSMR+p6(_"K_P9a<,:RRaQ%XJ1IF5dZ`9=snQ./>q^#\qqC@@lZq-+EAL(J[>KsnQW%;N_SX>%6Yb']R^f9LMO9j%+>RI5@Ods:>r\l866OQp()deI3$=T-*6I0Kdrl)k4g4;FHT\>;\C[223-.?8l#D,*!,Pf[RX#u1W*;tFqo?>1%k2<`emiV"3L1>hW&bb$JJ1LVH4D\XZSmlq#S2;?bk7e'1US7?KR,_[o2L[333VC(nr2-gQ8qLSR_`6Yc:IW8q<ABLn(b'9OO^rT<%o-gfq=<S^8e:n:U"-OZ6%ll7?QW@6P[1t6:ZSYf[U<C@m(Ftnf)$o'0@6"fgR/sc;UoJ3Z-EC8'Mbh0p!4Tj:A\m86%G3t^=((,L%$,D?$?+=LaZ318Q97_+Z^IrP:)Bp=T+p;-0'Tg2b7KJ82X]X`*2_1dO^t8s'=$U@r-PLGQB419tc<<!H!CDNBd1l+65fe>iHNgcT%!g+g^)3k'N\E+2uO_P\kj9TbJU(tW<0ZW$c;oqi;o)=@tGS$g&#0L8Q*$1J*:Y<%,AT_-)#nBKVP2@$T6]e&,Z;*nnFe]WT\%tfK%e1-/6"t+mo_Pc5c25THkb_;Roe!=>-8@U8$i!s.3=XGqDYU1mq[1_UI&;\T$*',[6[\N`"(58Go@>1Tdg'*8'"UGR0Ws_re>@9Q9%RE\i,FY_To>V%HGBZB1&0h"sEHKuikk%<W3@6uKWOhl@L@lH]Jnklqla_\)d+XUu?e9Pd=&^OQHS;"-iZ3?^2,a+<k[Uu:s3"`NS%0,isn#nB;9)"8B_[M^8Q-tk=eD6.m$fKbl0:?3Nl?7LoCc?-(&Q*@"&ad"(!:Gn/$=1Mp3%I>>Wa'_>2@AEQH(oU&VC2-%>E2"8,%gVB1#rpRcoc8oKg_^]nR<C<CZ^md/.EY-(rbm?)'-BHrVJPIWKJf0H"!F3&>/$a%sNFkuS*3IuH]%*n'\kR:hULJ;)WAh@ZGp30!%'dp$O2t9faBP',d+O_TpaLY*j>2F8)NHkTN7V(pt1P\I1^pKSfB1>02,76+A;skK6."PMZ,NI]J@16*(<[TPtWGJ!,,##a(1b6uc%AjnQsN-/kE>B&YtN8+IRSEF&noZ*V-O`g;4g.FR5f9%Z75]@'1SZfSRAtk@WS2>o^*T)d`[i<!)KVH0I%D$;mJ7N^UcsGMR!0LRE%S3XK>U0G[UC==LD*FYP6><%6*>Z#SNU+p4Gd14`l6rBPM>K??:aVD(hDX)M<CQ^;88<&dS"l@Q/j(Lde2\TEX<`:h_XgQOs>QFRL%;acKIUoBe\;`%kt<dUKQ5dF'o1f6)aVTi$B7?`<G#ZTD:!]EAf9UK_.9jUd*8[l6/bF1=4l.-H5Z&6c]P+:sher!fomc]=-b#<%u%Z:C>f6oZ9NF9;Oj/C]l*e%c'J-R@M54)N,2dLJMX9dJs/M'O*LMPMK@UL4p$OE?kA,3]:eW(Pl[R(g\MIm?AgI.3^B^R-B(ls?RM%^Y@YODNu[`:-hgc6Z^^5=p8X!19M=,BG!u'I*BEY0:6@I!'KN@<hsA`)J,JI#sGaDRjX>i"6G6]N0$TV@l,.h\U]N:2qjd\+L*7"%d#tS.CdP&fO%RH1Zo)"EK<0;#CU/I,[4Ls.:q`kY)O#]5NMh_,^mmB%[4th"<CU_u=H3A@C+`FUC[tN\P(5FN^\5)]6&;(i.2`-5%P)LM<,i^T8OGk9>L1Hg;2^H;B]c@uW(@B2Q"jr?h)s-J.Ya=2`N#Nh_aETDdN/YdnhinfJ<b)=9,;Ok&%2hH@63:Pab!ZmUhfmYZ%eKuPL:495gRkN\oZ]/GZ"dE>W.>'A.c1"\b\7MZ7]E-o)X>V7'X+dU<%9]&<RS4T983fdOe_5aW:PfNP"0jKAq7M?IdNj\`-<7s?%lrc'odXZ3:\&N_[nVYRQC)GKG>-[l)+caDf_m7?uFqKJ6YpMseWLt\cido>Z82)7*H]$2e=lmSSZ.b'd&G^#J/Qs`.UQ%a=JcnOb%@DRb!+>G(Xf\X>u'8T+'@*Xd-I!qBpe!h&@a&?,Q'N:k&g,b(Z@/"D?a&j??3)<4;*!>/Uiq#,oX7S=44ghOe)AG3+TdIAN!2uAd%QNPIo1.sAG!GTZSnFdML.V"NI0Ho[0nn*+[&eIEdmnH>\?->FK?pYJQ<b+b-#ml-%VG8rk'g)%7,X?8ACc!<OBhG/&IB]0KWR]ZV%=k?(,d>!US,J9rTYTP/5(m&5O84b02#%aj&0Asb^@^=;INA*jX%c)i)XCDJF;?/;9!4%o7e\Q9AKuF&H$3[4T0]XXrWNbq!JSNp"%nm7W%kgD_i#Ct2/O@h_"/:sBuCC?"m?rA9Sr[!I(o-PcI8C/79b?1=VAV%AC$F^=1WLlLJZ7tWrUD*b5E>f--7!LB#.^tm!\/mCU%Eq\m5NgT'XH-roVPZ;2-QP;I)JSEas[^b*F=lP#6;G^6mDi##@>TuU0Mj&*P$R0f,<+J1],7n1O\<=a.`k1+?6ZIT*&1Ob\[n]eb%1&U:uK(gDb,^`sc:1ODMR,)_=!8^'OY%>SpRI4sa%cVSNG+k"?Wur&IiV/"C49<Ij3CnmAM/t/_$@&-G`IB;U%`\R8=*hH?$+OKQ%Goe,UK]Pt*d*kD0T1B?Y6"UhHbq.3:/J""X,_i;>kjn!L5*hHCP88!bT0_f!q4rl6d(Gj,>UpEn0+_>6dGRh*VIfs!$kFI.31X$E%UN<;9Xsp\M^O)*O9267!L1CFD*=77[l6b5IJA?>,AgBW:<%/W+JUgU%.$o%,0MbQDqF(RaeCNoaaq:7[<GG9+3R6QJ$#`>Np"@nS%g6$>T>#Qk3Z3$Mulbng:6b"6ciU'/@ac1<LiG04CFY2E(-hg54!D98R_T*P%"LhXFg,dV79%pL;]dTF4;d*aL()48pC`FC6IRKt'%";"I$+?QS>'P&!f&S<9g`ep\ICDVdn2mVIQ7M_6BeH@B8^M00i'r`<Q\HoEQ74OZA5%/8G7)fO$,8(ZlMD@aPU</`73+VDC6Wgt9%H`c?nGj1751O6>OZ+lH&i3`\J"O5(#Y,:,oI)n#p>H;1o@Fk5i_NqXTeVl><B-#k;<[9@d=@059M5E8Y8Z]uuG%!$++P;cce>e1D%Sblf)Zlp[<)j(WYjL/$r?u6HY;@keGg?FYeAJ6;oG'p/F\ULlFVC#N0jK3@c`/8Z@<aq'FLkN[[()G"MUOtC>O9S5h$r(Y.\qaIt%)8-Ug86+fpM@:&-7RicS,K!'gNqArBAn79-0I+KJK,s1mVp*5d#Khu63u,u\Ya`HI%"#/DaDa&[NXR9Phoo)NOpoG<M3_\*78ktY%]Ii@jXUbfD/a;E5LoP8_bcAre&>2:5[;@e)8)U38CdrYtgsY[+ZH(*[nTsM_.;PBjQ@s=i/9>Ar_B!H^8f<h3Y7ktR`ajJ>)j;,\%gTJcf/P)XHb@+FSWAq1f9\X74*u7P7YIQg53R0r_fR;k#Y0tTapC5/>MWg1E)R>PcH(2qq[k'%-K%[hm6u15cVtkapn4;C]en!kU%aeFI]WE6p+N0)-N""]n)&`h3Y0R,90_A&4tM83rX-BS;D1=+45G?0kG(t`V(d10k3N3KLp0SrY.0\:+%ouAf:AZ9K9S7q$:]6?/j%4\<J(D,);M@WF=a!Z4,tkU-@t`$*d%[$_F^H>CsG1L=(<22S5GiT@5c,-oZ5[B_,"6kn`r:"F9le7H!6*M?fbgfou)0*Z2);10[d%!F(aq6"SHDF)kKJB6BVEPE)kaV+jJ),iY:36M=rC7"]MR+=UaL5bVsnjQVSWGr;C;.N\D!]r'5B/B39"j/1U2,A-@1"?Qal@_@h4%,ekQUaZGsLgpcRCLku2#:>Y:6Jtd7kE&rG7o!S_^<tA.2a=9X+\mt;<pE-^VCY!Jp*YRW%?dlrQd$5>=eLP^L6)o.3ltOD7XKVlb%`s@O?*FY*h^8#,^i'B[J6($&HlP7fRCH61MaXb4d"Pt'7()I-l0NQ$cTk'\1J9CorC<59aXCKD@TVN;P6&`0GrD#7`DdUT:,)FJY%JHJ5I/OcRn%oSC<-Y?TZUt"n"_i)+1$);J*PO-3V'S8I$aje+tCK&cf5t7`i+NRVT&?Biq!8oCmV&?kLo3=%"l`r,('WNM5-[3Km%bCdo26NV9VQq0+o&5Tr.m&["Zj>Q&*fYY"EjqV*uL>mJ?"DTs"+PDN=K:I&,3GM\'!Sl`K%s<b1O_:Kd1uKG7Zp8d\LoRbT`KeM,%N>)eu=(OiL\82TFYKY[U7%[1(VDro\1k_'V'+f)HK/f[1j)3jtU/shM_ng"`)TUW$`>k5gC4]EMkk^+"d<fRo36g4q,qteAf*HZg%BeVOfY/4t66p0L..L&WM+VpB18K'9j[e?-"KOYoeq8@dd.e?2c=J(jH,%;-G";BfFC_[rRZCN9I#EY#].HO9+:2=s[2]t+n]Mkg7%F5%6<WauM\Dbnl'hXeB4=Dc=A'i5OY9d)<HL*2NF1qCj;Z:!]qj!?2JHG<E4YHBHAHci0oq=<+PE\W4g#[&WjaIj#2iBSEDeglC6%,iXuaOskC*_ffB7+!9"VMGf)^P2P1?QVUU+&K&HB]^?,8B+N[#;D@/4Q(0F&3<&@pAMQs9rObOd.B$Y\0ILut6T#7oQ)RUW`A?>G%BR!9jL#l,V\3fbU?aZ]%,*1EVd7>7P&(Zd3_&+2a8ig.HOX:cT!0*_]Q!P[JZ.`)?[A./MNR"uA-nLbpX.X_Tal93b+2Aiua3;\l%'<n`\gJWJ]4O=Am3!d&_O?,lQ]*auThV[B*4+,0srfJ-l*,XNJ))jDV6VsP/&%D[P'SO(4giA>#O.kbE>(q\s4"b4ljg1RN0;=P>%QlMMmRGj?NH=KC<YlHLmCk4i=2EJ[iA9Kd\ll(6j2P16]-NGeg)9--EJg7G?Oh20D(4"?1<C[P&=4q9*fUG,a4,t@<7s5T6"Ok>G%F@'=_U.WFMJ5J9<b&2od>YBXqMXuS,CFqZ)S*CRCn&uYDgPY"oiAlZ%/a=Ze2&bKI`7VpCh8-?N&0Q<5k.9T`8h98h/@>d8iLE8<%iKpAFN$8,U=^&MN[X?dnL8/iHnk[A's%q[M'K$m.6N9/`/ZhQ5.%FSYOYp?qU";.ckG3IM9^llcCbUmCq0+/dfWHENh3;'Q[_2/"%f8kEqITTpiHM,G;hX<*.^AWA97obC_i?TQ/BKBi.s,t:@05`PAZ,h9+gh0jdSK"TfSG(XBPfVg.qk3C%;+1*Zs%N.gJJ,^pD>0*4%e,gRW3Pi`ZBcT.J`tX>-qOF*EZ2MfW0X3Y=-s0K3OQ/qLo)56>Z[m!\Y>lQMXH;%4+oqkpT+#;@Gc&S2Kc=I#$td6nSPili-<;0^%^_"GgaV5kB0.3MSJ9'9S-kXJW']2^uPe:%9[4%Ce:WN3r0bEupb"3'm/&^$f<YHVN>)?DfUS"R=AVG[bjS[E>)-X4PiQ/XJ>A"NA%ik6n*#tGP^8H`^@[8%Mha`%7(Bc2ZF/dd&`ib/%6M#`>-=GS+%QD<HPZ7Q;\0^T;F.3MVV&0mIe*l;,Q?Jbb#0!ubKTX[!PJSlp+%iac1ZHO8f=i+Z6[&_'E>gdBsfJ4`,_p18n)$<HarBG`5p`PM(A_M&4\fKeUI4Md8NS.<g^O9hdmg-mGmJN+n*`j6E\T,YGgnWA\D%G/AICjUM=0(m'<_cI4Hl-cBep_uRt@%36!TPB.:%C*uh<$AZ<hKPrd]Qjer9E'RFq:h^*K$+n8HWG.%f_.ue3/CLF-:?Jf1k%ETP%.2p2\6]6[6;cuT.'#k2"QG;hjW+0KDBsNI:'Z&c&S9iO;g0%f67^Drs*)9T983$i_fHTA%_0-E$Yr,7t*JEqoke+oJq#guKVIaso%J2u#BTfu>k!&:=*d-,FD'.0Y<^o:#EbXtSL5q50&,g?BU=UIR6<Ro6-!NQTI".fRJL2"hPU02+1A9'@Z-2F,/E2/"fG5CZ@(lXa(%/??$[fSf.&RR,,jFe2UtnMk_B.ue-!DAI]Q&1&h4.:)QeP?,j.Ms&(PoQU_JCtdn&6`;+]*/'+6&Y=b<n5F:-<?=IO+e%A^n__M!%QNY<2BaE$i^IRU"q@Ig"qliG/#^\pQeVa5$N^eikqrS$m<>i[#Z^BRko3X=*N/A$nr\FGF_BXIsUl#lq1P@YS49b=(b.B#lSo+_s%L1NYZ_eLo.ijN$1NQ8/FK%Cbb4eTe.E-SC:.oVL^KWr$Y%u>8S$9]mKiL0$+\G.(95FG#?VpWqMW?=j+%ecelp+\gC[s9BQQ0^0X%d4fcR/a*6b9V*qR>)VD`\V>&f#I<XF;l/)4*7cFNh8`\Oa,7*YVn&R2E"#h?,/ngWb4_[O%0cYZ%&kbs>%F7eOba_sT8ZrI(r:(3%JHdB08KH4!+FquZKg*LQ'fH'1Lq!g]Jj&t,E16'5EonZ?#W:S0P4QRJp)'eYdF_rZ^UDN73A&0Z=SNpM5Q+\H/#6[;/f83'hIGn<%,#@0S>Hl.rYP+,]2QB*^.G;p;0MLkY-/)N^(.krm-Plc']^ciUS8MJkNMp5S7#"!jNi66bdU=q);0m7`QJ@KV[@j%FOPC\u]T,UM%_c<R8V.>./MF'Nr/hAYKo8;e&h%8WmA`8NF\*-q^+akSS/&V0*$A,jrMKrTrcRBokjrTK'Q?VAIL,H'F&VS\BM+(=/%b;./2Qukb%!Jll5-&KW961WT:]HNNDU,G9[ZF$shX10bG6[RUT`-;]lBkLYmPmn"T:(t00q'S5LeB'KMf5!eiY:.e3Ju()!JN[o5@8Q$<jcZ3d%XK#Mr3A7F*6S,-rET[RXeN@_<q!#.X13ohC"Ts.g!iA?H<.It*/hi)0V@mL-5lA2-/EaVC!_"StfR30*]CjK\=Y2.FL5I9VVuArK%ZYa@[-"h9ss,)c,O[-MM[)agLItSLQWGUlKY6Ym"S5;Z[d]0T>WFnc\ZAl`d64>CUfV8X7Hq*'<p^/NI%!3Vh'obJXN6'Xd$E[F!%-<`D,rIB;g4Z#&0UsQ].5T@qt>=pt6ehbS[D3_%b"B:N*HfT$APTuWF"GhB63J$6VNpsk_0-btH[%o?(N-c0<@N1:pkRaF264/*&%$IpmY.9Pq'*<M'EG_@sRF2jucQgLG.0/*[KVc]f,KmA"K5XPtI`7TC@'+/J6Cm+.:qfYO?0>N=U)9hJsEf]ShiGE9+J]LcD9Jkq@%8eGGjdsc3aJfG;<12^Q2l!$o1[dl$4o,b38k89f=O=%:_KXQ8L_KmGRL5V-#XXVT4]gG)C0,b%9S%>[5=U0LUU+;>)'!Y@N>n6p]%TiFGC'Q[(^2s#qM6%jdp^r%mi[EM(]Q:>pRpiD_2>s\cM<I?.=fs1utHt@Yr&hs8b'M<E1I%d\nVNd.I0??jT&DtngKV.1'dXia[%$9%i&TZmUXfR$!MB\#Yo*jqpkkFR""oh.1e'-a755#&\'JQ^9+7b\DfG,Js.?/&]K]TKQDS=EQL0.@<e%=VO8Dn+"6U8s_EciaVh%Vlfah4cG;s\O%s`kqoD@Sg+*-L'o<LesZb&[q]St/&%I2%FGMG?OXj94HZcic]A54OHPcY)S!&^?5]u)Se@lY+Jk\20rkR/\St'q%o.ZJ&EMPoXfD*$'S7S4U_cgU5W-JK+.rI]uX"-S6NI+L+R_jD!46:(i9eKs0d3FTN&p@M&gkDHmGZ'EY&^N,C),@^&j:qhI7^@(9%,1:!l_q6-kILDEc8W@71A(Y?Y=ug)I:nEKQ*J-<4Af-Y&!!Gk2?;pD/b:@G/Ui$A/_.^jujY;TNd`ZPSCLnE=<XO!2+ZtqHr4V0<%W93T@9qIW*KSfTXPQ5o[LOJ^\*@*jra!nVu.p,J7m:Q,6h)c2ah)c52V-P(q]6E6C`:Dm+ZsIWrpC8shF((U*,gd1SL+B57f%Mdc%cNpFWWt!<-XG8KX<0?p"q[_@gV6LWPP\m_e9o<dk4aNZ="#)kC%:d_#KQr1POOg_,L0TZ-*d\]o:6Z,4F-7(WR;`I-dDpTgeIFF2%+YebFH]`?/7Pnk]V57fC/ii"e\?S=EBoGI'N>6XMFgQ21hAB0BCD-rT4=Ue5-nr<5+dI$0!%BJBr@pL>bVDT=ZrcT%pC+&j`)7XN%!g,j%2.4W"8C7%YC:?Iq=@?Z+>6(cjEgnFi;$4GB:H;t9hEl=jBl%O;72SoVW)H"%iufq2Ri,$0'hOQLFD%P7lV$"D"\q/7YlPHe%i#G(9"&g-sDJ<=Rjaf:*!&oKC89Cl"D<@X9=nig;;Np=Qg^&]][j\JH<181pW5kE-+>]*m"SsKj1+s)YBEs&FTJsYee?:J;X$nP\%>S/"Q(*MR/D`:iB:a/5R#g*%QVDsKOPBBK;8>\b8OQ_DGOFjPt,bu0#("%lq.p@CXluMO2?lOAGU]+E[YL)@3Z8Y4;!gnU/8BKOW%[$!Q7m:J#5KjPL)D[ea,K_Hl8*Lt^OaE<u1JOM0XY^Yk_j:fRYes(Q]jVFcK/]YY[#=)tlIQ/ZV-UP`q?,siReC^4jX.hSjZ(Yfj%(0VKih7V96Q/#M4NT@0r_PWrX(0ZX?asqk]:_seh\t[(ocmU\GKU.6JV/-c]_%'1j;RrMnUEO/j7KBLlSi2T5S;)V\3soLY:S0qL%c#!f_p8G&kUXtPaS<Qh+=]->Yc;"/>2Mu9*$"g;N)k3?)+Qg*iiW^XJK1-koP=Gnb!F*W/Kr6D9fOI/q7=^X%#eVMr$-00LQctg8%Z%'Yp/qp[J]SokVAIca<dV?Io?YGD&JO6kQ?HH"Xas@=7e6o]rbg:^p)'q4MU<^3pNu]B(Qd!X"R34N]VHTFl7&:#XfIS_qpV:%B%BM=O"!r@mf7\LMuZ'A$r[)6[E8RlpPpjg1haT9SI)Vk_QTfaPUg.Oe)2cfg*OODM^*e_k)U-oB7L>SAAj52UMV$%&l_C4b:Q>rOe%MG)gU:/tV7aM\&ZUp]Q>.4[<7W2Z'@-u&)q,.$Wf1PJCg(8BJ\>ASa_oG5C"#rQ*N)V/*Eg=$VTh,H)3CL@3M['I.D>F-9Do%G)8%!L.m1Pd6$<..8S40K,XDC*f<)`'BH<O"ZlHL<V1jXO0feiJkFe(A^aM0N_Cb_$?;NV0,]Y.4-Is/0Q(grZ19!-)sBc#`^WDdt*ak%=G^%thGqA,7:Cer(3(NIc^iQF"c8#1@AHH4JK-<hlSa3o#kh)bPLhAF]Y,3q='#NM'R-6Y)9nYk>NJSk\=941W'-1K83@iBm4>4M%$u^l!QC]!$,SN?[@2L,I`NYj?<"(&Q#_[Op,$Ta51ZL#J*m8/).["mfN3Ml7LHs-9Rq=1h*=Yeq3/p[75Va'mK*a`"#-I5DCNQ@$%;o9_&3Ze/G!,7B!HgE>`VfI:VF^u#a(c5QG=6umUM0+;_dCC^2D[6G]Q#JtYN*F7FG:;@Ub&*k>ZuAV%F9jCf%he9&Og%*TBEKOL%`:0AL%U(=)nf^f#6g!9jD9ojhJ.@^K%07*$g'G"sqZ=u3IH'JIe;85X4d+FGHE4h#[2)?gM,=XOD%jlg9)B:p(.OoT:5N%^@?o@d%EM0MCWB/l1<[5bc-3'9c;%GeT/LV[Rk2^kP#P)0B)VNG43UC58E)mE-=3[au([]/b`.0H#Xh78"=tmEZbhf'"puj"p6ZHq0LP<e[%]%A.22#*[E)Wt*EA>#HSHk'dXIO(C$[%Qj@Wi$J)&`2"K12&OuG$oBC<72D[jX(,;p6,8^.%$&O;O"\WYV5TCR,t+c0pO\(4d/G,%%`.?]MBFto#g!b&A#A&D(h09XFY2Qf;A#$]Rak+pH_`]$bC>K\BWdV'r=I[4j=5#*g;V`M4?Z_OX16Ip"gBHSYBB'E(6<%sV'*0j%r$%rr'YtQ)6It3Xrt;<CR97b#a:AaHf`"7K/9Pl0OG\E_D9;NUOI-_(9T(IA\lP=;?Y:<0k<f?IT`uj'A9[&s)bh2n9XH_3G3hA1%d074LKWAA7C>3!_D#k9Dl%$RC(DnC37iaa%\?L\(/.h)_K3?pFRg>1@MM?PEfQZmckq,u_ADPWojANf;5&O+O7huE9cdm?+dZ=Ob%U2$1;.6MLU``l=EQO*\%$8I`IetR.g<@c-3V:K\tMg@p59B&AI,/G^R/X(I,^MnjO[LYojaH]FKX1a3=RS]N#1b9WJZD*H(:3fAA%=lDLif\0T$'o>.F@Vo%ZVf/&E#JEO8,2B5-TO6QW.&@mQf4\<)WRO%*aofMn_co`l2GM*lmhmGgXb^3<X2qAo(_)QDgDsdF+gr?9%UZ/Z(02'FOE^U=t;O`sYicnt^_//rZ+rc,,<1?Wr9@bs'6S$dm#I3L^V*%0E6)-j^+Z4&Yr0kD>Z)&JZ!Q7i'C+1!2=f_>$7V;=T%/D&&[%A=K-bm>?>$&>6g[)hQ$P!k\(,_2Pc:m<4r,e!%BUY-fe`NMQQ$2RujZ3lmC)T%X?n"GfIOsHu&27[bRU[KR9*tX).qJM$>%'1mfDSEt9R:R0^h-\rE#+'+6!:dbV4,;YMX7&$KMh?nB?7>ZVP-rCNk,oEMdFWG$b620HiFd+2&e4"5K/4gs09B`K?0=<@IfJ^p<%(/LRKlS?TqFBQeE3nLZjHEil13P5?+E\BEq9@+V0/+Y/]W*,RSQUm?/L_h??amrVn&fM\eLk7#UK^\C#63>UG,"P*.(0Ao%j&9ho%lFMk3#*=e-dt0!aGurK+b_m*!ng:QR-ioVj79qB?!`7-59d310.;;C\8cY$>\Und!=-;Y(WSA_ba:\X_Z:)N\/5\+[I5JO;D<-bF%K;nE6b7Z],+A8ZjD4OnE<?C.\-GC:A42)OBX3Pr">_2(7"NZVr*$n8)Be<!%3F!Up]+q.T\5-1L+n\JQ9S>e_khf=eUhq;*G\Mar%'CWpUaVu'tONmk>V9'RTo?p$t8<>1?q)1o.\b?2aTLa#lU^;/_Xu$Q#Brp5+M%`538pH&G'5Bg,AVON_&CS%qM=O&#JilmaOXJ'Q%EF2?M'uV^4%7r674;CmJ![WDR5T/I[<1n25Rs<,U4kCJZo,*P.A7"k=N(8k^n0*k^.!@j/>`J5d+Y)#/fQm=Q>9P3%j/oV>maRh-%LD;KDQ=p<TdF"lB4p^T-8c?:9;'=%MLH<3Y4_=raC:JRed@c9iH2G&pXom/fFeUm9T1\RdB$PoDJ9T-kpBV>`EG74tMfE"-+f\r0%J5E#MbNe]8pCLsT>RtQqid+-<,^K#t5s"mko=fdc\))TG:EXs)i]4uU%/6ob,=O_Oh[=\gkG/)?D>fcRnKJU#0V6-\DP/M9m'eZ8%A>;(2OFZc2>]OJ('oN8ICFYn^MeNW_<MOo-8XEQUc\.:V\0HWPXl]c$A4p_+M5Qq3b%=tUO?1^GoQpU.TkK\<1/UUkRd+Xe3];_e%W>@%l0SuK:l>p\q'oM-s^-9\u>lfUohI@rP0PZ.!IE3f>cBte,.%2(PK&%qY0Ud>,et,2Z)DIS2`1g+&D(7!#KM*?dlCk)a^m(FU%HefCF7i'44;ZT.KeGK;9)2mdZReoCj__X/#=3:2U0XXA[%A@_t]iS2@UU\'Od%NTH)`WdfVA,)g=_/=pSIgiW!%aBZ7,lSs.4Q'n%#/iin<:OXR<>G*\b9I8*PN(!>()<Dn'orQXC*GOQa+CX&Bql`b!AAa(Gbt5>WMOfJ@+&_^!<7LYj>aXr:Y@mG<G8f1.J/'boH[Cs%TK4h'Sr&=W70X&r="8Men'MOX`s3C2<>(Cj*iiVjUO[FfJJtQh*0;Lt@<Fm<dLd1FZ%UIt;@7$1Q@iL>#+<!/MBPg^CEi$\O<tfi%m<h/;&8.*(J2@j`>:0Gc^k1,TSjM7V$qM&MT7I-@!Qu=N,pEe)A;XPZUq(KV(i<Sp#HY(lO>OeZRVd)N8c^ZTk"lnKU^9q79om>8%HpWO_#m(58+__)d+__+DO>P4tj=8MK/III2R;b^.TW@X`Nq-]A:d%]RdnB/)+iL.A=_W1O*'S+%I`YIaWOU]d-3n;2SnL@PbEaO:%!(iHRb!&3F'>'?>p`5;-lG\r7nJ@@-lj=4Wl-Oo`D,o\#^;QfJTmiL]-;?0\.j's-\="54Uf(#-&A"lB`B-YA)K?=papgmIF&Fgu%V%\Z'-kp)&0;'0sg8RGVq[5(Q3@I%n%4FrE5_jnaA7CN\F_W+*MnC8d&qF4<>fMRDo6Q]/Xaa&9&^./8CPP0?W6l(H$3J^t7[=?f%6,\*#+PoKph2$L!g^6""AtIJ0,*/H4[W`oJUZ.s=7_YL@mG/20bZ)gG&P8&l]o>tAhC;6k+l5/S=h?RaRC/5?4H9l$l!u]7Yc2^*%1KOW[#paLP.*di`?_LeebkPQpa@oQ.P:C>_eYQTtRFJ$4d_EHbU,;$O!j"BQSe#uLR:+_aCaSX@Z%,csO/fipI:XK83cjIEX$%2C%0lY0Q/IFteKr&Hq*Rms7TW!@Lf.0^Y5QE;XU"GgHnK[jBS8$4"hA"He]>3g2U7UM4Dl+O'7m9su/8s1mL12i[#[/"`Hdo[^HJV<+%edci&c:Y@?a<O'cX8Q0U6RccR^d[+<%P(Zu?`fYJSr"3=],#@<DB-r#F@Ece_D*dm'GCjHK.@U_7@WfkYtqXgZEEgjIR!N"%-tuS%:>/''pkm\9=4#tXC34j,%W?]gX1>/_XKiS(o+B)O6\IsC&1b2C1m/A?>nk+tQi$1cFR75k%<qR*)9DUg,-0bZ4U3h#5%MIk39(Eb%*aG:2*IYF#i6.;#>(Y+5Q"$jlWtfqICAtk67gYO64_dbp`fjrXX^+1^<)3a#N>9<><@>4u.HopeROolS_o,W8Z[0Iu=qpd(9sp3,%d0_[p'>s1$nLVsJ0N_I^mZf3s]fEMC*CgT#2Xsh'"uZdHQO*rD`Np7`p<*L[XqP*A91f*Dfp0B-Pnl9.L]]`gc_6DB?"BHJ9.au,%O#lbJ.ec64W=W$j!['>XY(16V.C9DZDG.^!NIlg)2@:coCbQK-1E@LuA\ge&!BeULoAlUfo6Mj1VDd7q32`U.NS6L/@KQlnMt]q^%!"d[71pNa0]^m4j%^`pW-VWN7nS@Y=N)Ft`>3TIJ]aVIrTbc5!fOmRB)g7l'W`D?LnI:a?''p\+RqPlsLCJRSjijN/V/V?<a[Dkr%P(Jp\$NsT!q(qreU=WV!Pet=*%i\26,cOa8@+ppSHBCBn>>Z[Z$8'mD$&)m\5,l\7F%QW$-3LX=D^=72Oc(kAN&Ap2pNn.(`IMnD%4qH>ApSbl44_;8KL2%23#F.;cN;NJX`.FkZ'Y6*`L"LTKT*tus<SAn<3V79n<0ddi_Q\#70R[(i=u#4cN$#:\j+%F:5eb=4g[Z;*%lb.H_U9LP[1SBI>":6+Z1?9qHA+>!Z'\X7dWk&1`gAOO&$49%U/8<*(=Io4rcl]I\,mH,fAHnBHcQSj_fAT:Yd>u:"3X;@]!SZpm%K!&.Tpje#$;d>R@8Jchs9pfP\fj'NfQIL]DHetah)JsJcfuQJt"%^K<@Bi2(g1Dm6UrdcO%a\p)5U-k1%3kZQG?a,Ca,Pof!P="h%HE3qn=bB0r-lEUF<Qd/CmO4N]>B@srF$;nH-"Fk,_J03Gj)T)7OfEt".6L#"LoOltVmS;0)6moY0:2SFp-U-sX0mOY=eU\F7U_<o%Xipr69\1-$M3Ni`#3oq:_ZT(!F^bAOTqZJmEr>;L!V$_r3ekms/#AIcm>19K2Q?=r`3]CF_DSq3Mus97(ickcRO_M,AF/(_qCQ9j%kq$N5li<?CrPX<?LMe:`K.LN6#ZEZK:;A%3J.6ii`D'!r+3Pp`QWP\TJpKtTX'E<;+GJ-a<j3E^NA.A#<(u!"X]=fB5kIQ9(9B48%`98f-XT9&VmdQgfK:E<V't.Xnn.DG$(fpBU=16N!i2=_pCC$/J*:HKMHm[&e5Wn1_f+dAX_8F9;QXnc;_j*.gL"SZCJ>O$0LE'D"%$\b,Y-@$kOCan^M1Pi=^c8<ZV>j^Qs4%FBLKY?LD4jVlfI9E]t;5gVk:Pk>*#GG^c5HadG5LLrQ9Ji>n/4%bT>YRfkGi&;!+A22Q%Q)&2^6<_-*&Zu"\7S)as26Nk@93`AWLCh5Q([C*8HA7g8J4KsbZg:j((@A!$]dXCbOdl_+FK*2Cagr_>2i,p2%C;@hLZGGY]Ba%(%8dmr_]o)?PP["iDFVUIECerTH\?DSVMa+9QNX<7sE/.ilSDQn'N*%th2pi)BbZ+nJ4mK-g'Ec8)ec\(8V,fqdW'qArCE`b@m>P_1%-G?f8Rd>QG'.@Xud,56Bj!Wd4Z:5qR"F4c>:oLe-<(i3@o"?MBp_YZ"he"p&QK!'[^Sug2eTsY[!_[\#6[W4\WCn?$P($=9Uu=u*%1s"f7E='cFn2Kmr"W*JlP',#$f0]]Khf^6eBd%(;Y0$3c8WM9r;_Sf7X:Nj\V^-.)<@NGtXMII9W')>nSED"8KQ[Vj%8SCT5fuVL%g2Sr0CSCNbHbQu-QZ?VGc*XkDXcHo-o-`u185k9;!fZ,gC*XnZ6a<lAqoHan6<TdBAO4s&F6PKH5QkR9YI,beC:uqHn>u:dS&[r3%*%'lal,rGTO^+S?%:ag9BD""7ruO:VUpJF-nFCk5,uC!L]G%i'Xn$XfkG"oZbUZ-$Qt5MeT<ZuiQ'8a[a<d4,CO6tNYtC&<ni"<k%k`:a\\E;ojRhIc_ik?gY[Af5E(48D8n8MO&i=^P9keV*t5(3a#a@5Ug>;Ph%r)c+[3pjl+Y9Do?di`8q(qN7cr78gaF0D.h@bbTg%7C\28*t'u`Nut41[c?DWL-:S`_6H2e,=6F-E%=qFE%CI[;B`^Hn^fgq8%s^uf0&Tn"(Dlb5@J_*<O1HjU3un6@%6rdWDkhHnY>Nd%8q$VZ$VB@<\&!LOIJh`MVW6^7.o&,hIT/=3m>s\0Fe/=&!QdDeITq]!-b.uL(&8/]7r4!A"V1qTj(f0_ol7q.j/4t73^/"NG+FJN%T5+//NusYVA]MiP)b6?WO5Dk0X+9s7UL:)mI/LF43kP.V6YGW&Ui>+#ioA'DCuXKqHY)J`8(EnsI/Kp&lX1p$muEId/MZqq(Y/hr%j%)3`lbB>;Gr-lKo#/S0F0Q`-5;)`13^/!sLE^B>.BRb>1ANGVk7J%H//rff-U)tuU?^.HO(5X>+$UOn-9hDgGL$:?TCEYDr*@;[%I/ND8nL&T(J&GOaKB%0Fq"TF(2YHUp&9s4!ITq,]oKI_'rAWHNO.-*Sj5[VF:QP*2IbY<1,sHe)Cm"ShZ,/!`nUmC$`5`r;XK8Pn%=o$pphq='NNupDW87CF?g^5BV\-^U+fb4>SQe.=4iATK$X<qkkfJWb\k_gS'8,3n:0VtugpXce/W?Y2A`_IF#-R(t35fIUe_tX-e%T(P\tDSAe6>j7K=$A`8)/+hdI(s@'d_bD@QqG8<*`k2']`AQLf)!J9qfi3NGiPi7Z:uA%;@qqQ"!?RGK;bE2$Su.`1.d&-P+VQK2%3K\Oq`L\G\:TADl-B$.q:\2Yk#SN!:)lSKo%Rt%U^S<e2@F:U+0Q/eeZ+Z"J.'qTro9`53XU$ZE0km7Na(DT2Y_>CW:9F==3/P<A%fI4q22,&K,8e$K#mq3aR"n-^R#jiDUDDX?HbZdIj-O#WXX7s7e%q8'l_gEJ%fGRErM51s]1I.Zp5=W"PTgUJ2Q_5SI'6J"N"ProY%>nfT67>IPjU.`k3HgDAe>Oe9JlDZg*(R^pnj-UI$CV'_/b/BO;ELT7\T]q2`KV1%t9$jMMlk2/;PS/'gan_&O;;ftNB[ks_#T?-V%2G#K:,mpRV\t)+5m2/-u?%Qt7#oX?;.7*"ZY*>U6/1'NT3tcXg7=pORO+;6:5gWpDMP/]1"Po(MF?;t=m2/.$%nc,QVaG:)G7cU4%qGU2nh3or^"+O7$7R:dUT\HbFcl0dmf'dm9"u13+\i"J?R%P\gL&Ejg"?f5]OeBlKpO<Ra8J2m5-6WYM5Gc7gM38D?WQ!^>-.PLc%<J9`N9\`D%c&t//L?9b3(n]D3bt.mKX#;d^!A(`G.+Jn@:<qB$Z-bp[&pfH&IHaKn&@T!cF/:!&>;(O>c)ZuF3MaA*g68I<8[c0u%\M-1S^<iH>m6bP_U393%1ps(k[SZiBJfF!&6@TVjMW)g!daFa5JOk8'"Uk9#'MS@e&4DmLR>M!O<Z&KV-_Y72;$<JOh^Qml@_+[/%D.n0oOpgA7cS':cNq]qQG7q]K9To=qa9<i0I6PI#D+^+9-W*\$rnqQ%#R.A<qAZaUbGAA#/-BD%C)Yo<":HPE<D:0OZC%F-\:-NZ%p#Ucm,uU2!'HI=;NG6eao`HHVS`)`NpMii&i;;<#"CE]Yf0\4A^/)#J#Z7,,<Lf\$:VhEi9,ucSK>fjh$DFou(/O#h.-d(&!RF%N%T4o"LXE$$"?JKjd,B3!me8!l!*CZ[T4L6ofh[(t`90*g\Ak452_+VAt/Zkuq==IqfjD"Z_e4FB!!R-_JJ*9Wo:Xr?=6L!A!4a&VR%HP/T^3U#4]&41EQ>hYAAP&Xf\\;1kq$iNWs,HEZ^)\X=a:*)GJCl;i,K`374D@+"3rZmA"KJtakY2od1rCP!TPEK+[n`2*#pI2tj%-c,6_c6o`jU_9f*jqT!Fkli^L?oBK+rhlZlpkg8CpFY:XJB/f+j<W4_#hej=mVrtSiVek^*El<+,6MZT<n`5O2!g'VEs`ICl0qk%%E=<mH6rZ6A_/BXjZ2ih+Sc(0qhgrKVbj\["BNUrtU*:K4m[7*g7CH#t%$S!R16D(T*J2D,1k&eJbdSgP+s<9c!gM%6#cI5WI,PgY%\=61B^(J;1s(,LoG6C\I'fSWr@^bW!<c9knVhA(Fif`e1T!@@5,N3Mc=;(IG\9BK\4qIk^E1FCa0@XosQ<;R@:GN/iN@cMdA:35a%]&HghS,1C_<sg-2T(s4X"HDV<Kqnr2g_q/R'FhQa5.j6:&^9aVd5l$GmH)"[gp=t](CBr3HTFKM$m6aGlRqi7f,'QY-+q\\WA_.X%S!))1Lh&k%=P09u,D9JE!?o]h)'LhfXA-8jA"&DO@@Oj1B]>$?GD4BZ^#h%,S9H]f'D0Gj;-kVp;fW.4@i*[_,XM`92.^Cl5lPeI%rO"[=7^,NO.(3,R)3LgEO'NL`q5IaQ@"D?hWt5;=%\_O<l=Eq:&He;i)bHJM+;JgPFFpAga\"a9kq>>L=_FaG+R_;[%dN>NQ]*E2%p^7Q<.#@X=2CF<>^.Xc9XtHh]\QQV[p@\C0g]-+0EVAbIb0'[l+8-fTGl,hMr?"ZSI_PbFqo`omI`9R(qqp4:Q9Y<"s7u!8O8\14%+2@ab+RU!Epr^aeHeV3n+&MdH5Q~>%AI9_PrivateDataEnd