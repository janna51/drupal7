%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Western Maine Club logo 2011 v1-o.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Cicia Lee
%%CreationDate: 3/16/11
%%BoundingBox: 0 0 193 132
%%HiResBoundingBox: 0 0 192.6567 131.0811
%%CropBox: 0 0 192.6567 131.0811
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 11090 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD07FF532F2F532FA95A2F2F542FA92F542F5A7E542F2F5A7E2F53%2F54FD042F53FFA85A2F532F2F5AFD05FF7E2F2F532F2F7EFD05FF5A2F2F%532F542F2F2F5AA9FFFFFF5A2F072F0753A9FF2F2F2F542F7EFD05FFA92F%532F54FD052FA97E2F2F532F5AA9FFA8542F2F2FFD10FF2F07062FFFFF2F%07065AFF7E0653A8FF292953FFA85306072FA87E7E070DA9FF842F06072F%FD07FF590D06077EFD07FF5307062F7E847E2F06A9FFFF2F292FFFA85A06%7EFFA90707065AA9FD05FFA9840607067E7E7E2F2959FF590D06077EFFFF%FF59292FA8FD11FF070D0DFFFFFF070D2FFF530DFFFFFF0D2FFFFFFF7E0D%077EFD04FF07A9FFFF532F07A9FD08FF070D07FD08FFA9060D2FFD04FF2F%7EFF840D06AFFFFFFF2F53FFFF5A070D84FD08FF2F072FFD04FF2F5AFFFF%2F2F077EFFFFFF5A06FD13FF5A060753FFFF590607530D59FFFF7E067EFF%FFFF7E060753FD04FF84A8FFFF53060D7EFD07FFA80D060DA8FD07FF7E07%0653FD04FF7EA9FF7E060759FFFFFF7EA8FFFF2F070684FD08FF070706FD%04FFA97EFFFFA8060D07FFFFA9067EFD13FFA82F072FFFFFA80D072F2FFF%FFFF2F2FFD04FF7E2F077EFFFFA97EFD04FF532F07A9FD08FF072F0DFD08%FFA9072F2FFFFFFF5AFFFFFF7E0D072F7EFD06FF5A070D7EFD08FF2F072F%FFFFFF7EA9FD04FF5A070D7EFF532FFD15FF530D067EFFFF2F07067EFFFF%A80D59FD04FF7E060D53A9A8532FFD04FF53060D7EFD07FFA90D060DA9FD%07FF7E07062FA8A9532FFD04FF0707060D2F84FD04FF2F070684FD08FF07%0D07A8A8A807A8FD04FF7E0D062F7E0D7EFD15FFA9060D2FFFFFA8070D53%FFFF5A06FD05FF7E0D060D070D065AFD04FF530D06A9FD08FF070D07FD08%FFA9070D072F070D2FFD04FFA90D0D060D077EFFFFFF5A060D7EFD08FF2F%060D070D060DA8FD05FF2F0D070D2FFD17FF5306077EFF5307060DA8FF06%53FD05FF7E06072FAFA8532FFD04FF5A06077EFD07FFA80D060DA8FD07FF%7E0D062F84A9530DA8FD05FF5307060D067EFFFF530706A8FD08FF290706%A8A88406A9FD05FF84060D0684FD17FF840D075AFF2F0D0D067E840DA8FD%05FF7E0D067EFFFFA87EFD04FF530D07A9FD08FF0D0D07FD08FFA9070D2F%FFFFFF59FD07FFA82F070D2FFFFF5A060D84FD08FF2F062FFFFFFF7EA9FD%06FF2F072FA9FD18FF2F0D075306A92F07072F2FFD06FF7E060753FD05FF%AFFFFF5A06077EFD05FFA8FFA80D060DA8FD05FFA9FF7E0D062FFD06FFA8%7EFD04FFA80D060DA8FF530706A8FD08FF2F0706FD0BFF290D07FD19FF84%060D065AFF7E070D06A9FD06FF7E0D075AFD04FFA82FA9FF532F07A8FD04%FF7E2FFFFF070D07FD05FF2F7EFFA9060D2FFD05FF2FA80784FD04FF2F2F%2FFFFF5A070D7EFD04FF7E2FFFFF2F072FFD05FF5A59FD04FF2F062FFD1A%FF2F060DA8FFA80D062FFD07FF7E06072FFFFFFFA82F06FFFF53060753FF%FFFF84072FFFA80D060D7EFFFFFF59077EFF7E07062FA8FFFFFF2F07A82F%06A8FFFFA80D067EFFFF2F07065AFFFFFFA8065AFFFF06070684FFFFFF7E%067EFD04FF070706FD1AFF5A292FFFFFFF53297EFD05FFA95A070D070D0D%5A2F2F067EA95A070D070D2F5A2F0D06A9842F070D070D2F5A2F0D07FF59%2F070D072F2F5A0D2F2FFF5A2F065A532F077EFFA92F0D070D072F2F2F07%2F7E7E2F0D070D07542F2F062FAFFFFFA92F0D070D2F7EFD19FF2FA9FFFF%FFA953FD07FF7E847EA87E7E7E847E84A8AF7E847EA87E7E7E847EA8FFA9%7E847EA87E7E7E847EA9A87E7E847EA87E7E7E847EA9FFFF847E535A59A9%FFFFA87E7EA87E847E847E847EFF7E7E7EA87E847E847E847EFFFFFF847E%7E847E7E7EFDFCFFFDFCFFFD95FF597E537EA87E597EA8FF847E59A9FF7E%53A87E7E597E84FD05FFA87E535A7EFFFF7E597E597EA8FF7E7E7EA85984%FD047E597E597E53A8FFA9535A7EA9537E5A7E597E7E7E597E53A9A87E59%7E7EFFFF7E53A9FFA9597EA8FFFFA85984FFFFFFA9537EFFFFFF7EA8FFA8%7E59FD047EFFFFA8597E7E7E597E53A9FF0754A8A90DA95A2959FFFFFF07%0DA9FF5A2FA984065A590D7EFFFFFFA92F2FAF592F7EFF7E2F53A92FA9FF%A9065AA80D2F5A53A807A92F0D7E7E2FFF077E84545A5A7E0D2F842FA907%2F7E5A53FF0D2F7E0D53FF7E2F0DFFFF5A2FFFFFFFA80D07FFFFFF2F2F7E%FFFFA806A8FFFF5A2F59FF2F2953FFA82F7EFF072F7E5A532F0DA9FFFFA9%A8A806A8FFFFFF2F2FFFFFFF2FFFA8077EFF065AFFFFFF5906FFFFFF2F0D%A9A90684FFA8A8FFFF5A06FF53072FFF535AFF5A07FFA9A9A8072FFFFFA9%FFFF0653FFFFFF2F2FFFA8A9FF2F2FFF2F07AFFF290D2FFF7E7EFD04FF2F%0759FFA80D06AFFFFF2F0753FFFFA806A8FF7E07077EFF53A8FF2F2FFFA8%A92F53FD05FF7E0D7EFFFFFF2F2FFFFFA95AFFAF075A2F2FAFFFFFFF2F2F%FFFFFF7E06A9A90D2F7E53FFFFFFA90D59FF075AFF53A9FF530D592FAFFF%2F292FAFFFFFA90D53FFFFFF2F0D5354FFFF2F2F7E2F53FFA95A7E2F5384%53FFFFFFA95A2F2FFF7E2F0DA8FFA85A532FFFFF7E0D7EFF59842F0DA87E%A8FF0D2F5953FF0653FD05FF840684FFFFFF2F29FFFFAF2FFFA80D538406%5AFFFFA82F07FFFFFF59077EAF0653595AFD04FF2F0D840D297E53FFFF53%06A853FFFFFF530706FFFFFF0653FFFFFF2F07842FFFFF2F062F06FFFFA9%2FFF5307077EFD04FF2F840653537E06A9FF7E072F0684FF840684FF5A7E%FF060D2FA9FF2F06842FFF2F07FFFFFFA8A9A82F84FFFFA92F0DFFFF845A%FFFF0784FF2F07FFFFFF532FA8FFFF5A07FFA90D7EFD06FFA9072F5A0D07%AFFFFF532FFFFFA97EA9FF5A2FA8FFFF0D53FFFFFF2F2FFFFFA8FF2F5AA9%0D53FFFF5AFFFF2F2959FFFFFFA954FF5306A97E0DA8FF2F84840D53FF84%2F84FF5984FFA9072FA9FF0754FFFF84A82F2F847E2F7E5A06537E2F53A9%06537E537EFF59072F7E067EFD04FF072F7E7E077EFF7E0653FD07FF2F06%FF2F2FFFFFA82F067E7E2F2F2F845307FFFF84062FA8FF7E0D067E592F84%0D06FF5307597E07A8FFFF075AFFFFFF7E06A97E0DFF5A067E532FFFFF07%0D7E5A065AA92F2FFFFF7E06A9A80D067E7E2FFFFF84597E7EFF7E7E5A7E%5AFFFFA9597E84FFFFFD047EA9FD06FF7E7E59AFFFFF7E7E7EFD07FF84A9%FFA984FFFFA97E7E5A7E7EFF7E7E7EFFFFFF7E7E5AA9FFA85AFD047EA97E%7EA8FFFD057EFFFFA9A8FFFFFF7E7E84FFA8FFFD047E5AFFFF7E5A847E7E%7EA97E7EA8FFFFA8A9A97E7E5A7E7EFD2EFFA9FD47FFA9FDFCFFFDFCFFFD%24FFA8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8FD04FFA9A8AFA8A9A8%AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8%A9A8AFA8A9A8A9A9FFFFFFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8%FD26FF5307060D060D060D060D060D060D060D060D060D53FFFFFF070706%0D060D060D060D060D060D060D060D060D060D060D060D060D060D060D06%0D060D060D060D060D067EFFFFA80D060D060D060D060D060D060D060D06%0D060753FD25FF7E060D060D070D060D070D060D070D060D070D065AFFFF%A90D070D060D070D060D070D060D070D060D070D060D070D060D070D060D%070D060D070D060D070D060D072953FFFFA9062F070D060D070D060D070D%060D070D060D065AFD25FF592F070D060D0607060D0607060D0607060D29%2F53FFFFFF292F070D060D0607060D0607060D0607060D060D060D060D06%0D0607060D0607060D0607060D0607062F067EFFFFA82F072F0607060D06%07060D06070607060D062F59FD28FFA9AF7E7E072F070D070D070D065AFD%0AFFA9840D0D070D070D070D070D53A9A8A9A8AFA8A9A8AFA8A97E2F070D%070D070D070D075484FD0AFFA9070D070D070D070D075A7EA9A9FD30FF2F%0D060D060D06077EFD0CFFA90707060D060D060D2FFD0DFFA80D060D060D%060D065AFD0DFF53060D060D060D067EFD35FF2F0D070D070D077EFD0DFF%A9070D070D070D06A9FD0EFF2F0D070D070D072FFD0EFF2F0D070D070D06%7EFD36FFA8060D060706072FFD0EFF530607060D06077EFD0EFF2F060D06%07060D7EFD0DFF840D0607060D062FFD38FF5A070D070D070DA8FD0DFFA9%0D070D070D067EFD0EFF070D070D072F53FD0EFF7E070D070D070DA8FD38%FFA80D060D060D0653FD0EFF5307060D060707FD0DFF7E07060D060706A9%FD0DFFA9060D060D060D2FFD3AFF532F070D070D07A9FD0EFF070D070D07%0D5AFD0CFF2F070D070D075AFD0EFF530D070D070D06A9FD3AFFA9060D06%0706072FFD0EFF5A0607060D062FA8FD0AFF7E060D0607060DA8FD0DFFA8%0D0607060D0653FD3CFF5A070D070D070DA8FD0DFFA90D070D070D067EFD%0AFF2F2F070D072F53FD0EFF7E070D070D070DA8FD3CFFA80D060D060D06%53FD0EFF5307060D060707FD09FF7E07060D060706FD0EFFA9060D060D06%0D53FD3EFF532F070D070D07A9FD0EFF070D070D070D5AFD08FF2F070D07%0D075AFD0EFF530D070D070D06AFFD3EFFA9060D060706072FFD0EFF5A06%07060D062FA8FD06FF7E060D0607060DA8FD0DFFA80D0607060D0653FD40%FF7E070D070D070DA8FD0DFFA92F070D070D067EFD06FF0D0D070D072F59%FD0EFF5A070D070D070DA8FD40FFA80D060D060D0653FD0EFF5307060D06%0707FD05FF5907060D060706FD0EFFA9060D060D060D53FD42FF532F070D%070D07A9FD0EFF0D0D070D070D5AFD04FF2F070D070D075AFD0EFF530D07%0D070D06AFFD42FFA9060D060706072FFD0EFF7E0607060D062FA8FFFF7E%060D0607060DA8FD0DFFA80D0607060D0653FD44FF7E070D070D070DA8FD%0EFF2F070D070D067EFFFF0D0D070D072F59FD0EFF5A070D070D070DA8FD%44FFA80D060D060D0653FD0EFF5307060D060706FF7E07060D060706FD0E%FFA9060D060D060D53FD46FF532F070D070D07A9FD0EFF0D0D070D070D53%2F070D070D075AFD0EFF530D070D070D07FD47FFA9060D060706072FFD0E%FF7E0607060D0607060D0607062FA8FD0DFFA80D0607060D065AFD48FF7E%070D070D070DA8FD0EFF2F070D070D070D070D072F5AFD0EFF5A070D070D%070DA9FD48FFA82F060D060D0653FD0EFF5307060D060D060D060706FD0E%FFA9060D060D060D53FD4AFF592F070D070D07A9FD0EFF0D0D070D070D07%0D077EFD0EFF530D070D070D07FD4CFF060D060706072FFD0EFF7E060706%0D0607062FA8FD0DFFA80D0607060D065AFD4CFF7E070D070D070DA8FD0E%FF2F070D070D072F5AFD0EFF5A070D070D070DA9FD4CFFA82F060D060D06%53FD0EFF5307060D060706AFFD0DFFA9060D060D060753FD4EFF592F070D%070D07A9FD0CFFA92F070D070D070D59FD0DFF530D070D070D07FD50FF06%0D060706072FFD0CFF5A060D0607060D060DA8FD0BFF840D0607060D065A%FD50FF7E070D070D070DA8FD0BFF070D070D070D070D067EFD0BFF5A070D%070D072FA9FD50FFA82F060D060D0653FD0AFF5307060D060D060D060706%FD0AFFA8060D060D060D53FD52FF5A2F070D070D07A9FD08FFA92F070D07%0D070D070D070D53FD09FF2F0D070D070D07FD54FF060D060706072FFD08%FF5A060D0607060D0607060D060DA8FD07FF7E0D0607060D065AFD54FF7E%070D070D070DA8FD07FF070D070D072F5A2F070D070D067EFD07FF5A070D%070D072FA9FD54FFA92F060D060D0653FD06FF5307060D060707FF7E0706%0D060706FD06FFA8060D060D060D53FD56FF5A2F070D070D07A9FD04FFA9%2F070D070D077EFFFF2F0D070D070D53FD05FF2F0D070D070D07FD58FF06%0D060706072FFD04FF5A060D0607062FA9FFFF7E0607060D060DA8FFFFFF%7E0D0607060D065AFD58FF7E070D070D070D7EFFFFFF070D070D072F7EFD%04FF2F060D070D067EFFFFFF5A070D070D072FFD59FFA92F060D060D062F%FFFF5307060D060707FD05FF7E07060D060706FFFFA8060D060D060D59FD%5AFF5A2F070D070D07A9FF2F070D070D077EFD06FF2F0D070D070D53FF2F%0D070D070D07FD5CFF060D060706072F5A060D0607062FFD07FF7E060706%0D060D590D0607060D067EFD5CFF84070D070D070D070D070D072F7EFD08%FF2F060D070D070D070D070D072FFD5EFF2F060D060D060D060D060707FD%09FF7E07060D060D060D060D060D59FD5EFF7E0D070D070D070D070D077E%FD0AFF2F0D070D070D070D070D07FD60FF07070607060D0607062FFD0BFF%840607060D0607060D067EFD60FF84070D070D070D072F7EFD0CFF2F060D%070D070D072FFD62FF2F060D060D060707FD0DFF7E07060D060D060D7EFD%62FF7E0D070D070D077EFD0EFF2F0D070D070D2FFD64FF07070607062FFD%0FFF840607060D067EFD64FF84070D072F7EFD10FF2F060D072FFD66FF2F%06072FFD11FF7E07060D7EFD66FF7E0D0784FD12FF2F0D2FFD68FFA8A9FD%14FF84FD34FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: 
%%DocumentCustomColors: (PANTONE 280 C)
%%CMYKCustomColor: 1 0.7200 0 0.1800 (PANTONE 280 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic CMYK</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2011-03-16T10:38:38-04:00</xmp:CreateDate>
         <xmp:ModifyDate>2011-03-16T10:38:38-04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2011-03-16T10:38:38-04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>176</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAsAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qhNX0qz1bTbjTbwOb&#xA;a6ThL6btG9OvwuhVgclCZibDGUQRRfIn5k6Nq/krzvLpcl7eT6XyS5s+U8gaW1c/ZLAj4gVZCadR&#xA;XOl0s45cd0L/AEvP6kSxZKs8Pv6PW/zd8nWOqeQofOHlWe6jktbW3lVY7iZllsFQLupZqPGhDFq9&#xA;Aa1Oa3R5jHJwTrn9rsdZi4sfHAnYd/R57+X2v+XT+XfnFdcuLl9ViijktT9amUyAnjAI1DUqk5HP&#xA;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&#xA;VdirsVdirsVf/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:BE4FCA990920681188C6AF33B70074B5</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:BE4FCA990920681188C6AF33B70074B5</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:BD4FCA990920681188C6AF33B70074B5</stRef:instanceID>
            <stRef:documentID>xmp.did:BD4FCA990920681188C6AF33B70074B5</stRef:documentID>
            <stRef:originalDocumentID>uuid:E3B705F59336E0118987E9F32614B546</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:20:43-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:20:57-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:10-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:28-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:53-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:25:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:17-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:45-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:008011740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EC80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:14-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ED80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:22-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EE80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EF80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F080265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:30-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F180265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:41-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F280265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F380265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:10-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F480265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F580265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F680265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:30:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1405FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1505FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:26-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1605FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:34-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1705FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1805FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:11-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1905FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:33-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1A05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1B05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:58-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1C05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1D05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:24-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1E05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:30-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C62CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:45-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C72CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:51-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C82CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:15-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C92CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:23-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CA2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:41-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CB2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:46-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CC2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:03-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CD2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:08-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CE2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CF2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D02CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B44FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:36:05-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B54FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:36:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B64FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:36:39-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B74FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:01-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B84FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:06-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B94FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:30-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BA4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:40-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BB4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BC4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:38:09-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BD4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:38:28-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BE4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:38:38-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>uuid:E3B705F59336E0118987E9F32614B546</xmpMM:OriginalDocumentID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>8.500000</stDim:w>
            <stDim:h>11.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>PANTONE 280 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Red</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Yellow</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Green</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Cyan</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Blue</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Magenta</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=90 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>14.999998</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=90 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=80 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>80.000000</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=35 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>35.000004</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=5 M=0 Y=90 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>5.000001</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>19.999998</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=90 M=30 Y=95 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>90.000000</xmpG:cyan>
                           <xmpG:magenta>30.000002</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>30.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=75 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=10 Y=45 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>80.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>45.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=70 M=15 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>70.000000</xmpG:cyan>
                           <xmpG:magenta>14.999998</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=95 Y=5 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>5.000001</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=25 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>25.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=100 Y=35 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>35.000004</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=100 Y=50 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=95 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>19.999998</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=25 Y=40 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>25.000000</xmpG:magenta>
                           <xmpG:yellow>39.999996</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=45 Y=50 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>45.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>5.000001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=50 Y=60 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>60.000004</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=55 M=60 Y=65 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>55.000000</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>39.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=40 Y=65 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>39.999996</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=30 M=50 Y=75 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>30.000002</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=60 Y=80 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=65 Y=90 K=35</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>65.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>35.000004</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=70 Y=80 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>70.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 282 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>68.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>53.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 280 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>72.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>18.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grayscale</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=100</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>255</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=90</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>229</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=80</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>203</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=70</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>178</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=60</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>152</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=50</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>127</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=40</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>101</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=30</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>76</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=20</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>50</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=10</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>25</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=5</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>12</xmpG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -131.081 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 131.081 li
192.657 131.081 li
192.657 0 li
cp
clp
[1 0 0 1 0 0 ]ct
40.6333 1.61475 mo
39.9585 1.76172 39.6343 1.99658 39.4287 2.26074 cv
39.1064 2.73047 38.6074 3.66943 37.8145 5.51953 cv
36.3765 8.95508 33.0581 16.2661 31.6191 20.0835 cv
31.4424 20.23 31.0317 20.3184 30.6504 20.3184 cv
30.3276 20.3184 30.0635 20.23 29.8574 20.0835 cv
29.5347 19.3779 29.0938 18.3218 28.7417 17.4995 cv
27.5083 14.7104 li
27.0981 13.7705 26.7153 12.8892 26.4517 12.4487 cv
26.1875 12.9482 25.8345 13.6538 25.4531 14.4756 cv
24.0737 17.4697 li
23.6328 18.4097 23.3096 19.2612 22.8398 20.23 cv
22.6934 20.3765 22.312 20.4648 21.8711 20.4648 cv
21.5483 20.4648 21.3721 20.3765 21.1069 20.23 cv
20.6372 18.9966 19.4634 16.354 18.4653 14.1523 cv
13.6494 3.64014 li
12.8564 1.90869 12.6807 1.76172 11.7114 1.55615 cv
10.9771 1.40967 li
10.7427 1.11523 10.7725 .528809 11.0957 .380859 cv
12.1816 .44043 13.4146 .470215 14.9126 .470215 cv
16.2046 .470215 17.3496 .44043 18.4653 .380859 cv
18.6997 .499512 18.8174 1.23291 18.5244 1.40967 cv
17.9951 1.49707 li
17.4668 1.58545 17.2607 1.73193 17.2607 1.9375 cv
17.2607 2.14355 17.8774 3.52344 18.7881 5.57861 cv
21.6953 12.0679 li
22.5171 13.8882 22.8101 14.5044 23.1631 15.2095 cv
23.5151 14.5635 23.9858 13.6826 24.5723 12.3613 cv
24.9541 11.5098 li
25.1597 11.0396 25.3359 10.3945 25.3359 10.2178 cv
25.3359 10.041 25.2769 9.71826 25.1597 9.4248 cv
22.3413 3.22998 li
21.6655 1.76172 21.46 1.55615 20.3438 1.43848 cv
20.0503 1.40967 li
19.7573 1.17432 19.8154 .499512 20.1387 .380859 cv
21.4009 .44043 22.5464 .470215 23.8384 .470215 cv
25.3359 .470215 26.4517 .44043 27.2144 .380859 cv
27.5669 .470215 27.5376 1.2627 27.332 1.40967 cv
26.8335 1.52686 li
26.4805 1.61475 26.04 1.73193 26.04 1.9375 cv
26.04 2.17285 26.1582 2.49561 26.3047 2.81836 cv
27.1851 4.84521 li
27.4497 5.46143 27.7437 6.10693 28.0073 6.63574 cv
28.3008 6.01904 28.5947 5.43213 28.8882 4.78564 cv
29.1528 4.19873 li
29.6519 3.08252 29.9453 2.20215 29.9453 2.02588 cv
29.9453 1.8208 29.8281 1.73193 29.3584 1.61475 cv
28.4775 1.40967 li
28.2715 1.20313 28.3008 .528809 28.5659 .380859 cv
29.417 .44043 30.4736 .470215 31.4424 .470215 cv
32.5879 .470215 33.6748 .44043 34.438 .380859 cv
34.6724 .528809 34.7314 1.23291 34.4668 1.43848 cv
33.645 1.61475 li
32.6465 1.8208 32.4414 1.9375 31.4136 3.69971 cv
30.7085 4.90283 29.9741 6.25391 29.5933 7.0166 cv
29.3291 7.54541 28.9478 8.39697 28.9478 8.54395 cv
28.9478 8.63184 28.9766 8.80811 29.1821 9.27832 cv
30.562 12.2432 li
31.3252 13.8584 31.6777 14.7104 31.8535 15.1216 cv
33.2632 11.7153 34.6436 8.07471 36.0527 4.49219 cv
36.2578 3.99316 36.8452 2.31885 36.8452 1.99658 cv
36.8452 1.79102 36.6694 1.70264 36.2871 1.58545 cv
35.6416 1.40967 li
35.4067 1.14453 35.4658 .528809 35.73 .380859 cv
36.6694 .44043 37.8442 .470215 38.7246 .470215 cv
39.7524 .470215 40.6035 .44043 41.4258 .380859 cv
41.6904 .528809 41.7192 1.17432 41.5142 1.40967 cv
40.6333 1.61475 li
cp
false sop
/0 
<<
/Name (PANTONE 280 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 1 .72 0 .18 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
48.9131 8.10352 mo
48.9131 8.92627 48.9419 8.98438 49.7354 8.98438 cv
51.7607 8.98438 li
53.2876 8.98438 53.6401 8.77881 53.9336 7.37012 cv
54.0806 6.63574 li
54.2861 6.40088 55.0195 6.40088 55.1675 6.66455 cv
55.1084 7.60498 55.0791 8.66162 55.0791 9.77783 cv
55.0791 10.8936 55.1084 11.9502 55.1675 12.8892 cv
55.0195 13.1543 54.2861 13.1831 54.0806 12.9189 cv
53.9336 12.1851 li
53.6401 10.7754 53.2876 10.5405 51.7607 10.5405 cv
49.7354 10.5405 li
48.9419 10.5405 48.9131 10.5698 48.9131 11.4512 cv
48.9131 14.9448 li
48.9131 16.2959 49.0313 17.2354 49.3823 17.7344 cv
49.7646 18.2622 50.3218 18.4971 52.4658 18.4971 cv
55.0195 18.4971 56.0186 18.4097 57.6333 15.0918 cv
57.8682 14.769 58.6021 14.8862 58.7202 15.2378 cv
58.6021 16.7651 57.8975 19.1436 57.4868 19.9365 cv
55.9307 19.8774 53.1118 19.8486 50.7041 19.8486 cv
46.8872 19.8486 li
45.4775 19.8486 44.0386 19.8774 41.8364 19.9365 cv
41.6016 19.7603 41.6016 19.0552 41.8364 18.9087 cv
43.2168 18.7036 li
44.5386 18.4971 44.7144 18.3218 44.7144 15.6206 cv
44.7144 4.66846 li
44.7144 1.99658 44.5386 1.8208 43.2168 1.55615 cv
42.4829 1.40967 li
42.2183 1.23291 42.248 .557617 42.541 .380859 cv
43.9219 .44043 45.3599 .470215 46.769 .470215 cv
52.9946 .470215 li
54.8735 .470215 56.5469 .44043 56.9282 .380859 cv
56.9575 .851563 57.1631 2.96533 57.3105 4.93262 cv
57.1929 5.25586 56.5176 5.31396 56.2241 5.05029 cv
55.9014 4.02246 55.4897 3.1416 55.1084 2.73047 cv
54.5503 2.17285 53.6694 1.8208 52.2305 1.8208 cv
49.8818 1.8208 li
48.9131 1.8208 48.9131 1.87939 48.9131 2.96533 cv
48.9131 8.10352 li
cp
f
66.5591 14.9746 mo
66.5591 16.354 66.6768 17.2939 67.0581 17.7637 cv
67.4404 18.2622 67.9678 18.4971 70.1113 18.4971 cv
72.7842 18.4971 73.6055 18.4097 75.3374 15.0039 cv
75.5728 14.7104 76.248 14.8276 76.4536 15.1797 cv
76.3071 16.707 75.6025 19.1436 75.1914 19.9365 cv
73.6348 19.8774 70.8164 19.8486 68.4087 19.8486 cv
64.4741 19.8486 li
63.1235 19.8486 61.6553 19.8774 59.835 19.9365 cv
59.5708 19.7603 59.5117 19.0854 59.7466 18.9087 cv
60.8633 18.7617 li
62.1841 18.5864 62.3599 18.3516 62.3599 15.6206 cv
62.3599 4.69775 li
62.3599 1.9668 62.1841 1.70264 60.8633 1.52686 cv
60.0112 1.40967 li
59.7173 1.23291 59.7173 .557617 60.0703 .380859 cv
61.5972 .44043 63.0654 .470215 64.4741 .470215 cv
65.8833 .470215 67.3511 .44043 68.8193 .380859 cv
69.0542 .557617 69.0542 1.23291 68.8193 1.40967 cv
68.0566 1.52686 li
66.7354 1.73193 66.5591 1.9668 66.5591 4.69775 cv
66.5591 14.9746 li
cp
f
84.1167 14.9746 mo
84.1167 16.354 84.2349 17.2939 84.6162 17.7637 cv
84.998 18.2622 85.5259 18.4971 87.6699 18.4971 cv
90.3418 18.4971 91.1641 18.4097 92.8955 15.0039 cv
93.1313 14.7104 93.8062 14.8276 94.0122 15.1797 cv
93.8647 16.707 93.1616 19.1436 92.7495 19.9365 cv
91.1929 19.8774 88.375 19.8486 85.9673 19.8486 cv
82.0327 19.8486 li
80.6812 19.8486 79.2134 19.8774 77.3931 19.9365 cv
77.1289 19.7603 77.0708 19.0854 77.3052 18.9087 cv
78.4209 18.7617 li
79.7422 18.5864 79.9185 18.3516 79.9185 15.6206 cv
79.9185 4.69775 li
79.9185 1.9668 79.7422 1.70264 78.4209 1.52686 cv
77.5693 1.40967 li
77.2754 1.23291 77.2754 .557617 77.6284 .380859 cv
79.1548 .44043 80.623 .470215 82.0327 .470215 cv
83.4419 .470215 84.9092 .44043 86.3784 .380859 cv
86.6128 .557617 86.6128 1.23291 86.3784 1.40967 cv
85.6147 1.52686 li
84.293 1.73193 84.1167 1.9668 84.1167 4.69775 cv
84.1167 14.9746 li
cp
f
101.822 8.10352 mo
101.822 8.92627 101.852 8.98438 102.644 8.98438 cv
104.669 8.98438 li
106.197 8.98438 106.549 8.77881 106.842 7.37012 cv
106.991 6.63574 li
107.196 6.40088 107.929 6.40088 108.076 6.66455 cv
108.017 7.60498 107.988 8.66162 107.988 9.77783 cv
107.988 10.8936 108.017 11.9502 108.076 12.8892 cv
107.929 13.1543 107.196 13.1831 106.991 12.9189 cv
106.842 12.1851 li
106.549 10.7754 106.197 10.5405 104.669 10.5405 cv
102.644 10.5405 li
101.852 10.5405 101.822 10.5698 101.822 11.4512 cv
101.822 14.9448 li
101.822 16.2959 101.939 17.2354 102.292 17.7344 cv
102.673 18.2622 103.232 18.4971 105.375 18.4971 cv
107.929 18.4971 108.927 18.4097 110.542 15.0918 cv
110.777 14.769 111.511 14.8862 111.629 15.2378 cv
111.511 16.7651 110.807 19.1436 110.396 19.9365 cv
108.84 19.8774 106.021 19.8486 103.613 19.8486 cv
99.7954 19.8486 li
98.3862 19.8486 96.9478 19.8774 94.7461 19.9365 cv
94.5112 19.7603 94.5112 19.0552 94.7461 18.9087 cv
96.1265 18.7036 li
97.4468 18.4971 97.6235 18.3218 97.6235 15.6206 cv
97.6235 4.66846 li
97.6235 1.99658 97.4468 1.8208 96.1265 1.55615 cv
95.3916 1.40967 li
95.1274 1.23291 95.1567 .557617 95.4507 .380859 cv
96.8306 .44043 98.269 .470215 99.6782 .470215 cv
105.904 .470215 li
107.782 .470215 109.457 .44043 109.839 .380859 cv
109.867 .851563 110.073 2.96533 110.219 4.93262 cv
110.102 5.25586 109.427 5.31396 109.133 5.05029 cv
108.811 4.02246 108.399 3.1416 108.017 2.73047 cv
107.459 2.17285 106.579 1.8208 105.14 1.8208 cv
102.792 1.8208 li
101.822 1.8208 101.822 1.87939 101.822 2.96533 cv
101.822 8.10352 li
cp
f
118.881 20.3184 mo
116.18 20.3184 114.505 19.5547 113.889 19.2026 cv
113.332 18.5562 112.95 16.4429 112.95 14.4453 cv
113.156 14.064 113.831 14.0347 114.065 14.3579 cv
114.653 16.2661 116.62 18.9673 119.117 18.9673 cv
121.289 18.9673 122.287 17.4697 122.287 16.002 cv
122.287 13.624 120.055 12.2139 118.293 11.3335 cv
116.18 10.2759 113.86 8.51514 113.86 5.60742 cv
113.831 2.28955 116.414 0 120.672 0 cv
121.64 0 122.844 .117188 124.019 .470215 cv
124.401 .586914 124.665 .64502 125.017 .70459 cv
125.253 1.35059 125.545 2.93555 125.545 4.90283 cv
125.399 5.25586 124.665 5.28516 124.401 4.99121 cv
123.902 3.49365 122.64 1.35059 120.525 1.35059 cv
118.587 1.35059 117.531 2.61328 117.531 4.08154 cv
117.531 5.43213 118.735 6.66455 120.203 7.42822 cv
122.14 8.45654 li
123.96 9.4248 126.281 11.1279 126.281 14.3579 cv
126.281 17.9692 123.315 20.3184 118.881 20.3184 cv
cp
f
134.238 14.9746 mo
134.238 16.354 134.355 17.2939 134.737 17.7637 cv
135.119 18.2622 135.647 18.4971 137.791 18.4971 cv
140.461 18.4971 141.284 18.4097 143.016 15.0039 cv
143.25 14.7104 143.926 14.8276 144.13 15.1797 cv
143.985 16.707 143.281 19.1436 142.871 19.9365 cv
141.314 19.8774 138.495 19.8486 136.086 19.8486 cv
132.153 19.8486 li
130.801 19.8486 129.333 19.8774 127.514 19.9365 cv
127.249 19.7603 127.191 19.0854 127.424 18.9087 cv
128.541 18.7617 li
129.862 18.5864 130.038 18.3516 130.038 15.6206 cv
130.038 4.69775 li
130.038 1.9668 129.862 1.70264 128.541 1.52686 cv
127.688 1.40967 li
127.395 1.23291 127.395 .557617 127.748 .380859 cv
129.275 .44043 130.744 .470215 132.153 .470215 cv
133.562 .470215 135.03 .44043 136.498 .380859 cv
136.733 .557617 136.733 1.23291 136.498 1.40967 cv
135.735 1.52686 li
134.413 1.73193 134.238 1.9668 134.238 4.69775 cv
134.238 14.9746 li
cp
f
151.942 8.10352 mo
151.942 8.92627 151.971 8.98438 152.764 8.98438 cv
154.79 8.98438 li
156.316 8.98438 156.669 8.77881 156.962 7.37012 cv
157.111 6.63574 li
157.315 6.40088 158.049 6.40088 158.196 6.66455 cv
158.137 7.60498 158.108 8.66162 158.108 9.77783 cv
158.108 10.8936 158.137 11.9502 158.196 12.8892 cv
158.049 13.1543 157.315 13.1831 157.111 12.9189 cv
156.962 12.1851 li
156.669 10.7754 156.316 10.5405 154.79 10.5405 cv
152.764 10.5405 li
151.971 10.5405 151.942 10.5698 151.942 11.4512 cv
151.942 14.9448 li
151.942 16.2959 152.059 17.2354 152.413 17.7344 cv
152.794 18.2622 153.353 18.4971 155.495 18.4971 cv
158.049 18.4971 159.048 18.4097 160.663 15.0918 cv
160.898 14.769 161.632 14.8862 161.748 15.2378 cv
161.632 16.7651 160.927 19.1436 160.516 19.9365 cv
158.958 19.8774 156.141 19.8486 153.733 19.8486 cv
149.917 19.8486 li
148.507 19.8486 147.067 19.8774 144.866 19.9365 cv
144.631 19.7603 144.631 19.0552 144.866 18.9087 cv
146.246 18.7036 li
147.567 18.4971 147.744 18.3218 147.744 15.6206 cv
147.744 4.66846 li
147.744 1.99658 147.567 1.8208 146.246 1.55615 cv
145.513 1.40967 li
145.248 1.23291 145.277 .557617 145.57 .380859 cv
146.951 .44043 148.39 .470215 149.798 .470215 cv
156.024 .470215 li
157.903 .470215 159.576 .44043 159.958 .380859 cv
159.988 .851563 160.193 2.96533 160.339 4.93262 cv
160.222 5.25586 159.547 5.31396 159.253 5.05029 cv
158.93 4.02246 158.519 3.1416 158.137 2.73047 cv
157.581 2.17285 156.698 1.8208 155.26 1.8208 cv
152.911 1.8208 li
151.942 1.8208 151.942 1.87939 151.942 2.96533 cv
151.942 8.10352 li
cp
f
173.023 15.6206 mo
173.023 18.3516 173.2 18.5864 174.521 18.7617 cv
175.695 18.9087 li
175.902 19.0854 175.902 19.7603 175.695 19.9365 cv
173.788 19.8774 172.347 19.8486 170.94 19.8486 cv
169.528 19.8486 168.061 19.8774 166.329 19.9365 cv
166.093 19.7603 166.093 19.0854 166.329 18.9087 cv
167.327 18.7617 li
168.649 18.5562 168.826 18.3516 168.826 15.6206 cv
168.826 14.1523 li
168.826 12.6841 168.794 12.2139 168.032 10.6582 cv
164.537 3.43506 li
163.952 2.23145 163.687 1.76172 162.658 1.58545 cv
161.661 1.40967 li
161.396 1.17432 161.425 .470215 161.778 .380859 cv
163.098 .44043 164.185 .470215 165.917 .470215 cv
167.708 .470215 169.207 .44043 170.204 .380859 cv
170.469 .499512 170.528 1.17432 170.263 1.40967 cv
169.265 1.64404 li
168.736 1.76172 168.56 1.87939 168.56 1.90869 cv
168.56 2.14355 168.707 2.58301 169.325 3.96387 cv
170.703 7.10547 li
171.144 8.07471 171.702 9.24902 172.054 9.98291 cv
172.905 8.54395 173.728 6.84131 174.521 5.34326 cv
175.636 3.25879 176.047 2.28955 176.047 1.9375 cv
176.047 1.76172 175.754 1.64404 175.049 1.52686 cv
174.373 1.40967 li
174.14 1.2627 174.109 .528809 174.403 .380859 cv
175.577 .44043 176.634 .470215 177.692 .470215 cv
178.806 .470215 179.717 .44043 180.568 .380859 cv
180.922 .499512 180.922 1.20313 180.687 1.40967 cv
179.924 1.55615 li
179.395 1.64404 178.837 1.84912 178.514 2.26074 cv
178.075 2.81836 177.338 3.87549 175.929 6.42969 cv
174.081 9.77783 li
173.317 11.1567 173.023 11.8911 173.023 13.5649 cv
173.023 15.6206 li
cp
f
101.92 54.2432 mo
107.108 54.2432 108.897 57.6206 106.011 63.3003 cv
95.98 83.1738 li
85.9497 63.3003 li
83.063 57.6206 84.8374 54.2432 90.0239 54.2432 cv
101.92 54.2432 li
cp
112.049 114.964 mo
100.704 92.5225 li
115.75 62.8135 li
120.132 54.3403 121.203 53.8535 128.605 53.8535 cv
128.605 49.5688 li
63.356 49.5688 li
63.356 53.8535 li
70.7573 53.8535 71.9253 54.3403 76.2104 62.8135 cv
91.2573 92.5225 li
79.9116 114.964 li
53.3252 62.2285 li
50.2085 55.9966 50.9878 53.8535 55.3213 53.8535 cv
58.0972 53.8535 li
58.0972 49.5688 li
27.9077 49.5688 li
27.9077 53.8213 li
29.4653 53.9185 li
39.2041 54.5029 39.8862 55.0229 44.3657 63.9819 cv
78.354 131.081 li
81.1772 131.081 li
95.98 101.857 li
110.784 131.081 li
113.608 131.081 li
147.595 63.9819 li
152.076 55.0229 152.756 54.438 162.496 53.8535 cv
163.139 53.813 li
163.139 49.5688 li
133.864 49.5688 li
133.864 53.8535 li
136.639 53.8535 li
140.973 53.8535 141.751 55.9966 138.635 62.2285 cv
112.049 114.964 li
cp
f
9.05957 29.7681 mo
9.05957 30.0386 9.10449 31.2388 9.23975 32.1079 cv
9.17969 32.2886 8.77441 32.3481 8.66943 32.2134 cv
8.26465 30.8188 7.30469 30.0688 5.84961 30.0688 cv
4.18457 30.0688 2.3999 31.4937 2.3999 34.478 cv
2.3999 37.4634 4.12451 39.0679 5.9248 39.0679 cv
7.73975 39.0679 8.57959 37.7632 8.98438 36.7437 cv
9.10449 36.6235 9.46436 36.6685 9.55469 36.8481 cv
9.44971 37.9585 9.19434 38.8579 8.98438 39.2026 cv
8.17432 39.4282 7.10938 39.7583 5.93945 39.7583 cv
4.46973 39.7583 2.96973 39.4126 1.90479 38.6177 cv
.824707 37.7935 0 36.5483 0 34.688 cv
0 32.8579 .779785 31.5688 1.81494 30.7134 cv
2.87988 29.8286 4.40967 29.3784 5.96973 29.3784 cv
7.49951 29.3784 8.60938 29.7388 9.05957 29.7681 cv
cp
f
13.8149 37.0278 mo
13.8149 37.7329 13.875 38.2134 14.0698 38.4526 cv
14.2646 38.7085 14.5347 38.8276 15.6299 38.8276 cv
16.9946 38.8276 17.4146 38.7827 18.2998 37.0435 cv
18.4194 36.8931 18.7646 36.9536 18.8696 37.1333 cv
18.7944 37.9136 18.4346 39.1577 18.2246 39.563 cv
17.4297 39.5327 15.9897 39.5181 14.7598 39.5181 cv
12.75 39.5181 li
12.0601 39.5181 11.3101 39.5327 10.3799 39.563 cv
10.2451 39.4731 10.2148 39.1284 10.335 39.0376 cv
10.9048 38.9634 li
11.5801 38.8735 11.6699 38.7534 11.6699 37.3579 cv
11.6699 31.7788 li
11.6699 30.3833 11.5801 30.2485 10.9048 30.1587 cv
10.4697 30.0981 li
10.3198 30.0083 10.3198 29.6636 10.5 29.5737 cv
11.2798 29.603 12.0298 29.6187 12.75 29.6187 cv
13.4697 29.6187 14.2197 29.603 14.9697 29.5737 cv
15.0898 29.6636 15.0898 30.0083 14.9697 30.0981 cv
14.5796 30.1587 li
13.9048 30.2632 13.8149 30.3833 13.8149 31.7788 cv
13.8149 37.0278 li
cp
f
20.0547 31.7788 mo
20.0547 30.3833 19.9648 30.2935 19.29 30.1587 cv
18.915 30.0835 li
18.7949 29.9937 18.7798 29.6636 18.9448 29.5737 cv
19.665 29.603 20.415 29.6187 21.1348 29.6187 cv
21.8696 29.6187 22.605 29.603 23.3247 29.5737 cv
23.4448 29.6636 23.4448 29.9937 23.3247 30.0835 cv
22.9648 30.1431 li
22.2896 30.2632 22.1997 30.3833 22.1997 31.7788 cv
22.1997 35.2437 li
22.1997 36.9985 22.3945 38.9331 24.6748 38.9331 cv
26.5947 38.9331 27.1797 37.2534 27.1797 35.1978 cv
27.1797 33.3833 li
27.1797 32.1685 27.1196 31.0288 26.9546 30.6382 cv
26.8198 30.3237 26.4897 30.2339 26.0845 30.1587 cv
25.6797 30.0835 li
25.5596 29.9634 25.5898 29.6636 25.6797 29.5737 cv
26.4897 29.603 27.0747 29.6187 27.6895 29.6187 cv
28.2446 29.6187 28.7993 29.603 29.3696 29.5737 cv
29.4595 29.6636 29.4893 29.9634 29.3696 30.0835 cv
29.0996 30.1431 li
28.7095 30.2339 28.4243 30.3237 28.2896 30.6382 cv
28.1245 31.0288 28.0645 32.1685 28.0645 33.3833 cv
28.0645 35.063 li
28.0645 36.4731 27.9297 37.7632 27.1045 38.6782 cv
26.4448 39.3833 25.3496 39.7583 24.1348 39.7583 cv
22.9946 39.7583 21.9746 39.5776 21.165 38.9185 cv
20.3848 38.2729 20.0547 37.1636 20.0547 35.5278 cv
20.0547 31.7788 li
cp
f
33.5244 36.9829 mo
33.5244 38.1528 33.6743 38.8882 34.8442 38.8882 cv
35.9546 38.8882 36.5396 38.0327 36.5396 36.8179 cv
36.5396 35.5132 35.7896 34.5981 34.3496 34.5981 cv
33.5244 34.5981 33.5244 34.6128 33.5244 35.2134 cv
33.5244 36.9829 li
cp
33.5244 33.5181 mo
33.5244 33.9087 33.5396 33.938 34.3193 33.938 cv
35.6094 33.938 36.0894 33.1138 36.0894 32.2134 cv
36.0894 30.9087 35.2793 30.2632 34.2446 30.2632 cv
33.5396 30.2632 33.5244 30.3833 33.5244 31.0435 cv
33.5244 33.5181 li
cp
31.4546 32.063 mo
31.4546 30.5483 31.4243 30.3989 30.7944 30.3081 cv
30.3896 30.2485 li
30.2544 30.1733 30.2246 29.7231 30.4497 29.7085 cv
31.5894 29.6333 32.6846 29.5737 34.1846 29.5737 cv
35.6245 29.5737 36.5845 29.7388 37.2441 30.1284 cv
37.8892 30.5181 38.2793 31.1479 38.2793 32.0337 cv
38.2793 33.2935 37.2144 33.7886 36.7495 33.9087 cv
36.5991 33.938 36.4492 33.9985 36.4492 34.0737 cv
36.4492 34.1187 36.5244 34.1636 36.6592 34.1929 cv
37.8442 34.4487 38.8491 35.228 38.8643 36.6831 cv
38.8794 38.063 38.0542 38.8735 37.1094 39.2026 cv
36.1646 39.5327 35.0396 39.5776 34.1245 39.5776 cv
33.5845 39.5776 33.0146 39.5181 32.5796 39.5181 cv
31.8447 39.5181 31.1094 39.5327 30.2544 39.563 cv
30.1348 39.4731 30.1348 39.0835 30.2544 39.0376 cv
30.6895 38.9478 li
31.3647 38.813 31.4546 38.7085 31.4546 37.3579 cv
31.4546 32.063 li
cp
f
49.1543 30.0688 mo
47.3091 30.0688 46.3193 31.7935 46.3193 34.2983 cv
46.3193 36.1284 46.9644 39.0679 49.4092 39.0679 cv
51.374 39.0679 52.1392 37.1479 52.1392 34.7183 cv
52.1392 32.1538 51.0142 30.0688 49.1543 30.0688 cv
cp
54.5391 34.5229 mo
54.5391 37.7935 52.3491 39.7583 49.124 39.7583 cv
46.1094 39.7583 43.9194 37.7778 43.9194 34.6431 cv
43.9194 31.6733 46.1392 29.3784 49.2739 29.3784 cv
52.394 29.3784 54.5391 31.478 54.5391 34.5229 cv
cp
f
59.2192 33.6382 mo
59.2192 34.0435 59.2339 34.0884 59.6392 34.0884 cv
60.7939 34.0884 li
61.5889 34.0884 61.7539 33.9829 61.9038 33.2485 cv
61.979 32.8882 li
62.084 32.7534 62.459 32.7681 62.5488 32.9038 cv
62.519 33.3833 62.5039 33.938 62.5039 34.5083 cv
62.5039 35.063 62.519 35.6187 62.5488 36.0679 cv
62.459 36.2036 62.084 36.2183 61.979 36.0835 cv
61.9038 35.7231 li
61.7539 35.0034 61.5889 34.8833 60.7939 34.8833 cv
59.6392 34.8833 li
59.2339 34.8833 59.2192 34.9282 59.2192 35.3335 cv
59.2192 37.3579 li
59.2192 38.7534 59.3091 38.8735 59.9839 38.9634 cv
60.5391 39.0376 li
60.644 39.1284 60.644 39.4731 60.5391 39.563 cv
59.6089 39.5327 58.874 39.5181 58.1543 39.5181 cv
57.4644 39.5181 56.7144 39.5327 55.8145 39.563 cv
55.6943 39.4731 55.6943 39.1284 55.8145 39.0376 cv
56.3091 38.9634 li
56.9844 38.8579 57.0742 38.7534 57.0742 37.3579 cv
57.0742 31.7788 li
57.0742 30.3833 56.9844 30.2485 56.3091 30.1431 cv
56.0093 30.0981 li
55.874 30.0083 55.874 29.6333 56.0391 29.5737 cv
56.6841 29.603 57.4341 29.6187 58.1543 29.6187 cv
61.3042 29.6187 li
62.2642 29.6187 63.1191 29.603 63.3291 29.5737 cv
63.3291 29.8286 63.3291 30.9087 63.3589 31.9136 cv
63.2988 32.0786 62.9688 32.0933 62.7891 31.9731 cv
62.624 31.3579 62.5039 30.9985 62.354 30.8032 cv
62.0991 30.4888 61.6489 30.3081 60.8843 30.3081 cv
59.7139 30.3081 li
59.2192 30.3081 59.2192 30.3384 59.2192 30.9233 cv
59.2192 33.6382 li
cp
f
81.8086 30.2036 mo
81.4639 30.2788 81.2988 30.3989 81.1938 30.5337 cv
81.0288 30.7729 80.7739 31.2534 80.3687 32.1987 cv
79.6338 33.9536 77.939 37.688 77.2036 39.6382 cv
77.1138 39.7134 76.9038 39.7583 76.709 39.7583 cv
76.5439 39.7583 76.4087 39.7134 76.3037 39.6382 cv
76.1387 39.2778 75.9141 38.7378 75.7339 38.3179 cv
75.104 36.8931 li
74.894 36.4136 74.6987 35.9634 74.564 35.7378 cv
74.4287 35.9937 74.249 36.353 74.0542 36.7729 cv
73.3491 38.3032 li
73.124 38.7827 72.959 39.2183 72.7192 39.7134 cv
72.644 39.7876 72.4492 39.8335 72.2241 39.8335 cv
72.0591 39.8335 71.9692 39.7876 71.834 39.7134 cv
71.5942 39.0835 70.9941 37.7329 70.4839 36.6079 cv
68.0244 31.2388 li
67.6191 30.353 67.5293 30.2788 67.0342 30.1733 cv
66.6592 30.0981 li
66.5391 29.9487 66.5542 29.6489 66.7192 29.5737 cv
67.2744 29.603 67.9043 29.6187 68.6689 29.6187 cv
69.3291 29.6187 69.9141 29.603 70.4839 29.5737 cv
70.604 29.6333 70.6641 30.0083 70.5142 30.0981 cv
70.2441 30.1431 li
69.9741 30.188 69.8691 30.2632 69.8691 30.3687 cv
69.8691 30.4731 70.1841 31.1782 70.6489 32.228 cv
72.1343 35.5435 li
72.5542 36.4731 72.7041 36.7886 72.8838 37.1479 cv
73.064 36.8179 73.3042 36.3687 73.604 35.6929 cv
73.7988 35.2583 li
73.9038 35.0181 73.9941 34.688 73.9941 34.5981 cv
73.9941 34.5083 73.9639 34.3433 73.9038 34.1929 cv
72.4639 31.0288 li
72.1191 30.2788 72.0142 30.1733 71.4438 30.1138 cv
71.2939 30.0981 li
71.144 29.978 71.1743 29.6333 71.3389 29.5737 cv
71.9839 29.603 72.5688 29.6187 73.229 29.6187 cv
73.9941 29.6187 74.564 29.603 74.9541 29.5737 cv
75.1338 29.6187 75.1191 30.0239 75.0142 30.0981 cv
74.7588 30.1587 li
74.5791 30.2036 74.354 30.2632 74.354 30.3687 cv
74.354 30.4888 74.4141 30.6538 74.4888 30.8188 cv
74.939 31.853 li
75.0737 32.1685 75.2241 32.4985 75.3589 32.7681 cv
75.5088 32.4536 75.6587 32.1538 75.8091 31.8237 cv
75.9438 31.5229 li
76.1987 30.9536 76.3486 30.5034 76.3486 30.4136 cv
76.3486 30.3081 76.2891 30.2632 76.0488 30.2036 cv
75.5991 30.0981 li
75.4937 29.9937 75.5088 29.6489 75.644 29.5737 cv
76.0791 29.603 76.6187 29.6187 77.1138 29.6187 cv
77.6987 29.6187 78.2539 29.603 78.6436 29.5737 cv
78.7637 29.6489 78.7939 30.0083 78.6587 30.1138 cv
78.2388 30.2036 li
77.729 30.3081 77.624 30.3687 77.0986 31.2681 cv
76.7388 31.8833 76.3638 32.5737 76.1689 32.9634 cv
76.0337 33.2329 75.8389 33.6685 75.8389 33.7437 cv
75.8389 33.7886 75.854 33.8784 75.959 34.1187 cv
76.6641 35.6333 li
77.0537 36.4585 77.2339 36.8931 77.3237 37.103 cv
78.0439 35.3628 78.7485 33.5034 79.4688 31.6733 cv
79.5737 31.4185 79.8735 30.563 79.8735 30.3989 cv
79.8735 30.2935 79.7837 30.2485 79.5889 30.188 cv
79.2588 30.0981 li
79.1387 29.9634 79.1689 29.6489 79.3037 29.5737 cv
79.7837 29.603 80.3838 29.6187 80.8335 29.6187 cv
81.3589 29.6187 81.7935 29.603 82.2134 29.5737 cv
82.3486 29.6489 82.3638 29.978 82.2588 30.0981 cv
81.8086 30.2036 li
cp
f
85.5737 33.5181 mo
85.5737 33.938 85.5884 33.9683 85.9937 33.9683 cv
87.0283 33.9683 li
87.8086 33.9683 87.9883 33.8638 88.1387 33.1431 cv
88.2134 32.7681 li
88.3184 32.6479 88.6934 32.6479 88.7686 32.7837 cv
88.7383 33.2632 88.7236 33.8032 88.7236 34.3735 cv
88.7236 34.9429 88.7383 35.4829 88.7686 35.9634 cv
88.6934 36.0981 88.3184 36.1128 88.2134 35.978 cv
88.1387 35.603 li
87.9883 34.8833 87.8086 34.7632 87.0283 34.7632 cv
85.9937 34.7632 li
85.5884 34.7632 85.5737 34.7778 85.5737 35.228 cv
85.5737 37.0132 li
85.5737 37.7036 85.6338 38.1831 85.8135 38.438 cv
86.0088 38.7085 86.2935 38.8276 87.3887 38.8276 cv
88.6934 38.8276 89.2036 38.7827 90.0283 37.0884 cv
90.1484 36.9233 90.5234 36.9829 90.5835 37.1636 cv
90.5234 37.9429 90.1636 39.1577 89.9536 39.563 cv
89.1587 39.5327 87.7183 39.5181 86.4888 39.5181 cv
84.5386 39.5181 li
83.8188 39.5181 83.0835 39.5327 81.9585 39.563 cv
81.8389 39.4731 81.8389 39.1128 81.9585 39.0376 cv
82.6636 38.9331 li
83.3389 38.8276 83.4287 38.7378 83.4287 37.3579 cv
83.4287 31.7632 li
83.4287 30.3989 83.3389 30.3081 82.6636 30.1733 cv
82.2886 30.0981 li
82.1538 30.0083 82.1689 29.6636 82.3188 29.5737 cv
83.0239 29.603 83.7588 29.6187 84.4785 29.6187 cv
87.6587 29.6187 li
88.6187 29.6187 89.4736 29.603 89.6685 29.5737 cv
89.6836 29.813 89.7886 30.8931 89.8633 31.8979 cv
89.8032 32.063 89.4585 32.0933 89.3086 31.9585 cv
89.1436 31.4331 88.9336 30.9839 88.7383 30.7729 cv
88.4536 30.4888 88.0034 30.3081 87.2686 30.3081 cv
86.0684 30.3081 li
85.5737 30.3081 85.5737 30.3384 85.5737 30.8931 cv
85.5737 33.5181 li
cp
f
94.2139 39.7583 mo
92.834 39.7583 91.979 39.3677 91.6641 39.188 cv
91.3789 38.8579 91.1841 37.7778 91.1841 36.7583 cv
91.2891 36.563 91.6338 36.5483 91.7539 36.7134 cv
92.0537 37.688 93.0586 39.0679 94.3335 39.0679 cv
95.4438 39.0679 95.9536 38.3032 95.9536 37.5532 cv
95.9536 36.3384 94.8135 35.6187 93.9136 35.1685 cv
92.834 34.6284 91.6489 33.728 91.6489 32.2437 cv
91.6338 30.5483 92.9536 29.3784 95.1289 29.3784 cv
95.6235 29.3784 96.2388 29.438 96.8384 29.6187 cv
97.0337 29.6782 97.1685 29.7085 97.3491 29.7388 cv
97.4683 30.0688 97.6187 30.8784 97.6187 31.8833 cv
97.5435 32.063 97.1685 32.0786 97.0337 31.9282 cv
96.7788 31.1636 96.1338 30.0688 95.0537 30.0688 cv
94.064 30.0688 93.5239 30.7134 93.5239 31.4634 cv
93.5239 32.1538 94.1387 32.7837 94.8887 33.1733 cv
95.8784 33.6987 li
96.8086 34.1929 97.9937 35.063 97.9937 36.7134 cv
97.9937 38.5581 96.4785 39.7583 94.2139 39.7583 cv
cp
f
102.478 30.7437 mo
102.478 30.3833 102.478 30.3081 102.119 30.3081 cv
101.189 30.3081 li
100.093 30.3081 99.7788 30.9087 99.3286 32.0034 cv
99.1489 32.0933 98.8638 32.063 98.7739 31.8687 cv
99.0894 30.8335 99.1636 29.9038 99.269 29.3188 cv
99.3286 29.2739 99.4038 29.2437 99.479 29.2437 cv
99.5542 29.2437 99.6284 29.2583 99.689 29.3032 cv
99.7632 29.5581 99.8081 29.6187 100.949 29.6187 cv
106.529 29.6187 li
107.519 29.6187 107.744 29.603 107.878 29.2886 cv
107.939 29.2583 107.984 29.2437 108.074 29.2437 cv
108.164 29.2437 108.269 29.3032 108.298 29.3481 cv
108.148 29.8589 108.043 31.0737 108.074 31.9282 cv
107.999 32.063 107.593 32.0933 107.519 31.9731 cv
107.263 31.0132 107.053 30.3081 105.929 30.3081 cv
105.029 30.3081 li
104.668 30.3081 104.624 30.353 104.624 30.7437 cv
104.624 37.3579 li
104.624 38.7534 104.713 38.8735 105.388 38.9634 cv
105.988 39.0376 li
106.093 39.1284 106.093 39.4731 105.988 39.563 cv
105.013 39.5327 104.263 39.5181 103.588 39.5181 cv
102.869 39.5181 102.089 39.5327 101.039 39.563 cv
100.919 39.4731 100.919 39.1284 101.039 39.0376 cv
101.714 38.9634 li
102.388 38.8882 102.478 38.7534 102.478 37.3579 cv
102.478 30.7437 li
cp
f
112.409 33.5181 mo
112.409 33.938 112.423 33.9683 112.829 33.9683 cv
113.863 33.9683 li
114.644 33.9683 114.824 33.8638 114.974 33.1431 cv
115.048 32.7681 li
115.154 32.6479 115.529 32.6479 115.603 32.7837 cv
115.574 33.2632 115.558 33.8032 115.558 34.3735 cv
115.558 34.9429 115.574 35.4829 115.603 35.9634 cv
115.529 36.0981 115.154 36.1128 115.048 35.978 cv
114.974 35.603 li
114.824 34.8833 114.644 34.7632 113.863 34.7632 cv
112.829 34.7632 li
112.423 34.7632 112.409 34.7778 112.409 35.228 cv
112.409 37.0132 li
112.409 37.7036 112.468 38.1831 112.648 38.438 cv
112.843 38.7085 113.128 38.8276 114.224 38.8276 cv
115.529 38.8276 116.039 38.7827 116.863 37.0884 cv
116.984 36.9233 117.359 36.9829 117.418 37.1636 cv
117.359 37.9429 116.999 39.1577 116.789 39.563 cv
115.994 39.5327 114.553 39.5181 113.324 39.5181 cv
111.374 39.5181 li
110.654 39.5181 109.918 39.5327 108.793 39.563 cv
108.673 39.4731 108.673 39.1128 108.793 39.0376 cv
109.499 38.9331 li
110.173 38.8276 110.263 38.7378 110.263 37.3579 cv
110.263 31.7632 li
110.263 30.3989 110.173 30.3081 109.499 30.1733 cv
109.124 30.0981 li
108.989 30.0083 109.003 29.6636 109.154 29.5737 cv
109.859 29.603 110.593 29.6187 111.314 29.6187 cv
114.494 29.6187 li
115.454 29.6187 116.308 29.603 116.503 29.5737 cv
116.519 29.813 116.624 30.8931 116.699 31.8979 cv
116.638 32.063 116.293 32.0933 116.144 31.9585 cv
115.978 31.4331 115.769 30.9839 115.574 30.7729 cv
115.289 30.4888 114.838 30.3081 114.103 30.3081 cv
112.904 30.3081 li
112.409 30.3081 112.409 30.3384 112.409 30.8931 cv
112.409 33.5181 li
cp
f
121.438 33.9536 mo
121.438 34.478 121.484 34.5229 122.369 34.5229 cv
122.908 34.5229 123.223 34.3882 123.508 34.103 cv
123.763 33.8481 124.048 33.3687 124.048 32.4829 cv
124.048 31.1333 123.253 30.2632 122.083 30.2632 cv
121.468 30.2632 121.438 30.3081 121.438 31.0288 cv
121.438 33.9536 li
cp
119.383 32.0483 mo
119.383 30.5483 119.353 30.3833 118.723 30.2935 cv
118.318 30.2339 li
118.168 30.1587 118.168 29.7837 118.348 29.7085 cv
119.473 29.6333 120.643 29.5737 122.068 29.5737 cv
123.343 29.5737 124.438 29.7681 125.007 30.1138 cv
125.878 30.6235 126.328 31.3735 126.328 32.3335 cv
126.328 33.6685 125.428 34.2388 124.738 34.5835 cv
124.587 34.6587 124.587 34.7485 124.664 34.9136 cv
125.653 36.9233 126.268 38.0483 126.988 38.6636 cv
127.378 38.978 127.768 39.0679 127.993 39.0835 cv
128.128 39.1577 128.128 39.3833 128.052 39.4731 cv
127.813 39.5776 127.333 39.6079 126.869 39.6079 cv
125.488 39.6079 124.619 39.1128 123.958 38.0327 cv
123.478 37.2378 123.133 36.5034 122.789 35.7085 cv
122.608 35.3032 122.369 35.1831 121.994 35.1831 cv
121.468 35.1831 121.438 35.2134 121.438 35.5132 cv
121.438 37.3579 li
121.438 38.7378 121.529 38.8433 122.203 38.9634 cv
122.608 39.0376 li
122.713 39.1128 122.713 39.4731 122.608 39.563 cv
121.813 39.5327 121.123 39.5181 120.404 39.5181 cv
119.654 39.5181 118.994 39.5327 118.213 39.563 cv
118.093 39.4731 118.093 39.1128 118.213 39.0376 cv
118.619 38.9634 li
119.293 38.8433 119.383 38.7378 119.383 37.3579 cv
119.383 32.0483 li
cp
f
137.638 36.9683 mo
137.638 37.9429 137.638 38.8882 137.667 39.3833 cv
137.562 39.563 137.142 39.728 136.783 39.728 cv
136.767 39.728 136.273 38.9634 135.568 38.0933 cv
132.103 33.8032 li
131.233 32.7388 130.738 32.1079 130.468 31.8833 cv
130.392 32.0337 130.392 32.2886 130.392 32.8433 cv
130.392 35.7534 li
130.392 36.9683 130.453 38.0933 130.618 38.4985 cv
130.753 38.813 131.097 38.9185 131.488 38.978 cv
131.908 39.0376 li
132.028 39.1577 131.998 39.4731 131.908 39.563 cv
131.097 39.5327 130.498 39.5181 129.898 39.5181 cv
129.343 39.5181 128.789 39.5327 128.218 39.563 cv
128.128 39.4731 128.098 39.1577 128.218 39.0376 cv
128.472 38.9927 li
128.878 38.9185 129.177 38.813 129.298 38.4985 cv
129.462 38.0933 129.507 36.9683 129.507 35.7534 cv
129.507 31.9438 li
129.507 31.1187 129.493 30.8784 129.403 30.6685 cv
129.283 30.4136 129.073 30.2339 128.548 30.1587 cv
128.128 30.0981 li
128.023 29.978 128.039 29.6187 128.188 29.5737 cv
128.893 29.603 129.643 29.6187 130.257 29.6187 cv
130.767 29.6187 131.203 29.603 131.517 29.5737 cv
131.667 30.2485 132.642 31.3882 133.993 32.9937 cv
135.252 34.478 li
135.913 35.2583 136.347 35.7837 136.693 36.1284 cv
136.752 35.978 136.752 35.7231 136.752 35.4536 cv
136.752 33.3833 li
136.752 32.1685 136.693 31.0435 136.527 30.6382 cv
136.392 30.3237 136.062 30.2183 135.658 30.1587 cv
135.252 30.0981 li
135.132 29.978 135.163 29.6636 135.252 29.5737 cv
136.062 29.603 136.648 29.6187 137.263 29.6187 cv
137.818 29.6187 138.357 29.603 138.943 29.5737 cv
139.033 29.6636 139.062 29.978 138.943 30.0981 cv
138.672 30.1431 li
138.283 30.2036 137.998 30.3237 137.863 30.6382 cv
137.698 31.0435 137.638 32.1685 137.638 33.3833 cv
137.638 36.9683 li
cp
f
143.638 30.0981 mo
143.518 29.978 143.518 29.6187 143.683 29.5737 cv
144.193 29.603 144.837 29.6187 145.573 29.6187 cv
146.068 29.6187 146.503 29.6187 147.042 29.5737 cv
147.042 30.5034 147.568 31.4185 148.228 32.8286 cv
149.218 34.9429 li
149.353 35.2437 149.818 36.0981 150.028 36.4731 cv
150.222 36.1128 150.462 35.6479 150.868 34.7632 cv
151.632 33.1138 li
152.353 31.5688 152.683 30.8638 153.013 29.5737 cv
153.703 29.6333 154.167 29.6187 154.618 29.6187 cv
155.113 29.6187 155.802 29.603 156.342 29.5737 cv
156.507 29.6636 156.507 29.9487 156.387 30.0981 cv
155.953 30.1733 li
155.337 30.2788 155.038 30.4585 155.038 31.2534 cv
155.038 34.3433 155.068 35.9634 155.158 37.853 cv
155.187 38.5435 155.248 38.9028 155.833 38.978 cv
156.312 39.0376 li
156.433 39.1577 156.433 39.5034 156.283 39.563 cv
155.592 39.5327 154.947 39.5181 154.212 39.5181 cv
153.538 39.5181 152.712 39.5327 151.993 39.563 cv
151.812 39.4878 151.797 39.1431 151.948 39.0376 cv
152.398 38.978 li
153.087 38.8882 153.087 38.7085 153.087 37.7935 cv
153.058 33.8931 li
153.058 32.1831 li
153.027 32.1831 li
151.917 34.5835 150.718 37.0884 149.728 39.6235 cv
149.653 39.6831 149.548 39.728 149.427 39.728 cv
149.292 39.728 149.127 39.6978 149.038 39.6382 cv
148.453 37.7778 146.667 34.1333 145.828 32.1831 cv
145.798 32.1831 li
145.738 33.1587 145.708 33.7437 145.693 34.5229 cv
145.677 35.4985 145.663 36.9985 145.663 37.8979 cv
145.663 38.6479 145.753 38.8579 146.353 38.9478 cv
146.938 39.0376 li
147.058 39.1431 147.028 39.4878 146.908 39.563 cv
146.353 39.5327 145.708 39.5181 145.138 39.5181 cv
144.658 39.5181 144.042 39.5327 143.443 39.563 cv
143.248 39.5034 143.248 39.1128 143.382 39.0376 cv
143.653 38.9927 li
144.417 38.8579 144.462 38.7681 144.552 37.8384 cv
144.628 37.103 144.703 35.7983 144.792 34.3735 cv
144.853 33.3687 144.898 32.1538 144.898 31.3433 cv
144.898 30.4888 144.568 30.2632 143.968 30.1587 cv
143.638 30.0981 li
cp
f
161.757 35.3335 mo
162.103 35.3335 162.177 35.2886 162.058 34.8979 cv
161.667 33.6831 li
161.458 33.0386 161.263 32.4233 161.127 32.1079 cv
160.978 32.438 160.738 33.0679 160.513 33.7583 cv
160.138 34.8833 li
160.002 35.2886 160.078 35.3335 160.453 35.3335 cv
161.757 35.3335 li
cp
160.152 36.1284 mo
159.792 36.1284 159.748 36.1431 159.658 36.4282 cv
159.103 38.1685 li
159.013 38.4683 158.998 38.5884 158.998 38.7085 cv
158.998 38.7983 159.118 38.8882 159.538 38.9634 cv
159.988 39.0376 li
160.078 39.1431 160.107 39.4878 159.958 39.563 cv
159.433 39.5327 158.833 39.5327 158.203 39.5181 cv
157.693 39.5181 157.347 39.563 156.658 39.563 cv
156.493 39.4731 156.507 39.1577 156.613 39.0376 cv
157.017 38.9927 li
157.377 38.9478 157.677 38.8276 157.933 38.2427 cv
158.187 37.6431 158.458 36.9233 158.863 35.8433 cv
160.212 32.1831 li
160.558 31.2388 160.842 30.7134 160.797 30.2788 cv
161.517 30.1138 162.072 29.3784 162.103 29.3784 cv
162.297 29.3784 162.387 29.4536 162.447 29.6782 cv
162.568 30.1138 162.748 30.6685 163.123 31.7329 cv
165.162 37.6128 li
165.478 38.5132 165.613 38.8579 166.167 38.9478 cv
166.738 39.0376 li
166.828 39.1128 166.857 39.4731 166.722 39.563 cv
166.002 39.5327 165.193 39.5181 164.413 39.5181 cv
163.663 39.5181 163.078 39.5327 162.387 39.563 cv
162.222 39.4731 162.193 39.1577 162.357 39.0376 cv
162.837 38.9634 li
163.183 38.9028 163.242 38.7983 163.242 38.7085 cv
163.242 38.603 163.137 38.2427 162.958 37.688 cv
162.552 36.3979 li
162.478 36.1587 162.357 36.1284 161.833 36.1284 cv
160.152 36.1284 li
cp
f
170.413 37.3286 mo
170.413 38.7378 170.502 38.8433 171.193 38.9634 cv
171.613 39.0376 li
171.732 39.1284 171.717 39.4731 171.597 39.563 cv
170.788 39.5327 170.052 39.5181 169.347 39.5181 cv
168.627 39.5181 167.877 39.5327 167.068 39.563 cv
166.948 39.4731 166.948 39.1284 167.068 39.0376 cv
167.488 38.9634 li
168.177 38.8433 168.267 38.7378 168.267 37.3286 cv
168.267 31.8081 li
168.267 30.3989 168.177 30.2935 167.488 30.1733 cv
167.068 30.0981 li
166.948 30.0083 166.948 29.6636 167.068 29.5737 cv
167.877 29.603 168.627 29.6187 169.347 29.6187 cv
170.052 29.6187 170.802 29.603 171.613 29.5737 cv
171.732 29.6636 171.732 30.0083 171.613 30.0981 cv
171.193 30.1733 li
170.502 30.2935 170.413 30.3989 170.413 31.8081 cv
170.413 37.3286 li
cp
f
182.126 36.9683 mo
182.126 37.9429 182.126 38.8882 182.157 39.3833 cv
182.052 39.563 181.631 39.728 181.272 39.728 cv
181.256 39.728 180.762 38.9634 180.057 38.0933 cv
176.591 33.8032 li
175.722 32.7388 175.227 32.1079 174.957 31.8833 cv
174.882 32.0337 174.882 32.2886 174.882 32.8433 cv
174.882 35.7534 li
174.882 36.9683 174.942 38.0933 175.107 38.4985 cv
175.242 38.813 175.587 38.9185 175.977 38.978 cv
176.397 39.0376 li
176.517 39.1577 176.487 39.4731 176.397 39.563 cv
175.587 39.5327 174.987 39.5181 174.387 39.5181 cv
173.832 39.5181 173.277 39.5327 172.707 39.563 cv
172.617 39.4731 172.587 39.1577 172.707 39.0376 cv
172.962 38.9927 li
173.367 38.9185 173.667 38.813 173.787 38.4985 cv
173.953 38.0933 173.998 36.9683 173.998 35.7534 cv
173.998 31.9438 li
173.998 31.1187 173.982 30.8784 173.892 30.6685 cv
173.772 30.4136 173.562 30.2339 173.037 30.1587 cv
172.617 30.0981 li
172.512 29.978 172.527 29.6187 172.677 29.5737 cv
173.382 29.603 174.132 29.6187 174.748 29.6187 cv
175.257 29.6187 175.692 29.603 176.007 29.5737 cv
176.158 30.2485 177.132 31.3882 178.482 32.9937 cv
179.742 34.478 li
180.402 35.2583 180.836 35.7837 181.182 36.1284 cv
181.242 35.978 181.242 35.7231 181.242 35.4536 cv
181.242 33.3833 li
181.242 32.1685 181.182 31.0435 181.017 30.6382 cv
180.881 30.3237 180.552 30.2183 180.147 30.1587 cv
179.742 30.0981 li
179.622 29.978 179.652 29.6636 179.742 29.5737 cv
180.552 29.603 181.137 29.6187 181.751 29.6187 cv
182.307 29.6187 182.847 29.603 183.432 29.5737 cv
183.522 29.6636 183.551 29.978 183.432 30.0981 cv
183.162 30.1431 li
182.772 30.2036 182.487 30.3237 182.352 30.6382 cv
182.187 31.0435 182.126 32.1685 182.126 33.3833 cv
182.126 36.9683 li
cp
f
187.647 33.5181 mo
187.647 33.938 187.663 33.9683 188.067 33.9683 cv
189.102 33.9683 li
189.882 33.9683 190.062 33.8638 190.212 33.1431 cv
190.288 32.7681 li
190.392 32.6479 190.767 32.6479 190.842 32.7837 cv
190.812 33.2632 190.797 33.8032 190.797 34.3735 cv
190.797 34.9429 190.812 35.4829 190.842 35.9634 cv
190.767 36.0981 190.392 36.1128 190.288 35.978 cv
190.212 35.603 li
190.062 34.8833 189.882 34.7632 189.102 34.7632 cv
188.067 34.7632 li
187.663 34.7632 187.647 34.7778 187.647 35.228 cv
187.647 37.0132 li
187.647 37.7036 187.708 38.1831 187.887 38.438 cv
188.083 38.7085 188.368 38.8276 189.462 38.8276 cv
190.767 38.8276 191.277 38.7827 192.102 37.0884 cv
192.222 36.9233 192.597 36.9829 192.657 37.1636 cv
192.597 37.9429 192.237 39.1577 192.027 39.563 cv
191.232 39.5327 189.792 39.5181 188.562 39.5181 cv
186.613 39.5181 li
185.892 39.5181 185.158 39.5327 184.033 39.563 cv
183.913 39.4731 183.913 39.1128 184.033 39.0376 cv
184.738 38.9331 li
185.413 38.8276 185.502 38.7378 185.502 37.3579 cv
185.502 31.7632 li
185.502 30.3989 185.413 30.3081 184.738 30.1733 cv
184.363 30.0981 li
184.227 30.0083 184.243 29.6636 184.392 29.5737 cv
185.097 29.603 185.833 29.6187 186.552 29.6187 cv
189.732 29.6187 li
190.692 29.6187 191.547 29.603 191.742 29.5737 cv
191.757 29.813 191.862 30.8931 191.937 31.8979 cv
191.877 32.063 191.532 32.0933 191.382 31.9585 cv
191.217 31.4331 191.007 30.9839 190.812 30.7729 cv
190.527 30.4888 190.078 30.3081 189.342 30.3081 cv
188.142 30.3081 li
187.647 30.3081 187.647 30.3384 187.647 30.8931 cv
187.647 33.5181 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Cicia Lee) ()%%Title: (Western Maine Club logo 2011 v1-o.eps)%%CreationDate: 3/16/11 10:38 AM%%Canvassize: 16383%AI9_DataStream%Gb",KM.4rRoC2JUIL"=['FHQU<\"I`rV6TME0NUlH;Q%jLl5c@4t-?$rgVTofj2]YTre<Y2TKL=4#8tmNo[me`b79sonP1>UGk-4%JX9D+P#R,O<b:2hp@dqIT4F/FQs(\EJ-0S<*s`](e06P:X3sdZ5oN43?YaaG43NB-a5bQe2OQBlK@+paZa*ZI+2-n1#?b[r53ktE%^0gICkQ`aZZi6WlE-?DhNGhk81duBY6J_EQdX@P>XK(.aI"-B'R.[c*KC3a1]71$O-[6e`Tmf5MVGfa(EjP$mW&/.Nl0(fN;SDY2%rp]0IL[Ai<Gh(qV(tX0)r&\O"gg'MeEDZ>dLS$--iL1Z.'/^sHmYJYRl#HdeUou;`4NUq'-e!'Zg)gcR];hhNO3Z(_j&^aQbR+1U%Wc8s([AV^2q4Kgoe0]j?X@9q$#f#-Oogn#E)Wg!S<hiVnj&jYc]._k'IeNN\lFj:RbJpnDp$q[Ys*qgu?O4uQmr[[5CljXK%Js)B%$pc?0b_&bG)h:VLq`BGu99$W?m,@Cii+[E517Nk`N<V27qdq_E'k$28\o4o0D&P%rkWBeJ*W;Y8<.rCb_"XLjLnH5-+3DF2K)jI.%KjKtooBA>2N>(8-4F[c$o,,F,dCB4^5J3u#MdP6[pNoq_@-84"V?j+HcMo?n:RD42dqL_iR"HqK+4tj$YP-n9(3k-4i]ZZ%JRa.j%<'enE5c"L50Pkm0?%DcXlG8e!WA`U.;5?AM(P_]j9)P9Xpq>?kBGfaT0Z:##Lf_KUY')jN2r,c+Nfk%TOqL8VM5-m5FEl(f`A)(a%A'u(A%tET;1rW>e)h,h)bpJHc2Y#()'<a6^32Y0@X.>98G^$'<f/k"aLG1'&#p3?5Y2Z""4U`ifp`2jJ:&#`!+\bWZ>sjM=4,uUa%n2o(CS=k4k-N&mR+[u/HB-KOebX`=p8%S4<6BNU"PIO3Mj!^]2^Z1\V#@Y80LcP!m\4BlAmrTpS:=p6JKH%%RR.DBh#l9=OO?WT&%1XQ[FeT?do%"I7bUlT_e\3fp6IJ=i_6L&7anN10>&H%Q`O?WS;]1>gdI&6LU7@!tmSE5P#N:8'pj!`n+o7\S?lk+<UMq4_mH,""q%s2-Q^*D7_WLNaE^F;=&Xml63c)sJT=d(T2p`uoMi4dKp8*TA'@5gmn4bd,+6L7"1#O=[VBn=C9M#s7--X\4%/b]u^G2SpJ)n`hqm%h+uYe+(7p58^^:Z:;!8<3pIg/YLRg-Vm=@sC,LqFA7_C/S)rML+5UjGLc+#V13;.:"(K3=`4IT[(g"_Df;3cW:,%Xl+9!Odkj*_+%rRF.0PQ%9E_LM8,rN#9R&OGbZqA73E\,AnuP(`g0&mdZIs6=a<@Xlh@7YC]K5NuNdYLOhQrCR%CD>N#dUjo!38+mqs%_pK,dbjs=%r<2rud1fHUji*cc'F(*nIBTPG?2ZDFGPW3-j#6n4hf)h3&$Nd^GSTqGT&<n#Q9)gV:'X9E/8c,[k(^92R[M1I;o/jEH85C@Ka?/Z%KtSQ_ik#eS38/Lg-GW'rghHR*cJlg7%+GW/2uWt?_OU*OX="!BK2bbM5n[X':Z=9;O1c=S#_>C!i#n0#YLI>27,b!;7r-'16m+[b%,ane)]0lMd^tZ\M^_k'@*+4`&.M4Y0-ZN-T:E$(?<Rd$P"QolW>JAu\\lrE5mjn<r.fgt*BbAUIdMC95YSB-`YX>"]hcjE]B8c"u%^eq-/eTdl/E<%NjT=UVZFrki:mn<l?8NY#f7<QI0:iN-rh'%?$OFG+'<m[([pKCFoZ'KV>dS54jO_X#Hi4^XT!DhR+HD:2b6N5p#%\:[&UjLaD0d]I.SR5Zr98I8<]44HR!M2mb(NnQpl*G6]/iOZad)bkHFit*a*e!Q=Ede]7;C/+pamK3=:_Vam$PSKXFph'76iG&S=%4.uR.4$[RsRV<c`V,d`C,E`i%137tW%I&[H`Z+/3SO<oqC'qUL2=FJ_29gR!M0]4]`S<nP7G1SO(A"&O]4"1=$bl,._4a:97Vhj_%,Gi?Q(i^h48]&OU&RJ)@V6WgIl(45hjuMs5lVrdQ!-O95Eoks843AJFUnobCoX/oj5Lt4?Bci-I."Q%PPak2oTtn36No,!2iY5rE%23^''\re1b]KWO9HV8jhX31.p?b#"d"K`6i,\<*AZnI6Cdet"/:sl%M6Q")NF;mu]VHE(`]?-R\j_Tn8$;7C^[[=IZpQ^!i=;P\R%R[,hQ166q^$$.*^N;`l):@"Rsfo\hI\QpL>?7%,j=36nr6(4dE.'#ne@7M.0gEB5L2&*5/otKuG>$BPp`C;$tCH+s;EWk"GQ9o9g%EXhCBgO@+A-#MAVYl.TVe./NtJ[3AJFu'jqT<[@tA$Zos]PmUg>[)KlQK=>L+'[FcBW]3m`_n<[:\tU,'*fQ$3MTM%l%ZSe*J5$N%L0Pr?h<EWG[Z>+"l$)]u5e30t]\@`ug)7Z.,*15Ufe>s6]KmM]:CA)@iYS-&]b40&U@qC%$:VI^(m*os=muc)<ur=$!5>hP[!QUF%BPa?C,4;Q'+SlF63Jp<pF_WLfZB-PfWpB"?d1Z!k@?a)5%fMFe[(ZOCp,>E#T=^97?h86j?&0=bPb!+mqb:Si40;$QG<0j/4Ig'C%[IL<Hl<rt^^S`KN.BZ&4j6qf->!"$Y7@Qn"j&MoV&`J>od5lB/mq-sA'K$RN`EoHU&c%7Wi_P*Tko-`k?4q`XbfpJESqT7(N]1VT%/[&n9A(;4#/YmZ.;2_KJ"@ot?.=,9a@#esBLFS3Z%s2oMHXX;jAHh0"ilM\t!_.5:`Oio8VCFc(8;<7E[,EE?,_I*`WJQE6>cjd/%$<37K2Ou*.n"LX5YN#!r],`Kn7T4Fl7<Su]N&=^-GaMQ//tc]r_O0=)XYh\n3g;K:2+VL?GU73BP^Zb.JMF(-0.it=.8Q2Qjn2W,%'p>uASL:IpX5QgC\51;YMDh$5EI[b-A]$Ri#D*H-RZ4O#-7,]n2`?_/A"&W^e?OYK>kAqj\VeF%belNe*'ag]ml4gJp>0,bYp*AU%H:kfhFPu$g8R#K&S!$iCfr91;FIu_e7(^]+"c`o$]/j.i3KHQKZg/07/1IA"[)3eDMI+EE[SY.d^IcQl,oo%tfC977(ZM>n?n#dJ%asuDN'6fSf7O!AtFZ!*^Z3SDB0\Qh2jpOYI\0m4uH$ufENXVT<2-s:g2lrq<J^n&2Plde]+^+uj+E>0dSjZ\<OE\3EjP`\An-Vf*%CDKO?MR#>1)t5f5ft*JKN!Pq8<;+WnY9SA=0IRGtT8!,I2reUiZMM_pW;Bj,i97hK1OZW(S2^#qYh]?ed!5f?8J6Of+Qr89PSU!L%CaWZ1QB8%4RY))]iFj<pT5<=3(F5&-3ur:+W?VK8YpKO7lnJSWT=a_l'L9&2>Ru%A0]8m`j'gFN(%&E]P+Vt[EEn:,b%`$T790Z`%jS05Rf$r3kG!#Q#iujB=!1/p4O7F&Y>-sftg'cn)j]QE4WI1S7<SJf7ooi[^V^t>#VtJjdF-il@e9Q6.hhk=Y9$Vh;3`F6fd\/g@%S`!A9I(m0R-')l<g;Ta#W-G;j&i'?,,6X)DZK,1.<rM)1cU(LSfAF((Vt),LP&cOtZPbIf#c*s%Xo=scNFH(S[<MS!n_L&DZJ"%`%_[8AiFY`Gt5Ij[fo'DVdQiC$m]d4mOHD&JQa5M_lq<XYe"bDOcSak.p8+(#_m('BI)r.]cCWl/hHXgkf*-COiWbIn`o^=8IC'?(r%X_YO\Et_agJ\16Z#2+%"l2N3(SX33RAJq)/s!+53m(0<ojK>Mm)>,iYFO]>kJimJjek#1.Q!^uj''NlQl5EZuE\cAVSI,f(YL[B$%=j(eP=i5E&]NViOV-7aePboq/H-`67hp'R!k,d8((umrJ<P*<+F2HTjs0$6<Mdco-';!st=SXPoU2r,D<9)-c0opLZ9s!Ud/^D6O%466o.(<,)9lWg.A'q([0U:buHp=LCb?u<%^\bcuim95roQH+-7B8Sora5V&T:!67;a,oGf\X^]/%[31]#4%O:DAG76CO:taS/-BD%j';TKR&Lh/f5k'c2mN9,Bj&=3%aA`hS)^][/XjRt3JWOj'cpAS(3A-%6ZS]2/Pr)i-3fOJ%)Q4%_[:Hj'oUMj*%(Yo#gN9Y]4O%X%.WALkP$k&YMShFB@Lc>Ebi*JqX&L&.="N>`gtg97VYruU\'$a8fb7g>q]H]sXfe94q'q`RXio8A<lgS!Cs8$u4?'[L/b,E*\-Ql+%7.\&>V0O])f!SiF*o3sXd"J`X(#3SA`3m/iHS"7sb8P_Y3Gp]9SU"OE:0FX-P"3cNHJI):i0Cr0S7ra!Zc"=CSXK((.\[VobEJHN%2@C9Heu)TOH&b96S[K5Wdc@_=7rjF.7aXH$$sLo^J1$?%]ZcIcCG8g,F#pR^]S-ts?R@MM.b:0#_amH8n/6OI@M5"d\_&(&qn09Q%o>"U?J_[3V@?+!+DT1b^c&nVh/CC`4&@^0P]L'8aCI1sbkF.q4YhD_&rT;Ru3UY"Cg_3qpZ#FdHOQYV.U^;)h$Y<&n\]@eISFpW:%QHU_'3IW;Dg#G3Mjee&BKS_c2DiiRI`(F#OEua;ai*=J=c.W*A*(SQ4**#W>4REi-g!V6m/iPdLE-XHVamqQ9c_#"hb<6Q2aTui,%4FJ^CW5CESF,+C^0ee@rb89e,<]n\uFfcj#U,JY6(&q@C]p;_Qb*(k=oZSb1>bJi_d_`[C7Cr$',2J^E-<&r>.*dXtk3-'7(T@@*%eo6#./gp6F:c5RuW<cJ2`maUe*7hu9Xj=C;]/OIOC!PSchq/gafVob4H)`pK-Ai(a7+^U1D-sCIdBFaagM7=HfPF3q2+M<3%6`Z.%grJI&@.]VbRGZP[_e_@qVg`+JpPXeO(u69CQZ(uZ\rs^N4IEs]]Aq<*r;Q1r<4PoqNK1=0drG+!L/f<9rL"[%Y?%i?JGnkSet6Q^%DZBY"b)&03mPq8q7CZM!aZnD7h9&J^j"l$D6/0</fjJpi9PYd,@B]N;GC7,RlGnPFYWK!;\=*/cru/%^JOam$$eo(;Ccj]_L8eD,%OMV&L"uqr-=K";EXYpC:YW":Xe":p($+>;s_di$<+'0EAg#TO:F>Oo'C%I\8ll)su35-AJ4B=BL*t=&mo.0&+`Kf`KC$AZLdE>UA%Me/Knfc:Lt0?;o?e,Jm3"Vt?%/((bA"RGI.d:gn!S6:,X+HO.pC&`F>*PS(<Za3Z<+ZE0m_]B)XZ>LH4dFgND:fKS?m@Is*cKT%5%NBB$27PDOY]/Fh^ItdD-e],tHI!=B5otd`e7("%IatOF'l<gYEJDjEPeOHb59BGIHGR8+UBQWO1[$,UkNpK.Sd0[Y(p`8jLm<6+l%DRLMOH95skmC4b&;-UEFG0osQPc*&L[9CgUUK)6/XeaC&>I#!O6n<'W/K^O(Ze]FTS'=F/hFsD11N(?Ie.g03))V:=3;Z1Wd:tKW%NCLUD2NgPbOH$1^)IXk(p^OE)n'p+b<kVXSeEa,R)qSXaWf)1*&*eTa@[+6j[aJdA8F'uY->B!m1eL1TVEsLFO>eHPUm3d#7T*%1%,cN&/,*ODe8XKX;T0Oe9\)UNEN#Qb":?*U[@i7eALr23.I1-Kp>IJ'@2Ip*j16Ji+16OtY16B6B.T%R.7hCbN%;\grOsl?$'La2Q%UEK+PLg3AQ5iO11U+T?+Lfd1[#pDVI#[_gb-Z"R?YSf@9HC0FY-&b2/7\L+*0F7X($T^R8BEcYR&R^Ai'#]>0U-Jii&-RI?q&R6;%\,<,\nEYPg-[tDT5OsLMqLS,4?H%PVK[9b0m/b,;7"lA+Qj7\ZfOTH/i`5_Z1r^XOoMC[O7e";od)4#_MZU7?WV@6<7ce#3VU70I%c18?3i!'Pl2aG3=F+W.I_MdE3!fS=^6B#B4JrHF__MmK5!Ze;XViP;H?g@?n&oS?NMN[LaP&lk0PkChHB7j+(4A*:`P)lo0dZ7b,%dXdG,K=:&_DlU!1"]PPg!n@@e5R'M5@\k/Ekm2$\:mr"HD$cHHi0UA6VPA72Xn2k4.S>\h8sL;eSa&hDkUTM;Z2Tp_/(.ckItd_L%^orXliB(D<qpjoW(C8(5Q,Ec)!QbG?&YM6!PUHQLWe4>0J[0II8NkG/!45LOp.<WJ"LPED>1lmI\'n+."+:VDDacghJ.be)Cl48b%!$s5TH`$lW$<eO%p'\)+TQ4EN'!Madogh@^=P@Y7'Ri7(*Weo(SnuC]7=PXaBdb%1J8N(e@&:%D)ZldsjUsHO[j"gVdnlQO_9Tk,%_Hu5^#&8o^"h$Hi>9>@m5`quq!Pp@%.EUg^)%4/TVGO]t`_b5_k"tbJ##Q.5-I[hb:Z<hj/dY9WJ*DH]Mt#hl55N'AI/X6?1^&5d%<*GE7%bH819otPsXH&?s"JG)_P[8t4-X[)B?jq!M><l(6nA%^#?nMSL%9W`/OanIOK0<oMDq]_$bRTpc!/i);njouM$(.GJQm@o_%(3$&o4>9e:(bGd.$d9][Ylr9R>r4#R=tQQjS]Cnk(LXi`HpqEJA$C_;[TA$&Cr-C`'lQ2gS,jI'S0nAZ)M;0e^pqs8a(;RY$IVr`%oY:M1\mUG)3O$Yh*`<##SV"6RiDB*JqRI<H]fc1Vi1fG@n=o]P!2Bgp&BF(`Q;i\r$?JT!;+laf>A]q/"<0cKKfcAdI%u@iN2)W4%S1!T9Xh'\hL/LO)pbqP%83P*Y8j:B]9#!W7J-)AN`"fBX.6UA"F9/cMoqAK5L3*L)!qcUP"*K7("8)aR"Ed+H8O]&&Q;X!V&iNW(%?`ACNP_R^X.Vh>=P:Cq-0`'6rV?b&HK(_ag,uUO8=Y3MuW@Sr:'WVou<D/`J;Ckj#V-FaH7jFd8Y(F26[]tuqN0^`+Z$L-';GscX%G';7C7m#9ed$&Xq_P3#Y.uSS:/1oRZZF4:^al9VN-*,44='OO=0to5LHsQ=O#$BVef)h-FAdb-8_%kJq3?ua[fGJ%.K3JKu][-^]%EX%oU0,`Xo=^Grh6Xt0ND/[PIP+DQ_Juf;@qQ$a5.%]Bo6WpKe)87e)?YG.'od/-iUqVqdYbE1p%[7skQeDu#S(:Uqd8G"9P0m+S%;-.!j)*o];3KZp7:g-\%_MWe+dRV,NU=5g?9l3X(#n`%,$<!mW$,n>o],<&k&qgQdJ/_f\8YPWN$!E0Q,pd:SCoJ$aWX)3C7Z'].%oE$=NSe=<GMP-l[e-:607Pe>hXLsI'cD.em?7rXQ7@U9YAqeI+MM.gdJ$nB[CaWF_[\%A%6QN:l'ifFaU.m'S;_k7]:s#L;b&Mak%'pN!@.HfF3ehpI12c_i&XK8?K8I^ohp!o@OPf[bmQek\r\"R&T>rhjORG_28@B%*FTtX(K5r:);==M@Hnl%$FBWE8N7:Ee84;pds%J#QTHZ!.s=d$G*&.a"@SQS;d?o+_tRr4+K,IT>/fQ@7k+"1#jK*18`lk`d_pCU*%oP;99X6MY+CEit.2blce(-3+O>e4D)j%b$iE%*?_)V$u2FqmM(S__n@n;n)>bTRe0!Wa]LS*mg&K:aLs-?TLtpsk/g^e:=#1Ein(tXLoN+D!oF";9XSW&R`TaX"McdS^8dC@0>>(n%`r6*ilONK^VKj"0YU_TuK!-JsVG0ZRS!Ki+=`AusJfCB@l;H*V&+9AR1-\mhcu#-!m#mh;32tRGhKFU^?/]W:q^jD4m1)$,Gd+G7%!8SZGIKBbI^KdG!nNI=1n$1)X_3389b$FJ>k]ZIti6mR4RpIN9RU9fAV7nt2n/n3k9X8C*n?5u=S5$Me%at8$(DMU$<:f+f=$IAE%#P;Y4\;6V=]iBQ2$buZI^qZqEqOm].DdKiLi'0BP<J`O);pS?)JA2FIk?snXbL8\2lM!deJnr,I&$qkCs'O%#Y-ui_GTt-:#3Uk^%pQaZC@3huiTWj0T:I-Q8f<84d(at[U]i`Mrf$L<I!qDfd$YEmR4G?6)\->i]9[rt_<(fZf,kWEM%P/k6C*Jp2,N#s9k1lqlI[6lo%5QBEr)]-c6!0)8/LP@YC,A)T1CdFT<8ttI'@:EUL%SS.U;#3!Vhn'0VhE,9E[(HCe@>)6An29(4YFZQ-[&\_cQf&h,CN2sg_rP,<%1ZZ><?jW6s&YZ,k>6K$8S.dR5Mq$LUK+r;sP^%b`V,C_(dNDHh_BT'*Lh)HQILRK1c'tMpL/G;``-37RQn9t$BJ^m2WWLaK6;)kM%p7f?Q%NLS/V%F"ih_u'cDHeApY1aXl;KTeTV!tuP$\ReDoB7a@fduQ*VMif^kf)AOkA,2EUkPG<e\DF#dGtP?!5`(I*B505Dm_fK%DHm0^DOfI+LmcYn^j#GiGnRh.4@\U;q<+.JbF9s,N&b!Zhjj3:K#&k/M#e-bAd*)Ta>2tp!S)RcVQATqirY<`@t&?9-U@'M"!2^X%1K">1#n8o!&7n"6;@J!.!g%K\Yd-fW*j)]rZrdGd)3T9m'5P[PeJI/2T;fV:Y8/HVN*@>i#-6=+h+2qNJ.=,dNRWN#k9?:?X-M[J%lA)X-?]c\(8kJ:XQ3Pbq@QO^)+n.mP%NH#kP(YRWW4m6PaLQ:cH4sjTfl.Q2743HE^t)(-s1Zcm>D=Xu$-EE0!V68Dm1gnR#'=6=%C^puG3u>`g>8Pto_?spKDI'Wf!_aBfCE90jTTNSmK;NK0AFL@Xi5""1*]WmHK":WY<2^p/*uT=G5mgG8f2!/:3Ere@_$%i>M\n*t%\b?m,2B(r3ZfVmJ/VFkslGFN0lq4Z/p-s]mkeI3"09QU8O9=[k753n*7,V4E9lVsQp-g_*3sFII>u=C%n2sdD%>WcGXN(i`FJi,Y%("0!@r;Y7'Q!#CL;(ms-<A_B"q6d.I8JkJ_h$.X1U&OH"&9jdY9HEUg!??(*OIp%ifM"'%TV.rFNmMOW0<q,tM3/tZMEst<MKuF+%1kc(-N)MuL(.U]bQR!//631\fL5?%,[fWRdo?.NIMbV2@,T:Vo0@F@j37,#.$+R!hM`3.6M@D6DaJ921pd-bg6GKY,JDWJ.e-M9M%fti%m2@QD`JcNc]SiK63hc(77+ELq[#oj+4Nt$eL$t=o?%J3)`l'3;4:A:Xt@<r5'hueas$I>pO5,8BtCn_f%T<A>!QoC-!.c(/-%KL-n&81A6t!=[W#H1#o"$ULN?)oY+AJYDNgZ@4@t]Ef"8@::)=YlU3u%7D5b^dKs(dl=`K5^prs*!LX>E$F?L&dG3sb6RsKmh[i4%;X0ri5XP^0bfg2$C^p$5?j&UM2c$(Z/=Ji$Z/uJ;ND)4M4c%)i#gj-2mLbEf,3$*8%%+7YMO6't,O)S!Bugs`,%;Z!9H'9R@[8^p%/0ju5/0YWi7S.>T8lCW`#Y2\IiB]S%pST.e;WF2QbsMJcN)YafYOC)[KmJlKqnXjQ/@%Is02oG(j.IOC^_@Y^5kNE<!Zs!R:Cnm.%auf_o8im];P)"ku-:5_@f1@+0"<`i>"b'(@.`'G^MF5(I#kSh($Y^S9[DZn^$89i[L0hagqR&j@>+9X[6"$+*)@MZWI7.H]Z6U_O%-6NH,Oj=]Z;G.XSL![4&TY,SWnGP[eI"NhAoFqB$KVjRB=9BkHZnt&[RV?>^24>;f1l6n'1]iEO"=h<jJO/X<"N]:/(bEBjfCKZT%;+Nk,?p>j7JW[[N4"6P'Zjs_\?lNc1LqSUB(.M"M`9^msQs.TN!RZ^b/7Lmbl`kHj0uq\OCL@d]N_*l81h8t;KS2TW+Ypl1ZO&$(%[N0))\rU7Ve%2.u>&'3=0J8lb5R)&%5VaQ?JO5Ju-R&'d5R>GZQ@j]G+XNUf\P3a5\;S".j?s\YYj/6Qe;Vlo`*e_O"CYs`NW_$:%AJE2/=9D5cbdqRl!)P=&MPE*m7;almHq#RtluWo5V$Jgi-0d=&8l>dWCF>B=,bRc\25rp2#pR0Ca-(CO@Npc?$-5jFp^q:>C;*#2%;5KDhqLC,k.b&:N$$[mbmLhf&8J2'/JQ^`ES._]%WFS^5ai"05[JHV7+/DIOeoWK=1]`.*R$H-uYQ]RYlO0<O<M/T^1&-.i1jWJ)%\Nh!_9f*7e1@#l_)HmN=-!3[/f%_>j1NM>"E'7kcrRaf*H6MT:.$#8S[pf3:76lPh#Ro`q0,93m!\dcu#XE9$CIOW5'Nl9hAgX3]%$>BR/9W"mFB]oa>HUbJ-.5aqH3WI&3a<8m[7VHlR1cW?-&;:.!_MI/@7<+"BRsAKWZ1tC?33UXPbPj\e-<.G4&_903IQ0GFXHd1;%37*Vh:di+O'?34Lf#Fqj/96;=mf7FtKS</nTuRA#K/rF.#u;+O,_kKhH31=@_K[r#B^Yt0YZhO%&Pp6J1)bY"gAmTZ58.EnM!%KB%Tp7@NS-a`Xk"6D9iKN@*+BZO7rG'-\"`P)E%UoR""g]Q()[84O9A"[gEFS>@-"bH@P4,l_h%p*%'o0e[g:b<b0OVQpk#XDOHok-^%0ec.-"-eq9^l#Xg`]A.Y_LCjl2B3qYfT4Bf+ou8j>;"9*o<aYC7tn':WQ7I@K\@Qc8kG1b0]aZo!pR%^LidG6^bk[@:kD"X&F0cH%HR_.)V[3@iqju^PaJL19n0Ohu4pA:aKL6dqa7BF#Um_H,k(ZuEj_uj',_UUUbacZq_0D.j^d9L?!44=#]`FdmZDgpU+Unh^?7KL!%!AJsrQUWMtM1i\7'c^*R0G83NADl]X^cFp.c6c0)!omCR`^M3m7%hkp!7"r=#umQajJF]_A&2jC`?O6&#(fui%)BZI$)m4Q`hQsU%Jnc,1%+E!7'nSHh_$PY0KG@:f?3<RG&?,aoS2FjeOb*[S!5n8O!_!M!Kk%2ahEjIHnmF=@:EW>M!>nX\(P;Pl;C8W9T`Kmf^qbI\%&314V62Q)'_'3F5U"gIcA&1`-8gY-YP4+G61T`J_,?"_?Mlg#HAhQQ;Ac[c`\.iDRbs?lC"Th/-Wj2;o(3fCnXN%NMRu!95Ym,K`%c'LPD%`JGc6l\cGR)CcR0L/FL=[,Xm1%dj<2eiC=CaLt?Yk33>N!r<T?c`qrk!>I24JM&*-V+:sa=*s4>6#Y+Ea\0*6!oFc/U"Zi%5Yl0S[#lb'EC[)O&MSfq7LOsr0`VL1Kb4mE2\QH1i!M)R+]u:#!lnK%A(oH12T1W@:=*\D]Sb$=lSWV-JJuqe,mFLl_GJFY$Gi+1%.jC4o73JDs_@!1WCERD_Q6_nA0f]gQ[l+EJIRM=:;J0/5'Lq-BQp\57F`PQ&(K:C%`/3Ek@`<<F;9E?bUmaQIP=`b:,]&0I$:RGI%&E^;E6>RUpqbqYe&oA'Y"/C*t7q*"E0P-)4&iSqZQ<`L$e2,N_j!]"d2ZZp49fjh*4Fn6!PeA9@[KcS[G;1A27:=1]+_)*rJl!Ap%8q%dg>]PLgPn?k)TVl=mL0fK"&&@Q$r>a2$"ED@$7;WV;;tTs5-/[L=%D=e0d<Pcn7DQ],C954okY`?paqZ(Na1XsPd)m>AE"]#6%4il.\n0h_d&fX^t<M5]:g46bgVSs/jH^%M,.0/)S7Ra'TN-)?5#XDXq-c"0*OEgs_F:,Bo#J*_X,*T1ANY91-+ZGC+K%S!q;C@A&%`3rJX,'Hld9m+O%@;Srh.bU8h6PIIij3truj]TI92aU;o#b2XU)2Kq,#tLZ7\72)"R3;3*B"@+Kd(UHOW9k(X&9H>>8WL:`+J*Ok%'afpPQqYh9YDP2^!cfRhr?-mU#kgT[FqILmYmEk"LXn+MRBdT\OEhCIn!H9P:q#@KK8#=I,ulf.(aN?!Mfkj;JL6mfY*8#`-IIXV%F2`4%PW'tI.$>6G,k=8lk%Fgt]pj7-i%kd(l3ZW106&IgO\RA+(k`k58X&2\O$-mTO_.Th-=E4Hq;a"a!$dP#'dClhG[;>7Z=?->%,UX>3/p6,NVVnCX1/AI7ba]@l-&mKG=/es>'F%#MKtUha/kBsB.PM7j31E9B4KpU_2_bVp8AV<H5p8uO:e+nAN,-mh%_s@N^aCno%-?X@H<9N';'Tq=YqC"mBm9@MM_?dkQ-E`s*=]6pXV`GASTSX/C!AtPc?<WFeS00O-+>mg9CohJZ%_tra2/V3Re-+j*,.]0IYc#gc%I[J[TrR*Zf1enkgBtU\@NI%F_"*,'$$X9c47SaC>5Y[WDm#1sLT50N_9UtRUd$>-*)"M,C`LHsg^ge<JXAV+]Eb/'FWCKY_?q;?H%Q/K:qJ@6;VU-oVjoo<bFk*Qk!dYbO!:-l+d,?dYA@"<VK`(3#k-A#4;R9m[_,m@oTW^MT>j[1p+;q)BSDN(Ia+olYG!qR="('=]#%#pW@V,?;pDJgo_N","C")^ZO-0WQSQT<OS2aG"I6j:juec[:(S$5A5uTdeA^.\IFd5@2#?#pEEk-bq:Q!.Y+9[u]'!":>gk90-FU%$*]"u\=HN;0[`8!!X`5?N?WEN-L'0S-9t/cc.8tVW+eS:[:Z(DL,ST/Er\!lcaYZdHk@beLDB[$$\3fSPmjEm#W3>ZZe'@K&k1bu%KK<u@Q^ED&!/huInd`kj>%84@kC>Hr[P8GG<UQq+.jH)S"<&-@I?!LPMtY\kJ`0Gc.oVum!\fL[j#Br.1epao`gGs<VWcm<FeGFg%A>$CZ0Y$&^`WgO$WIUKr$`sTj]&K)iPt&@dSFB?5S.TpM)JeW%Y=>2S>qa)/6o*kL[8-rKRhBFqNhb*4X?%2q$1O>$,e$+<Q2hZr%37h"1[+qbSJ^D8rR[QZR>)p:I#+\^acUarjolpIWbu_quC'"C5.>LupprgIC_+?+G'@<Eg22*@WYg-tp1"D;Bi"0[@]OSOu"CkA?%,GLQAKZ(boTBD40BFZDOS6Uf[p`qRo&8[HfJ:W.t3C;eA!'jPH;25o$cq6D$&M2l:>R>p8AmUc)Sq+^X8Hh.<JZe9/8d>[$U,m.9%3+k^bNjKfZ$?KMY(f7@ZKgUAN^B^\e<bm/^I(S+o49<<`>BNAn-a9$Y:r=u<q0:=;.2$E278cYPLo\juIp9J(j\e:$<K.hX0*Jh5%Au9D`cHBicqD9(.Q[IAYR\cIrDo\.R%`8Di[A\YJ8T'7$8tG,V"Vbf%;N3ig8Yf>K@B<d!=1)RLI&c8-]>P`u(/6#kYY\_:90@4U%oi"dgPUm]7l,Ku^4c)[9N2^rW$A$hT[q,JXX;A0cl)[KHN\(ehKTR+LEI8^OAc``64t4?g^<`esZ:A#?4$N;;QdR8J1,A#gdbOrJ%+kT>,cn3Xp-,,!^!<\tA;Pd<\5ak&9Baub7f#/C<?,4>a*#ABo!^BH5/*bS=!6WqML4o#N@"f2s1*B:&KS_3"hB:0[\'B^.(kirO%#KEr?,_li!YNnb82Fg*>VJhNpDo;u0h6)X+Cb`I""/(SdWrQbCm-+93%"P$M,YZIIgg_M<o*g2LQKh!_#pMpE@I^m`LPn=,p`L5K%>*DqT-X\'!)Utq[_J./4LXbLrcGEiQP&;7ICGNHT_iRq$K;a!G.k6?R^s[$p%M12Dd\Af^cqk[XoBD%Ker3-u`JH\Yc!'g;#/NJ^%0#kK*Kg<Ij@FLF-6[?''g__.g$g'PtZ/-+F#/PY!CiVjk>44T(`F'r^-j)2:id"HOfe9-@2o01XBV;o7h*jqq#._5Kk;D,A2l1g#%K<]!QoVdEgnUT'7.h,sf]i%eK!=F?eh9%)oY9KY3Xi$&RN9^So3N^)29`bk4LG53cE(sZ@'c*N+M5d=.^f9>/HVTsJ4U87[P1Op^%<?<"BNKil0JRl?$?':9=8J$%sS6=gHVSjuEK)qnc3^0(O8Q-*3e]A*u,@_FhJE$c%A@Of@HVX@;>=t+3VmCUl238RU-YJcnYRdKl%Bp)]%B,pDSdpg@k)pXD%A*!4u?_9Bd&um4_HblsA=3:VN'EVZU3qPbpNX.l^RZ7Ipi](knV2&"S4@.tJ35rr*!0$k)Z.hhD#Grj/%lr`2!33(\)5d%0L7)kP8-&&#qPS"i;)0nONq(N3g#WQ\AZ"D0Y9i<V[Z'M<Al,D:Da'#GpPGeeHV:)In0nd:rD_LE9N)V/-M+K7C%JgC!An+_WBBrenX&J3>&VXRtgFE+ArKe`[hosrAlolFB\<:puf-4$/O.Q=^7d'cHbP]n=qkH\3)V#\<&M;CRkq438gPZ'"%`g%an%SC%K0rPCMfVf[/$]:Fn.4;MF+DrLtB=oi#Ks,hE7XFYtoQu4u_0K-92/.\ZOg!Qgor.,&BOtAQ"^`+u:`_*7Mkpc6B1@\_=ZSgQ5%:Fcb#QA]X;B>iY<Fs*;ViJ]5KTbO6>QkaW%(RUdg\=Io^*ZULW;C?5,CFAKJ<6`ja'Q>nM/c(9c/pp7U7F[Nu-IGC_92f5U$-$fA%@^.B1d.r#>kkL;t_"=,:_A%*fktd:]T4VC3KVL'+2'n9=n=3R?,?(2chO]6QAu81!4[ZGl4V+)W`KD:!bBY/9^V#&IM3;AM&gp*e%+$#*(6<COU<im-^]#3?EC+P^aV(V_^=GZQC!S%7r!J<NHM07ZEi#mjb]D2:oLY2r+;E`C36J*f(R_X&q;&l!cfJ^.VOn$lr\I#-`%"$t]<KbN)S#$q3qT\pRi`sP8R3<FsWn!EDTj)1,a3Y@Tk8tZJeGg,E#U.prL<__rk4l2S`13oR-ObtGJdA]'U,/./W2)6i+&D'Fr%=R44@a%`TCLk&7F51[FnG.`j;JB"iSM3QM;7_leu/hZ[>!a?:q9M#X?86?At8.*E&*\Ekb+ttmN*&L5L6'U"O':mu)[RjXZjfq_f%=%:qP&97*[Q[D#!)f84J!e!8p=%BrGImU'cM-KV.A(*>NRo+1$;1u`,7E#&5D(Te^n_).&ZlmAfl-IaiKlfNpoiMJdIDV+kUoV&!%$@kH`VhD0>"5'28o=ubb/b&/`Z/C'IO'QIOV*EFiX:#M_^LT4_*#qHeFU:cYT"#B.1/RU^Qg_jlThbk&J:P&l7jdm5TM3U51fs*a%BH2)_[WuZk#FeI20B$&NlS9PY,>^.$Wm8E/g;YR;gLpR6&N@D#3[DV*K"Jd]P[g<gqmX,V=6]mF"A`.pfc/J+:-_!`f'VKS6"$:,%db#USYjFO\"go6q+gioM=NW&n-A2]!NAX+CaNp!JHI@?K><,Z:'*C-Eanu8Q!#&dek]Jft!+C)>1r2MJ?iqOX/2U(D!;7Xd1+CY:%9`RZF8MG!Y&RD"Ng.9EiAiQpWS`4hJ,]JWUggUXVYc9g:kM$<q;PWQ=_ZCeEZP\LumRkieB^u;]++qk#/0\Pr:PH%->I+]!?MG[*%PnioiEl4a3;@OhC*KZrRZ3EqY$qsTH^Nl89*F<FDLgl?/JA#\#jE#P(e;r*8QJC<!6<5[s5.?WSl3Bs15Gr1e`^=^`?tV4kbSWR)%K$*$AFupQ!1Jk_$pJiKQH+lu!itC(CkUeJa.`"C-PJRn`!l>F^S>:&j7iUFYZP^,\'uubU"BA3tJWf\,F`D.@V9d\2U`Wd0(kfQX%g&n+@'BV"L@1?edcOC)U@]&Lq#b8"[d,7/Jo*T7H>p)d!pk2VU!sght8rXK"`mVh_l-7NTQ&?o\%=.GRN)``Og'?sHFY@NDdnb(e%r9OX>;$#l"_kE+Q308.T+9E4flL7"`"&$EXA_sF>7ZI\JPTQ7O"s;&QHo"''F7!'VN%:Mc@AXpIr<m/7HP0;Xb1^Ok%7jZ9HT68Y%*Sc6m]m3qbH$m%)5g*I#Ks7kU]s)quL'nc%-5Ye]%a-!kX9Jsj#g5"Y7n@Wh.IlUsTFa1:;cAQN%jrm3DBcpF=%ifAj9?#Dl06ba%bsSY4"_KK,%)JC*a,d-tj-b<F.Rn5%m:-O(1`Gqt]$D.B;%RM'iiZ`Af_Ucq16#(3o$pa4d$1];I''#._nD,A?EAH%oW73%1,=DN%89s>]S]cg[1)!T-i2=cU+Z6]s_a,<TL(pUc<A?0J-QsM(maDKADArpSJG7U)CT7mV6C$s-@B-4MQ]R(DI*0X3BP;]CnN]&G+Yt;"%Bu0$([&/#$B?ChX;'!@<X4(]31`Yc=3OQmW,0[k/J@T_-:I*#6,>a^L6U$CG;gBfL^T:R>9a$"OLT,0pM+sM<T>BC9N<t05<V7JR%^B-W$'@OGQJHdXQ28/hp++]9?Qh,f"T<K!US2k$(KF[96WZ(<+V@BRb;CaACEp/;.6@6K[km(DVI[s&"_N]$BgVs4tV]UN@rMnYq%U,8(2eL(\(MuuPbf*-0p9)YD-\Gt1hblkc$'CZU-C:m,*(,+Jd'UZf]Ua?A9+>C>4<W^Bp4,lK##s;XlMs[&"0k.+`LB't[`GT8D%7Fh'#'6rZ5oY=T+aE&=/98DeiA%`7DX''8!DF5'Z#i37hGt>Vl(bi6:R&E='LICc]!tI.ikU3P9df:LW;_JXFo`t[76L"kn(Lq,V%g!Dj3..!uDeDo!rVKRUC2p!4$;%$D8:I")p4kqbbOZL>2=7+]aUdg*kc6>5Zjm]g3fJdYq+aJ8@N8p;5f'q5`Tnh,9[BI0r\UnU.%':\E4>=1r<-r&WNh-ljO-[u8Ppd>5[8/Qni$R=."L@[ksDsZef2cB5U;b2>."I(&kI+&00ihL=HJPp1nJ\m;LIK1cR8%0YT]8\..%bQFc:I9%Yk`uTtA]"nTCX0GbE?PNo<m=fg:L`]%)Si-'qpo'?d+c=K:%/;,&,]MJB+ts:i!ZgGbO$JCoOTOG?VQ6ag(`>+0nfr_t%KkN1JKsM$XfiELW8fpNUp?<i23e'No\.46BCj=K%2bajPY-*kI2t>"mLcmG9H\\;?8P*#?ce'IAT-WW>JY&mHLB\om]'ZPrmPk:U%9rnjjDPVK`*hUr@=Z]S%qE@(6Wt33mn@#NlO6.+k^j-P#+$A0$5lk)["Q51BF:Vef:@NZ..!%WaH)M$sf_d.+s/DV\7%hR_$j+7`%<T&XZ6[HV<-O;hEi[?HGQk_tshT?Dn(>mJqS8h_<1_.#+'jpZrZ=n5MJ3_pf(,uh2i-R"aEqY&ES+Sqn*>4a*I4mHR;$B^i\<iWi%2_YaZ+A`l&D%MC7,fZ2ihhCM)dA_LY`J=U#$VD6<3r`T,i:0##4$!B*7>u/dRi]8mS/qf.5jdeO2[/=t`^@d!fIuQ8)IJK!Haa(>%0al;`Vd^gGWq:0L/kcFRMT,>ZW&%&j>O>DZSNg@'#e>!Yh[Td/P\*\7D[3R$<73[V-4%kQWQEL']QNECof=:E:Jp$a%t['],Y:h2%6K@b9FjQE\IKEg.+$DC?(I?\C)3lKBSE<K9VPG=@FFqRP4c]WW.1+JF<1;*G1nnUkNm&.]\jKcRInb!i7Lan\2o^+9O>Wog#g?jo%>JIS*>R6SL9^%l[NS$Fu/kmK=<p_<j24eiS>bHU=P9u9NoWl4f#02*2@uudIImfqKbjcYqi1>SJ1FMm;o,d*!Ku46tR68sVfX17i%&Kf-5&[r7L-^aW#5uAaBaIXUl-E`Qp)(]p-_oGj6k;JAddpU0eRI3^VbW(J7?'&.n0^ZM]9V+"/;<6b@q^`d/9^sh>+(>TKNYe[d%H<[mC,6gmhiJ([H"(r&9)6qiS*eQ`IM5`Mjo1^$r3\f`Thk"AISd_54ogl$j7rXAQ@<mi6Y$E=tU_!`5NeVg+j%hf?e3PlKd6tDf%R:?N(%[^jnLc^i!HDlFWjcnXdjc9jK>l$'\V8Z1m43/.KA`M&m3(hGj'T!7C@tOF)$E?F3Y]pdDHg$k6HUSW9SS9dIG5E7,^5'Mr%T]tT5K_YusL%QjOdTWhA9)##Z50fWf5jqP]3mZ?U_#0/-WHi[j5-&Y<i.NV)lF2DbP9A]-kfnSD@5%@]^NXrfT^U:)_]S;iq?*+^%El7fY]iho9dt<:.UL"/>?9(luX48/E;jcTVou`c1_%<d:j#;@Zi77,cb2TJ*]7ZN_lrS,\+&;DDVf0o3[2\f/\GN_EB_HO+5+2qd%iGnQE/:G]J5<eHFHK/h?Y.+8Je,F%5*>e7@)/_PUp5]6[$G@rgQ]Mq@(lX+AL9WN?A7aO\RSC*p%YG.$7Ye#&m-N-i[/1aHD+%T)%.["'/o7S-,-Wt)PrAB4EGe5,9R%9P#]E/[j$7F=%o_A&mJ$AJ"%7c3=Sl3t',9p"C31J+rdk-fe<.m""f2msC?Ef"*dFn>/d[uiR%"SRUd[(j8CThrL1TOpQ#%S*kqEHZQ]4[8<UQ].pg;5<`!gmsJF)j7Xi#QHPB(Afs]ZaK"gB)S'oS!juIoCbeq(WJYRf73OAdl"SH%]Hh4Po+Z'.W67WQS83TF@FF[Xc:%BW\=kGGq_.5eo@*+8^JpF?in#"-1k=P,dqEH;oOi>0D2`)E*XleBenjWd9OWsQQ.GLq.m'`e%g1>X2<47!+mQq79GW=ta5/M\CP_u:2SaVieC@0H_?+O)])n8Q8G3Rj9h>7`XZ:jpaSL3aP^$^f!Kn[-\YOq)9h<o)7l$%oB_<g&]%Hu"ctRJ'h;l[BYRIZUO+Sq%2:ejm)7je9mfeea/*Ph@N$=VT+tOY"iaAsZA?[Z[hV,,=[j8Qk;bAj0A]D&R>XbHU[%iiV(7!E[AK%H*a?a+.d,cZU&e_JE[&As0"NOa.rWQHD"39dTN,8`H`Q2+jV[(.(jU.Yof6jPdr@)s#)/L.,D?0htsTFCulQ_T^\"SCI[djid:BW%'5_?NUZ#b;*H#+?.MZ+X6kkHINDI.+g#6ppYj&u)\U*6*">&EGp7([$0\^s[b@Q+aW@4><^"mr%#!-;I59:8'j-tOjdMYE/La?Lo%T$rj`f$J>]#ZTYCqq]SMb.(6>lm^<%C((=Fl/QZ2S_*_RX?ej(B6Pi<J@+aS5<V0QVBr"\[0nU0YJLf*5Y&0hKWHUuflP&O&L-?C%=i9L0'&q4LZDhssR:lb.qT]?!puT9L2]&QQJ!SJlDsRa%H@3!jC!t&,)l8La2V<qGY47SI7#@'aX1X4ZW3VP-Tq84]TOcQbqiOA$%.!`;9W(-JA)]YGmH_\>Kq(U$Jf.uu+1d4,E%7W#.QI/-<Q/\.2,5+kme6F+.me$h@P*O.U-,I_LI<^o6hl&R'pA2*iHSk\)\R%M:%aDVl>Ilq>F>Ru6fd&`L+;g-0^m..S@Afj`Cl;>)9p5AY"P_tiR9=DCFQYTgf'n52/gAR2BU;#G]cZ`1Ns3k3C?Co_$=3K1lITjKk%rc7b?rYGL@>[)DLs&q1eF9)VNY'jGWW@YWW<e#-RkT4ALfl6e\HX92![%3eil"qi*Snr^H?8h>b5l]/#V"<]2Z2(&=Z:0h#\S.B^%C/09-4REW6g#+P'AB11kDk<2NZ?[W$a-Q0`AA(r1c4dHo8*XJ=IaEd7Dp%:"[RcS,R#(>"c(aiD44dZ=%/chCBXnQ/7GLbNp1<)$%.0MQRik-aj<Tei(F2+#uC8Pu$HhT2.d_fA'47&S^bLu`AdN8lUY!lpTs-9Vl7G,qSfkGZCEN@"8n*\pflLODu=s>(b=1?fI:]%=S%Fc,3QV4+6Tb`Ye!cLL,bK5>*G`:Lo4:jr7LeD#);#5qu]/Q["rV4^Wh`=HM4e?bB4V_m[mj,eCXdC)kW/nu*["m`s6*\*[=Hg#2(%QUq)0Fs9^UJ^WT=g"C1i[t%DW*gY"Y3Y^XhRuT\RP7p@]ID:Wu*Sta90&Q0thJcMuc+[j@=L&(p!i]S<p1<R=Ll\>Lk."Z2^MAQQ%jgJEi)($dI-+dcVO0]_$A?Ya\I9,=0*JR:6\^&/Ik[DZsQnI<+bI'!qHooPl\PB[fg(%%>n[^tIbX\K#jcZm,[DS4ZYhle*m+Plk%m4eR]hH[Q2k."Yr_i'8B,r=NsE(B$DQhT;Gj6t]1r[WW149%#r<j'Te7;ZDR/B.j0?b,lAlh#Pu>.o-0O^$N4IeYOBs2".jfhPp>%c!;aXRn,0gMt2>/=[)Yj)>YX(l!eQe/DCA7hufFj7EE*Sbcj)G%3"?o:>^KFlgCU/s,IKdLgToV!PK=dX7p=nWs#rkgU+DUi(_F>%95X3WEcGXa)VU`NgKCn#/=J+)8S,,>jl4A,U?sMc5@`*HnS$bMNZXu].p#",T,P'pmdMhqgY&p(4o93c=h2D3'%jO21#t^0B-1P0%8\'-]MOc$mJ\JX@r1[HOfr7\[e0Zf5@$FB&b/Kn^;f+^Y2ee8XZdH?#3UP\!oc?HD:[Uq\>I?Qi<W?+X<W*3;HWBk@(AnY,Do%-B%WQ;Ifc51`Sf&Rh.[8e]fG&Q*'PKAuMo:B9r7F(JG3n<$!BC!6o\+Dgf@+)CL['d/<p4p?JUd+44m+BT,j&:I$UKkY.qg8'=fflqE%PPHo`c!LQR[Op506'16mm!LYSQSYbtmSPF1jO%eg/L=8`:#Eodk/3JmHqHup<9Ku'8*`_G&!)]6H%Sqra$\aF74=oY]teDeb%eXD%C_s\Crq,h6S!M9C00<3`[AMEJUlSb*g''goS5n5l9">3>F+gXRFBJq?k6Tbj^m.U#Jh;E7mcj!E4C)5rY?fGO9/eniI,'48%3?%k%DdS`fV4ZI?Eq?*0XUEnXrd31o>Sc1i@!A.=*f]:L3-f_<r3&uk?B157D8HD:^q3T147up?OEVetZo^V2*?jm3OEX49]-HBdG[kne%a@k_GDrH&'Ueg.Z\^`o)R8'shHqtG!^J!SqCNaFI/rfb$d^Zd>?nhHSf#r'!%<$f/b&0N/dXO9got!@+ACFcCXESG:mLETiMtUG*%pW;K?+6TQl%^b][5K6JC-l%HJ,k'2UnlgJ2Pf)a:IWoMjJu`\f.r:@,a`<Xl*V9^homcqHg#ha(:!,nj_>\jIEk,3(gS9_'<1LM_%B>^#f9ml]"[uB(Ji5;X.itD^h&%D=-X)bn:4AWbe.ag5^Q)emILOYo&D.9J2i_q<>Mf]Y"B%!C8BW0_Y#J#\41i*o"*1gf`&@d^D%Ff/O$BifNTYj5&qb!^A"?%c,;Vd8+m=*NBKST].R,-AJge#r-2+#U?BRcP%1J*P@0T&]6rB[pB#D$a8j3km0!o6;@,+cSLsD/ru9%.A!Hs_Y#ed_^VfEp$F^$&:/0,LF&^7Nf*R-CP-0#<(,"Jg9q8g5+]gV5;[`e.6f@jf"KeN6fTCI$A8?MEOW^.I=5K=Tp4`$(U+*T%IR2<amD6j>mYl1?lFV7QPjN/V!q4D_foBnGmYm4QGEtn-0'YRB)g]61""e)KZh'_0L8Ec&cE\%fHgfHKlo./KpJ."&>CR@US6D\9%s7n,-m[[;"4.8h:/sd+FSPpWl]+`>`hRdtZXK3&#nJl)_.-K""aWrBJDpVPU2,[tX*>iG&nnlRjhe(8_]-/cfqTMT#]0OH+n>!(<%]\0,?s&s_IEbi"h'DOP1V<fRR+(XAVGhVPErnb?QpqP'7GH"^O;R:ClaSd_KgSJMoeEfDd[aJm9"]D\&<.nL!2(KOf]@:Y`RdF"Z%?#$f.@o'H(cTBj%p<_PE'i,_E]Ia*=mqr%8TdUdM)YlKaS,1Z`5:RI,F.RMQa'(MrhTQ.@>8/s;Fk3uOC6ZH2nT6ZQRLQR]n\6*8%mG<orc\^`NrCG+Tlbe!4d`H`U[V:)"X^"X*'C'j`52MVID>o]kO7OAX8)6bf)/"HD^ko-!+*XmoHEZB]I7;M)['A^@f*C%Qi^M2d%M7r:ilY)!6h2"'=j6lHE4*WaMQgEs;1S[=hE-Cp\Y^O3)05AVcDrTcKVeca!=]unSTHR+hAD3XsT0DWQ2Vu()kYU)6.N3A=>i7U4%\6N24"cnG!9@c'WG;uu")q[ck03`q1<iI0prNoqI;Dur!<8Y<n^"@4%Cn5amp=/H3e@I0<?H?GkO[`#M6HUMqmj3f==.dJ/c69i+%'(MYB&ZBfJ,0Znr]9'EOHZG71[<)JY$X3RuhAWS.N@=7h\#*se?)Y60A@0!jB2-M3GdkC*)mm@^oDYFh_RE25515,Qj$#COf2L#a%467t/Fh<TNQgp?^#4=7\OqG%Dpi[P4#>*>rj!u2l(XDfu<A!*>I&50a5/LAhPUh79]cposHs5CI;;\?=X)si<Fc4i=Kbkh]mZ^Mk%hHa\^/8uo0AhIuS]ijki-=kl_GB=%adCRu@r)TnH+(Dt&E,FCG>WRK!FaZ#n]CG'nStMIua)'Tp)K_$Ih5V*$FP]1K:Z("[><,n$%p[Jqc5D?%DdunXkah(ArHMIui7pPn=-egg^0D&qDDkja8JQh\[RKr[fPlLEF9WP?\?Mm&)bY)Sh2jOaB3Rf@%Y%5i6B*5qXRl?Fp%l_.#XrB+BAs6H<%2F!c=b>gS]fY?lrW3,'514HCoY&mM*m9,NHbf2$dj6Z9F]5_"O/mZ[7Yc*5g%;k3Q(cR5"T!X(Bs8*bRSqahk%:WrGULE[UiH4[&PF#6iN`s9/1F#7\Jm2bJQJ),g*mj6a>Q"96U]j8"SH*gZ(%tafU,<k8f#OR9.M>2b`5UO5Dk'T#02W)>kRFc^6%5*:rrP<9<Ld-U_/h"b7,^&"*l!Bs)M^n7'%Wa30674;`@liPbr6g>]IdN3MNrTWQL<joIp/NXu#[H8?:gM("EEY.U>+`$p2b"@JW%,@jML<7:+>d4Q!9WHB`ENW_H$=f2/-W:)9UjSA6CZ]lE:F.FD-U#*?*Z4ZZqY-VZ5[B8cMI7WCM(Bf+:c(aYN$Qo;LPh7d!r+']'%h;#]#kb$_]h'Z=+,B!8HfmfX6p[p#1Vr`<do6YapqBKt1l7%8h>o<4r"1R`39LO/LA!(?[8pTh+,*V\:$6PT%Pggo$=$76!)`uuX%VnX#GAg!ooR0hZk@dIE#nrJ.Sp[k2Cd\`6jk?InP?LdQag]`WE8m?#oRWhjQ^Dpau>kukQhN"jJ0&+)4lS1Sp1In5DFld>j?4D5.%F2sH5[u24jQ8?;.[ISaIJ[SpkO.q&@Tseb7b4V;'"f%^<>4m*<FIggc"Ad(oiT0&aGf=<.2EZFd7SVa6au8W.Q-<G`.^CKSJ(UWG%'3*.tJ<H[8],.W$Phk.e=Xg2K(0A1a\`gVdS2GJ1<_b[H5@AR+c_ma,JbSX*a5u%N$O1?W:?=[mH3dNN58[8Pm^^>X55"O8`K8MO%L0ZrQf40-CDT3;.U\E<fps+Utm;RJ--l#fAr4o\A3O@P>5=Hmq=J#9Vktbk8ksD$A[-s??RWnc/Vp\H5DP$q%j(Qqh3UW3WiU/o/%aUZiCs0PkBms?_A_k-Z@-j2sEH1>i1Hjg^g(UNHA\<4Jk&)@VYLZ`C^6'i)=SfNdp+9LTnkjPPeY?H_]J,6c4;dWl(;8oR^Z1"N`%lIDUO'Oda4_-U,XQe5)PiK%p9QTkNCG?%Ta<.F_gX7gM0-^FY/(5pP+<PK:q,*g\7$]8^t7\6P"<.^d/^h$Wdo4/J+!1?^]G*n!R%C]NLB(Vq(f&W_Re8S.>oCumL_>C/$+lm!;@cV^3%UOISQ4*r`ORR<FT(U+o5.aKSYoubhM:I!uj><"F^'_">7$lb^rL\RU:nardr%XM#Ftr/`;1;3U6HX_S/feJjLqBTSj&LujN+Z[Rt27UsMA=kTKSIi#pmkfVr%%)+r(\cpO2)]`M?`csC%XZkqY].^L1p!L:9NN]M!%<i(`!mU4Ck8QhH&q%QB3;2qU=dos.8kY?'[Tto,I6_O,e`a,_7=0C2lc-u+UGgmbh\6?!HVEe;pchC-%'"!3BMt^4fY`.KJ'dZl[%l*#RE9:',uMTi3'G_C%2qJ:rlZ_tjZn>`uqjY'U+)ccY;?a[]6&&l<5/eIfMTIcoi5fFmqnAM,Cj1F:6n"KR[*C>1Q%WNQlp1S[]%qe,)EN3AuS!aKNG_QN#KeLQ^H&"c%3fWGF8=)D7In=,Ch)34Tn=1P"GY6%X=5*7LZd@klE]n96(Cqsh=dg];+!cMU5`"2U:5HN:`%NrB_W7-B:GU9_!FqNF)k2bl=s_r7tLr+_--)Vn!bfY)\qHBi>rJ"SD&*f]iP"cinaO/>^Yit858:[O#XVE%IYb&?/f1>Ge:=)>$?%W`P^9fI=\CC+C?La3t3V2+PR@X?YNo.!Lu8mnj)rAChT@YMuE6r6H]mqfOfEe>"DuQ`r#i<+12[iMu&YmcPI*k1l'SA9(l6d<V#-%^gBk!'c]d)C>JkLW!o(%(nGC&\WWHJ`map/4bL7TEASO+F:!R:G2DVeg5W1jUjD&mef@`_].H=ECChCtf^!@TEj`tu8?Y+(j]4a/%-f\_7Hf)O(F>X!3`B-p),*@HX$5+5nNs+GRN-+QmMsSaMGbB!\!uE[)pp!+X2J_id`@Ym7Z=32bM<YO-g"(If.CAh&V5\L1r?aUt%+V)\4nh1"1c3DbT<k8W>A"HZp;2F[!FqFWc#GKoipc[r]ep>3Rh*D5gSO2?+Od[0&Y5I8`K>6Bjr%tAeTp<[=%P:b2<3M@i5TbOd%r2_=VoG)cSCd*+C?1ge?1P9!.o5$+r*!%\fKhHX1)'hCn`H/1=hfegIT=`Ic1lI]E00FajEB*@6[@/2rjVfV06G%L^+:iAeSl^>h%)hP'Xi)dp!NCkBXf52'K*:`qbJA/X47jU,M2_%[gj[Vao5W'h(+h4O6-B.(&"AjQ`R\sUZ`/R50q?D3d'K?N7*I)m$DS967NenO4%M0"=/B]1)P\>JtPH(#:?bt-urib5:d<=<M[Wou8j$Zg+L+8P#.QQM&feuK*50(F1/i=:gICAU.MSJm7\SKl,lV+=IqAOlPiJS3P%%3ZfIFcYl>!3#if(oZ\7DiYLIn+L:))%WYT"o6]VYM7eOP65&fBZMP6fftthd&&Q\e_MjEDU8c3CEiOYs#!&B8Qs*od%i5^pUi8g2%]jEYA6oA$'X<QZ3,:fYVJ*Co,1+FP4Q\Q.`P_92L7NA3BN3nK_\j?pNckU/kiM]3hG$/QVLiXOF)26#F2`)p.3IH*pdL2BP11HLY%h8-AQ00:kr=r',eXe\*W5:sobK0`0u)b1Hc?TI<\ZgJZhDR\4&;i/i_Z!mC-p@1;\g3<q0ctHAognA@j0@;buM4_RpL`s3oGlE`b%BEh\9)/P&iqMFD(^km2dI.d!4=a-B1Wk+",2)c>"rSgNK>P3C.X__jMWfkmVi?k&q-_(>Whm>F;/\pQs[sPuq5"9j*<j&*?)iK8i%/4n4<W"QoDJ:NL("<89l0K,A\^m'Atb,bBnaKK^:0^9Q<CD\.U3,8Z:aZ+'<cP,!d8Y[=c9\@;2d5I8B!sk"D5gUeAF5`N*q+a@Y%cRl0V2#km$<XZ;o]"!,"NI5M`4?EY%D0;a^/1L/IWg\1-:gJ2.jEiP_I,<=^f2VeE?E?-fhKtBf.#"]_-PaOW(n>0dD@[;n3!-,j%TiWB+\i]=i61cj0VZm)\')ss%s!APJ*0&1#mF!d$]QARnQCF'j->oaps740I9MupA]OsBr="Y"2090\/l0.KbP/.XRX%oSlJSed5%k-m]`\G:G,nj![4AL.h#\A!eZ^7uAN7`V^<F[r\jDE&OeCYALo=iArGd)YPkeF9.U?la)SI<>h]Q]F=sMLSM2[]fpH<gF2_Pc&qM%o(RXr!@NO!nOMR;'Hts<Vg97R8Q-[Ae%2q*:LAiJaCX_$#eTKY.MB_6>9=n\VK&Y-dbD1jm)O)q91I4]Ki,qrUa/N21/cs[,3<Jp%KokdH4./8NpKsp)XYhlSa'C!bC7]s=3*>Z?+1QfKIno,h+n$*c(>[3Z9ueJ>\D2ECHCflacMP"9B2a$$T+kg^E^#p-7\+ZLYOlAF%2P#&=4bH`4I^MA/NiGmdPA)rCs.A./)+C7d[S!UVnapME*VZT!1X2qKoqa_"g2-,<Od@I-6*blO:`XTsXdt(caebP?GPJa23AbDq%[NWkuRedNtX0_E_6$N*EepWrd+-4][kBV?l[AWf<pj%(BYPSHCqRu14SX95odcu,P4<)2WZe<-.Dc<,m%)kMnB%-A)e?DdZX?O`Q%UVY12Z^+OUr$XN$K5>S>Ao>*>c*+FO<VnJM43_.D16l1I*;jOWREPrXGW?g"bHCd6+RA]5B?l+Dc$,!sg&PsZRV"qFh;`L0"_!ld%XH`lX][i*+RL@^/LZQLO3?FaCa'"atO634t@aAPTk?@AP5>.75Ystj=mI@,>S3G%!:Ie4%Y%+DUjY8q$#P4sr!SsP6/OU)2F/'ZO%A2_NKY#FhiE>iXU]jIuQpErXf0(M2JI3M8:j8+s%T3D38q4RWYJSssrllf0%Qr[<]ab&7;na!:Q1j_$\[X7sepS^=?:\EX2#/8Hb%4O1tA.3Q,8G<l[FTJsN!pHK'q)(ul])2q&FL,CW@d@*Lf[bjc<p%>(k,Fd@od"LaO%h,2/F5@je2NEOdS2bch@"mm@oBrmB6/ne+%m&BK4>JCI<a+Ne6HTF2hUR9alnQ55,nmsB\T<R-K3$i#s:5@?aRmUg;m8&g00)+BC6q"/b!U2gjL],=D.%@Q1[tGYiC[M^[fpfnG%GVnc(a_un$!euWp'`QJ*rWWeq_o@bD/X^<2\=pc*B?=.8VpKN""cN^<(NRjP#0W^=]A'V?=$-BNA@a(HQDnpn-8OFO)Uoa"`51(I%YBjXt&,<FrJ!a66@"e.n0%G;+H)H"ZeV>d_[c*_\h]7Z9\q;B`q.qa)?1)`u;P^<n0P0rS?a;Oo2B:H92RAk\mojUj<79aZ,Hn[#%H/@7<a=msISLGbLm):F^W8EV,+k.t\Cnj*)-1Na'TdFoH?mTlr79hGLaHhDl\7+./H&_W)c>>Eka)6B`bT7;kk7G#Y1!U^D#[`1n%ks.IVSpt_J(otGks"u>4!>3DP2*o*9Libb6;9S^?0$6cY+FBXg<hmP^1f<YZ)ACYs\V[;j10q7E=8]#Ze_I&n?IeLgAqL+SO[$W\%5W`4VNSlfe)Pbp;p`'g%-`]Z:+"5:0"2tlG5n_uL'maLNIP1*7V7q`<i*LU7KY^(0pjR#<KM>*/*fQ,k",tX_Z0m.?G\2f513_<]%D#RsbSEP^VM-<0ZfVhup7_j)S+!93cOm]HOo92L1ief8B6Q++-+%T3IY+Xo5&fgg?$f4fl]D\R9%UJ%`+4`iFC20#[ii:LklmA(M%i!_,V)4P_5r"&&aUOj?F&k*^j]fc)VM;k'5OGgcpF'RP.*Q-DZ)tKKF?HMWjOJU`5UFsE"28O$6gUqnnZ795K&!bDhD].4nVQ\4A%E]7g^k/O$gUDg%lj6lDJ@C(kZ'b]?=J8Zm(T]0q38I'<s]f9[6`d'\g7d>9'Q)d\ep!8\,F'id=,`T*gT,WR3Timh&R?S1!rU&h4%rpXGt[AITk,)e$uOhK^ns%PBORrsl7:D[^T.H1Q3;m\SSKj5i>Mmh[@XN#-i1d,-P*R;adZa[./I\ne1:s)JaFQHZmYZC]W3s+4=%dHFS[]lNo.UW:,UXhJ-2#+)kH7jn8O$5nOPB;=>=TpIhDjEsk#*fI(gBS[Sa*=bTj>gQg%%:W[-=eQQeE&Kgb1F,mpEV?i?9t>>X%3Nq+&pS()a_!&Ei>;KZmDMI3!o"BPS(uq_>0H/r'2AC88>YC-b)3/_XMakE#(Gs+^QO>%Y`KA0H'F*]/c%Q4<:><O0o3i3_q><3B%q27U9]3l5Weaj5tF9gXdb!EhTWTkm73T^_bH9UXFN#Q@^]=+0<AC+0qXc=`I$0!ig?SomHE*AaTN[?7^_]c_0q=nK29\psBULD_'%aG&u0H1n7]efDMoN)!,_FBZ*Bn?K*RD(p8s3o>2K!+PC`[Q-8`bXC#4@_KTs#O;gg)ltt8S&9Q$mr>EY<ZcJ)X+VG4NLa^NedOuc%h?T+TDWS,jal4J$&3U4>#?XH700@!0d5aj,(?->,Ve=iWU:".aGgmXNpCs6Dh#%Y&D:VE6-$-qae?'ROF$g>Ercm5!@<aisT%@:e%3,So/E7hN^0IJgfSNMk!*$5\m)$_($4uh[S`*tMq_]W;sgt.QJ>t<rMja',+Qr?q/>DW0e53,g?+irP$5B48^e7ag:e/B>g*fOk]%brAT3#-JrhT)3n7X@![l>1:)L0![NQZ-iN'<,.&Z:;jXj4uMA\F=5V=$%(@$s)PW0PNV,hRQ>Rs,mH?mFQ?C-QOit?ZXIaDdYc/J%[CXf/:;D>OW^h!.XYKVC"g@"1=Tl7jmS=f+$S<S3lCWVZcM=4`'rqR$hT/Jn%lLM'h*C:]b_b?W:mYsBZFOM5_mVu\$&A0:^i>&s%KgAog*g>hR%mN;I/RKEOl(uY7%;(@"W0d[b+(g.p:f4OgE3:Ur$m?P8=cDqPp8U5n1`0aQF.FsJ/IsmSP71@U#6&=@;4N$Jc8Rd%%rOUG!0D>^(R0l/Jj6HM1*\i#slF]q!6aFJDg@EV2+Og)@!,#V9F0e&Q!mRR*ij3,h)u>'9+0H/4Et_TV+F/H_3]fDAG5Hn,AeV4N%GgE]fVDdG5j4m^5X/f`+SaMd9Lm\msqYAZSLGhg/)FWo$KV'SQhiY7$<5A>-g^0F8:A].g5Js@N<K87V.)r"W$ZfJmHjH-=2XNb=%oE:`8njL]B"-^g?gUaUe!.Z/ndGI<;$HELu&tDuE<N]rIg8@(%=(1f11`RO.N^ma8,5`5.%!#"ogQiT02GbWHm^+aehmf.jagu6u%Y868e7T38Wd/c_ea4%dnj&Z]1>;',V$27pZ_;-1SK5";U&VE9Jjr+cI;\7K(7PpY#l.-crbt\b$?r9&"A:O&XOAJ.[]jACX6MYTS%*VR))hRdaXfO;%Ighptg\HSrBWU3Q,HI.)0NAoie?AgaQLZRSPH/FWD:Mfg6Q2'91SQ(>c^B\5t5O!6VZ.>9nB(/F9OQTS?6+8Mn%(7Z@&(8rH#7h)2h7Uq&ta]5(jasPU::j4d"h%_FXJDthT;;&ffBTZ>8,PjlV7_O\X,ppSWE7O>Z/hj%Pg9cP[iQW;T(>#-ZH)kf;%%]d;WVd^#XaA]El:5t).GB3uoX"07AW+6"^@=ene]_\!1rokli?\R^H3^(`f3bbMo-:l"LqY+\^XA6@1;1H0pWZ-rX%Tg7U"Om7f%?iea7>H:)tM,V:cr+'_9Zg'Pe:DK*@,>P57BtBZ+HFJ?@U$G]\bhP5^C9,eq:2ue(qs$/L>9.hC@P]_AI3:GDOH\Af.AD$9fMX!t%3t8;M"GT7_;B;=\jnk8,D"n?E=]O5#&Alr;j8Sko"\$.$^F8C7_j.VFhDH/;`i)N;U;`5fa)#P'mMMf@Ao"42_@C+/>Qj]ra6X)$%+&-JVE3e.kPOY&tpt5>Fq`9'('&<f#Y0WZ+e#9hFQ.+.<p\MRTbsT*M3-%4O%f$*9rCQH?%jC$S9Vs]BiRPMll1&.4<cHiS%e]%)%UX;AVZre_<\`$:Fg0.0F`n=]TRi*j46?hjFB"2Sj5EGNT'0eQ^e0"m^3;nQ3d.":sG]"TE>'rm.mLGObm>:A-)J4!_26@S\jFuRY%Yji+RX;`5s`inNa=5_=a$1PEhJGf%t'&qnaLH"P'$0JIk/Zqp]P*8hXi[]N00N[>9jdRe8DFTL3P-Ri&Kr__aAPUbO'AG:JT#SDC%/W.R'd=j_f/J+X!&;q1.gh8V^h1XV`Am"9''UG24@24*;p0]\"4(`Ee^3eT`<4E\C_JP9,:c'6=HWHKh;7+923%(?+D`g(8n?bfk%`E[?8XS/cXb%(=)brWnLVK1oFm]+W;S*I^?IM7/5>6P'sm]![DY4l\3&,KP>jL&KWLcIS&B<s_PB!%PH$RECEmVKa/f&^)JDYuC*%mVcTj4I:>*48DmXlQ_&4Va@p2`CaYm?DGsJ3t],.//o;ZYGPI;j`\=cZ6ZUe2SUANRfqdkmTRGRa>L]RHRFPcAeVhfjC"f!b@/+G%)@IRZ=WIPKH%WSH:01<Em9o]!3uDdGiSMCW#a:(E1X>m8=&jX=@+B['@TeFGjM$ITo=:TD;0DlGK=D9%NY%\Bq-$4`a=[Vech_)A%rr"*WAXJ;6XOll.J&KsQq;LOlGN7D0ldrj2SVHoD+MRjSAnWfEDgkV$DM?t1SMjY!l.oG85(@UbgH+krh_A2bCU]qWdn<c[HabZq%htZb6Aae'T40QB4FS4V=l)!^DICSpi8aXs6g!.E-f,sq?]!Uoh#eV+cT3kI=8!fZG^DE)Anc4be]b93bqVt?'8A[do/C/eEHN0&O%./ksnHM4@_mmYg/m#B&0DBIE4T0N8IJ)@)d43>1>J#mc^5DpW;j'R<0>!I5&5OI7/h`gbKWlIK?9)-C"f:)SD4b<89j>(b4TNZT%%IK:FX)g!bOO)Iaa_BRV#HT/kdO^Tu6,b=01_=+.#QbD6e?`j7I:-8I"RsYZd-aRT4mU!K+#ZpoOH<%R38a_JsY?QLnT6CNZp[_F7%d9jr/4o"^I`J`T4IueL(s1Pj[dGM]`GYm'D/8H&erU91B/RJ)8939+HIrDuEdDu6iij7S*=*E!6Sm?O1jn/lU9,<L^YB7O,hHmjn%\GGO!YCi1".K-@>];Y(Erp5#OY_Z>`e+i?\9,<ebIk_pM]tIt(kJ)A7PD=p:;4tm2p?nc\0DjY@Ge.kA]D$oT9A(9^I-9`9C/L)3%UNV)^Ifr@BF`upJQb>GpX&kmJ^C:%@Yc&D`M:-t,d#1*eo#nnE;0;Nkgb*=fR?i7Urp=h&FNL9WlcQa/KthTShnT!Iag+A(<VF-4%YMAts0s+eiqJGg!C%c*-U>Io5hYHJqZ\(])?Fr))H,hNEqiVblYJ0i.Iub?u.\8m!3iVjmiM)re?H->73=?l[>-tTuFaj4iZ\2BT%q;/12KBBI.]ADB0J,HNqdCW``bNqk!>V0.4.l)AGq=S[uU<iS;'H$bm6ZH>:\,GWn:2\IO^\//sI30:(Wj$/JDt;SpCa>WppB+MU%4tk(I_(S#sQRjUNO'hQ@^FrfujZWD([o=r:101(@ra.VapZM>1PD+o9hYK!4]'+@k@H]:H'J7)pA`#RsEV6Y,Zq`g^mU#VVQ_1Hf%=h*Z+?OgEq?1dXYq`g+jU6WE;>(=*KrUAY=f8CG.#ksp5rqH*Q`J^=;qq7]4_'\3J5J4N'flROQIsL,Rps"#b`JZpidsgiapV6[8%E7*Pa]t1B_7K5,=l^uLu?>%BS^F%fUPJR7X73DMSIeG0a_SW%OMH]_mrVb\Q#*8KgY?b>;kjrFn]79PA_F9ZDqk%0jhf&C"a'dSi%Ihe5\p*+sZ(Hi,/(6mtHcNi:0e=sdGGHT`E;gRC#n^YlF/pc>+$EN*j0^YK^Z-g<L/hT1&?,!EWSUPX^5j>+P]>%UI72sSOqftPR%I6;duk7XitbLYgXdf"S_.kKDEcC)OrT1N5Y)umPKJg%dU/fp1R$,="'r(\i$X6=-0(lu:!6X8+k/34j(ZOtCL\!IG[:80skC/=HG%c0oEOp3npBrchVonO(lU+nJ7\HZo5ZdESLhT7?=%rNPYRWH[fl]pZPpBDKC9[Os5D)tr4\[3jr,B,2;db/Af"<*u3/9'3KY%So=d%C!h&YMN@5`r,q8S,l$ZH+3UjZG(9P?E,>N"4h1F]n^=HCf7r/cbHDsM3k8h*(-!X*J+VFadCgiM-hf7Nqtf!!Y+C%:='E-.fsO!K%V^MIV2s30om-*3AiM,XKj]^8BNL*uMEUW,2V<(d.D;DkL**[C\O1jH20:#rCF8G\0hU8I.IL$kLgT,B84+#MgoD>i*!N#7'78'h5%)i-R?/a(dCnaPc3@+jA&03u<llW6`_[d+HaZDCX;%DMY^?d>qQV;R942j[d/mWn3S?STeaYM:U4^%V*qaZ''2ZhAN=/+5Y"j6fuk%HX0=`odBPDXQfDlr2$C[cQ@K9]R$a0dE[Z+9M].TGt>^3lrYt?!]/'_V>Y>]kE'-Oq%UTo&D"C6^%J1XhgSQ#S&sO.7d0NV:E"'F%`h*EAhL<,@m5a5f\TmJdkM_bHj0rYn2_`^#1ucN-AG@J3Ys6LK[!m09eiW]]XS;OMrp?J]@%BJsO(Wslp2fA>r)mUW/upau-&]pl%1!fZ,nY5%=cV#&X-h=0BLrWb(<Mm*E;07*(b80KUMi'mCOe$'ILQ+Z6dGF!.TA)e7oPYKS$gbjrhb\WCOB_ABF-XGMbN9Xh4'9(m%MZ/qn$Mbf4s1d;WJX.:X^F`_*(d&DR(WGTfl(XG+N;lZie,&a6g8[RP^0J7JMCIndW;F,:0rB2agXRk:jje9q,H`qSm[\2Mme>Df%d+/(@,N\*<rSIP<dFrTfWKoV_/K-nGYB=\6k>_2:.qcqo-Vf6T:1lK9`oZdMrsBZoU]:/7lh9)(o..MP3a"tB7/?hQo;c5jRi/E.%.IO#+^A(W8E@8Hs9+)/0[uDnnehlXQn$Mi]\*FPoH3"`^o)^8I"FPa0gZLDl:jiDOf=5gh[J%hR-Z6l(CM&XOi"iJ9f-U0PDnj[W%,s_:Z@fTcRJ9LW$F,/auD2oVD*ad2KcrAd#@IMraDbkdKJc%6p,qVIK<I2E1P`*tJfp<hm&$?.EIcEG2ZpHcLYoKk,DmRH-l^3^i%2"HmT0;.dW92"NMlra\G\"u1-qfhhgqYg<Hd.`fkYsf@9nG6r)ZSp^UOciM_/2h%iMTPe")Llpr:0#t8gmM<Sp:$29.p"`l9TjPm%f>"cWr'J+bE:^E%j9p#mB`+BL]:/2Rjikl:Su_I[kP'/VoRok3:M$*\[XYtTFr=sic8"fDR@_C1qn7tDN+VPlI'0r^dl5N5J%1ki%chB(E2;?<];UseCP4ng[m7DB4Qm+0\k(fiFf!5)>GF.u:_EpXof*YKf?Hf)mHX+1aGCRns[UGFC7U$J3aMNJo5W\Y'_crmjY+5N3%oeIZa;esK5>sJ(q?[R,piBVPbG@ZZAge49"Y2*^3E?n[%FV[d8D`ZRGW>+6\;kC2Tord'&<:<k'*VdeFB0XXAmcEX2ok48Hr:\;k%kE'.J/AO#IBn*U*4+Uo0L>k/E:g8aIQOTV6=M]:9GkA[8ah^Wt1;1:2ZTEAl-Hh5CT9i9Eh3a,;k-r9@Hk3C)Db9Ec\gVAne+;l)%fCl&q;<(iT:QTck+R(/)<,Ba1`(XbcbYuAP65mEY5R-Y#^H_JGYP')Qb>i_rL0eM`?IXue93Z`a,^hk_d&<<mfSnctCX'N*BN.V\%$`!(W%cClAFR*WPmsj#Ijn&O`4o?$/Dp+@tDVoB^Q&hR-I(G\eG"U!`S_L`DKl/tc^&1pK@[PC^mGQ<E<l8C"rS)U<&r%T&Sm\ec%5<I*4Eb2/b@YHT&]Ng2X#<QUC@RaLr[-B!XfZ1<I@P!gY,L5V!*/F>hSb5"G(Uq]1[#UpZMk/2^+D7q#TH0u(Zh=98F$o#U0X(e'%ji-U[;rc$nrR:Si*+d:5p?gonUeLI`DSQo-*BOLmrp&crGh]NaSQk8`/Ir:8$oSN<CI2GP^C9"s>NbB+?>Ul[ao,-U+pC#%Uh3hk%LQ`lt0.'"Lnk+OlqRR'.laJ,6jHPmfMi<%#:\OecYU9M+p0[QEk-mhT5XSAc>(UfI2U"GVdD-n!g<GYGKi'1>Gt\5M91r['pD45)%C:UAF\/,95=+@u1I>]+B519u*Of^<"Sl)uX6`fb6H]Za(4Un.>]L]NgTC2p)&CnW,FF5!SE_H;e<*/qWN)^h&]!HXVgOigq7Fm8G%*[/_5352*Kc1eW5_=,9F@MU'LFUsNc=fT0b/OIl$9=S=>ajt+R(6Ydg85ATn(4:a54?Om)QR3Q+GCS[-aaL*\Gh=mdiOu&`<:9dC%eaaR9%8-r()(l1F<Vgm>qd.fpC.$chAt^eKGB+dg]*B"gI/kk:@sp43ck*A]m$+%h=iei9ddT=RV=4>]S'mT4RY-GJP<0W1JE7#Y%;gK/5OZeHj=_OF'fD's/rN]V.;2"GX7T+mMC6n@6r,V2hEr4:>e+nWhr4IIr,9$OX6!`q:/SJaiL!hR?`(Fqf!H@qt68:9,cat@_%j,bD^9MO%pfs2AT2+9Gt%nTukefn'6,c_\lr<B@G_R^:G,M*5ohQZV9N>D-R?h=9g6/!s:MKV`\g;06;Xb3@MjB4=Y>@F`JQuB4D%A=7%A@H&O9mTR6FS*<%1lq!-p)pX;h30SA*NT.Xn0T)(9UPq"?hXgaGJAIrgiFkh?c4;P%F`DOQ[Q$4M9Q_g&L(,[tSQQfTL)nbQ%%$pQUcLEb/&Q$YrV%Y>4q0D?adUI?UG5cp#:SOD0Y:&g#8@3p[Oq!>:4/\97[$O(Q3U_))$begWE/?L%0nTU]NA&[A=73`t2$JhK%GAWF0)k$Hf329-R^=WUK1V#o+;'sW&i]&OCTW@BO5)Za*ZS9H=Lm68e?Ypjk9H=VO;=^d6id+8`oCU#A!B+Wnf'/O9(JgO>:e/]F%_t*W`Ma>Q\&bsblX<$ZXgdjbTAt`)GN`l;l1\3-hV'Ac`*!=1J>-4a&8\tlXVjhDX3"!Z6lo:2q5i=%"%WsAp5(&k[l/"/-4<U,D%K2!Rk9tJ]SD[!5#=;tH-l6Q):+O\T&St/[Dna4*Z)U/o"MahRYH6iC%4U):H9lAk'3ut+)8(D(QCSQZlqR%0!1PpN57e+'/HnC*5%%']1*NT.Y'L2je>_ff=A''A$7`7conKcfW+@f2+;:8Jp:jNkV&/Cp(`nPgpSBX@q,T!`Bk7-2r/fsgqY8Rg5X356JM;XP=l)Sk+p%[FQoHlX]FpSV41'Gslg/H_'rE-%!43nbHq%-$%P0S?=cH7Z,"8StYLN=%jRHeNUCJd9Gqt=*@D6g%t]7`q$e)b-_G'hp*e=L<:"M%Fa-*`C0Nc%A+%?,Hb(!BgVMD;o`oimLlb_t<MPs!%5isGP95.B@^%[k"1')V(>f`nbddFrVb)$,Ld's1ND-Dmo\$A+iQm(H"n)J8%bFO-R>Q+Bij4r0d+1C<4n#?oF2n(ZCK8r]ERCn;MC9daJ\m!/$fKF?D*HW]nVpIf_pegCNC[;fVZ%oKqK2-Rt:=;M]hE_r\I1u8"%[<Ktdh1?=4d'\)E[<)e:e3hjE6&49J;s9ojIu\lV-gm\oA)+#8c?g<?p<^3kd%NT\]SA*h88dZGHa:.EaP(O7JT'rZWYN-fR*rc@%n)j,Vm47#hV7(/'o%:pcRs"%@5]EB3V"a7gXR/O43g&IWX;>]3NMl)D,'&Zi7D4^glI$)ar9s0V@6p,;a4E4OHQ?.rojOq?=Q`rP%p!k6frVY(al"d%iWM/p'8E?df8qU=0?nET\c#o1,>I@@j:tmd0"4b@]V'&`%2R"$/oWW=6ckoO_RlF_sY^3j.Bepd!h;V&J;$2GA%a`buXN>PU#>>s6&p6(.f]/BJ`m0O"@/[noA5pFp&QlE>2lXkr6Kt@d0QXHZg)4SP1FBI^92js>aHR,L*\['?E4]KZPPU!T'@di'h%Na7FXI=$mR6+LfMO7e:RL'8(%lef*(M1,-[^nTL:10-JrAliIYR';h?I:,FeY0MHCItlLhO3kpk33</AEYPlqDG=naJn[0?qeP++%Dgo=R1oWQh=u;`CDeKT-k:2':4)kCEi;Rldj3qYYH=GTa+g+Rq_5>d,H587X9q<`.$oXX8]43B%YYL"ZTl$O[(E"LP=;Zqu^Y/J_%_.m6=Zs,&^+4/-[c'IaTq=_F'T%0GBNa&sdbLM>\(uY:f=<e=ni`#OoL&ZO8jmLq7cCXe*L,aNeG<7m59`rm\'ZV&"f[2*jTDb`-%h-/p[g7aSLE;eciR_`e@/T/IY$o>"/C$80)E8p`8^9'nCAk8D4LQj/=W;Xf$R6LAF`K%TShH.k7[!C%"jWZM/7*5Jc)_J]Y^f;RO%Bh3k]T@@TCLq4G%c,['/mWIXd_!d9VfY@/M$h#p]g!qU/`l?K:+d%MIROccZ![C0FU+&P0aECJ7.,g5Q.E0Ln>`6#J.IT<op?M;/%9lY#KWh8+pX2TRf-#"80RJRh`RBT<.>/KkO+u5\K)q(<6J$&Is,S:pQn)'a",%Cj[C8pV<Tabk/LeM0bi8bIfBLAghA=>PWL\9il%,=Q,I`qf(IB[>qoS-(?hQJmQsEjtU&\>gd1NTCD]=Dk8\mp[iKgFlV\G9DY6T#BLsVGkS:qf;)gicKc5G%oQoL=Gj=BgWiGJ6hFV%BHV)N/re4AelTF:YZl'K?erdlZi(W=fN6\0?E^c?::-%iF:&NhJj*j2Ue5U0YUs'Poq(fJ71-8ZMU(n-2\dZ6V]QD_16%a6p3sO!%cQ=+(+)XmioTPJQpVT_PB/)_;>[)pIo_RMhC-<^FG3F]#E$At*'A*$XE)AKWHY7?PrG_FN8#[_NgAPtX:C3C\5?sGXl;24U?9_]N%(McY/5UY=ISb8Z6VH+@ELPfjkRr$8#23G(kFfL9<`r"rVeYHfm"r9a'hMmQU>TL9M*QREm8('@(fjd"e'KWf$.N)E)i.jr^BWc+\%M"T@]Mn<dD.\7GPYOkgW0:i[,L`-pb7XOi99u;XYq+*mg-=oP+=R34IKB-,Z)]nqFb(_M!38f-?IrQU):$4?@*+q,%C$8'qj%Q9]%Ec\@P()o;0o9$ftVeJ#R=na!E4S1J;3%A2qX`=/OIgc^Rce8nQ)X:/rNn!^L\-4'cbtSENO4BBhq9m:n9r&dk;EnMLlk2&jdcrcV%Nmr9Ne*0DWEMh-G$N4FtGGN)(e*'>VEOm.m?#ti-eb()<1`r/IEfnc?.dqi1LAMXj@BC8^YT0-U.id.3[oW,pUD7\)^.c3TDZ%"U%N3RQ`I0@<*JlXjV"q`c2r?n^d"/6/&5qCaKpfL&dm%DTWPbLF7TA8#moW>B![EFErYs#PC)r_WU/bFXgMG=c&%KU)WXSHD=&T*oL%6\\**/r4E;K8qCN[aTN(-m,8U_H2IN2qRrlhDH@0;caG]3]]Mh"TF*Zj/rmg*q',9EI$m?\"+VE5(DA#r8l8U[[Fo%@Je$G-X1fG%/f(SMhgTRW3l#OK2rAGBh7:.%^::q_hE0HD=C6CTQOl:ZmF9P#O*JeeEJf+J#'HJfQc)$ZDk$XLo[@SO,^IARDV'pj5Erusn^6@N%Q%^/u^R@4Mnq6nLB"'F/N?:m'?`^_ZfI]5bkMbU$O+(j>kg$1?+0G9H?!B<*;7LqY>JC,ScehDuCB;&SeCNuPp1b\/n)M$/daV],%?G:ejrd!,Fm.Rlilg1F\_sZ-7(QBO8C[_&QQ_ofb\)57#FMIXH>E@Y/1no3nVn2l4l(_&7%QiHGbHSWor"miX[>rR=+7pOA'r!)I%GC,lMba4sKF0%FsaoR7\,NgB/gA^]=Y#*k^`uRci@gdJA-`n];&O#sUf5t2CL0(>)UF+7[=IjW&P/rQh9PR[LlEE;[nm85>PMDgH%7g>K_dNQ3OG*C]P;7O*)SP(5`F@5&UO<`9J%D,$2[B?\p4UnqiY&SlBmX6$tfgs`f%DQ\O1X_'71K$;-D1_ZF](=+jEUuUeNTI<K%0;**AoT%Bp2dRJ9e8Di`IXo%gF*cYa*RBM/Ya]N,9X)eqPBYIblD5H/o<GiqDGVm5E2ELYh/j64QtHYq5;l@th4UHrS.IGF2r0i>%H,OU36$XBP/#Urm2lN'<qYSb+VAn#Xf<MbsKPn@eZ$(<nqt.Ja#44$4HDfIk2orLk[A248VAn#Xf5TIA"Pn1u;u1[Jfhr`tRr4=-%3jUO-DRr.22kV((_JZs]:da[c*ikd5agR^W2dLWd:!ua;)lfJCT2IW(=;W!fS$'0>C22RHK6sYsh+]hA!;i$1GLI#DQIK[-VpJ-s%83FiIlSQ3;L1EcNe4hl,^J(DlD@eRT2*S-[\m_.7e*3_Ke4\D<+5c,hi+d32U\i#"3kD<d(9d^1.dM;"FDQ=c*Q%.To(-3_GM.q)%?X;QR/g/=nmJH1;Xc%(A\l`)T#u:Rp;'dL[A.CIJ3g)bXT[;'Ygbc"aPe)a(%_'X#M5dbW";nJ/)X5u;[ODY<UhGuH/U2$@G.BnL%Jej8-U>+r2o9r1Fk0<?<(Rqm(k59(!D&;#&I*J3AkGk:K50c$0NOR(okgZZ_nX@(e:9JJoFI`aag?Xs?7<as_e]u#"0"9'37]AFS%F#PqM#`+oDRQIrdg+U%,pmO;0I2d4S?+8nBmfucNk=XQZRC7$CpHFK?;_(`Ar?.K_A,#QHV;5DE8tV)G*k7k\B^Ob4qLgafE1U8Y%n=:K^\l:N4%.>ld0&l*M?YI4&;Kb#d&K+uS1%Z8\Ejm!rm$B@Yf)(<^d+$&m%ltZ0.GqK'jCHKSY,E8]'%N(inBTQ\G,V,-A"BZo%lsSX!]%[U^;>*_\o5X>##i$i\EZ@(-I`HFhh<d7:'N*QVHl<u\U\&]7&*suOhTLq3F_\!p\c\\`=Sr#/Iq.m;T@5k:&-eWH7E.l.%G.(\0RFGN%W-g<*Psb"eD6'AEd\"sA:;$Q5l;g]nWJ:9Er;0GS;uFbXUK\B06gai?ed[B-%o8Wm`1;2Rj[^1f2eCn)ijFWf#o]YB%WcNi5VJo--NAKg9eMN.n_EfOhN`N4WZ9okS8/^:GPlY^rW^A!uV[34=2r(tCb,.8g`aH[b`>.Fi><U[LGAWn3'<n/T1qqpd.Q?Gu%m3h1B;r4>K7/j'rak<o[L:arKWCq`^3&fX#h=h8#gl6d#?.W$"U&/Qp`nGX7_9?Wa?9:*sg;/N53AXqL*P._X]Z/ZOk@65\r!<-,%*tE+B*poIJ*+o\jflomgN&-`JcA+tM?Ynpcc+U?h-Dm2>a%YE6H)(#@%r,R:=]#_A=8UY>g<u(BkRc?dpV(cdA*VL\[!;10h%LN,%X@jL2]Z;8$dkI$DQc:q\CJ13Ze6CaPc^!+J\o;5I-DnbO5O6>`\:3Q=852cP'h!"b@Z.*(bqRr9*o72ujf]PV!tIuZ5G1(\VU=G8%d;(pG%/cGhDkn?:\jo/"ZTWIc]q_P:0`*c)*nQ%aUT$_l@1LUR]'aRZ9mLMap:(J/oOSj[\t4]O\CrBSmWrd:ETIH;CrBX;pj:<Y%K9!FsRkH\7V]4r;pKqiF5/.&EAmt<)b4?E.IskKLmD!h9@!CN%rk%PNg#B,,S"t9_Zn#V+r3*%*n'UN8ntT&Hgs!Y2j];[_A>gul%L[Eg8gOk60\E2j"]X'hpY,/BsY-m47=.4I8b00D,ZfUpU9mH+F5AJejC&>AS>\gWdq9@+&O"T9Nm!W`^LM]&!e9>p:"@"=jn^4j(%m<l28/)2AJC0ckC9=NgX)"c4D"[I&*cFKk_mrQ2::SRU"N@,/W/MAd<O#B4V(i6l1mUOF1GNR*2O7#-Dr+=;Gn_Q4<)mr_t5PhJK%*l/)bRQnBkol<-om'<7SLVI3hs5GBL5?Da*`Ok$sSD$LPT9K5=aepZ@mWKFejk?nrXe7$.RLeu#dHQiP*:8TJk=/+7fIOOnAWmn/%`A2%XU0Gir(J]/#c$&HCou<l&&X):BV#JfB`[Lp72c"1`95E#G`hr?Ah9:HOh'"_`FH%P_[[1#PDI)/E/G91l7k$`>laj-f4?5]/%g5lY9_U;+:HE&:)7U;XI>!q3'aL<]Y9W>3fX3NAhOZl[.f$$J8Umg>^UJ8j&bN:i;Ski^1Ce\/O]t8D5:0ql3hjH6k.q-K4fAYrZ%+YhU[>LPXGnR-LBgBiWU\rg16b?_G:+1<LVM)OuOp)P#0<jUQ=Pk@T1>(>0C1U8!mU'Y+UP9*%PkcD;6I^*<f9E/.7/Ip.cpfLcX%1*FR4H$c@a%[n]fp=+KNceERK1N(d5)Xa'h(c,41YHNjr<fch_&)#oiI#V!gr3WYXi4D/lh&^:?qe>T_IWKOKZpq@8q^a)(QE@ia%Bque#1X\8g@S4'-QS1F;Z/_P/GVg^DWmB@5_6kMr!e-d1d)mf`\S>g^*-S1KOSoQTpFeVG)g+1T6g\4?J[`j^0\EU6F;F2u[4R$]%[)unr)qrKaI?AO3E^G]o]h`8dN:#`q)@#MC(ER*-1<.?#!pnVCf_HMMV?X;#4b,-7koI>8]Cl6ua-0$X!pnVC-r2fB]aM&[%j4?D%a6j"f8>X;CXOk:Kecj^6#7rRIIMZD-B=lrTH`T^(!pnVCk^DNs\c<\HeCOdNo9D/)r`)[A.:;fgfd=7o:TWYB]TfTQWplWcauAZV%[cq&>7m/*a#0Q"no$&]oYR7:W.:<,RaT'5UI*MC1:\.Ju:A7gbE[dW>._qk&`^qnBL:%4Ehs*/rfhhF@EAge:Hi6!r%5m[hIU["i%3#em^?GFnQPfCDgYPhM:Z-J(BE3EVq<+rK`55MsAK8Hf)CoB)Voc$ZJe%"#5]e[MrXsUg5DceC=PQJFu\,+?#N"jWU][s?8BslU4%f_>52'C!-ZDi>W##2\[t^7[b,WoMn#2m==-m8W]FM!<\D47Ffb1%+^M5P`Lc`$`4LY>rteTGF$6]mf?WiK6m.C:Vs"h:3NJ"[0l=%IY6?""7&[)+5[cYhFG0/YC.+@o2"CQ^\3?'9]pCBBmd+.UlKf*hZ-SRh!-8*B1OAZf<<2K8URRGFCs.Gm4!n,f5G?[lW!<FCVSEG%;t>V9qR%,EMiQ;Dme$td>D$UoG0\Xjp\M9B&1uN`h!<S/CZjU*Pj[SDdQU:dqtPnN-eJ/X^5;:No:l_)T2E3\qX4#ll$F7ND0nD1%]mf@74IgXMNI1VmFSMp99]C<q>91q5QUr1:L;WHPCX4r[<<V@>lPF'CmOaHG+5^a#)U8$H9n@`jXaZJka4I/EC"VYZrO!Q=?,]n6%8=f*R^F6>BGH2g.$r)2ST5U!0]2s+6Hi;[CS-BlNq-Li0>Q#m4[>FAFRkWFFnQrs?IBQSZf<>-R^QJ!F)lj@U-8#,`oc(X`?JOfn%^,"*LIf5sNH)k<$.;,F4ldoJ"<RYDehs8m#kZ!HhNIA"fJ:/$=qR)q'fDT$jn`,oi`^]EBC@E`$\CWA>Y!KPnNEn\L]@X6O,/ap5%PMPQVDA\Q23r-I<m1$>%OXIlp04&2f<kghFXRf"an\'Cr7M+6,6VarPGctI%)eS)VrT$`I-ZE8#CE*%in@a;<b+Z5$F(u/hV"`IF%W/!<K2VR2XK.B.Nk=U/t',>;odR'Ej]Bt=H[C4&1RN.<@m*2Z%^L\KL`MWE/99Ftqr<e?PefGp"*hSK;:NZ%FHJc%"Df\s]gn.er%qe//rg](U-6dSUd2uiBu]jA#:F)LC/mI+;NICm7Blc4ADo];@7eW]+6p!`SEpZnTdQV[X_QZMUZIo5oHTC+6EqYKVe%j.E-.o*i$%]U`3(MI(b-+)^QA*q[b?MS5SYe,$E>05l>crigeKmD\Ujiq1dLn_`rAmk3dms'C$Am(rF35Aoif3ki<"oCQO8\o;iUBDH6/oqU9"%o4i!;>kn3`]mIqP^0Q2Ws*Am:NHlUm4)_f[nbgpBDrnm-\a8YHX-FW=nP6C'ra7nBrqko.Z;^bqm-O)&=ZSXrYOA#hr_OZ-(Pcq$%peK!K.lZ'\?h`'A\`DK$r`qTIJ+j='RkpD1\%5q$7/`t6hs>bJGE8?p#)Co>!=AKlrqVd2>e,2on,=G?+YrD)0E-QO;=ejgCW2=R%V9b(?:G0D.oA\@!ca1%H^U!e'T?BI5b^G%;deg1-FRIK*ht\Lq=*s]UHP5N0DSLG$ON\er6%ApVYLmCc?"4tgZmQfeBeI>.`R:hi%)h`uNjhf$0R>&mEgW029J`auLSS.i]UQ$pnm]9^L\:8/Yr6+bMF8>]sXk.dH#E-$_[s!55g4+<j\"#Oej1IEq_p\4G9BjUn$<e;X%52<]_2g:"W\pNuU./E:`f<7EACq\Q[Kn%bZ5P`]ZVVS<6f&%qecHpW)eh38])WB][8`I.P\*3gV/n+,!@\ij7Io]XTldlK6Hb\so%Ro`J(>[Fd@m-U2ED"QM@gM>PJfgBV3h+^p.Y:fb+?J<):0>4slmA$07K4Xi`F7Ir`@7C0(DrkYE_>e4Lroldmm/O::s6tBqX8bO:%rii_X$JblHY"73gV*fVIGQ6&jq5:Fl(H9X7*o:h&m`s]]5UFXP];sZnrfC;To]pk8Hi"]YHn*0#r42rsI<q/"3L[.Sq7N(0Kg8u1%l-\e@'HUG1^87%ckk7/)gJ]0ekik_[(7JEF>R##J5]8BWV>4qQ2$`IIKg8;>I/D33qT<qOGX#F4dJJ7OmZXE\pGO,KRsQ2Id^N_(%`/a.+YB)j2hVGnC)q<<gjMO1;]BP)V0.rj?+7HjlUVGZ6rb)5&XZ'UY,e,K\dQkq-q`c1jD#EmM/PXe+4t&p7062Vsc.gd2gUc";%LrsQ*km$@gf5$BI?74<kH4RKl]hX!AVg+2ii>;Dbq1%K_`7FUFdf+X3,CVaA&pUbFhL1U_IgN]=!ni&)NP/3[:Rg8)[uS1pRUkg_%^P,n8)nouA=e=5:p>btcelB%m=Zgse07u0TQ8l?G$Zc7ZB+T(DmT/kl(I"ku>(2tAbl6e`ob.0Qp&E1qEt?%J!6YVk`qj0!T3`OS%Cp*!`mHq$2YI(YO=K-406eog8WJ<^1l:*pQ[ID.BF3?K`jYI9cX)!Ws5U13mc#;kdXIF-V^C>\&5BlempLEuNrHVImRCi<7Is:>'%l/a^p\RD\C**`:JfOr=nd)2J,X<&HjR:1PJ]_VI4b=KhC;!>:ojIG->lLsPGceBP.hr6Z7^t?7laKo:S5qHjH$@N7*=4ua$gD,s8%?4a:1l#S7$_9Ud/>IMb49Ii%,qjPL;"RNRp*3=)kMe)3U^'&TB^#[AbdPYPBn6^'=_dtBq>9C$(?rjg\k:4@8,+kF[TD-p"ip[!<%m"8Uq4Hn%e2h!(HOiJp9'&^>3`8J"F4#\b2X=4#@('q\jgc#jX4!/bkO<,!dUcZ>p!R!X3s/B>lDLD;0pXg\_bIJYQR2B/aIQ@.8%&EST1_3fBuQEJoCrVDn2p8&H_S5R+a(2pFk\b<59)0V5(9?!?Y.NfFc.<q;/=noOA+$WtlFq"q$j7[OK`4^@rHgq*nDS>sm"\die%(LU%Q`"N?,SW*2hIb@'\+#5AHHB[/$[Pc`@2]d_tSjl4GhuJ8$!I"Ls70Kl.!B?bt&7EhdLqEL3K76k503<@!i*SVX>OsOAk?":J%!d`0`-7)<u2]erJ"]K2K!A;LnjD:icR5:bB'm;S:m%(Nqnt#V'd4DG.62C'VYTE!&ZKTR)kA^7l*;naqbt:/CAEEZKQ]Irk!SdnV%6<A#Z@lp9QA0:*-]6#%3HMMgTh9rITOR2%H=5KOJ_a,Z+\-BGDo?P'>(OBHD3[LN*<ifJ=^/*Oi^gSl)iD&_6_90b:b!@jiE]=[&%mY-XVApm1o/;0"5"$YR#C]kf6hgH_agOM3^X'^=3GB/N*-dV]%qi*tiH%^'cpO`[CF%Da46#kT"k4%mLUHOeLEHp=@Q$Cc%it1)d%G!k,[%^c9(G<6[gg[`J,#(it<GjHf-n0U76TA]jtrL+,Sd96b5WGSi1S6b]X3YA"<I<]]VT0%9fFG7>Vn4laDrGEU)G]FGqI/Yqu%H$g5&r%T#4k1.cr`X[GdIm6&RIX[1ZHh.,22!'e5US!=>dEgjZW,h[a_70%"kP&ZVK:h\dB@4@&r`kUNhd!l8F62@h1mPu=BI\ep%U/`4_O!\oB1RcDDko]*fJsg\"HNc'Q(XX;P#KcMT*K@ogk]:0-I%EQJLGk>R3t;V'ZI\b7U+*D5%.SQ)nC(Uh]8OKDLMqe\[jK[k%fYg+7lRMqikb1/jo<59AJ)Qs0rTa-g1P50D5L&qaiH807g.^I$28^m@+^;UmGK]qn]-mS#]TQKGM>W7$^s9?!eB%4(4*O^,mc9^Y%[TC?gnB+]<gKS1"Fm!`G`p&AL2^]Caa*(d$0X`k;5$o-JilT1I4EQiopa>f:SK[Uf$<mj5p3QK>2IbF5cOs&N.3!"tp1[@hTDe+:%4*c+c\'2[@K6t+pp+%*HFm##Qmbq6s\lS\(nV?5@2nkR3O4SmFb?C?IW6MGi7RP]V]4uUs47';]8VS6j7::n!R=o"lQT)*bgjT"M%ohQOaWX$<-^:=(32%[LDf&'g05a8p/[/Z2./mkR8R*'h@gq,&q0V>KEdBgj=iA1hW5U(ZFrq6*8X&](!E'CT#2ej/GSHkIZDVW-Z%i?m:[^)"dM*!,p8Z=aEpYr9AQ6&jK5XP0rJ0%%EtcYqV"q0`44Gu?]1+*`(crS_P[^!=Kujj9IWgX$K)ao7u]Zb!^@q1ePmYC6A[%pi?8O<rT:YJ5L]qk+"E_`<UL'8?0=I]*:%o]"<<CrjDFerX/W4c6<Pc^A+]>R]R[5Ct7ZH^,amFZ2+.2q27<nDXZb4+7(AAGu(n6%(@Ai.UG;9;r]B#`qT.OjqsSpI4ur>/pjSfAXS;JHpjU!WhlW;=lXEm2\scoOp?0Kdg#KDg^Ad_Fp?KlpRC0[$de)YI0>FsANfRNe%s5/aZ?UoT@NdkBZ?CP64qg@G\4^DkF+8u%V4H&Ifi`"s<oIA1XKnN,l6p;iLTf2p/45Y685J-`:oC(buQB3]^Cb;^DRh0sl2R<C7%L`:CCa6A5eX5Eo)%R7GEAtek8^o06@n<M1da(O^f[T4I;]rjfNd&ejJ*,_<b^=b,^XU*T3Y/-NbhqkMcHB^Rr*o+;Sec%[7FWMSl%UndjKLjl^c=$glFY%<&\YK^?Y^2o&R.k=CK4doS8l9-%*?LdP)B!H0+ihAaMCk)*)hC$("'4rWpOC%n^obPQR=c7[BeAJaebZVDr%%=\Gc/b-UT4[oN]RJC[h'J9F=?/_F-Q<'Eslq]#?grju!^L(<Zi!>h6UnF'N4M"NE$f*I:E9lYDpk+Z$[l.:S^'*gV,c]t/n-:h#%rTdb`LDis>"LlT#FMIVAcA#:@+69nTme%\RJ&O2C4-Z/VQEgGfK8bLKOf,;G^(\NcM"Q96[Z-I.MNtZklUYlSOONEbmV/^q*o!fF%np$-FK(])kH2I2E8gXQ&TI4[.g;E+2_8C]+,/Vd(iXY[6c18u)Kr+Le!m9o(>/\V!4tU71%"E0EoK[7U.Wb#?U-$d;7pNd3T,PDL%I:r*F`TFie2s6]jYb1bO1IXj:BW#hHO,oWq]FI-gId*INGo]'q(!fA%iQF)*qnr@X4l!ZYD#a/dAVG7$+hM=RATk6e5==.gs8=7a%+a@e;5?fEq!,<\Dc[BF?IXdisIsjkA`YW7QpFf/:iPV2^B\.ijc)6>p$SE9E;Kf@R>_J(P'`LIrq8%6df^B,q3FZI.plM:5l('-t%YKs3Ff9]mE*3mAlpc%Z29l]]<qo\K3ld`&d9+SKr4^9\T6n%[n$q_CYRX*_W'Ths1ff^57]3R!pqs.=LDnTIAI<B2iil^D@YuV$?%l=Lh"XI]C*D?'7troTj!:EJ7Th7UF<k+@(TG^obam]Ft6PJ-g$\SQXqM+p'BO\R+lo;2=t%Bd32XB`+@hSVV%K-fJ"H)J[]XNiLe%L\V]Jr\DXC4jR:/?!B@4ipY/B*c;>%nVoCr?;Ub892MZ.'Qph3o'O55ikI_5Gur0Fi#a)>[l,A"[o1E1_=9a:/$"oQ6Nc<4f:-R$%g5qnj'f4`sXT,g&F$!Zu^\>uci0L4AZ$31fAsW+]@+QH/eGpZhFlsRP:*^^6JA>r0Ms!sS$+k42N1JMkFXuQM);8Co%l`*oR3O32%k:8K`DgcU[jeKTeA',<gLR<+jn_u7k$VOhj/cRqT6[W(9&+SiPa_?)qH#E'4_+AEE3^7j5LF@Ugf8!2shM*2F;dbb=YUi6TZR"Y@%5;$Qk-gMM7fLpBpG!::J^arW#ki^DF%/YKf"[()gI=-l*&(UnQ<Ni5CWd<k$Q-XW[=17K<d-uGRMaP&&dDf9,EcjrCjZ)&l6&&Tn%]R83CDI%;[6H;GX6>$\P62m>&l:a6-dgiKBD[I0$('cnI[t!8BA#QRh7"]80ltbd:!hFN/]7rB2cJelr`fK[[UcmLhg,<ns'D5^n%^CcBg>&F\;gTM"pSM,`I^mK2YU[iS/-4&K^b)L6T!)ao@6f?Wr'.a6=m$bgo1rT80oh2*iOPs(NB&@+6=?[VRhjU->_DsNuY]#XI%>n@J(8M8]PI"(9DoeV&7R1qJPl,C6kP(WL8^hnT,ZK@]cIus@PhG751LVmq<H9Y\`T:(C)]Uu@@:\`'lhG751#K*0DHTtea+8F"R%hG751B4`@VVlT8R2U&\f:KQEY0K-Z>e(+3__7[%cT<>oSbebX^:KQFDH:alY5?'[JbKpeiDB=lj_>#]!mTji3`q/*cd-"==,ZkqO%087P6+2qK\/@Q?a.kH]'"tIR=_64oF">8Q!Hd@-eUh?j)d)UD)g->HN4Xp[5kN]Gi1psHafXa<2<"a?NeY<@,oYM\VZ3+WKQ]/g9%NR\.JQ7H.,757VSC47Q),,ubZI%9b#/Ra;""n>5s2c$?)a.8PiR]92gDNKIA?ZX""<"#F]0n76S3'307P"m2D6jXe@hOX\]>;Omu%9(&P?a/tt@A9`0-@DP:%+(+sA%1a-pf8m]Go5jBlruRfWUpK^.`;U;H>FF/$e$E1SfH18^pC:i%nCcK:H$8Z>behE.]4VqLru>>B%oBYT&Zi?T0#,(pMHS=i)c<d!:B0Y*_YKniSfd%[,e+QS\&6&O@BD?HnRD!D9^]-MSIqGk]Z2],dB9Dhd$ms@pp$C+j]8p8\I^Cu%%l""sIfn07m9YtkXn,9HgESpcU?OQ_&fmNMPm+_9Vlk^N0fh>El]t?,>Cme>;ZI7:ia\8"iSkeh`@>.=S=b,QoTr0YE)MDX$D@hu0%XI;;Xn*-DmZI6V4?;[_*!9Ah85g_*gg]Hh4aoh^E=&mE$>@fJ21AG&$;bFr+=jJA(ROo3'9<nm/8pbhdW7f&?c_gJ<g<6iU&X&BY%Yg4RX?.o0)N1EF<U^5(:=U#/EB2M\Y/Y5k[Ia(i$,R^Ra<Jmt_Lsh,GLe.u!`kJU7?%8$iE<&KE;WnH1Bs0;!2HBELO^#IE\c&:l%h6Wc[B6%6^d4;NHU/D$#;L#/,jfiWQA-Rf=HTKIb\JCJZ<?Y&t7:r0t8C^:c,F-E9#g&$&pc4mG1^.H'ChR#+:'g$U@+0,`g5<CC%!8(:cK\5+6_)"0_5VJ(\=_]XL:0_dNhpNADFJ`IJG3KdU!<TI$4_6/SU8P:r.l!.)Td@)@CNf<Vb&L$AEgba:`.#Hp1;LTZKM;,>%MO5o?BqF<bAThpf@%&S[i]PENL*C'[rQr)\Y_?1O21icQZr[qV4]<fA"rJikP[t+f7-u/!cl1cjQBLV"!FgOX#cYtZ7#8r`HH)`u%U;;<+d]u?0[\O<Fc,t]G_lmTRhQ-"q!<TIXD(cMRT;m4:.HE`($hA)!)"W>kJA__TZ:&$K(<6_kY=csA3dB!M1J\`o_3?s_fHSRk%&ks$1*:A>r,D[gA*lru^g_bF;b#fK['hq4",Ch=9F3V'ijLCmac=D*o4X<*h.Unc-JHZ-mJp[SSYI$l`IZoEk5HuDck['N'5G[c\%%9j._P/8tRhTJhlChFIR\`K;+;>C)^1U@d=Cd;R+HW^BJ[#e8A(BC1hNZaX<X+D0h^p4$;+$_T8J>-K_k+Soq/To$;Ar3KP+c<q:%7qbIm.?K+[OtmEp$N-'%6O;9IZB/W7D9=%L?dl>jQ&$_\!I"OK+-WL0Kq-FuncbW0X#*WnCl?D-6'rG*V9[8?Hp&+Z;bjdsJL[D7%k\HI>)\p$jS?%J2'8?<b&cYGn[=ag2+[f=A=gGhC=]kn;#EuHn,8122+\]ZaP\*LD1Ja/ra.92;#lmPT`#p=<"TupkG-U\)g\L4[%/2PA,7"bOg/EIuseRa:CM[dH'&9gR=@(-ElYQA+"UPd1bKZ=,Q#"YS0:0,1VQ0-[,&qZr4P7nC0rJdGUaA3I:.aFhX)Mu:m"N7%8%A@:T/H'MD)<*A<TU<ZY\P*Z3_1]mo]7M6an-ETho,po=re+0$]K]T%(/=mL@n0Ns"-5W_u<GJ<pFJaSa4)71D.[L:&.kC,nrT:Y=%/'jrN=]ggW82MWC<0`]:(?2,5ZWRbV-d;\sp?;B#Ws%Q9,h&i%JAcE\"YR_3!f#pj0!6T6-h]%pM9b[2QB7>)8BKW"</)eIX%L93%8ui#bZ3hH@Rpo\.UC(Qt"L3\c_>E;%-j'IDX^jmlY)=8aQXj8C,Y>Z]Ppa@n<_Q]aKK@[:-adER`3_l&b=\lF7VC`d!2T_aZiL!)%@H:RCb]0SUdO?A"f>tjC-J6;u"c6BtMG@'g<b%TZLcbhR)ZZ^+M*"FcHflPg[*i_2<[;@A>3d[jBO;)KJd$m0.O[E(c)sX5ndYe>%@90J9+cq<lYRm(3P'ZK?<b791r:_0S>,j<e'Mk`0GumRR#?Z?-&rRI5@(GHt$3M"Y?WI"Y$aTK8,\V^m75!Z9Kr?cK_qI!QGQg<D%rgp[k')[flYX9.[BFQiEM1f%"/1[*YKkR"i,f/s%'ke:.%'fCS/Obbd^bC\u;??X%Ggf!"?..q*$EGSkI6cX\Hc@NV*6T83=fI#V%Ks<2&.8[PjVEnDe`6-h,6EHPJ'g]u9,FR2^9S#OT:(Smc&<[bbLJh9Y.mQ@jVkc-NbXt,3_I4]_hq$LYid8u+VtXk*$.,9cB#Dgn%!gFbW#7a"a(VF@s6NZD9c5D+b/NX1fbm8fPd0-la>Rlg=#6A"Jqr;(21LV*uRsq79!p6#'JF/`_H32=50fp=5(;[*JDCTt]H>GT.%P!ThA=QrbWZVhK*,8Q"<)o,:V>-#3#QK5-?NLH+M0qJJ8)"eDB.8o;nn9W67WSGcS92\_p(1sCF:-pH5V-@]_irI17TPY&cb*&>f%$F9BB;rCf/["FK]7Gf<tfKqj+J<sb'!"g.%_Bh4.3='$)'JStFG7KeK"I5(I!!/<d"%6;LaMS"k"mOh3AmpZ%E-D03"V>`U7ME![%lX8..em$:/4TlcYV,_aN+Qu#*HO?iQ"JI+D1W\ga!Tb(pTP<S[j8cI)@`=#`?rjq,=i!H[aMf+ri*N+g)$k_oY]Ptp1_S7QQBZY<%1cR`/C]6p@)Bh`)7Aj_!;@A,n,1r?8d\O,%@.d;2a_AA:3g[.AUla,MdaK]u$QCAr[t(L$o4S=DV@uD%jkrl8!Kik8Jk_0)D>Cmo%fjH4"=i"#DZ!b[P!MdKo8k%m>!K%+Q;C,kM=rj+n>0JL;d'>,iN_uf!o@@Z*.Esih6]@n4P<jAt'fTHodT0MH,ZQ:p+_'ae'Dj4)%7+buUYo^W40FB]BBI':RWfilAPXJnRS4K"T,Zk>l@R.q8YtYdi6%Kb\&@%KH7Le)$9-ObkBeCgJZE@,''p0om<j/Gi5,GB;/lF-U%2#'Z#*.oZF"rk9XJ:f?<-XALdJg;gsE&BUR.0$E\8BHV9YZZia=(qM:!O>9h+q$]ZOHKSjV:-P=1t[I4/P)O6huMpe&k/'SCF7#a%h8d[4[5:bq<>LGBGSFW4$?_nOYq1RC<C.=`n2HA+ARLpk?j(%%&k&!RC17J/kSqtRXH,p#WCe]^=TIu0_N>]:$%g79^mVL_a?q\`%+u_7cmL;WM"m:$V@WYK/OXPhGQV*,Z#pE/F6@c>"^#9;DZH@g,!!K4!1^;bo85W>hIa1V1T7YEeV8PV1'Imj)Zi<_O*i1kg#gGHD%(OU-_\4N'_SaR#8V:gDFGL?"g^o)rAei*ePXl*l&AQY@gLnb'rEO:9^:mq`O2S_.P*c\Q@ko;_+EO;u+YKBbZXN"!u/Q9d>$5c>B%9rHqJPUR(SU?kRR4KTl!"3a_E#R;k&^*6L,UB.(sSP+tI=9W$Ck@fAk$0u9cBG_YM-Q!1<"cC*:SZrTn1"R"Ig?%U!'bO*.e='t&%6nE1+F(LVEF1W]5qj::&$S*7";N#*Y8O<'cdf<guLFfPnJ[#K'/?Lct+OZ(B2-?b;%kMPukg9O!%ZnKS*[XuM^`3[W_*(Hg.0u6j%TS&+]S-IHg;AgR<&7Q`+YN!'Z@kti+,4rXhDdF>j9))\R*,We[dor1_#"$=`&.JiL.CG4>R#_F2N!+YX*Sq/$Ce5j)',0oBaiQ[P%r9QGi,;VRd5PO\ai+E3G<iMoW)*mO_,/@TfO*s?1me:`PDPT4ji.GQbG]-JG'K&t_752E4+ukbd5p&l^P5qrSfLTXQ6)Y4:7eRf&%@(A:Y+XTjAoHaO80n/M;8VE`rB33L`JgVF$lpuk>S0Jn8(*(FM-0Ihq=Z\i'/1pXZ!<p<#%#AqQUrT<Q"p;_p)]:O\\<14s_OJ3U%cAN)2mmIAApE9Wp>t=rp]#]I2$/`5KFX:<aJ6DKO#\%++1p,1mW%0QJZU?d3&N9Sd)Y03)ORj@2/R:pq&n!"YFn?hWQ@^EH#9OR$%Gu^*WLD3Oh%uCCN/a)3-Kk,HE),;lb&q\2"'Z4*2n;WdcY[674+m(@8oLa@3Lj9.Q%[@@@;C*WC#lWD[-Hd^?U<.-/?HdbPG9[!4%6I;d/Yj*C4U_g!Qo4+"aXVHZ3.QEOliWXa\GpcL?fST6149$Ku+?5J`Z[R!1l\!;`]1Ig(GUc9?+]Rtp;asn'^g:0/+]emS:*Z);%[K1)1aEcFQ9%[u+HciE&g-DKr%F%67%fiGdD)m,H.F/W48:VP!.\-MA'U;K_d(>D7'LjmK$OMn'$/`:T5]qfjK\hDN8hA>O-5R9p%R<<Y($Rs#fF!1QpYu_)F&gU2C8T,\=NR=TT4(@Lg=ZuPA6$;r="TU[+!:UJ/T*c4b.0BTN'qnsLW[Gm0>/*#3/B_.9B3qU>33Wqt%A3gWc(rE;,V,bJY#,k6^@N#nIQK*)g.h<1F9m+VI,mgD#1GJ"n5\(%[Jj3m2JeVQJ$M+laW>lTO>X\\b7O&RLcoU9pYWC@Y%'cub%MZf<gV][:b15`kU$%[V/MZbe'n=GCM(7PN(*`Q19'\cD71ZS4-ALJHh-F(H7Akl9t1r()V>S]sI8jNtb=Hl'!@E*n\LbcJ":8\q:%Ef26/\82XBBQ5"ap.o6Pr!k_$q^2Q8i\D#0.$]S[Vk"4.#J,uFpLS5B-:!s(23eH_H]Wk9A6<!dh9OJ9XA)G5'_H8HKTeUl*qPA$%_!jJp8H:>N:-"+3R]"%#&*DLf0EB;>*T->hm']r/)B_O@jjp5hdtFM]Z5-OH8L=F\AnakU3=ogJ@@.+e/nb1!a-'[@CEZSi%u^nZ%UF!4$o@=5&<]Cbq+Ld6._3,5:RK3sJgk2]fZs"'NcFRbijNK[b*X1EGWE;DFOo`LM,QOoHc[m5F&FeM/)[RXfW^MYH6,L\k&X$1V%k##]+?PHn4<i(&@YfrFO;4=6e.iFj3iVZ4PI@@GKIO#%HX/lk]A-$/N/0d@l!l>:uK_$E?,gA_b#ej>*CgCe"R$2qEQiO\)8Kl(k%X9?.?]@o$G060H_A7"?JSB3;?D(84al7.`%H%*h(aU(4)*>7&A]YGdSH\gTL![+O'dd4%Ca?j[^34k:[9=qS*,2kJTfmAh_&r[2/%$XTWZZ/albG"uS85]@oUU4pabOs6EDcA=oo/gQ+O$[C!:rI`SeJ@mEB?6nHqb6jc)^mcH8)5O;fGoIg1Ju^B?0Ml1Yq\GtZ/!Gi.%8I3R%]]Zt!TF;SBhMXdnU,j[q,!F\+>^Cqp+oAcL.-WL0ai<7+#+0HU/OZL:/ptJjK@H'7fEmnqIT/`N3K^/'1M)lp2p:,oOr&u&%H<j!HUkK]32**)t!qmpu8FdWM7$C"'+kf#HcAAn=)=eZ9'+'aE:PBVL+i93I0]tt&Oh;e#4t#,V5:>nhqK[EPdOe5(OWFbENV&V/%DPY=MpBEe+KcfRR7ei*p#K*%185Q$*)'HbZ%'\Y^#+5!./]>0+!;Ve$%Rd84Q\9YGM+@[r8?WpVAN_;6E[PI$ed%H9VkA>e08-F1%/28GS8%p5OQh*<Sc6S'q.pWEn'#Nr_*/$*cSoW+%N9#@fP4fWp7a79P=XCV?aEB:-bKq=^(cbqqHV!=%%j_k_Kr)=H"rHYcX?]W+%,&&W>X)ClLlPmI;MR<SDHNsl6UjGn[qZ>1jWK+X5_A/4;%I6Wi]K6uR6/m5nE$kb/\W_J]mqhbJ#_*I"Z\=5k!<>c_1agsZE,D6a%Y=4!ZOtmm&^<XVa6!]#Q?Ab[GCdXWR_KUYR/Za2@_++,G0f^iA8P$R+W>HQe(bY^L-3,aF6]a60,qda3]ZCL)j$aQ*POMPnd[Z8!%aQsaD$?+?ZfME(7A-p)<1(W6;"Xp\#SMqGIUA#uXX.QY45i*cBTNiA>:DP6j;Wa*#Bc4N4V!BF_7!MWsd%:`.i)'+r,b_:r(j&5X%Sk^QTR3C:QGSm2uQAWsZNHo<Z:0AAr'(3sHHO-Y(GsfK*Ig9<>G9k)ZDj<qK633HKC1MaDdWQDW`fF691*HA26^RnSKV;N$D/s!-%+0,aSXM]u:`6[,M-CGfN<u$(^cBtXhP^97ET8(!X`F=Df(a+C?",tFCpE[sD4A_,o&/+W\H\H9S<Dh;*eQ5:YOEf4lH!H`HJ[#p>%LSAhs%^ZDt;LSMHWiT#lQm=3E'$-3$ESRNc.GEsc[1H64K#%J>Be@0!O<;C^"38VcmYXp@>F$m6<CMMVY)fUorDSg=O[1<'rg\g>%6OacuS:eUZ+[RYU@g2q5ne7=_*BR!+P-W;+cFZp:#Z#W%?'PZ"RtQ%G&2;[OFs*5u$+[A^Q]bAUQ,TcI\="/oSS"88gI%'r]E2.V%.Le9"("K6/3@J:+E^%tk=t37no[+dE3+r?CQ,$?f`E$4RQ)B1c60K%T`Z1N7N9"&LI73-lD:fT$aG,@EEH21+6s5<lqD)Fl50%hX%n3/B3(F<e>:6aRSY,k)`;6[/5R50.C/dTLcB:2R5\o^)%Nd<NU:8Y)M29d#bn<D"Fj$8\69Co(j(gpA..W^`l,R!Fi!TLZ6&K0[+%.P;u5&[@*FG-3s-+Fqc$b^ja6ieo"k]a:!710NuROH_6OYuH@OXj79<49]*$a(@?j4=q;9XXQXAKEeYZ82;J7ON4hrgr9?M_0Y5)%%(:J1R42d8Q=or!;la"]]@jGp$rRU,/-T.s^`AMj"7ED+?=Zm&KMjQU36PRBB%sM!N"=.V!_\14Os%Di+ePK^6==1jW9Z&YmHbr7%1BIc'5WMgP-nG<LV[S=M]0Bo31'Mt@4NqPGR%]lNf#e]RqaE<s^he7QDu&L&-FeTc2n*NS5D;.1CIU\M(k/]rS.C5!dOCNXPmLV\%@0U+:PZ8mY#_cA-QV[!?=BM?km42j$)%8%2o#S=u*ufV.Ad(0</2pOY%1B?Jeu(k<)H&O1Jft^SS\p7h!L>.H^Hj;lLahNVO#4bk%;.DO;ZVqMk88;go!>iNh$>C<?>BVal0ke-"X$X\=3mJ>"r7N0*(LbJ7:Cc3[,bpp:G%6*';#rIEC&s"me`[8@+gWP)*bu>AW7$5.%^B5%DaSf4/;%SQ4.F]tpRY<e:;i*)]W)p,J@2o_aRm"rUM.JbB9S1WF&TNS$0VaNN\;+KR&WGNI$?@XjN##AO"B[Gk6/3$@!:e@!%aOCog-h,Gb@PH.fBuF\HY=HFk^M#QdS,j-\)DKc+-WLS5P>s^l0SeR+Zk]1VBFkUOpYO-BUZL/ZmP3?d4!XJ6s)\c#X/5=$_%Zb0%C/s5MGQ_UV!m7TE,ma.KK[3fgSrsXi/ZfOQ3AgKU^^f*FW*msB,[[-KH[]u.cd/f$9C(nfO,j404Ss9k)'0ME[`W>MWmS3-!ock=%,#@Q9nuRGS(MuBP+RZ>9LU6BSX'!GOAUC?D6D4\F!ra(t!YQdh;5X?5&UK!ad%^m]'n`NoiW-_??s(p6OMZ;^L#la-G*Z!PM$=kc%4\*aL!6Z3kD'4/."?3B3d[hFn:a#c=M@Q9+$!)&@.0qY<4$$E[A72H(o+]Im6\r-YN11JGi4YY>'(Jq5eMju^\tU1"J3_k)JOPn+%Am*X+IeshhR^g(bH4)NF6qd[_?3;PsQffHro?D5PcqBMJo!H7;B;?YaH&TBEP$\EULUJ?m/3*_R:N4"u+O&5[a=n!UT1bm-Q;F15%>7#E!'_6$'OU/0:K;U1d=d9Ca$_Y-6Y6lEV<(7-!+k$c8,G3*Y@g(3+iLGHQ-jV8&T@)i[T*`cjc3R<)3J\oaGp,a*+BI>E6mr(:%\s7g*+KDAR-R%jafbt<35LYH01W+XIk^o<39KF[2U(^'T_THQ;%%qH93S5YW))*_*":b/`rCdb86-tM4'<tM8(1@(H=A$!b!3*2K%c9dVo1X*GYemQlaoN^O=c63Hn?rJ_dNl-ldd;B.,]hAN]g3dlCnPhsE_)MuOrh*[8,0`)=lL34Z>GNZd8?f"X^2B47!oAJ*='?.<%ZT.RuHF?@eQ(d>J.kp2Y.7@VGP(7$LKMe_%^'@4F-C1[M.G:h"%K_A<//K6&4b,Sc$NlXO@*jW8/sLK>`/?'DZ7@ppYTVjq:*H<S%7AO!5GXVl_'C'2gGD_[)^qi8poTl7d"gWY*OD"&C5^8/G8?'lJ&Y@2'WCo2X=@HZu4UD47--9c<fYG`S,Q.`Rjjn-@b#*.nD-$'V%:J2nc%'#aA!,X?9Mn$ok^7n2q)*_XERQ9GM&5]oTGJe>BK_jd.p\Cd.$:0Uj-kDj1^BWrSBM&<@P88)qb31FCU5XXdS:O$7(/t[-%o9f.]`qRIQAeh_i=E0FinGJ,rq,&a2huM9mC`T`2hAU?[;hARK/\j+5$5M>@,`C"LNbKE,$625NLCgI:9tHGnl#?9G:8=Ar6PLA=%r(tDY;A_r%1dc^e@4d5$OoWk)j]gO0SiKc#1=!Gf*^r?H(CS&]AADT'0V2u,L?0*og645&<sCWMJR2rnL)r8Fgd?>)"/q1uqjbVm%PqtL07/>Sdb](J5LD;Yj4UHaKE.KUqVC]duaf+MBP#cCePQd1"oT:BUC$K6E-?@'^NFgG_+)Y%U7>.Go8<:Un_GPPi!UV1j*eZrZ%,@C"G.6bck?;g8Y&-YI'MD?M!9f@TJ$7H]QPV<`oNMkjPB;bl)bR3J??;d0#G`R\OK>FHql@Ha?UE2ad-<Etc;`b="(pBHPk4b^(%>qEtGGl[:d^IBnm-)dWt4_Im:3^R6qV\(g,TX/#]`#^Nt3jK.cn.:j$FOEW4Qf'P4SOPN&ieB,V&6)4]eHm&p8<U8R!lt6FO#P/p%.2Oi&KUBo\"@PMJ's/V;<u5gBpuQHA"E&ZW\2]U)c*eOtS\+:)oOEVU)$s6R-Cp^FoQY.KL$d:83CuO?QY$OEYX:k]fMkj;h>(m6%)Dlr(E!g:Y+`2c6!j1sGZg!SRU$"Lo+P_$D0n]!p?qE,,N4QZrfH3kfUsE%?G_[e=bJH=.Bi`T<;r@f[WMjLsBL]d0)Ri*[=lr+*%#HAdunmruI:BBS[L-3<[*#M3P5@1S,M]cnK!euOAJDa9U#f4c@mj7Ci,Un"QaMR0(jLBXJ*g7d&=RooUhMlDC9&^Om=[Da&&dF;J%&aWp(jN`;fDMEik@!Ms?$n=\f;$k[rSQFnqHm"#5U8K,Oku`Nq-"DQm(lEQ%5U*>P4:,m7cbL-d0FHbA-g"%`G6WR(R#6*@8I2.J%MV!ch"!(g#VdgiM1ucW`%pSW+^dd;&!58Q,K\.dt_J^qWkTko1=[W8;NjOV$EiOEV&7u1$+TGD,;ZI=YXcPh2,WOW]VVUtR8*Ndb%"8b*dJIpO'Ss=fJceOoh&s<hZl73'D#\Z\&EJ+R4^4Q-R'0;ZPS+%:99^iIaok:f\r)DomRZbi>+;n24'/;;e8lL`8.B)M7]iN&.%,D#;+7rk4#.1+Ds4TRj]D[]`hOOOga`4fC!XG\Nb'+%#r]?J?F%]Z@U,/tmd'G(BIA(SJ'I=]:$+@\W_PREW]!=#sn+O4C@brQr[%k^iuOn?biqhm2`FQub^4Qi<6j3IWBLlR=""_dEro*<BTA63S45<AX;LJ;*LA3Z<__+:0_j?CqDbP\Gp42K4mG;<.auKZ?eh%k85g%5sUm)S?Zr;OIT'[UA#L*;>i8is056PbdtNsUY:/9P0gu^B_7h5Y`.:%OaQYB!nnR81:2BPTuC*3YJjFee0:n"q'Mnk'7L;Q%j2TY%$e4Ci=K8]Z@l+MfTG7a@KOD$R&<9Q])2t%-`6^c,>Eo4gi^7ON+f'(L7r]7d3VDb.HO`N6.?((TK(Ya7INQItPXUt5#%O5^2"gn_%KXE6e=5E]ffda@0`f^54R2&hWZb^Su*nLhZ5%R5-3Vs\&kM2P8Df]*EJ1)mr(D,.EHP/eVLse9^E2jhWE"Wc.+IZ]0@hlJ.0^QaK%Tb.h)MUK6dZmdO:ZG/]g66/geL]@oMLtIFTL=7_P$%kSL0QJL0.d6fNk^--fie!RX.h?V5pTFl,%TS/l0.s1*onP/#8hn@!h'R\I%s#U@+!\=Is!mKo?0X_ASKGh#k6]8c3QAk+E\I'449T"p&#arX#T'!;J!=\0jCtt3><l+k?%YDp`2aTKT<D(a10PY)n;[K3GrBcNN%.69jhc9];q*#g$GT"l%W5sZCt-h;UE)qZTh:8^*4/spne#SthGCDe!1($KF$9L[\\,_Tcf)E[N[),90c9/\e+$EFu*Ptf*",Ws-T%arco?6eT`#rqf)G'euA.1P-;lQ9@W9V""6a]^/e1Ju6WB^]K(0JhYA$*<3lSND.JcF.O7[AD*/T0?(^MVt:8K8cU7q?3+l:8I49g%!ZF*\'_Y:c,fZ3*"Q4DgJSYbH!sCtL^k9oWLNF#1'c?:l$s=aT%+#5J&_eM&&knJ.:XPRBEZD1.M8!!:M1b#?TZ%!+A!mmT@mC&;%Kk@T&fVen9TL^IGJJ%B7KN1%M1e+r?PNOqddM0lD;Atf$TATf4T]2jt>XktE)Th%H*SeJ[;b$OH_K.NS8opgrH[+TVfkEWp&!J0%%Q*>jl+cp"MArc@D0;/b5))B+F)*\9]!q@qj?Mkc!iNd%p6qVWi(aGjuT'/gdV?@8rn<#,Q_58S;ZEme):Qi&6=96GH5NW7G&4U=(%!d>cQ.ZabX_*H/G9#rWIpd'i/LsC`Gf\1GAZ7;C`1Y+)"h<>JGE'\%c^/slP?;,@<V\!H:59U1TS68^b73$'E9Fu.?P]:g.7LFAG%hZNgT6irl:=pZA@@[AhY:<p7D)1+=J<-nm<DBu]Zo*=K*"c1-;k3)/@Uc2_(;AboIa*AR=bp]*L??AMg:fT3Wk)QHeUl5hTJq%2+%"*/h^)pMof<KfK#X,ptZ;`krBOq,'34tAXN!WUBcS53*Mm%VQV!tHl<c'T>h-_Ma'+]H0+6Fd.NJ?1Gh$\%.J6m6c5'hV'O*`1j<%+V?7Z;(2ee+;s?!.OG4=>gnLZSI@ab7W6?Op]RQ]9lNrSW79LBT'S3lD*h'rZYUrd"r-j1]O^U9nX6i5kFe+aI`itO.^FZ_lD%\@%NEM[ed?rN_6*[+#9m?_-]E&Y$=2IL:"/KJeV:2N^E)re#Y[W,hA'J#9pnB4q!S9M1%#5dqL]i]k-A-As]FR@Z`s#6qBgiO)"XhVF%Er9+_R"MshKV3+mLH7(3m@p/#[2R?O*-=(.Dp8KLKTVN#&/B1J<d>G]\+FqU3=;3b]cQ`,IVhhl_J>/_4Ui*I<hZ1NP&*6H(M!V=%MQ<7"p!7=0Xb_'VS_tB69g`'kO`Ssr[IOr/],_GVVP+2?i.0*X.>SQul7-F)C+"8qP]]<2ic_uQ(`r)lRe1!W&5c8O)0RcH13&<h%lp6?s0&6O]E9oWtg1=:e\9a5BQ7rbK7.CF92NF<3c^[&_Q;3>d&f*lB)B1+k3\*,>1b301qZFg'r((SD'7k*2RUT[2-o=4@HEiHm%BK/?k`<9PR;?g(I0bYCmRG1'(Ab==q"O0nlNF=Xrk)b1m"J[H5s5s.hqI`LCg0&tZkCiEYl"m(4_q(TY/b)-$5d5j:<!4_^@Z#8l%ClN3G$N@#h,``cij$SjFf1b<df?ME(Z;cX-GX=$"@t4Y(SV+f<4@G#PN5?qB;)u[H+g?N12\Fq'j9UhCd8aKU(mGA.mb@_84C!W4%atk/g;`W?ohNp+R/Y8g$*l?>\-Q(t\!CF6s84]-mSUlL8ILB-Mj;`S7i<GC,B90>i5ZjcPHOcq2J-7TiU6)#BT(6\:B#W?3QoQ.s%%K$dgVeG+NAcs.hOT=@$Z/oFV!M_[<'*I)/E\o$7LLF/jah-cooK1<QksQ(qZisQ$+b2]^9;s]V+dAIh,@_020LJu<c$9GE&W0_`%d4ck\]23c`+H;MAMPUTNr[G`;UN^^^Zo"\<2]&NJq_AQr/YSpJ8#N?7Lq#E0O9g9sP7C^TVc)5mJ0]u6,t`.-L,!\)'$MiIAVh$>%hhLj%%ni=Rlj=?:146[3/5\/FJtr(UW\lOP#%r$dYG@[Sb*(Y;ZTJA&Y+t_Z4Nh9R/AC7tVNAAJ)=,F*WQm(*O:]eHYUWJ@L\^.c%+5Q2/0SeS`JM:"R\X]<N17/5#d`Z=J?,A+';&>[#FrWoNo#;qJ?RVVnCGNI.(4cj)=]2>(.F;@d3d[.s2\aAlVI8W#"q5'OG0`KI%`C9nX;BVsWOH"dG?dX5Q-0!C#pc[=p(X"Slc>h?&dJYA1h?4]^'j8rb_8D_h:kXa#KIkS9S,d3o)1IGo@urpc.HN`rI8:J/KX)"S%hK/3d,U*)T&qZf.#sfhQ%+%P>I1]YA9,Z_L_/g&QJ,s%-ERAtYVTA7OUstejM6d3_Q=Z)jJTg;!65P@VBdb*l$Su3A#FW^PnJsl8%.WWHW#PcQ+rQKsXE))/L-$ki$*b1?HcXC]WiQ:^]'FFA^:e!XdB<1fXO+=#?H_RtdQ4^!&CmN)2g;&=]$e>l'7OW8T"D=drPo44+%Ji4/ONnVn7SARYYceR,$9h-R5'f)$Z1ISDn4B$Q1Rp%P>(K0FY!rt#5L^dA0^o:Lo@l@.4!8rYMf4iV->`+-&S0"Hc\K(@?K`k@-%f7L2?;[2@t?fTM=Qr-;?(-Zsnj-#H3cc7T,a3.i9*AR>2*GgLN^,&!M88J#.AHAdOA#K&`%!="ZjNK';W![I:E<]I`mhJe-NE]%7%Fl:3/Z%aD0=Kj_/4:2oLLtff[WdfS^8=g$_XL#&h$Ra3_#T[/aNY1O^L5:[0+Ae_T`40)`;$8S3lj-Gka.-#]YC@52T?BW.!W]0'%(j;4H!)4><05(AaV32b($\)6"@MllA.NWOBNO'T5&JKUBj\Ui6Gk9bC%>:CJK+m_@U#3DSq4[WN+nQP(cK%n@X[!/cS["/]1JHDT%\r9KP.>Np-(JYA1hdQ:HEZaq@=$g]Nd;YU1oe5l-"^W;16&(es<0Fk7.4LSB-^le^LW.&K:oFZ<P+h[Od2AP(!hC_NnOa5PG!iqQ%30q[sZ<u^8>,KlPfW[7`Hr$t%4I&!FMjoa?BWS%e/-6<//dYo7TidN#N$hsNP=t1Pr>&7KmSbZsGk%:sWETD?ZBKpt&YsBEnh?]n%'emj&in/skXA_J<?l@ba,P&J!(8gY10^^*?3Jt,<!T5M)s&LgLEHQ4=Kf<HA6?mO*/fkdb:.haPJb/Dp0(BXZ8W8o'K`gmm$!3OJ%8NDU![sK]/__='HN^It+VVpureI"V_0eWEC?_,_#f];"?)(2>6k8hCco0u8bKMN&=ZB?7dSOc8Ie_]hn"8Fk:__:0%*TS5ZJ8k/<%45L6!ln#L'XYTa0*]CCaWi?9EF-FiUQQ'A4Md1f:KodRXH:=?kJ9[DBJs#@67Uh]gI*]F[@8cH3e!/P=(2NKd[TL.c[KVE<fbR\#%QT:_mqq>LL]WWp\c+iK:Q@8-+_S3I/H!adkf[g<5)`6nu"!f5pkIk`&QSu\9"orBXn']&K3*bk,m=7k0:_@pT]koatYi9\3G.%FI%?,hnpD<TWG(mf<PZ)rg&Ep%7oVjt)aPtpJIZOIK:Plu#<0#6El!&Qd*8=%&ZQ_cF!/BLd&pVP[>Y2VbT(I"Tu#T$5D7)DCA\\:D?%3/I16_g>:mE->+Rg3=%+H]rH@3!I15[Xb14PYD[h!p(^oocVeCdCfbSF7?n%*i\EUEqZmUpA_DRX:*IYljg>9XjSU;MR`8/9iV-q%iY87G&MeR-T<KnTo3<?Q)&HH7]M\\UaJiFddG``e3(So\B9]'q9o"e8IRKA++Il'nc8Ik_F5^rqpQY7L&f+Z@@ropR;BcEmG.%EL%VJLmZZRqu?GI@O<\d/9sgF.PnV!=YqO(;P#&`Ao)fL,uH_S7HAkQ"3\]A!358?+%)kIom'F$=s%_jmb4*DFID.m:eC.;f_m(*fGV%BMo[^in)"Z6OZ?oE`q<`_`LT#r9u;')W#k7+,/=R)Ne=Dj#tjR8oN_"S1^)G:\"+)3&p+]4?g/\9'>OO*.uBTOs[Se7t0Ir]p_Ya%!@dh<f`7]S%A'G#j]%\$AIEaOWi"dg$<[mW"'(4/A.]stJoll',q^$/Grup)kI<(">jTka.>!,?"qYFZPq6q6I)h2R!,=lOPk:CP%1Vf!38oro6jgVnj+K=]NY%Ipq1-,piOkqSrPD+=1Km.18"NK.*R&%4[\Cq#qVIf@]+3L.0m\DA)gR=&SCYEU5\2$+)%M#2O;naqL%A*D-B@QW["$X;D,:04-+!hEdLX)q7Dcrf<jiKSX-!6/bU4N3Q(`Rk7/V;Lnd_h)SD?r#XtkY;X)4=N>H7+gX1lG5H8]98^bc^8_a%YH.SJ6DLMZC_c4uBFl`&1q]N)W/)1gM3MYMqt.0eF\(n*e_LB>nWW\8$0@T>5Qo@ha"C!I`#te+SFXhO6\9=7-fJ=rK\-[XDP,-@%40+3R;HK@*V</B?E:Gs(kU`"g'\j^@f^;10!f4;CPSg;p!QIkqBAJ^*%6oQ'Ac^itFF'!VR^=Vpc`i9P>9'GLAjgu77*FR=?Eqs/%&qYkn`W08_XTib:0It\4r/_QuF#IBU3;4nXH<=/Nl#K2\_<J4rP2JG;4;S*p8f44S9/bba;@be);ch+@eXjXq_)rasTuj)j;H!0X%FG_bd?hRXr&=-.rD+X7d3r#$,o2/EE/[;iWp)i8X_g$F%n+qna(`!^FOpF'o:\@93#7)Og+\(cOFb&PL,4UY$*#be1N_RkMJd/-C%PljPq=IX?GfhKUf8%q:'jNunW$V^U$3.!T'Z[Y^=]`4Lg%"Kc#*fCh%#EDCW""+On,@uh^_B0mdV<O_f8=U"b`'UZ%UZmFAF70DQ%"",IoRaD,k5'mR9]ZpXZiQ\`g/&EW,1ZtGOcEXcWQXXS-6AC6L]`>khk-kUoO`@u\@@BN:#U'r-+`-A)AHT-3GWq_Hb`?.r)V0Hu%0R.XI=)2hR=;C)si!P!P09)ne5_t`:0Z9j2UIlWHS2/N'LHC0[eOK"9O.;(7amllYjOs$e457r>"S>ltW4ECF,WAs/Lk9M/c&>-_%2HS28i@F8Tn>tilkVC6R4bQgh-@&?`8rt!:3$iAV)QM.7M>(7p2\:h8Jqi9(6Nk7)NsL@614%:@O:)m?R#19?gDc`2?#esE'f6#K%,m:i%GXOS":2Qqi&!+_*P_lh3THJ&4S1\/g?A@&5Q]JXn5Sm82kI3a)OZ0=_&IQ:H5"I03h3s75r"PY:VPH]g/YtKlmJpX:DciBl%%Q!%2Mta`_&7B`Y"2^ub<adqi@hOa0j:r'4JC06!+9LpFSb22kV@)a%)?Y562[63NiIVferJfueJhU31?UUrX&AhNM]o4:MM^%?M%fK9oWG<ArOO7.I\qb\'DU#Mu'a6b#gDBXnOk@%JI8B2J.S@Sb&>/2"/3OaL'\N@hlETO`E([N<(4\S&m!KS*Nfik:]?X[%[A_uf&%q:OR9"=t36M\QIL/Yl!=*6Tl.jD*T(\qc(4ne='I!>*8Tk"mO4]iqq9$KD,HWqHK%9sHIOl^%_Ab1p^rJ9*hCd)^tL]&b/Q*jkr\%?,W?cSVhA;+<_Tj!D#[05-P#D";rcu0D5sC3oW]oM#!Rd[7":%GF(i#RB-G+(!sIRPdcOo/3)aNj::naciat@3tjJa6-gCe7_VIX%(i[+o>ZrK,!N!b<4*9>+<Z.mp4Tl/q6:pId6Y@h*\U.L,'C\7SEBk(Q*&QhO];1*,jiD`KZLCZ;5UgIeq)NE#fS\3N5u3bf/k85p%#g[HJdd0"]1<ac^ob;0i\?T3,Rq+HN#R5\Z!;_"U*9/:6e@-W0'm[(f_kYg0.&DQC3HP9A7.j8,&.GXr-dSOE?;eST_L0Z=HHCkL%S&="@"lJepX`iWMV(;A+VOOe$!XBnL7(YU$EYo95GNLR_g5FD4"9nZj"V;A<Eh#'!Yais]\)<uggV2`>'`\TD@kC4k'i#nWV[m/Q%RgEa9,)!<M+%@ItWK0:K=Mcg#+PpkR.MZV]->CDR#EZ<p>k#Q!6;b<GF[T5o,UP\1_/"0Dh%/sgfItq,Gl\ZXGogr-gmXeDYprdJ%U]SD(E.t*EK+<-sN8l*<)h.ZD!5+T]fL?+rB_[N-2UUKZ;5-dGWSC)CKYr0;_#P3@T7R[lGeUpc8iY):Ea)DG$gL>07?OSOQso0>%gi9h?+O=UJL4m'8QNPHcI:3=Ta-,`tW(Wsa^+mDAOEZdOmTY#WoE6="@fe*l^0'n],\)ch!Af3g;Q65-S"e057s?^&S;G%e.YQlq%72YBP+<4=D+@792m@7(?<JDfu#\``_s,g991+l'0DX)JpXq7:S@mD;QNKF)aN]$,7#pH35$MK?;3XGG:c$gaZJH"2s`]Bc1SZjJs%1FQY)O7K"lf1W]d9+j$;gLa'J&;$,:%O\-0i#2bsFt&rOWYt-(8lIcd!O"(?`:tH0FB%kR4tatXQR!9jb@&^&%GN-m\D7W;,oI`+%+:1-ZV3u:Ua2WJ($nWlX^qCGre>r.K'jhFT/])BJH6s#S$Mm6uEF'k1RKObZ3;fc";)pYQGYg%_0HieadQUY7?!po6D^$4b?\E5Z%L1p\JG)F40<BB.l#[Y/R3i:K.FK3:dYR7\4N`qPtY`2K"`=_fj3ff4)QtK*J'jk8mW>3_Q:SJ[XX>t>GPt#fHPi'[:64U?ES<)U,%(#,9Z)NcPW:2<@g*.k<NQ9VgiaC57-Y)Hb<$"4\p6"JU,\]QB41^t"*Cf`Sf;d_>Od1OHA+u=/1@T=EqcQWoq>c<<LguoEA4p$[u%1N60F%O;QQM\&8lnRKl'4*\Wo0!I[GdU7?bNj2L&OkcN:&9`_"W`02B,"j;RIL@jT1R@I9lGQmSPdZ,f'abEh]6[IZ,3]Pd@K]<H%S:_h=q&j0mGs8*]^Gl!c;@E(?JZq"a20gP^k/-W/3Eh1&FW+r=W;ooCEQA_c\Va0__S*l_@3lQmRP1\-1_+W(@SSU#7E+%kKPYip%"^QVXPYY;$`KM.<AD]lIPe4/#Ek43jM$VpQP,5/iGBFn%7=5\%<C*=J&l%Tl_DnH]1T[='6M;\K<<S!&c#!0$W!*Hj%$@3e&m#Ja%+lmUbpRGIQ1$>*/O'V54qE5BrYhpo0'H4rQ)sf""HnJ6QS!8TQ`5QN;#nD%oSDZZ7FKGf^ZU82P0WI&9Y^nLV9M5'Xb"P?V\P,PE%3%G;]*8jM2R0eEk%O2\o5j72Wmk)A4%Oq:CcDL_GP!r0_I0Njd+'_ZO&gf,q$,L\I\XD,^6Ehf,`=HNHYk_:16#,@A+A#&qP:dRO%IT"2!OH^*7&/%J6&lKkRk#*?'ie$FIUT6g!7qo]%6&+K0SmFEcn/dnW]Om,k6\Aph0aSY9!&9tDfZSka9kV,$cG]]V,mBKZ9aW6A%4YKP1;bDcaYi<5@Q`t_LP-,WMY"Y:ofKGkGL+r77QC/F[!-.>dBtO+m>f(P,=Bmr2'MgRFQ3>'hE[o?Z'<ZH"FGt8%JkUW'P]IE6%k';d+KEOieKER[cKE*:HjAB>4"?trLi1(.*3?^3R</B\;-poHeQE)eOKQ0]@UJ=?HQuKl^LgmT%>K[R/*mp\@E1loRX;>4n"P<I_%gtAks&7RB.MOl<]DAt<.&aEHqpIZ6:F.!Rf;Q6&0-kcXc8qad;$,MLgMSc)?'*:>!\P.[,f[(LK1b]Mn2gB;=OqSu=U6/\)6p`:6%+sAQN&mujp&mu\R&)X.$4.K&EW]1Xnp[i"!=:4*^-?5oXbCj9Z\B<f:pF$Tb%O[cG>4+Gi[:CIL^?0T)IZX9G,gODPqe=i6+(Eiq%O0+6/?Nr-@<maIb<i=tC^O^KW9>'2a!+IFG_NF:I"c,*EnFBg."MU6a(;WCpa[ioFHpZ25q9!21F&".PN)s_%lPL0G+ar'AC<h\h%1mXud&k8_GfWV2A@5L75`^`lU%BXW\(3S$/:?1u&J((pg&_BY<M0G)1XYdgk`RS=#/"J%3M2rfBJ8ci668WI:Y*_ZqKsS=!)Bn/T%Zd'9s+,5Y\BL.H:\7/WhcW<eu=`G3Gba_TY@XYt.>2URR9a>LF]'4`B=8j3/*g/*`ImW+9fL>h;he?.O/Kq993l")@FF^p=Bc+Nk%DiuTY$lmsDL:/V&L3[@#DSR)MoL5W0FG7OI@mY!o$`=/#)4!Xn@)aO?MAT&.(4>4cSiB6q7;)ZfY)KEO#"X;'@&TS2:Shslm7:F5%,4IT$i<NQe5Y7fk$%'h):n]ftTZbm;fs'^L3,g1dVVrF9V5;FG>]qJ'XuJ'bbRpU0XmXFG&+M@fs.1o79^[NbY&N)/_8YJp.>!IL%DGl"<_W_%.L!p(b/Gq35X+9b>#elIQdpuof@<,uc4-'Id3_E2cCT9#!F'"I`-+m$$GqDi"IH#@&&O$^?:Zlt&V1c\1.jH&hJCO6l%Sp32dMl-SR\]]%,I]_%7k&[0t@@7bAP5)SF'fK@lKcRX=ISfDg;IdhF/m(1Eo@C(k"`(#i4S,u0!-;-N'LOfCIc7cY\.iX*S]2<Y%>\+%ba$E8k2^JTbV^97r:\Q<7VX*aFen5cdhCCd-rVWtqq1"IO<``oL(7opQHMldho05I"cXsn_J,V[QZ_)aHKKGW_J(q`^IQ]bV%^\Dqp4F@(pfDbih^>^2@=P.r44nJ[S+;JIQ~>%AI9_PrivateDataEnd