%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Chicago Wellesley Club logo 2011 v1-o.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Cicia Lee
%%CreationDate: 2/13/12
%%BoundingBox: 0 0 204 132
%%HiResBoundingBox: 0 0 203.1724 131.0811
%%CropBox: 0 0 203.1724 131.0811
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 84 8%%BeginData: 10298 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0AFF7E2F542F54A85A2F532F7E7E2F2F547E5A2F2F5A5A2F542F%532F542F2F7EFF532F2F542F5AFD05FF7E2F532F3053FD05FF7E2F2F532F%542F2F2F7EFFFFFFA92F0D0D0D2FA9A9542F532F2F7EFD05FF2F542F532F%542F2F2FA95A2F2F542F5AFFFF592F2F2FA8FD15FF59060753FFA82F0607%A8FF060D84FF2F0753FFAF2F060D53A87E7E065AFFFF53070653FD07FF5A%06072FFD07FF530D062F7EA87E0D07FFFF84062FA8FF592953FFA82F0607%59FD06FFA92907065A7EA8530759FF5307062FA8FFFFFF060D7EFD17FF2F%062FFFFF7E2F07A8A80D84FFFF2F2FFFFFFF5A0706A9FFFFFF5A53FFFF84%070D7EFD07FF7E0D067EFD08FF072F53FFFFFFA82FFFFF2F2953FFFFFF2F%5AFFFF2F2F07FD08FF7E060DA8FFFFFF535AFFFF2F0D07A9FFFF840D7EFD%18FF5307067EFFFF06072F2F2FFFFFA8067EFFFFFF7E06077EFFFFFFA8A9%FFFF5907067EFD07FF84060753FD07FFA80D065AFD04FFA8FFA82F062FA8%FFFFFFA8FFFF2F060DA8FD07FF530706A8FFFFFFAFA8FFFF7E06072FFFFF%2F2FFD1AFF072F2FFFFF7E070D07FFFFFF532FFD04FF5A2F07A9FFFF53A9%FFFFFF84070D7EFD07FF7E0D077EFD07FFA9072F53FFFFA95AFFFFFF2F0D%062F84FD05FF2F2F07A9FD07FF7E060DA8FFFF5AA8FD04FF2F062FFFA806%AFFD1AFF59060D7EFFA82F062FFFFFA90753FD04FF7E06072F7E530D7EFF%FFFF590D067EFD07FF84060753FD07FFA80D062F5A7E065AFFFFFFA80607%060D2FA9FFFFFF2F060DA8FD07FF5307065A7E5A06A9FD04FF7E07065A2F%53FD1BFFA80D065AFFFF2F2F07A9FF7E07FD05FF592F072F2F2F07A8FFFF%FF7E060D7EFD07FF7E0D067EFD07FFA9070D07532F0D53FD04FFA90D0D06%2F0DA9FFFF2F0D07A9FD07FF7E070D2F532F0DA8FD05FF2F0D062FAFFD1C%FF2F0706A9A90D06072FFF0753FD05FF5A060D7EFFFF2F7EFFFFFF5A0706%7EFD07FFA8060753FD07FF840D0653FFFF5353FD06FF530706072FFFFF53%060D84FD07FF53070684FFFF2FA8FD05FF7E06072FFD1DFFA9072F5A7E0D%5A072F7E2FA8FD05FF592F07A9FFFFA8FD04FF7E062F7EFD07FF840D067E%FD07FFAF072F53FFFFFFA8FD07FF7E0D070DFFFF2F0D07AFFD07FF7E070D%7EFFFFAFA9FD05FF840D067EFD1EFF2F060D067EA80D06072FFD06FF5A06%0D7EFD04FF847EFF7E07067EFD04FF7E7EFFA8060753FD04FFA95AFFA80D%0659FD04FFA8845353FD04FF2F0707FFFF53060DA8FD04FF7E84FF530706%A8FD04FF7EA8FFFFFFA8060753FD1EFF7E0D062FFFFF2F0D0784FD06FF5A%0D067EFD04FF077EFF84070D53FD04FF2F53FF7E0D075AFD04FF0D5AFFFF%072F2FFD04FF532F7E07A9FFFFFF5A0653FFFF2F2F07A9FFFFFFA906A9FF%7E060D7EFFFFFFA90D7EFFFFFF7E0D067EFD1FFF070753FFFF7E062FFD06%FF7E2F0607065A595A0607A8A829070607537E532F06A8A82F0607065353%7E07077DA92F0706072F7E532F067EA807067EA87E060DA8FF590D060707%5A535A060DA87E0707062F537E530D06FFFFFF7E2F0607077EA8FD1DFF7E%0DFD04FF547EFD05FFA85A535A535A2F5A2F5A5AFF535A535A535A535A2F%7EFF7E2F5A535A2F5A2F5A53FF535A535A535A2F5A2F5AA8FF7E5A2F2F2F%7EA9FFA85A535A535A2F5A2F5A7EA92F5A535A53542F5A2F7EFFFFFF7E2F%5A535A53FD5CFFA8FDFCFFFDFCFFFD3AFFA97E5A5A7EFF7E7EA8FF7E7EA8%A97E7EA8FFFF7E597E7EFFFFFF7EFD04FFA8597E59A9FFFF7E7E53A9FFFF%FFA95A847E7E7EA87EA97E7E7E847E7EA8A97E7EFFFFA97E5AA9FFFFA87E%7E7E59FFFF84537EFFA85A84FFFFA9847E7E59A97E7E7EFF7E7EA9FFFFFF%7E7E5A7EA8A87E84FFFFA87E7EFFA97E7EA97E7E5AA8FF840D2FA9592FA8%2F07FFFF2F06FFA8072FFFA82F2FA9592FA8FF5307A8FFFF5A0684A82F53%FF2F2F847E065AFFFFA82F06A906532F5A592F840729A92F847E0753FFFF%FF2F077EFFFFA9062FA8537E7E06A92FA87E0753FFFFFF2F077E7E2F7E06%5AFF2F53FFFFFF530D7EA92F7E7D0759FFFFA9062FFFFF2F53A82F077E06%5A2F2FFFFFFFA8FF2F2FFFFF532FFFFF077EFF540DFFFFFFA8FFFF5A077E%FFA90784FD04FFA82F7EFFFF7E07A9FFFF842FA8A9075AFF5A7EFF075AFF%A9FFFF077EFFFFFF7E07FD04FF3053FFA8FF532F7EFFFFAF0684FFFFFF7E%07FFA8AFFF2F2FA953FFFFFF7E2F7EFFFFFFA9A907A9FFFFFF2F53FFFF7E%7EFF2F53FF2F53065AFD05FF53065A532F07FFA90D53FF065AFD05FFA853%5307FF530DA8FFA9FFFF5A06A9FFFF7E075AFFFFFF072FFF0D53FF2FFFFF%2F072F2FFFA80D5AFFFFFF5307A8FFFFFF2F2F2F53FFA9060753FFA80759%FFFFFF530D2F0DA8FF7E0707A9FFFFFF5A06A9FD04FF7E0D7EFFFFFF0753%FFFF7E7EFF53075306A82F53FD05FF2F2FA9FF2F2FFFFF067EFF0D2FFD05%FF532F2F0DA97E06A9FF7E2F7E5A297EFFFFA80684FFFFFF84077E072F53%7EFFFF0D548484FFA9067EFFFFFF7E07FD04FF2F2FA97EFFFFFF2F297EFF%077EFFFFFF7E06A95AFFFFFF0D2FFD04FF532FA8FD04FFA806A9FFFFFF2F%53FFFF7E7EFF2F2FFF53072F07A8FFFF5AA82F29FFFF5306FFFF0753FF53%077EFFFF5A7E53A8A9065AA8072FFFFF0753FF0653FFFF2F0DA8FD04FF2F%067E062FA9FFFF0D2FFFA87EA80759FF7EA85307A8FF59AF2F2FFFFF5959%FFFF067EA80759FF7EA95907A8FF7EA9FF2F2FFD04FFA90653FFFF7E7E84%077EFF7E84292FFFFF2FA8FF2F29FF5307FF532F5A5A53A92F2FA8FF2F2F%84840754FFFF532F5A5A2F5A2FFFA82F0DA9842F537E077EFFA92F5A592F%A8FD05FF5A2FFF5A53FFFF840D2F53545A7E07545A2F7E5A075A53547E2F%077E2F5A535A5353A97E072F592F5A5A075A532FFFA90D2FA8FD04FFA92F%5A5A2F7E7E07545A2FA8A90D5A537EFFA9072F532F7EFFFFA88484FFA9FF%A8FFAFFFA8FFA8FFA8FFFFFFA8A8A8FFA8FFFFFFA8FFA8FFFFA97EFD05FF%7EA9FD08FFA9FFA8FFFFFFA8FFA9A9A8FFA8FFA8A9A8FFA8FFA8A9A8FFA8%FFA8AFFFFF7EA9FFFFA8FFA8A9A8FFA8FFA8A9A9FFA8FFA8FD07FFA884A8%FFA8FFA8A9A8FFFFFF7EA9FFFFA8FFA8A9FDFCFFFDFCFFFD9EFFA82F072F%072F292F072F292F072F292F072F072FA8FFFF53062F292F072F292F072F%292F072F292F072F292F072F292F072F292F072F292F072F292F072F290D%59FFFFA8062F292F072F292F072F292F072F292F072F7EFD2AFF070D062F%070D070D070D070D070D072F070D06AFFFFF2F2F070D070D070D070D070D%070D070D062F070D062F070D062F070D070D070D070D070D070D070D067E%FFFF7E2F070D070D070D070D070D070D070D062F07A8FD29FFA82F060D06%0D0607060D060D060D0607060D070DA8FFFF53060D0607060D060D060D06%0D060D0607060D0607060D0607060D060D060D060D060D0607060D070753%FFFFA8060D0607060D060D060D060D060D060D060D7EFD2AFFAFFFA8A97E%5A0D0D070D070D070D077EA9FD07FFA9A9590D060D070D070D070D077E7E%A87EA97EA87EA984A8530D070D070D070D070D0D7EA8FD09FF530D060D07%0D070D072F59A8A8AFA9FD32FF2F07060D0607062FFD0CFF7E0D060D0607%060D06A8FD0CFF590D0607060D060706FD0CFFA90607060D0607065AFD39%FF2F2F070D070D0DFD0DFF7E2F070D070D0753FD0EFF0D0D070D070D07A9%FD0CFF840D070D070D065AFD3AFFA8060D060D060D7EFD0DFF2F0D060D06%0D2FFD0DFFA80D060D060D065AFD0DFF5A060D060D060DA8FD3BFF5A060D%070D0653FD0DFFA9060D070D060DA9FD0CFFA8060D070D062FAFFD0DFF07%0D070D072F7EFD3CFFA807060D060706A8FD0DFF53060D0607065AFD0CFF%2F07060D060753FD0DFF5307060D060706FD3EFF532F070D072F2FFD0DFF%A80D070D070D0DFD0BFFA80D070D070D07FD0EFF2F070D070D067EFD3EFF%A9060D060D060D7EFD0DFF2F0D060D060D53FD0AFF53060D060D065AFD0D%FF7E060D060D062FA9FD3FFF5A060D070D0653FD0DFFA9060D070D062FAF%FD08FFA9060D070D062FFD0EFF070D070D060D7EFD40FFA807060D060706%84FD0DFF53060D0607067EFD08FF2F07060D060759FD0DFF5307060D0607%07FD42FF532F070D072F2FFD0DFFA80D070D070D0DFD07FFA80D070D070D%0DFD0EFF2F070D070D0684FD42FFA9060D060D060D7EFD0DFF2F0D060D06%0D53FD06FF53060D060D067EFD0DFF7E060D060D062FFD44FF5A060D070D%062FFD0DFFA9060D070D062FAFFD04FFA9060D070D062FFD0EFF070D070D%060D7EFD44FFA80D060D06070684FD0DFF53060D0607067EFD04FF2F0706%0D060759FD0DFF5307060D060707FD46FF532F070D072F2FFD0DFFA80D07%0D070D0DFFFFFF840D070D070D0DFD0EFF2F070D070D0684FD46FFA9060D%060D060D7EFD0DFF2F0D060D060D53FFFF53060D060D067EFD0DFF7E060D%060D062FFD48FF5A060D070D062FFD0DFFA9060D070D062FFFA9060D070D%062FFD0EFF070D070D060D7EFD48FFA80D060D06070684FD0DFF53060D06%07065A2F07060D060759FD0DFF5307060D060729FD4AFF532F070D072F2F%FD0DFFA80D070D070D070D070D070D2FFD0EFF2F070D070D06A9FD4AFFAF%060D060D060D7EFD0DFF2F0D060D060D060D060D067EFD0DFF7E060D060D%062FFD4CFF7E060D070D062FFD0EFF070D070D070D070D062FFD0EFF070D%070D060D7EFD4CFFA80D060D06070684FD0DFF5A060D0607060D060759FD%0DFF5307060D060729FD4EFF592F070D072F2FFD0DFFA92F070D070D070D%2FFD0DFFA90D070D070D06A9FD4FFF060D060D060D7EFD0DFF530D060D06%0D067EFD0DFF5A060D060D062FFD50FF7E060D070D062FFD0DFFA8060D07%0D060DA9FD0DFF070D070D060D7EFD50FFA80D060D0607067EFD0CFF2F07%060D0607065AFD0CFF5307060D060729FD52FF592F070D072F2FFD0BFF7E%0D070D070D070D07FD0BFFA90D070D070D06A9FD53FF060D060D060D7EFD%0AFF2F060D060D060D060D53FD0AFF5A060D060D062FFD54FF7E060D070D%062FFD09FF84060D070D070D070D060DA8FD09FF070D070D060D84FD54FF%A92F060D0607067EFD08FF2F07060D0607060D0607065AFD08FF5307060D%06072FFD56FF5A2F070D072F2FFD07FF7E0D070D070D2F2F070D070D07A9%FD06FFA90D070D070D07A9FD57FF070D060D060D7EFD06FF2F060D060D06%A8590D060D060D53FD06FF5A060D060D062FFD58FF7E060D070D062FFD05%FF84060D070D062FFFFF070D070D060DA8FD05FF070D070D060D84FD58FF%A92F060D0607067EFD04FF2F07060D06077EFFFF5A060D0607065AFD04FF%5307060D06072FFD5AFF5A2F070D072F2FFFFFFF7E0D070D070D2FFFFFFF%A92F070D070D07A9FFFFA90D070D070D07A9FD5BFF070D060D060D7EFFFF%2F060D060D067EFD04FF530D060D060D53FFFF5A060D060D062FFD5CFF7E%060D070D062FFF84060D070D062FFD06FF070D070D060DA9FF060D070D06%0DA8FD5CFFA92F060D0607067E2F07060D06077EFD06FF5A060D0607065A%5307060D06072FFD5EFF7E2F070D070D070D070D070D2FFD07FFA92F070D%070D070D070D070D07A9FD5FFF070D060D060D060D060D06A8FD08FF530D%060D060D060D060D0653FD60FF7E060D070D070D070D0654FD0AFF070D07%0D070D070D060DA8FD61FF2F060D0607060D06077EFD0AFF7E060D060706%0D06072FFD62FF7E2F070D070D070D2FFD0CFF2F070D070D070D07A9FD63%FF070D060D060D06A8FD0CFF590D060D060D0653FD64FF7E060D070D0654%FD0EFF070D070D060DA8FD65FF2F060D06077EFD0EFF7E060D06072FFD66%FF7E2F070D2FFD10FF2F070D07AFFD67FF072906A8FD10FF59290653FD68%FFA92F7EFD12FF535AA8FDB3FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: 
%%DocumentCustomColors: (PANTONE 280 C)
%%CMYKCustomColor: 1 0.7200 0 0.1800 (PANTONE 280 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic CMYK</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2012-02-13T13:53:30-05:00</xmp:CreateDate>
         <xmp:ModifyDate>2012-02-13T13:53:30-05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2012-02-13T13:53:30-05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>168</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAqAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FWPedvJen+a9Iay&#xA;uZZreeMO1ldQSyRmKVloHIRgHHs1cuwZzjlYasuITFPm78oNQm0v817TTPMzztNHNLZxJLNLSG9F&#xA;UQlQaNUgoAdvirm91keLCTD3/B0ujmY5uGZPz6q/55eULzyZr1rJo91dQ6FqMZNtEZ5XEUsVBJHy&#xA;ZmalCrCp7+2DQZhlieIDiCdfjlikDEnhPmU51Kw0nztr3k3R/KE1za+tp6z63cLczy+hboePBuTE&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:F07F117407206811B699D2F41FF0AFD9</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:F07F117407206811B699D2F41FF0AFD9</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:EF7F117407206811B699D2F41FF0AFD9</stRef:instanceID>
            <stRef:documentID>xmp.did:EF7F117407206811B699D2F41FF0AFD9</stRef:documentID>
            <stRef:originalDocumentID>uuid:E3B705F59336E0118987E9F32614B546</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:20:43-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:20:57-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:10-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:28-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:53-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:25:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:17-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:45-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:008011740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EC80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:14-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ED80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:22-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EE80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EF80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F080265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:30-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F180265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:41-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F280265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F380265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:10-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F480265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F580265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F680265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:30:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1405FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1505FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:26-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1605FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:34-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1705FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1805FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:11-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1905FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:33-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1A05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1B05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:58-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1C05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1D05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:24-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1E05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:30-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C62CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:45-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C72CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:51-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C82CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:15-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C92CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:23-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CA2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:41-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CB2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:46-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CC2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:03-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CD2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:08-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CE2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CF2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D02CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B44FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:36:05-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B54FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:36:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B64FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:36:39-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B74FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:01-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EF7F117407206811B699D2F41FF0AFD9</stEvt:instanceID>
                  <stEvt:when>2012-02-13T13:53:22-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F07F117407206811B699D2F41FF0AFD9</stEvt:instanceID>
                  <stEvt:when>2012-02-13T13:53:30-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>uuid:E3B705F59336E0118987E9F32614B546</xmpMM:OriginalDocumentID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>8.500000</stDim:w>
            <stDim:h>11.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>PANTONE 280 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Red</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Yellow</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Green</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Cyan</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Blue</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Magenta</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=90 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>14.999998</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=90 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=80 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>80.000000</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=35 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>35.000004</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=5 M=0 Y=90 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>5.000001</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>19.999998</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=90 M=30 Y=95 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>90.000000</xmpG:cyan>
                           <xmpG:magenta>30.000002</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>30.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=75 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=10 Y=45 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>80.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>45.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=70 M=15 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>70.000000</xmpG:cyan>
                           <xmpG:magenta>14.999998</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=95 Y=5 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>5.000001</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=25 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>25.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=100 Y=35 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>35.000004</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=100 Y=50 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=95 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>19.999998</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=25 Y=40 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>25.000000</xmpG:magenta>
                           <xmpG:yellow>39.999996</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=45 Y=50 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>45.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>5.000001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=50 Y=60 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>60.000004</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=55 M=60 Y=65 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>55.000000</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>39.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=40 Y=65 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>39.999996</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=30 M=50 Y=75 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>30.000002</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=60 Y=80 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=65 Y=90 K=35</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>65.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>35.000004</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=70 Y=80 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>70.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 282 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>68.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>53.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 280 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>72.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>18.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grayscale</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=100</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>255</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=90</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>229</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=80</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>203</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=70</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>178</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=60</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>152</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=50</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>127</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=40</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>101</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=30</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>76</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=20</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>50</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=10</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>25</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=5</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>12</xmpG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -131.081 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 131.081 li
203.172 131.081 li
203.172 0 li
cp
clp
[1 0 0 1 0 0 ]ct
46.0786 1.61475 mo
45.4038 1.76172 45.0796 1.99658 44.874 2.26074 cv
44.5518 2.73047 44.0527 3.66943 43.2598 5.51953 cv
41.8218 8.95508 38.5034 16.2661 37.0645 20.0835 cv
36.8877 20.23 36.4771 20.3184 36.0957 20.3184 cv
35.7729 20.3184 35.5088 20.23 35.3027 20.0835 cv
34.98 19.3779 34.5391 18.3218 34.187 17.4995 cv
32.9536 14.7104 li
32.5435 13.7705 32.1606 12.8892 31.897 12.4487 cv
31.6328 12.9482 31.2798 13.6538 30.8984 14.4756 cv
29.519 17.4697 li
29.0781 18.4097 28.7549 19.2612 28.2852 20.23 cv
28.1387 20.3765 27.7573 20.4648 27.3164 20.4648 cv
26.9937 20.4648 26.8174 20.3765 26.5522 20.23 cv
26.0825 18.9966 24.9087 16.354 23.9106 14.1523 cv
19.0947 3.64014 li
18.3018 1.90869 18.126 1.76172 17.1567 1.55615 cv
16.4224 1.40967 li
16.188 1.11523 16.2178 .528809 16.541 .380859 cv
17.627 .44043 18.8599 .470215 20.3579 .470215 cv
21.6499 .470215 22.7949 .44043 23.9106 .380859 cv
24.145 .499512 24.2627 1.23291 23.9697 1.40967 cv
23.4404 1.49707 li
22.9121 1.58545 22.7061 1.73193 22.7061 1.9375 cv
22.7061 2.14355 23.3228 3.52344 24.2334 5.57861 cv
27.1406 12.0679 li
27.9624 13.8882 28.2554 14.5044 28.6084 15.2095 cv
28.9604 14.5635 29.4312 13.6826 30.0176 12.3613 cv
30.3994 11.5098 li
30.605 11.0396 30.7813 10.3945 30.7813 10.2178 cv
30.7813 10.041 30.7222 9.71826 30.605 9.4248 cv
27.7866 3.22998 li
27.1108 1.76172 26.9053 1.55615 25.7891 1.43848 cv
25.4956 1.40967 li
25.2026 1.17432 25.2607 .499512 25.584 .380859 cv
26.8462 .44043 27.9917 .470215 29.2837 .470215 cv
30.7813 .470215 31.897 .44043 32.6597 .380859 cv
33.0122 .470215 32.9829 1.2627 32.7773 1.40967 cv
32.2788 1.52686 li
31.9258 1.61475 31.4854 1.73193 31.4854 1.9375 cv
31.4854 2.17285 31.6035 2.49561 31.75 2.81836 cv
32.6304 4.84521 li
32.895 5.46143 33.189 6.10693 33.4526 6.63574 cv
33.7461 6.01904 34.04 5.43213 34.3335 4.78564 cv
34.5981 4.19873 li
35.0972 3.08252 35.3906 2.20215 35.3906 2.02588 cv
35.3906 1.8208 35.2734 1.73193 34.8037 1.61475 cv
33.9229 1.40967 li
33.7168 1.20313 33.7461 .528809 34.0112 .380859 cv
34.8623 .44043 35.9189 .470215 36.8877 .470215 cv
38.0332 .470215 39.1201 .44043 39.8833 .380859 cv
40.1177 .528809 40.1768 1.23291 39.9121 1.43848 cv
39.0903 1.61475 li
38.0918 1.8208 37.8867 1.9375 36.8589 3.69971 cv
36.1538 4.90283 35.4194 6.25391 35.0386 7.0166 cv
34.7744 7.54541 34.3931 8.39697 34.3931 8.54395 cv
34.3931 8.63184 34.4219 8.80811 34.6274 9.27832 cv
36.0073 12.2432 li
36.7705 13.8584 37.123 14.7104 37.2988 15.1216 cv
38.7085 11.7153 40.0889 8.07471 41.498 4.49219 cv
41.7031 3.99316 42.2905 2.31885 42.2905 1.99658 cv
42.2905 1.79102 42.1147 1.70264 41.7324 1.58545 cv
41.0869 1.40967 li
40.8521 1.14453 40.9111 .528809 41.1753 .380859 cv
42.1147 .44043 43.2896 .470215 44.1699 .470215 cv
45.1978 .470215 46.0488 .44043 46.8711 .380859 cv
47.1357 .528809 47.1646 1.17432 46.9595 1.40967 cv
46.0786 1.61475 li
cp
false sop
/0 
<<
/Name (PANTONE 280 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 1 .72 0 .18 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
54.3584 8.10352 mo
54.3584 8.92627 54.3872 8.98438 55.1807 8.98438 cv
57.2061 8.98438 li
58.7329 8.98438 59.0854 8.77881 59.3789 7.37012 cv
59.5259 6.63574 li
59.7314 6.40088 60.4648 6.40088 60.6128 6.66455 cv
60.5537 7.60498 60.5244 8.66162 60.5244 9.77783 cv
60.5244 10.8936 60.5537 11.9502 60.6128 12.8892 cv
60.4648 13.1543 59.7314 13.1831 59.5259 12.9189 cv
59.3789 12.1851 li
59.0854 10.7754 58.7329 10.5405 57.2061 10.5405 cv
55.1807 10.5405 li
54.3872 10.5405 54.3584 10.5698 54.3584 11.4512 cv
54.3584 14.9448 li
54.3584 16.2959 54.4766 17.2354 54.8276 17.7344 cv
55.21 18.2622 55.7671 18.4971 57.9111 18.4971 cv
60.4648 18.4971 61.4639 18.4097 63.0786 15.0918 cv
63.3135 14.769 64.0474 14.8862 64.1655 15.2378 cv
64.0474 16.7651 63.3428 19.1436 62.9321 19.9365 cv
61.376 19.8774 58.5571 19.8486 56.1494 19.8486 cv
52.3325 19.8486 li
50.9229 19.8486 49.4839 19.8774 47.2817 19.9365 cv
47.0469 19.7603 47.0469 19.0552 47.2817 18.9087 cv
48.6621 18.7036 li
49.9839 18.4971 50.1597 18.3218 50.1597 15.6206 cv
50.1597 4.66846 li
50.1597 1.99658 49.9839 1.8208 48.6621 1.55615 cv
47.9282 1.40967 li
47.6636 1.23291 47.6934 .557617 47.9863 .380859 cv
49.3672 .44043 50.8052 .470215 52.2144 .470215 cv
58.4399 .470215 li
60.3188 .470215 61.9922 .44043 62.3735 .380859 cv
62.4028 .851563 62.6084 2.96533 62.7559 4.93262 cv
62.6382 5.25586 61.9629 5.31396 61.6694 5.05029 cv
61.3467 4.02246 60.9351 3.1416 60.5537 2.73047 cv
59.9956 2.17285 59.1147 1.8208 57.6758 1.8208 cv
55.3271 1.8208 li
54.3584 1.8208 54.3584 1.87939 54.3584 2.96533 cv
54.3584 8.10352 li
cp
f
72.0044 14.9746 mo
72.0044 16.354 72.1221 17.2939 72.5034 17.7637 cv
72.8857 18.2622 73.4131 18.4971 75.5566 18.4971 cv
78.2295 18.4971 79.0508 18.4097 80.7827 15.0039 cv
81.0181 14.7104 81.6934 14.8276 81.8989 15.1797 cv
81.7524 16.707 81.0479 19.1436 80.6367 19.9365 cv
79.0801 19.8774 76.2617 19.8486 73.854 19.8486 cv
69.9194 19.8486 li
68.5688 19.8486 67.1006 19.8774 65.2803 19.9365 cv
65.0161 19.7603 64.957 19.0854 65.1919 18.9087 cv
66.3086 18.7617 li
67.6294 18.5864 67.8052 18.3516 67.8052 15.6206 cv
67.8052 4.69775 li
67.8052 1.9668 67.6294 1.70264 66.3086 1.52686 cv
65.4565 1.40967 li
65.1626 1.23291 65.1626 .557617 65.5156 .380859 cv
67.0425 .44043 68.5107 .470215 69.9194 .470215 cv
71.3286 .470215 72.7964 .44043 74.2646 .380859 cv
74.4995 .557617 74.4995 1.23291 74.2646 1.40967 cv
73.502 1.52686 li
72.1807 1.73193 72.0044 1.9668 72.0044 4.69775 cv
72.0044 14.9746 li
cp
f
89.562 14.9746 mo
89.562 16.354 89.6802 17.2939 90.0615 17.7637 cv
90.4434 18.2622 90.9712 18.4971 93.1152 18.4971 cv
95.7871 18.4971 96.6094 18.4097 98.3408 15.0039 cv
98.5767 14.7104 99.2515 14.8276 99.4575 15.1797 cv
99.3101 16.707 98.6069 19.1436 98.1948 19.9365 cv
96.6382 19.8774 93.8203 19.8486 91.4126 19.8486 cv
87.478 19.8486 li
86.1265 19.8486 84.6587 19.8774 82.8384 19.9365 cv
82.5742 19.7603 82.5161 19.0854 82.7505 18.9087 cv
83.8662 18.7617 li
85.1875 18.5864 85.3638 18.3516 85.3638 15.6206 cv
85.3638 4.69775 li
85.3638 1.9668 85.1875 1.70264 83.8662 1.52686 cv
83.0146 1.40967 li
82.7207 1.23291 82.7207 .557617 83.0737 .380859 cv
84.6001 .44043 86.0684 .470215 87.478 .470215 cv
88.8872 .470215 90.3545 .44043 91.8237 .380859 cv
92.0581 .557617 92.0581 1.23291 91.8237 1.40967 cv
91.0601 1.52686 li
89.7383 1.73193 89.562 1.9668 89.562 4.69775 cv
89.562 14.9746 li
cp
f
107.267 8.10352 mo
107.267 8.92627 107.297 8.98438 108.089 8.98438 cv
110.115 8.98438 li
111.642 8.98438 111.995 8.77881 112.288 7.37012 cv
112.436 6.63574 li
112.641 6.40088 113.375 6.40088 113.521 6.66455 cv
113.462 7.60498 113.433 8.66162 113.433 9.77783 cv
113.433 10.8936 113.462 11.9502 113.521 12.8892 cv
113.375 13.1543 112.641 13.1831 112.436 12.9189 cv
112.288 12.1851 li
111.995 10.7754 111.642 10.5405 110.115 10.5405 cv
108.089 10.5405 li
107.297 10.5405 107.267 10.5698 107.267 11.4512 cv
107.267 14.9448 li
107.267 16.2959 107.384 17.2354 107.737 17.7344 cv
108.119 18.2622 108.677 18.4971 110.82 18.4971 cv
113.375 18.4971 114.373 18.4097 115.988 15.0918 cv
116.222 14.769 116.957 14.8862 117.075 15.2378 cv
116.957 16.7651 116.252 19.1436 115.841 19.9365 cv
114.286 19.8774 111.466 19.8486 109.058 19.8486 cv
105.241 19.8486 li
103.832 19.8486 102.393 19.8774 100.191 19.9365 cv
99.9565 19.7603 99.9565 19.0552 100.191 18.9087 cv
101.572 18.7036 li
102.892 18.4971 103.069 18.3218 103.069 15.6206 cv
103.069 4.66846 li
103.069 1.99658 102.892 1.8208 101.572 1.55615 cv
100.837 1.40967 li
100.573 1.23291 100.602 .557617 100.896 .380859 cv
102.276 .44043 103.714 .470215 105.124 .470215 cv
111.349 .470215 li
113.227 .470215 114.902 .44043 115.285 .380859 cv
115.312 .851563 115.518 2.96533 115.665 4.93262 cv
115.547 5.25586 114.873 5.31396 114.579 5.05029 cv
114.256 4.02246 113.844 3.1416 113.462 2.73047 cv
112.905 2.17285 112.024 1.8208 110.585 1.8208 cv
108.237 1.8208 li
107.267 1.8208 107.267 1.87939 107.267 2.96533 cv
107.267 8.10352 li
cp
f
124.327 20.3184 mo
121.625 20.3184 119.951 19.5547 119.334 19.2026 cv
118.777 18.5562 118.395 16.4429 118.395 14.4453 cv
118.601 14.064 119.276 14.0347 119.51 14.3579 cv
120.098 16.2661 122.065 18.9673 124.562 18.9673 cv
126.734 18.9673 127.732 17.4697 127.732 16.002 cv
127.732 13.624 125.5 12.2139 123.739 11.3335 cv
121.625 10.2759 119.305 8.51514 119.305 5.60742 cv
119.276 2.28955 121.859 0 126.118 0 cv
127.085 0 128.29 .117188 129.464 .470215 cv
129.846 .586914 130.11 .64502 130.462 .70459 cv
130.699 1.35059 130.991 2.93555 130.991 4.90283 cv
130.844 5.25586 130.11 5.28516 129.846 4.99121 cv
129.347 3.49365 128.085 1.35059 125.97 1.35059 cv
124.033 1.35059 122.976 2.61328 122.976 4.08154 cv
122.976 5.43213 124.18 6.66455 125.648 7.42822 cv
127.585 8.45654 li
129.406 9.4248 131.726 11.1279 131.726 14.3579 cv
131.726 17.9692 128.76 20.3184 124.327 20.3184 cv
cp
f
139.683 14.9746 mo
139.683 16.354 139.8 17.2939 140.182 17.7637 cv
140.564 18.2622 141.092 18.4971 143.236 18.4971 cv
145.907 18.4971 146.729 18.4097 148.461 15.0039 cv
148.696 14.7104 149.372 14.8276 149.576 15.1797 cv
149.43 16.707 148.726 19.1436 148.316 19.9365 cv
146.759 19.8774 143.94 19.8486 141.532 19.8486 cv
137.598 19.8486 li
136.247 19.8486 134.778 19.8774 132.959 19.9365 cv
132.694 19.7603 132.636 19.0854 132.87 18.9087 cv
133.986 18.7617 li
135.307 18.5864 135.483 18.3516 135.483 15.6206 cv
135.483 4.69775 li
135.483 1.9668 135.307 1.70264 133.986 1.52686 cv
133.133 1.40967 li
132.84 1.23291 132.84 .557617 133.193 .380859 cv
134.72 .44043 136.189 .470215 137.598 .470215 cv
139.007 .470215 140.475 .44043 141.943 .380859 cv
142.178 .557617 142.178 1.23291 141.943 1.40967 cv
141.18 1.52686 li
139.858 1.73193 139.683 1.9668 139.683 4.69775 cv
139.683 14.9746 li
cp
f
157.387 8.10352 mo
157.387 8.92627 157.417 8.98438 158.209 8.98438 cv
160.235 8.98438 li
161.761 8.98438 162.115 8.77881 162.408 7.37012 cv
162.556 6.63574 li
162.76 6.40088 163.495 6.40088 163.641 6.66455 cv
163.583 7.60498 163.553 8.66162 163.553 9.77783 cv
163.553 10.8936 163.583 11.9502 163.641 12.8892 cv
163.495 13.1543 162.76 13.1831 162.556 12.9189 cv
162.408 12.1851 li
162.115 10.7754 161.761 10.5405 160.235 10.5405 cv
158.209 10.5405 li
157.417 10.5405 157.387 10.5698 157.387 11.4512 cv
157.387 14.9448 li
157.387 16.2959 157.504 17.2354 157.858 17.7344 cv
158.24 18.2622 158.798 18.4971 160.94 18.4971 cv
163.495 18.4971 164.494 18.4097 166.108 15.0918 cv
166.343 14.769 167.078 14.8862 167.193 15.2378 cv
167.078 16.7651 166.373 19.1436 165.961 19.9365 cv
164.404 19.8774 161.586 19.8486 159.178 19.8486 cv
155.362 19.8486 li
153.953 19.8486 152.512 19.8774 150.311 19.9365 cv
150.077 19.7603 150.077 19.0552 150.311 18.9087 cv
151.691 18.7036 li
153.012 18.4971 153.189 18.3218 153.189 15.6206 cv
153.189 4.66846 li
153.189 1.99658 153.012 1.8208 151.691 1.55615 cv
150.958 1.40967 li
150.693 1.23291 150.722 .557617 151.015 .380859 cv
152.396 .44043 153.835 .470215 155.244 .470215 cv
161.469 .470215 li
163.348 .470215 165.021 .44043 165.403 .380859 cv
165.433 .851563 165.638 2.96533 165.785 4.93262 cv
165.667 5.25586 164.993 5.31396 164.699 5.05029 cv
164.375 4.02246 163.964 3.1416 163.583 2.73047 cv
163.026 2.17285 162.143 1.8208 160.706 1.8208 cv
158.356 1.8208 li
157.387 1.8208 157.387 1.87939 157.387 2.96533 cv
157.387 8.10352 li
cp
f
178.468 15.6206 mo
178.468 18.3516 178.645 18.5864 179.966 18.7617 cv
181.14 18.9087 li
181.347 19.0854 181.347 19.7603 181.14 19.9365 cv
179.233 19.8774 177.792 19.8486 176.385 19.8486 cv
174.973 19.8486 173.506 19.8774 171.774 19.9365 cv
171.539 19.7603 171.539 19.0854 171.774 18.9087 cv
172.772 18.7617 li
174.094 18.5562 174.271 18.3516 174.271 15.6206 cv
174.271 14.1523 li
174.271 12.6841 174.24 12.2139 173.477 10.6582 cv
169.982 3.43506 li
169.397 2.23145 169.132 1.76172 168.103 1.58545 cv
167.106 1.40967 li
166.841 1.17432 166.871 .470215 167.223 .380859 cv
168.543 .44043 169.63 .470215 171.363 .470215 cv
173.154 .470215 174.652 .44043 175.649 .380859 cv
175.915 .499512 175.973 1.17432 175.708 1.40967 cv
174.71 1.64404 li
174.181 1.76172 174.005 1.87939 174.005 1.90869 cv
174.005 2.14355 174.152 2.58301 174.77 3.96387 cv
176.148 7.10547 li
176.589 8.07471 177.147 9.24902 177.5 9.98291 cv
178.35 8.54395 179.173 6.84131 179.966 5.34326 cv
181.082 3.25879 181.493 2.28955 181.493 1.9375 cv
181.493 1.76172 181.2 1.64404 180.495 1.52686 cv
179.818 1.40967 li
179.585 1.2627 179.554 .528809 179.848 .380859 cv
181.022 .44043 182.08 .470215 183.137 .470215 cv
184.251 .470215 185.163 .44043 186.013 .380859 cv
186.368 .499512 186.368 1.20313 186.132 1.40967 cv
185.37 1.55615 li
184.84 1.64404 184.283 1.84912 183.959 2.26074 cv
183.52 2.81836 182.784 3.87549 181.375 6.42969 cv
179.526 9.77783 li
178.762 11.1567 178.468 11.8911 178.468 13.5649 cv
178.468 15.6206 li
cp
f
107.366 54.2432 mo
112.553 54.2432 114.342 57.6206 111.457 63.3003 cv
101.425 83.1738 li
91.395 63.3003 li
88.5083 57.6206 90.2827 54.2432 95.4692 54.2432 cv
107.366 54.2432 li
cp
117.495 114.964 mo
106.149 92.5225 li
121.195 62.8135 li
125.578 54.3403 126.648 53.8535 134.05 53.8535 cv
134.05 49.5688 li
68.8013 49.5688 li
68.8013 53.8535 li
76.2026 53.8535 77.3706 54.3403 81.6558 62.8135 cv
96.7026 92.5225 li
85.3569 114.964 li
58.7705 62.2285 li
55.6538 55.9966 56.4331 53.8535 60.7666 53.8535 cv
63.5425 53.8535 li
63.5425 49.5688 li
33.353 49.5688 li
33.353 53.8213 li
34.9106 53.9185 li
44.6494 54.5029 45.3315 55.0229 49.811 63.9819 cv
83.7993 131.081 li
86.6226 131.081 li
101.425 101.857 li
116.229 131.081 li
119.053 131.081 li
153.041 63.9819 li
157.521 55.0229 158.202 54.438 167.941 53.8535 cv
168.584 53.813 li
168.584 49.5688 li
139.309 49.5688 li
139.309 53.8535 li
142.084 53.8535 li
146.418 53.8535 147.197 55.9966 144.081 62.2285 cv
117.495 114.964 li
cp
f
9.05957 29.7681 mo
9.05957 30.0386 9.10449 31.2388 9.23975 32.1079 cv
9.17969 32.2886 8.77441 32.3481 8.66943 32.2134 cv
8.26465 30.8188 7.30469 30.0688 5.84961 30.0688 cv
4.18457 30.0688 2.3999 31.4937 2.3999 34.478 cv
2.3999 37.4634 4.12451 39.0679 5.9248 39.0679 cv
7.73975 39.0679 8.57959 37.7632 8.98438 36.7437 cv
9.10449 36.6235 9.46436 36.6685 9.55469 36.8481 cv
9.44971 37.9585 9.19434 38.8579 8.98438 39.2026 cv
8.17432 39.4282 7.10938 39.7583 5.93945 39.7583 cv
4.46973 39.7583 2.96973 39.4126 1.90479 38.6177 cv
.824707 37.7935 0 36.5483 0 34.688 cv
0 32.8579 .779785 31.5688 1.81494 30.7134 cv
2.87988 29.8286 4.40967 29.3784 5.96973 29.3784 cv
7.49951 29.3784 8.60938 29.7388 9.05957 29.7681 cv
cp
f
14.4448 34.7632 mo
13.8296 34.7632 13.8149 34.7778 13.8149 35.1978 cv
13.8149 37.3579 li
13.8149 38.7534 13.9048 38.8882 14.5796 38.978 cv
15.0596 39.0376 li
15.1797 39.1284 15.1797 39.4731 15.0596 39.563 cv
14.2046 39.5327 13.4546 39.5181 12.7798 39.5181 cv
12.0601 39.5181 11.3101 39.5327 10.5449 39.563 cv
10.4248 39.4731 10.4248 39.1284 10.5449 39.0376 cv
10.9048 38.9927 li
11.5947 38.9028 11.6699 38.7534 11.6699 37.3579 cv
11.6699 31.7788 li
11.6699 30.3833 11.5947 30.2339 10.9048 30.1431 cv
10.5449 30.0981 li
10.4248 30.0083 10.4248 29.6636 10.5449 29.5737 cv
11.2798 29.603 12.0601 29.6187 12.7798 29.6187 cv
13.4546 29.6187 14.2046 29.603 14.8647 29.5737 cv
14.9849 29.6636 14.9849 30.0083 14.8647 30.0981 cv
14.5498 30.1431 li
13.9048 30.2339 13.8149 30.3833 13.8149 31.7788 cv
13.8149 33.5181 li
13.8149 33.9536 13.8296 33.9683 14.4448 33.9683 cv
17.5645 33.9683 li
18.1948 33.9683 18.1948 33.9536 18.1948 33.5181 cv
18.1948 31.7788 li
18.1948 30.3833 18.1196 30.2632 17.4297 30.1587 cv
17.0249 30.0981 li
16.9048 30.0083 16.9048 29.6636 17.0249 29.5737 cv
17.8496 29.603 18.5845 29.6187 19.3047 29.6187 cv
20.0396 29.6187 20.7295 29.603 21.4194 29.5737 cv
21.5396 29.6636 21.5396 30.0083 21.4194 30.0981 cv
21.1196 30.1431 li
20.4297 30.2485 20.3394 30.3833 20.3394 31.7788 cv
20.3394 37.3579 li
20.3394 38.7534 20.4297 38.8579 21.1196 38.978 cv
21.4795 39.0376 li
21.5996 39.1284 21.5996 39.4731 21.4795 39.563 cv
20.7295 39.5327 19.9946 39.5181 19.3047 39.5181 cv
18.5547 39.5181 17.8198 39.5327 17.0996 39.563 cv
16.9795 39.4731 16.9795 39.1284 17.0996 39.0376 cv
17.4297 38.9927 li
18.1196 38.9028 18.1948 38.7534 18.1948 37.3579 cv
18.1948 35.1978 li
18.1948 34.7778 18.1948 34.7632 17.5645 34.7632 cv
14.4448 34.7632 li
cp
f
26.1299 37.3286 mo
26.1299 38.7378 26.2197 38.8433 26.9097 38.9634 cv
27.3296 39.0376 li
27.4497 39.1284 27.4346 39.4731 27.3149 39.563 cv
26.5049 39.5327 25.7695 39.5181 25.0649 39.5181 cv
24.3447 39.5181 23.5947 39.5327 22.7847 39.563 cv
22.665 39.4731 22.665 39.1284 22.7847 39.0376 cv
23.2051 38.9634 li
23.895 38.8433 23.9849 38.7378 23.9849 37.3286 cv
23.9849 31.8081 li
23.9849 30.3989 23.895 30.2935 23.2051 30.1733 cv
22.7847 30.0981 li
22.665 30.0083 22.665 29.6636 22.7847 29.5737 cv
23.5947 29.603 24.3447 29.6187 25.0649 29.6187 cv
25.7695 29.6187 26.5195 29.603 27.3296 29.5737 cv
27.4497 29.6636 27.4497 30.0083 27.3296 30.0981 cv
26.9097 30.1733 li
26.2197 30.2935 26.1299 30.3989 26.1299 31.8081 cv
26.1299 37.3286 li
cp
f
37.7241 29.7681 mo
37.7241 30.0386 37.769 31.2388 37.9038 32.1079 cv
37.8442 32.2886 37.439 32.3481 37.334 32.2134 cv
36.9292 30.8188 35.9692 30.0688 34.5142 30.0688 cv
32.8491 30.0688 31.0645 31.4937 31.0645 34.478 cv
31.0645 37.4634 32.7891 39.0679 34.5894 39.0679 cv
36.4043 39.0679 37.2441 37.7632 37.6489 36.7437 cv
37.769 36.6235 38.1289 36.6685 38.2192 36.8481 cv
38.1143 37.9585 37.8589 38.8579 37.6489 39.2026 cv
36.8389 39.4282 35.7739 39.7583 34.604 39.7583 cv
33.1343 39.7583 31.6343 39.4126 30.5693 38.6177 cv
29.4893 37.7935 28.6646 36.5483 28.6646 34.688 cv
28.6646 32.8579 29.4443 31.5688 30.4795 30.7134 cv
31.5444 29.8286 33.0742 29.3784 34.6343 29.3784 cv
36.1641 29.3784 37.2739 29.7388 37.7241 29.7681 cv
cp
f
43.4092 35.3335 mo
43.7544 35.3335 43.8291 35.2886 43.7095 34.8979 cv
43.3193 33.6831 li
43.1094 33.0386 42.9146 32.4233 42.7793 32.1079 cv
42.6294 32.438 42.3892 33.0679 42.1646 33.7583 cv
41.7896 34.8833 li
41.6543 35.2886 41.7295 35.3335 42.1045 35.3335 cv
43.4092 35.3335 li
cp
41.8042 36.1284 mo
41.4443 36.1284 41.3994 36.1431 41.3096 36.4282 cv
40.7544 38.1685 li
40.6646 38.4683 40.6494 38.5884 40.6494 38.7085 cv
40.6494 38.7983 40.7695 38.8882 41.1895 38.9634 cv
41.6392 39.0376 li
41.7295 39.1431 41.7593 39.4878 41.6094 39.563 cv
41.0845 39.5327 40.4844 39.5327 39.8545 39.5181 cv
39.3442 39.5181 38.9995 39.563 38.3096 39.563 cv
38.1445 39.4731 38.1597 39.1577 38.2646 39.0376 cv
38.6694 38.9927 li
39.0293 38.9478 39.3296 38.8276 39.5845 38.2427 cv
39.8394 37.6431 40.1094 36.9233 40.5146 35.8433 cv
41.8643 32.1831 li
42.2095 31.2388 42.4941 30.7134 42.4492 30.2788 cv
43.1694 30.1138 43.7241 29.3784 43.7544 29.3784 cv
43.9492 29.3784 44.0391 29.4536 44.0991 29.6782 cv
44.2192 30.1138 44.3994 30.6685 44.7744 31.7329 cv
46.814 37.6128 li
47.1294 38.5132 47.2642 38.8579 47.8193 38.9478 cv
48.3892 39.0376 li
48.479 39.1128 48.5093 39.4731 48.374 39.563 cv
47.6543 39.5327 46.8442 39.5181 46.064 39.5181 cv
45.3145 39.5181 44.7295 39.5327 44.0391 39.563 cv
43.8745 39.4731 43.8442 39.1577 44.0093 39.0376 cv
44.4893 38.9634 li
44.8345 38.9028 44.894 38.7983 44.894 38.7085 cv
44.894 38.603 44.7891 38.2427 44.6094 37.688 cv
44.2041 36.3979 li
44.1294 36.1587 44.0093 36.1284 43.4844 36.1284 cv
41.8042 36.1284 li
cp
f
57.7944 37.8228 mo
57.7944 38.4526 57.8242 38.7534 58.1094 38.813 cv
58.1694 38.8735 58.1543 39.1284 58.064 39.1733 cv
57.8091 39.2183 57.4194 39.2632 57.0142 39.3979 cv
56.4893 39.563 55.1992 39.7583 54.3594 39.7583 cv
53.3394 39.7583 52.4692 39.6528 51.4043 39.2329 cv
49.6494 38.5278 48.4497 36.8628 48.4497 34.7036 cv
48.4497 32.8286 49.2896 31.1782 51.0894 30.1733 cv
52.1094 29.6187 53.3242 29.3784 54.5991 29.3784 cv
56.2642 29.3784 57.0894 29.7388 57.5693 29.7388 cv
57.6143 30.188 57.6294 31.2388 57.7793 32.1538 cv
57.7192 32.3188 57.3145 32.3335 57.2095 32.1831 cv
56.729 30.7729 55.7842 30.0688 54.3892 30.0688 cv
52.0044 30.0688 50.8496 32.0483 50.8496 34.4185 cv
50.8496 36.563 51.5845 37.8384 52.5596 38.4985 cv
53.2793 38.978 54.0596 39.0679 54.6143 39.0679 cv
55.4692 39.0679 55.6494 38.9028 55.6494 37.9282 cv
55.6494 36.9829 li
55.6494 36.1733 55.5591 36.0835 54.8394 35.978 cv
54.1792 35.8882 li
54.0142 35.7983 54.0142 35.4536 54.1792 35.3628 cv
55.2441 35.3931 55.9795 35.4087 56.7144 35.4087 cv
57.4341 35.4087 58.1694 35.3931 58.6792 35.3628 cv
58.7993 35.4536 58.7993 35.7983 58.6792 35.8882 cv
58.334 35.9478 li
57.8843 36.0229 57.7944 36.1733 57.7944 36.9829 cv
57.7944 37.8228 li
cp
f
64.9194 30.0688 mo
63.0742 30.0688 62.0845 31.7935 62.0845 34.2983 cv
62.0845 36.1284 62.7295 39.0679 65.1743 39.0679 cv
67.1392 39.0679 67.9043 37.1479 67.9043 34.7183 cv
67.9043 32.1538 66.7793 30.0688 64.9194 30.0688 cv
cp
70.3042 34.5229 mo
70.3042 37.7935 68.1143 39.7583 64.8892 39.7583 cv
61.8745 39.7583 59.6846 37.7778 59.6846 34.6431 cv
59.6846 31.6733 61.9043 29.3784 65.0391 29.3784 cv
68.1592 29.3784 70.3042 31.478 70.3042 34.5229 cv
cp
f
89.1289 30.2036 mo
88.7842 30.2788 88.6191 30.3989 88.5142 30.5337 cv
88.3491 30.7729 88.0942 31.2534 87.689 32.1987 cv
86.9541 33.9536 85.2593 37.688 84.5239 39.6382 cv
84.4341 39.7134 84.2241 39.7583 84.0293 39.7583 cv
83.8643 39.7583 83.729 39.7134 83.624 39.6382 cv
83.459 39.2778 83.2344 38.7378 83.0542 38.3179 cv
82.4243 36.8931 li
82.2144 36.4136 82.019 35.9634 81.8843 35.7378 cv
81.749 35.9937 81.5693 36.353 81.3745 36.7729 cv
80.6694 38.3032 li
80.4443 38.7827 80.2793 39.2183 80.0396 39.7134 cv
79.9644 39.7876 79.7695 39.8335 79.5444 39.8335 cv
79.3794 39.8335 79.2896 39.7876 79.1543 39.7134 cv
78.9146 39.0835 78.3145 37.7329 77.8042 36.6079 cv
75.3447 31.2388 li
74.9395 30.353 74.8496 30.2788 74.3545 30.1733 cv
73.9795 30.0981 li
73.8594 29.9487 73.8745 29.6489 74.0396 29.5737 cv
74.5947 29.603 75.2246 29.6187 75.9893 29.6187 cv
76.6494 29.6187 77.2344 29.603 77.8042 29.5737 cv
77.9243 29.6333 77.9844 30.0083 77.8345 30.0981 cv
77.5645 30.1431 li
77.2944 30.188 77.1895 30.2632 77.1895 30.3687 cv
77.1895 30.4731 77.5044 31.1782 77.9692 32.228 cv
79.4546 35.5435 li
79.8745 36.4731 80.0244 36.7886 80.2041 37.1479 cv
80.3843 36.8179 80.6245 36.3687 80.9243 35.6929 cv
81.1191 35.2583 li
81.2241 35.0181 81.3145 34.688 81.3145 34.5981 cv
81.3145 34.5083 81.2842 34.3433 81.2241 34.1929 cv
79.7842 31.0288 li
79.4395 30.2788 79.3345 30.1733 78.7642 30.1138 cv
78.6143 30.0981 li
78.4644 29.978 78.4946 29.6333 78.6592 29.5737 cv
79.3042 29.603 79.8892 29.6187 80.5493 29.6187 cv
81.3145 29.6187 81.8843 29.603 82.2744 29.5737 cv
82.4541 29.6187 82.4395 30.0239 82.3345 30.0981 cv
82.0791 30.1587 li
81.8994 30.2036 81.6743 30.2632 81.6743 30.3687 cv
81.6743 30.4888 81.7344 30.6538 81.8091 30.8188 cv
82.2593 31.853 li
82.394 32.1685 82.5444 32.4985 82.6792 32.7681 cv
82.8291 32.4536 82.979 32.1538 83.1294 31.8237 cv
83.2642 31.5229 li
83.519 30.9536 83.6689 30.5034 83.6689 30.4136 cv
83.6689 30.3081 83.6094 30.2632 83.3691 30.2036 cv
82.9194 30.0981 li
82.814 29.9937 82.8291 29.6489 82.9644 29.5737 cv
83.3994 29.603 83.939 29.6187 84.4341 29.6187 cv
85.019 29.6187 85.5742 29.603 85.9639 29.5737 cv
86.084 29.6489 86.1143 30.0083 85.979 30.1138 cv
85.5591 30.2036 li
85.0493 30.3081 84.9443 30.3687 84.4189 31.2681 cv
84.0591 31.8833 83.6841 32.5737 83.4893 32.9634 cv
83.354 33.2329 83.1592 33.6685 83.1592 33.7437 cv
83.1592 33.7886 83.1743 33.8784 83.2793 34.1187 cv
83.9844 35.6333 li
84.374 36.4585 84.5542 36.8931 84.644 37.103 cv
85.3643 35.3628 86.0688 33.5034 86.7891 31.6733 cv
86.894 31.4185 87.1938 30.563 87.1938 30.3989 cv
87.1938 30.2935 87.104 30.2485 86.9092 30.188 cv
86.5791 30.0981 li
86.459 29.9634 86.4893 29.6489 86.624 29.5737 cv
87.104 29.603 87.7041 29.6187 88.1538 29.6187 cv
88.6792 29.6187 89.1138 29.603 89.5337 29.5737 cv
89.6689 29.6489 89.6841 29.978 89.5791 30.0981 cv
89.1289 30.2036 li
cp
f
92.894 33.5181 mo
92.894 33.938 92.9087 33.9683 93.314 33.9683 cv
94.3486 33.9683 li
95.1289 33.9683 95.3086 33.8638 95.459 33.1431 cv
95.5337 32.7681 li
95.6387 32.6479 96.0137 32.6479 96.0889 32.7837 cv
96.0586 33.2632 96.0439 33.8032 96.0439 34.3735 cv
96.0439 34.9429 96.0586 35.4829 96.0889 35.9634 cv
96.0137 36.0981 95.6387 36.1128 95.5337 35.978 cv
95.459 35.603 li
95.3086 34.8833 95.1289 34.7632 94.3486 34.7632 cv
93.314 34.7632 li
92.9087 34.7632 92.894 34.7778 92.894 35.228 cv
92.894 37.0132 li
92.894 37.7036 92.9541 38.1831 93.1338 38.438 cv
93.3291 38.7085 93.6138 38.8276 94.709 38.8276 cv
96.0137 38.8276 96.5239 38.7827 97.3486 37.0884 cv
97.4688 36.9233 97.8438 36.9829 97.9038 37.1636 cv
97.8438 37.9429 97.4839 39.1577 97.2739 39.563 cv
96.479 39.5327 95.0386 39.5181 93.8091 39.5181 cv
91.8589 39.5181 li
91.1392 39.5181 90.4038 39.5327 89.2788 39.563 cv
89.1592 39.4731 89.1592 39.1128 89.2788 39.0376 cv
89.9839 38.9331 li
90.6592 38.8276 90.749 38.7378 90.749 37.3579 cv
90.749 31.7632 li
90.749 30.3989 90.6592 30.3081 89.9839 30.1733 cv
89.6089 30.0981 li
89.4741 30.0083 89.4893 29.6636 89.6392 29.5737 cv
90.3442 29.603 91.0791 29.6187 91.7988 29.6187 cv
94.979 29.6187 li
95.939 29.6187 96.7939 29.603 96.9888 29.5737 cv
97.0039 29.813 97.1089 30.8931 97.1836 31.8979 cv
97.1235 32.063 96.7788 32.0933 96.6289 31.9585 cv
96.4639 31.4331 96.2539 30.9839 96.0586 30.7729 cv
95.7739 30.4888 95.3237 30.3081 94.5889 30.3081 cv
93.3887 30.3081 li
92.894 30.3081 92.894 30.3384 92.894 30.8931 cv
92.894 33.5181 li
cp
f
102.014 37.0278 mo
102.014 37.7329 102.074 38.2134 102.269 38.4526 cv
102.464 38.7085 102.734 38.8276 103.83 38.8276 cv
105.194 38.8276 105.614 38.7827 106.5 37.0435 cv
106.619 36.8931 106.964 36.9536 107.069 37.1333 cv
106.994 37.9136 106.634 39.1577 106.423 39.563 cv
105.628 39.5327 104.189 39.5181 102.958 39.5181 cv
100.949 39.5181 li
100.259 39.5181 99.5093 39.5327 98.5791 39.563 cv
98.4443 39.4731 98.4141 39.1284 98.5342 39.0376 cv
99.104 38.9634 li
99.7793 38.8735 99.8691 38.7534 99.8691 37.3579 cv
99.8691 31.7788 li
99.8691 30.3833 99.7793 30.2485 99.104 30.1587 cv
98.6689 30.0981 li
98.519 30.0083 98.519 29.6636 98.6992 29.5737 cv
99.479 29.603 100.229 29.6187 100.949 29.6187 cv
101.669 29.6187 102.419 29.603 103.169 29.5737 cv
103.289 29.6636 103.289 30.0083 103.169 30.0981 cv
102.779 30.1587 li
102.104 30.2632 102.014 30.3833 102.014 31.7788 cv
102.014 37.0278 li
cp
f
111.014 37.0278 mo
111.014 37.7329 111.074 38.2134 111.269 38.4526 cv
111.464 38.7085 111.734 38.8276 112.83 38.8276 cv
114.194 38.8276 114.614 38.7827 115.5 37.0435 cv
115.619 36.8931 115.964 36.9536 116.069 37.1333 cv
115.994 37.9136 115.634 39.1577 115.423 39.563 cv
114.628 39.5327 113.189 39.5181 111.958 39.5181 cv
109.949 39.5181 li
109.259 39.5181 108.509 39.5327 107.58 39.563 cv
107.445 39.4731 107.414 39.1284 107.535 39.0376 cv
108.104 38.9634 li
108.779 38.8735 108.869 38.7534 108.869 37.3579 cv
108.869 31.7788 li
108.869 30.3833 108.779 30.2485 108.104 30.1587 cv
107.669 30.0981 li
107.519 30.0083 107.519 29.6636 107.699 29.5737 cv
108.479 29.603 109.229 29.6187 109.949 29.6187 cv
110.669 29.6187 111.419 29.603 112.169 29.5737 cv
112.289 29.6636 112.289 30.0083 112.169 30.0981 cv
111.779 30.1587 li
111.104 30.2632 111.014 30.3833 111.014 31.7788 cv
111.014 37.0278 li
cp
f
120.013 33.5181 mo
120.013 33.938 120.029 33.9683 120.433 33.9683 cv
121.468 33.9683 li
122.249 33.9683 122.428 33.8638 122.579 33.1431 cv
122.654 32.7681 li
122.758 32.6479 123.133 32.6479 123.208 32.7837 cv
123.178 33.2632 123.164 33.8032 123.164 34.3735 cv
123.164 34.9429 123.178 35.4829 123.208 35.9634 cv
123.133 36.0981 122.758 36.1128 122.654 35.978 cv
122.579 35.603 li
122.428 34.8833 122.249 34.7632 121.468 34.7632 cv
120.433 34.7632 li
120.029 34.7632 120.013 34.7778 120.013 35.228 cv
120.013 37.0132 li
120.013 37.7036 120.074 38.1831 120.253 38.438 cv
120.449 38.7085 120.734 38.8276 121.829 38.8276 cv
123.133 38.8276 123.644 38.7827 124.468 37.0884 cv
124.588 36.9233 124.963 36.9829 125.023 37.1636 cv
124.963 37.9429 124.603 39.1577 124.394 39.563 cv
123.598 39.5327 122.159 39.5181 120.929 39.5181 cv
118.978 39.5181 li
118.259 39.5181 117.523 39.5327 116.399 39.563 cv
116.279 39.4731 116.279 39.1128 116.399 39.0376 cv
117.103 38.9331 li
117.779 38.8276 117.869 38.7378 117.869 37.3579 cv
117.869 31.7632 li
117.869 30.3989 117.779 30.3081 117.103 30.1733 cv
116.728 30.0981 li
116.593 30.0083 116.609 29.6636 116.759 29.5737 cv
117.464 29.603 118.199 29.6187 118.918 29.6187 cv
122.099 29.6187 li
123.058 29.6187 123.914 29.603 124.109 29.5737 cv
124.124 29.813 124.228 30.8931 124.303 31.8979 cv
124.244 32.063 123.898 32.0933 123.749 31.9585 cv
123.583 31.4331 123.374 30.9839 123.178 30.7729 cv
122.894 30.4888 122.443 30.3081 121.708 30.3081 cv
120.508 30.3081 li
120.013 30.3081 120.013 30.3384 120.013 30.8931 cv
120.013 33.5181 li
cp
f
128.654 39.7583 mo
127.274 39.7583 126.419 39.3677 126.104 39.188 cv
125.819 38.8579 125.625 37.7778 125.625 36.7583 cv
125.729 36.563 126.074 36.5483 126.194 36.7134 cv
126.494 37.688 127.499 39.0679 128.773 39.0679 cv
129.884 39.0679 130.394 38.3032 130.394 37.5532 cv
130.394 36.3384 129.253 35.6187 128.353 35.1685 cv
127.274 34.6284 126.089 33.728 126.089 32.2437 cv
126.074 30.5483 127.394 29.3784 129.569 29.3784 cv
130.064 29.3784 130.679 29.438 131.279 29.6187 cv
131.474 29.6782 131.609 29.7085 131.789 29.7388 cv
131.909 30.0688 132.058 30.8784 132.058 31.8833 cv
131.984 32.063 131.609 32.0786 131.474 31.9282 cv
131.218 31.1636 130.574 30.0688 129.494 30.0688 cv
128.503 30.0688 127.964 30.7134 127.964 31.4634 cv
127.964 32.1538 128.579 32.7837 129.329 33.1733 cv
130.319 33.6987 li
131.249 34.1929 132.433 35.063 132.433 36.7134 cv
132.433 38.5581 130.918 39.7583 128.654 39.7583 cv
cp
f
136.949 37.0278 mo
136.949 37.7329 137.009 38.2134 137.204 38.4526 cv
137.398 38.7085 137.668 38.8276 138.763 38.8276 cv
140.128 38.8276 140.548 38.7827 141.433 37.0435 cv
141.553 36.8931 141.898 36.9536 142.003 37.1333 cv
141.928 37.9136 141.568 39.1577 141.359 39.563 cv
140.564 39.5327 139.124 39.5181 137.894 39.5181 cv
135.884 39.5181 li
135.194 39.5181 134.444 39.5327 133.513 39.563 cv
133.378 39.4731 133.349 39.1284 133.468 39.0376 cv
134.039 38.9634 li
134.714 38.8735 134.804 38.7534 134.804 37.3579 cv
134.804 31.7788 li
134.804 30.3833 134.714 30.2485 134.039 30.1587 cv
133.603 30.0981 li
133.454 30.0083 133.454 29.6636 133.634 29.5737 cv
134.414 29.603 135.164 29.6187 135.884 29.6187 cv
136.603 29.6187 137.353 29.603 138.103 29.5737 cv
138.224 29.6636 138.224 30.0083 138.103 30.0981 cv
137.713 30.1587 li
137.039 30.2632 136.949 30.3833 136.949 31.7788 cv
136.949 37.0278 li
cp
f
145.949 33.5181 mo
145.949 33.938 145.962 33.9683 146.369 33.9683 cv
147.403 33.9683 li
148.183 33.9683 148.363 33.8638 148.513 33.1431 cv
148.587 32.7681 li
148.693 32.6479 149.068 32.6479 149.143 32.7837 cv
149.113 33.2632 149.098 33.8032 149.098 34.3735 cv
149.098 34.9429 149.113 35.4829 149.143 35.9634 cv
149.068 36.0981 148.693 36.1128 148.587 35.978 cv
148.513 35.603 li
148.363 34.8833 148.183 34.7632 147.403 34.7632 cv
146.369 34.7632 li
145.962 34.7632 145.949 34.7778 145.949 35.228 cv
145.949 37.0132 li
145.949 37.7036 146.008 38.1831 146.188 38.438 cv
146.383 38.7085 146.667 38.8276 147.763 38.8276 cv
149.068 38.8276 149.578 38.7827 150.403 37.0884 cv
150.523 36.9233 150.898 36.9829 150.958 37.1636 cv
150.898 37.9429 150.539 39.1577 150.328 39.563 cv
149.533 39.5327 148.093 39.5181 146.863 39.5181 cv
144.914 39.5181 li
144.193 39.5181 143.458 39.5327 142.333 39.563 cv
142.213 39.4731 142.213 39.1128 142.333 39.0376 cv
143.039 38.9331 li
143.713 38.8276 143.803 38.7378 143.803 37.3579 cv
143.803 31.7632 li
143.803 30.3989 143.713 30.3081 143.039 30.1733 cv
142.664 30.0981 li
142.529 30.0083 142.543 29.6636 142.693 29.5737 cv
143.398 29.603 144.133 29.6187 144.853 29.6187 cv
148.033 29.6187 li
148.994 29.6187 149.848 29.603 150.042 29.5737 cv
150.058 29.813 150.164 30.8931 150.238 31.8979 cv
150.177 32.063 149.833 32.0933 149.683 31.9585 cv
149.518 31.4331 149.308 30.9839 149.113 30.7729 cv
148.828 30.4888 148.378 30.3081 147.643 30.3081 cv
146.443 30.3081 li
145.949 30.3081 145.949 30.3384 145.949 30.8931 cv
145.949 33.5181 li
cp
f
156.539 37.3579 mo
156.539 38.7534 156.628 38.8735 157.302 38.9634 cv
157.903 39.0376 li
158.007 39.1284 158.007 39.4731 157.903 39.563 cv
156.927 39.5327 156.193 39.5181 155.473 39.5181 cv
154.753 39.5181 154.003 39.5327 153.119 39.563 cv
152.998 39.4731 152.998 39.1284 153.119 39.0376 cv
153.628 38.9634 li
154.303 38.8579 154.393 38.7534 154.393 37.3579 cv
154.393 36.6079 li
154.393 35.8579 154.378 35.6187 153.988 34.8237 cv
152.203 31.1333 li
151.904 30.5181 151.768 30.2788 151.244 30.188 cv
150.734 30.0981 li
150.598 29.978 150.613 29.6187 150.793 29.5737 cv
151.468 29.603 152.023 29.6187 152.908 29.6187 cv
153.824 29.6187 154.587 29.603 155.098 29.5737 cv
155.233 29.6333 155.263 29.978 155.128 30.0981 cv
154.619 30.2183 li
154.348 30.2788 154.258 30.3384 154.258 30.353 cv
154.258 30.4731 154.333 30.6987 154.648 31.4038 cv
155.353 33.0083 li
155.578 33.5034 155.863 34.103 156.042 34.478 cv
156.478 33.7437 156.898 32.8735 157.302 32.1079 cv
157.873 31.0435 158.083 30.5483 158.083 30.3687 cv
158.083 30.2788 157.933 30.2183 157.573 30.1587 cv
157.228 30.0981 li
157.108 30.0239 157.093 29.6489 157.244 29.5737 cv
157.843 29.603 158.382 29.6187 158.923 29.6187 cv
159.493 29.6187 159.958 29.603 160.393 29.5737 cv
160.573 29.6333 160.573 29.9937 160.453 30.0981 cv
160.063 30.1733 li
159.792 30.2183 159.507 30.3237 159.343 30.5337 cv
159.118 30.8188 158.743 31.3579 158.023 32.6636 cv
157.078 34.3735 li
156.688 35.0786 156.539 35.4536 156.539 36.3081 cv
156.539 37.3579 li
cp
f
173.368 29.7681 mo
173.368 30.0386 173.413 31.2388 173.547 32.1079 cv
173.488 32.2886 173.083 32.3481 172.978 32.2134 cv
172.573 30.8188 171.613 30.0688 170.158 30.0688 cv
168.493 30.0688 166.708 31.4937 166.708 34.478 cv
166.708 37.4634 168.433 39.0679 170.233 39.0679 cv
172.048 39.0679 172.888 37.7632 173.292 36.7437 cv
173.413 36.6235 173.773 36.6685 173.863 36.8481 cv
173.757 37.9585 173.502 38.8579 173.292 39.2026 cv
172.482 39.4282 171.417 39.7583 170.248 39.7583 cv
168.778 39.7583 167.278 39.4126 166.212 38.6177 cv
165.132 37.7935 164.308 36.5483 164.308 34.688 cv
164.308 32.8579 165.087 31.5688 166.123 30.7134 cv
167.188 29.8286 168.718 29.3784 170.278 29.3784 cv
171.808 29.3784 172.917 29.7388 173.368 29.7681 cv
cp
f
178.123 37.0278 mo
178.123 37.7329 178.183 38.2134 178.378 38.4526 cv
178.573 38.7085 178.843 38.8276 179.938 38.8276 cv
181.302 38.8276 181.722 38.7827 182.608 37.0435 cv
182.728 36.8931 183.073 36.9536 183.177 37.1333 cv
183.103 37.9136 182.743 39.1577 182.533 39.563 cv
181.738 39.5327 180.298 39.5181 179.068 39.5181 cv
177.058 39.5181 li
176.369 39.5181 175.619 39.5327 174.688 39.563 cv
174.553 39.4731 174.523 39.1284 174.643 39.0376 cv
175.212 38.9634 li
175.888 38.8735 175.978 38.7534 175.978 37.3579 cv
175.978 31.7788 li
175.978 30.3833 175.888 30.2485 175.212 30.1587 cv
174.778 30.0981 li
174.628 30.0083 174.628 29.6636 174.808 29.5737 cv
175.587 29.603 176.337 29.6187 177.058 29.6187 cv
177.778 29.6187 178.528 29.603 179.278 29.5737 cv
179.398 29.6636 179.398 30.0083 179.278 30.0981 cv
178.888 30.1587 li
178.212 30.2632 178.123 30.3833 178.123 31.7788 cv
178.123 37.0278 li
cp
f
184.363 31.7788 mo
184.363 30.3833 184.273 30.2935 183.598 30.1587 cv
183.223 30.0835 li
183.103 29.9937 183.087 29.6636 183.253 29.5737 cv
183.973 29.603 184.723 29.6187 185.443 29.6187 cv
186.178 29.6187 186.913 29.603 187.633 29.5737 cv
187.752 29.6636 187.752 29.9937 187.633 30.0835 cv
187.273 30.1431 li
186.598 30.2632 186.508 30.3833 186.508 31.7788 cv
186.508 35.2437 li
186.508 36.9985 186.703 38.9331 188.983 38.9331 cv
190.903 38.9331 191.488 37.2534 191.488 35.1978 cv
191.488 33.3833 li
191.488 32.1685 191.427 31.0288 191.262 30.6382 cv
191.127 30.3237 190.797 30.2339 190.393 30.1587 cv
189.988 30.0835 li
189.868 29.9634 189.898 29.6636 189.988 29.5737 cv
190.797 29.603 191.382 29.6187 191.998 29.6187 cv
192.552 29.6187 193.108 29.603 193.677 29.5737 cv
193.768 29.6636 193.797 29.9634 193.677 30.0835 cv
193.408 30.1431 li
193.018 30.2339 192.733 30.3237 192.597 30.6382 cv
192.433 31.0288 192.373 32.1685 192.373 33.3833 cv
192.373 35.063 li
192.373 36.4731 192.238 37.7632 191.413 38.6782 cv
190.752 39.3833 189.658 39.7583 188.443 39.7583 cv
187.303 39.7583 186.283 39.5776 185.473 38.9185 cv
184.693 38.2729 184.363 37.1636 184.363 35.5278 cv
184.363 31.7788 li
cp
f
197.833 36.9829 mo
197.833 38.1528 197.983 38.8882 199.153 38.8882 cv
200.263 38.8882 200.848 38.0327 200.848 36.8179 cv
200.848 35.5132 200.098 34.5981 198.658 34.5981 cv
197.833 34.5981 197.833 34.6128 197.833 35.2134 cv
197.833 36.9829 li
cp
197.833 33.5181 mo
197.833 33.9087 197.848 33.938 198.628 33.938 cv
199.918 33.938 200.398 33.1138 200.398 32.2134 cv
200.398 30.9087 199.588 30.2632 198.553 30.2632 cv
197.848 30.2632 197.833 30.3833 197.833 31.0435 cv
197.833 33.5181 li
cp
195.763 32.063 mo
195.763 30.5483 195.733 30.3989 195.103 30.3081 cv
194.698 30.2485 li
194.563 30.1733 194.534 29.7231 194.758 29.7085 cv
195.898 29.6333 196.993 29.5737 198.493 29.5737 cv
199.933 29.5737 200.893 29.7388 201.553 30.1284 cv
202.198 30.5181 202.587 31.1479 202.587 32.0337 cv
202.587 33.2935 201.523 33.7886 201.058 33.9087 cv
200.908 33.938 200.758 33.9985 200.758 34.0737 cv
200.758 34.1187 200.833 34.1636 200.968 34.1929 cv
202.153 34.4487 203.158 35.228 203.172 36.6831 cv
203.188 38.063 202.363 38.8735 201.417 39.2026 cv
200.473 39.5327 199.348 39.5776 198.433 39.5776 cv
197.893 39.5776 197.323 39.5181 196.888 39.5181 cv
196.153 39.5181 195.418 39.5327 194.563 39.563 cv
194.443 39.4731 194.443 39.0835 194.563 39.0376 cv
194.999 38.9478 li
195.673 38.813 195.763 38.7085 195.763 37.3579 cv
195.763 32.063 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Cicia Lee) ()%%Title: (Chicago Wellesley Club logo 2011 v1-o.eps)%%CreationDate: 2/13/12 1:53 PM%%Canvassize: 16383%AI9_DataStream%Gb",KM.4rRoC2JUIL"=['FHQU<\"I`rV6TM!%EK-oLbZV+YJfBqOm>-qJTtYB=3oaMpPLTS!%9gg7=Y&HUmY`?=Pf6pA2[nNR=6M%<R27W&Of^Y6riJ3Q+aj9rMRao5GfbI-cU]pch63+-`dKFmo?2'f=]`Hi4de+FFK>\B8;\uBel5;7t]3"HFpIaIi'/LqLbS"RTsrI%<S+?5#^!c?`k4P"4e?#N,a6t_5E6?B+0-?Q:V/9DgK!o.JKG@t#P28B39Zq\]n[DCH&<ETA+f^r17J<Ue([mS6DZ]7c:/TgPNoQn%qVu3a*k/1VjA_W#@9iEOMsm`%E-'R/KjN;\+)Y%s_[SIi7VY=6lk*PbV9K%2PJ43unhbXFT?\e>=ar:+mCK0<1)aMA-a*M7QkT8Z%<Q!IaCX80%nXqs:e0asNX9HD9!5GGHl]Jti29Nn/X9Pr.L7t8Ul+SFHqoRa)Wt1A20:C2,e0hStrr3"s>ld#\hs&;4q&l(f+80?'%)1l>OR7F#Y1'!^rpNHhtQPt2Ufu)]]^pEIiAMO@E)@bh"p[)_6/&9FPFPeDYg,*'maZ(/%)uZG6F</+G79K5_E?"sc,gqD\bFn,%%lQ'b0QbLqU3!i?rF,-tMLEId:-N0;0iGFQWG^P"hn"jIq],o?YKmYJXrl+erYQTPjZXg#>#!$Qb9':2ag7olri7U,Hp9<9VDRj(Q%NC5W*<#Qk^_cD!472!9nK'de]D7lF53'6W%n)JU@nTu89pL]V_^5kL,+0YN)?M/`Xg?IPOFI/4O8kT"S8fT-'Nfp]siAop8a2B]m%M.9LJr/%3.(e<P'p`2j^RlIG$`&jG_][CWUQqdmiFuiO\h45$^mr[b7_O0g=HtYs[MKeW6hllD*G8u;niHH8q1bkhK%4T0_3!LhK%mmoBYK'l'rn2pW'']F8+M>0Ip,=VAJl,K>$7@J0ii[1dgUQ@,+Nak*jK^o$ak/:ch,&mq(e"&le@8FBHDR;H6c?mJSkW^&@o\k"a%M0=uZVJEPKp_-.@ID!J9'tP4G_sd@:;FgVFh[+@Wi--/po\k#J7?S;C/$4j_Z4%l</3gd[KHG1S7hOXG017g/O-gSeZnBVIqaDb)%59,=*Z",&$GW/Jo=-5]ENh].ZOZqb2h2C01$rU0[A'&?=+jSIB,i(#h/1W8gLcJ$6aTCc3mj[dtYTp="]#6PGS9KX#,M[8QY>2FQ%rH+V0,Kr_88XaA>M)R7Y8,YsKRqb%@;qYYt9f7k)Pfc0]2p6V!Is?/e6`fP:/i/jCI6`aYPB_;o%E=\'j`P9D]$kdBocO/YX6AjK%4HHY@5NtE)>PMS%PQ%WL"T^p;TCcJ-dbj:bqCd`imjR2',Q1u_:05l9oO"@ZJ#>Nq^WKl`7?I-hrRYr9hs!r5cS>H^4ib7Rn$K:j%2uc<2JNcjd7F5a/ohHlNH_!F[^NpUDiMZ,F%&!q7gB`GhlKT:HK=cR.%EEV@GWeD7Adn<j!;2nu:E]jn]@EHo0E,%6]oLRY0+WN8%a(cr.O&1&dfe[ii\@T(#r"m<J9%7Rc!WMIW-NjhX!\;(Ti*iAjrmlr0cDn'keC@UXf-@*GOa94K$/p*(+G@Mp^g!2Dlfc*3^fVe@%GaG15SPCFAL8t;4EH^^lL-)6+2c_`dnQoH(Y3=F"?F<jb&^p-&LafLo.6)@r$0tGO+t>X2B)40ZiuI`ZrsF.j$18:;2T/L%/(J"J%N=\+NG9WcL@)eRBMW]+g#OYZ;+d\]7iu7\T!r5+I""2TUPs%'8l=e4pMi9O?+^#H-XJ(c7W30rmg<!0$*"n=_cDeR?%r0-gNp%nZ%&]^#tFE^7HP]dq@6gl,f8lJR<@gE04CPfp5jjo8]b^\\"m5E'MXc1]L["BXC]Ja/ekC(F$e`2nk.*p+WVa^IlqlAgcccpMJh?S0l%%nX*j&EG4[\].k<!3U4L6>L<7M3MJrF.Yo?T!qbl*;(r7(0VU;**5Q,1t4'q*Ua)5Q&6cZGq+r/BNkK.L:+3*MgdOHG_4YpEeO9S%43$&)OEJfdj?N&NlFW@M=BQ`&q[Jq4)+isn6DTJ+;mZ[R%*BIY>5:e/"K>9TC,s^I$^>i"^$&SLO*%h9B5ifG:88RR)amllP6E*^%ZCD+_nQ\YDiA''k`n!\(bAA-=_u4AEIZjo1UPZV$$^NK:6/,q&=kEqi$1FB1Z/seU=Zl*(4B6Kerl)6"cO5!+=aKRUOp>iR-#jU^%VO\KI+3m9;`%\R\)3,'T1Rnob(;t#J,,+h54TfCXn<0VLc%fOMr[M9LTuMtWQ/":@*a;U>?1!a'^8.%R8N)V\7>_3<P5*)K%Be8R%cF#eZbG4tmmhTntp*%s*XnBgq+O<tX,l+o#0QUUC/pU"Eqi9);m=Q\KC_/,-<Z[+q)W$+t"NMo=O7c@JeII:A96pIi[66KAm;b`^%;_&YtD,NR)NkU7NcqMRlq../Ya].I]6a\jFi_`T>%Z+\I,7BHTE(9cgFm'q<Qso5:P#N1LA4QOMd1!3/01dl*h2T'#=q@h+XRK!s%4P^V?^i[!5$C[br*K5[EG98+l`mo#dP'^@SItFK9$rK"'U_iY>b<J=GQt-B(UCUk(ME6Cd7C+,NoK0n9:\0Nu"ksLI\XH/]"Lq7G%"0t\pQtF-VBh")gQ<8REMN`!;I936;R])*X$rVkh6Uc_aH%-R4BHO%W1F*L1j2Y7lC-MM*PcRF6otVr%mO>cbIY_MPoghNeFdrK?%er/k!*i\gd]`E2.iXqt.B</(ue'U8npDU56`0FM)o#u=pN+l/%aKs=N(q\39FE\W:,%^\=MH2cSDZW4JRH#Oa!m7)bn"=K^+I\.E%eAann;ph#=9HB9VqAj-!?%MI=R8c);3R2\tf?g*]CT-fSF`"bU-42'EYe@o=e+eMH'PSuom4$6'q$?r%C^``5BOs9iFkdjn4?0KF%;.Rl`_)ajr&p;@'[qI)ADpQ@XkZ`:B.U,:Q@99on'AQ<B'le(2@?;k[fQ8WI1A2W!Tt<lD<&W^1h,PtnkRlud.A1o)=2O9J2e?21%qiGnT^Hmlh]h_M::FPah*GL@jl!&^p6q#Fe>hj\CJ`2u':o'MA':HkU)E[?Bf[D#[l+X3#d83Tf+oQ+;LfOQ.d_(jh0c`(7[8f'K%.s[G*#KKh$1A.JX*'j<:q*Zh'/_YL@?pRI`!Ui5)[o<TBhJ`+3H?>*K%dgp^/WNV<8h"=mA19eTA$uA@cZLR+Hp`C6G2,`o"6R*h%Yc8hKR*<:i[LqUD''*&,-1.=6]\>i1C4)I[;LBGi'iTk^P9^FA#3"X`E'DIsq+BXCP%Y"^>%&$o>L#;PCG/efg'"UPG--Jm&=t/4%`k"PhP9%L[@s+=eZIMnI-Hc>4^FP.@e8##cEaSCtel].Hl't2W/"7I-[@E_bH?"%C<nFk^H6^!_*F1Kp2BIZ7h[;T-'ffL@rPX1h%=+$7pr,o5Z9C?'b;e6_!>EAH$+KmqnCK'"^<K"hGSfU`f<jcV2Fgq!(Kg1q&UTC?1[?af;[B4.gZ)RB&-nh9]=8h30oQOthG<Z0g%s7G.@Q2Ju+5G$PQ"-n_E\td5I13/nl!i92aJuq/3>4t=HFWHMrN5<+d3i&Ar]dbY\o;tH$\J'$)%H31^]u+54;(GXILuptc$CW/M%)4R.u&<q3C<RF[q9\*V>+uoDT'T+Vq+*4fU@bAMH3=/M'<V]CZ*`_N'F0"*HaG-.oDXE/:3R1=K"5[rb;2_Irr(k9Z/Zp)_5GZYE%0N?4UeL=^k5)k,nAe<Ki$DiU`Nm7,71%T+\`?3(F<`WB=?;6H+(sWu^l@e--YA;(h%b$<`@`nm>\aEsP9Dl6l5inklRj-,-I+>cL%h88";1p%J>5E@(l@sG\OVoV$/hbbGtA]%nJ3!gtY;=qY^4QUm*L848_7obN'!r#s@dfkbd=d[KcF$)m=E5m#?`Oi5jPSqXhZQ+ZZ%L!<D!__1"`)X/g5-gA,"W6"0/e[gY6agE*uOc)3!paK;7dqD=r7)2qX(\(EZ4`$OPb%PE&2u.@1cR:<9`S@j#2EWXUb\/"=Q#2X_%fj5tgi;HiRT')cpP.XIlrtmDYF*0WE]p!JR)<Y&B+4Dg1#$S+)@F5guWL?W-V0o;@Y`q4A`tnL"k,N/k_W#BjJMu'FC+I>m:8_%/%(#qZX<EIE?%@f:p$FnJU]`UbGopG\F<al+XcO%!WPP3AiR,oL^>R7tD/i:(!Qe`DD%i2Z?=]q$uE-FII(2("44@#JO_WHO!P$">u%jCCVjIW:Yu-j;R@H6T]d&kehV9U'QE4]Mn9T-@FNZ"iKu1Ua[Sa@#+"Us:QDO<\I4<b.Ldk^cGb-S=)Ek>kP)2l^n+ED(?'SE!dL%^pRh^f0kp?S=euSVg+eq/B"g-^cehNfG7!UVq8BQeLBQf@tBCU*VEr[O0EcRf^q9BRp+)n*6W=unNXq/=A+"^qMe`[<T"ksEh(>@%UuGY\f@nES*0rhO<DbrW\CAW@.K-1<T4GX#[HI/mj\9?(;Aq\+dThB7XFlfikuuN*V7^^A!mCHc7EFOP`LK`bq1-sdPu2,WbN0R!%2'T(MJP[9=?IT?#f[q^UgG[UifCZF=A*H$'Q5DJNV<)#W38mm(44(K6jWLGAhY$*&!lm0?NI%cklsWg9rRMro@)qGpgC4Z@UVZ.?%>r06r.n@]t5,Q%cp%S":&WH,gZ(&#h=C$cD%gR0cFFQ'7NunkX7[7c^hWQ5a5+?Xi@9E3Eae-]>m!A>n#,K!Sc24iCf'SO%YFMOI%kY@9j?%e]tTDWd/h6#aS1q?.q-YRl%3Z3mrf!GY0*VQKtFsl>C;]cL\_sX>#i+D,(rbK$l"WjL]Vm$UW9d\=D0ML;sL?'+P0u1B-%_*Zu2H*o@tL:sRSS,UVU:9aE_*M$Zsl_N7%bbsXSB;<ki9Ui_+B%LDo`UW%lj&"PcHnlrO/ZtlSjB&?WAu/]87PA*L/s^eVAp5rm%^RTDdkP`l("U_E%Q0?p[K(\isA2NLG02d)$+G\dpXFE9%No!NDai1:5O;hj2@1NK<=go+"dDZqER]%9uGK5Q/F*?D;,EL'%_(f&"%gW&[MY;!\bg)+"[mn^O.5+)#tW4'T3)('r7h<U=-=OjBseOHb59BGIHG_rjY.Q8IpM`Xc`m)VrK&KMt+OP9eseS_j#m:NuXY.*G7%e.16=*OJ8iDgQ?1NOa&@eS6sGNE3_-\"ZJFCro`)&hUl[[9RgJc$$GDCc36WH8BG.c*/Xd5uTW=VUopZO8q,kNE2h-BJf"6\.LU8%L26u%dI8)]_ehAuHDfW&\*D4aUL)"3GWi.OH;GE#^[BY.3lLB)4)W$^\.R?Q30)uPQ>mIofEXY*`Xn\/mALaWUIJ4Di[Cfp@3hTj%&s48]OW-RdKP.Gr1Mha;0Fjj3$tU9/,4n5UFKrV-gTi,pZ6ANhQB;TPP^sOsQ_&;q;[GKN4+Mi5BW,O"-jTnm"9Gs#G_$f!lmUQh%P"a77FV0O&KL1P]#iQ.e\AIbtIbSf:9u#Z=rRd/\IcsEhn:g?.T'uLc`4BfhjYa`+=8-/Wnj6,uJL<S;o/tWGglC-4>Aho,\90`R%,<'_@)n<cX?-dY!VrGK]69kS,G(=!2'rq<h#Ng36RJ't+WU:cc-6Nuon:[kInAA,MUWVG5%bd:Ng_=3eARI3hd5'.po!b%FH3Jod%U#:YC_/1^]7I`eI7M/*57PR@u7SuW`7WCnKp/M.G7BsicFaI>L2[FXsa`p1p3D)?THISg`"fZ#RV-YRl8(gDsa"KsI5Y(')>BTHo%eQ8LI.Y13CC4T_7K:j0WdLW=!"LUWG:%=LWGY2K8b>ET7;7b4Wq?((>V++1U8e%UlFer".'reB5InBSRkV&XEI/W0c=%3(,XY7`o%C38YIK]DAjjFF7\jFP_b:`]p8'S/0m6*$G>=Zboe%VV=:=slT4,\UThg/nT^Cb#;9EMr5T^3ZH]U)m9!M,d%XW,s%Z]*XF2f/jG'%:saM!ZsS=u!0mY5&:n,cX4HM^YdE6M./[>ch$9+)4P:,nMZ+GPdSN&@!S`-U^e.Z_ed"Yhb9^s)DFLY8VP-!(Jt7N7KY>;Ep!aJ0%$>ajX[Q[ZbJ0Iil!eOY);NfMFYTLSUVGO]t`_b5_k"tbJ##Q.5-KBsr:Z<hj/dY9WIrX`\\d2Xql(\X!a$+^o;]kWh;!C^X3a;nb%2*k!kYWB5/H_B^,P[8t47plJb?jq!M><l*,F21Io?nMSL%9W`/&V1t%K0<oMDq`ja%::_i)]u.V!7iOi,;;Q/0M*ZG/`9/i3+/gM%0NnO:(RRE@@hG*7\nG&.Zs$'^3e7AKcVqm&!c4M4>8UcN)14;LV][![]Q(`+H=0!XScHuK#\Gpqj''JDQd#jc86[gq!=K>"Jh;`=%^a_ul`WnRGK=(pB;"EI@HA]piZKtMAMk\D3MrKWrN$=3I*3'eR=G\d?F$o1h98RapD4RF))at^"gTQ-TUP,D$UQhOD8*[(<\rucA%;FcoF2XWXt4j#o[50?&]^Hcsm!h]mR's.Wo4Z&gR!OVt$TrfSpF98iOo`?uQFb@((o`I&SF[Tq87@Aps;O+['2Gt>mWOo?uL=JaC%CI+C&.so\uqU8?>#K4!D>5)<t8A;B5UeFZh1f>`&.9<I715Vf/XBJ6,.a!bU7_NUAZW1gO-*%k7@hiMHdYals@MeFuU)f8;;?K3\%'IaEJ2AWDGg0(_gBPY`DP.`0"b;P]g0&'ZKGq6o0[Z'aabqBoAD1?C19K&7iE5i)`;!/XR0UlK\KU!!aj_Sn0"g2AE0UlE)^.koG%g@"gWk!n(]P-$#lqfN'Fj`g>u>CTL4_kDgj=M?P<I]U91$A[n>Win[9+\@,O4o"7j3P[;U+0)BEX^n0&j8pX&TqnHd\;2nl;M&p5%Q)pXcTY1%7r>_2_Jtk`36XcJ<S>HoC'I+<f=:#Xu;lFjq:dQH6':]%]]Rl;5iM.$k(55@Qe54e,,qu?7=UAB,`(?)bKMObI#/#"U%&Tj8(g-@=CBVqo!Q$:X"7C:Y!bG>t1D_nfOXH;+7Og*@*YI9sem:>P)p6.),YG5+'U<8KsZmd;29'2?H.[a733DKgmK!MF/j]ibY%\l&o.W,+"f=]&%Zl7$6/W\*TdPM9+j]r;EY6b3')Er(nR_4`X%;M>9@I?CU`BN@[.@Zh2^Vc7?W<^B35_KHZ=1nqS\;R>rSKdoWe%0,5a4PWe1_@D7-TbKG=E$XZ[*<O)R+p6CmPa:`8s@%QZ8.:4(H6H>38AR$sCo#FpA?1m6H"1h]r!:34\Pu=b)VDHVAJ-`1'X+BEc%;\WSoHYINP`_hCHl%g`6A*F93+40T\qm*;S.Z(0t-"H=%4]c6O>BB9s*3Q@L)7oN@X+mUA>\eip/-G.;>020^j_ZdHVsmo7O=`=A%_I.q#WG*/r/L`Po;F9*E*;.U/lP0].LOuR"9fkSLo7P6a?qE_p>uJ"%CB!7hAlj63(#F+f[pA@0[.(LcfXU"Y`pNhKG6%IG*.\$/%M.4L%/?$5%1=%7>:7!DR]t^;rjU6T31\P[3U"$,:WL9%JjrhQkEcs?8B%<Zkk1rTajb>feo9W]Y(^<:N#pWOMN#WY\T53C0DZ99/%rV8&CqBl:CY);M>l7]n4eXhBmoMem<0%<Z[9D&;ab0?H-3U/7fruA&rT4eM5rTZPiH3XD`R]B_2WEjL3L`6cJ(#NIM_7d]V>ff?A%ojOK*RLcQ.Xi`=o/E&[aRaJ=4:FuY<SHf>)0eSJQ_ZO.,.6o4pY32j^Jm&jMOs(&Z`:n!jQ:)tT<s5kt<(&ss;P'HZUA2a&q$YPO%`-#`aEue_E0>J?V&Zm<nY4"jbG$r-S<:cqZZgbXs0`0]Me#2:2OS/e39nBJt`dMtL5Gh]i[%5:U.DqP:L<5u/AB7%DJL+h@#DA\_%Y6\ar\KG4]'<&D"H84Cl.IdIJMl"8pUd<!%KLZ$2!Qc1rg_rT!RQ"(qp4K"D`-37:ba+MK1n"tT<<;D.U8>X84+V$0#8Tk[idc]M%motHI[hVK%XgYd*'V2Hm1&Pq6_Ou"M7<AlU2N'Ycl,%WHH9nh)\6>F(C#R'OeT4#o2#1J&KCG3n#8Tk]!lp4e>'4<UaLZA"iur#(%])pm?X0P=l6LYhs>NMIn(+a6u*&H`Mi4]BT!<e$P65'GB:<a.&#*<ECJH`'a16,MLl,EddF^oT5E@4$=6[[RtTXAG\1uod5.-hJ.%@d)PR5h:A$8s'fN=_"@DYlJ=_-hF&[erV2Y(Z:[O.E>tsk!r:)>OFi_X4DjXLg8P^%T3iWW<;J3,+*do.`JgJog:%?,*"LFP11L'%%A[jZFpQ<>i/%XY=<J_3njD,.I:E<!\oC#^,@s-nE"WM'-[T:<ek%Cl^<UGj$s/H%PRD:/jSohH.nF=_kTC&63BXP6/:uQa(>5eE%$5Z?Q/R"kKP6-,1a/Btki)\O(Bq#AGHjVs>?u0rrXF#k5p:VskapZTeHB*$-!n?*#PBfhSQE4IJ!OBU*`W\'nhRqZ6K,m%Q\HH7I%@0O/e^P3?4;Jh6'&Rc,0YX$!^."E`,^q-iXB&/=M4Kl+@DT9`2-jG-u^cS8@l=gWtkM#OdY^;N)pq_pWX=CA?qG`6"5Q+lU=#(A1%EBL@tl$^XV74jCE^P_86=L/##Da/ob""e#!JIcd/O+W2R,YPpbP$nLt"W_W6<XX?_h+1+ro\ij[C-kqEK<:js,T(*_!Wo\^&.6*!%$4,W!0\\EX6t!S@:edHc?BAH/10-TdJ5\L[*ZKj*T%/h9<>@.CXIL^t^_e2X/dUDCc*RKL[_`)pF21Wt:dS[to?g[tQO4!"'KUR&%(k$j39b;m"JSc`Qi41u$(O@fl'rj+;'p5@p3e03G+%(_G7"g'u*(DCt\)t8`)Q9p'As`Za#mN)%+R)n=!O2'I7b3c$dRF9TYRRqo%EBk;P8@(5\4^S;>f4ALK;!N<<lncQW37).u0G>@\3i%=hA=ghMS5'([2/dHll*8#1T-oF3(qV=@n5%ppC07:]6Xu13$4N>j#p@k=%kXrYs35BI(5UBMhJW)t@)3c'XCQ:IfN?]"/*RE+G-G4jg/cc&$/.;S,%)>Cpm:>ST"L/4LL]N\D`f+"l(hf4tHt='*L`[?V[2_W?%`X7C:A)VALSu;HqODLn9NJ6L<!.@<d7)@LLCZ.UnLs5hUQ3%h)Qg^7qh2cQ;(MI38N$f`oBJk@!(7Z`XUC^uXJKgt^#scW28-:([%6d=r<P@alX8DXD,-;tZ<BAMLDj=%8%oG!r+ETf3d`,,J]-d^NB:;lb8[6R2bRrouB?l:sC$P=n;6t#Af,XjI6+9]K2b7fP,9+li1%d'U?V]R!oRrBb1F]c`@-'E\#^V?m)r"!shO1kFhZBk;HFRMN7e$A?AT!rBn>.`8?=?Kc,,aP%4C/A=U*E?hG[L`P>[2^#)NOfh6!%;D>e95-@HF&#l]>@P<>#Ki(bV0fta`VH37W5VsZ1MjP<8H>FEXb],K-)An10A($egp=[e\4s:J7LeKMPC]]KED+>SPmN^A,[-kts%QC=`VN:Ri4O<0l?ONbL6TMQoaM9,Sq&-?m=jhRWcLrneTgnkBegdU'REZti==ERV9C.;qH6Ej!m!oGpH7fo'.1'g6ZX9$<bADK*o%!3"oq`R,VG,<)#r/gD);G.NgZ;?WDE&p9X#-7K"(C+#9<,bRc\25rp2#m.o#a-(CO@Npc?n]4INpb>ZEC;*#2;5KDXqB-oTb1CIG%$$[mbmLhf&8J2&tJYfg03$h8)@`b)*PDK<JSEc$@I?5fO=OTuaU'UhdL9-mtKe3T&=C:Q6YPLSH%Dh56VpY*fb'Ci0CntKIOBLJf%da21U/AXC<[-%>fR?@#'T'\g2l%Wf%f^W,-6$^s^\..J:/HRE_6(f<SH7@`a&V.uN7K@I==t@Bf-I9O/2DanU;b.S;A27bN5snG`%cnW-!8?%0WanRN\5^JQi2F+$YTYUYpJLCq_,=W)+&r.\_f?>2&LrEre^j03$=n_T]1neq.*b#!LjG1Vt_cd@iLBGd4$Uk1,*F\;e%Ao.fXas-!dp%C*6N`bM@'RHi.3LBpK(%DDJ7q-^<X![nj.?%=AOnKgr#.qi^)=S=[/#2X4\.*tnnM;4eKQu?5'NuB&baB"J@BO.G%(G8iS!.m(efWTVF>6%0%?m/"T:bZYd]jY;YSVZ*g)b/t=:h&Q\./Ekl[Ca:cX?tf(cua1[&+itBJGE1S"Q.K<3"5GRci@Wb-:gS\%M*i:D@UVKC__`>X(t]AV@NkiLa'11C=nB"Ois*&rM5eQa'DU9(_Fia831+_21P'Z$:'<Vd!+>0*)CRlp&W$)aLHQBD^!d)aG$RW-%"D#snkdcl(,+jJ?H,LkeMW8s`+_&[t%Wd%LYAuT=C(bp'#%gV?&7N4C'4@MuGQ?I[Okp)bM:pCZlAu5H*\ZW]h>eBWN^tB1`C,;j%q$IV2!>l*NC!q(p/mt4oA7lQDA:\a%:?)Bh%3j/19`X?0bQKCl+`_'1l`jj)oO7jj8-?[Z1Bq5pblh!hZf=p?2aK<["bp`a(CS'L%jkp9WI`.,A=Kd9>CP^I@*mP\1L.K,]3.Tt34b4d]J\j1n.W6J<)Y.8n5u/UsDugePI-6.[$;r4TRD&^uTuTEZ3=o:&1ICteTY\KX%bG!].!CO[p85(?B@?U'i4Ys2s.3hao:5c5T6tXb8Q"C%(9t97oXNa%]Op(mkENHEhU_\1HFf`TVZ($Q5Z*=LY\BU:$JI]X"kQMqt%8!q4Mp+Sa-^f`ls&2<cD#<-B!,A\\`!jHcl;iD,W:g_<W^udqOpcP55Q7%JN2TR;EH<UC9PB('r90o22DCr6+5X7hTN(bHnK]8#f%H:5OK1)__]3l_4C=;OFl8CpNX9RnY'["VoLjp<#B.1U&jZeH$p<]WRB_=K-?CTZ4$5mM-m>F-0<(^`V^].*qnY-*RW"rDiPb)94Y%SPTDkj0U)Z"Hgf_:q3n^!;@^I[ZNW"!h_4c(PWp(q6?2P`k%fE^aP-E0,?$l$\qWGe4-GEKK>N3%",om32TM_F:M_39-V<_IX6Lf%/k)M:+eWH^060VM!U.QT0i>jn*Pmns*0>INH>FGn[d>E7Wj$2-`JQ%I64gJ)7+KjR=7@j=,dRdKGpHoO_G&l\j&X:*",om5Yd6)-%$9[sFm*j<Sd/>#Q*PS-J>*pE@fV>As,%-@Y?a&OZqluhr7j0oh!2/fu(eK]%GSse%_b%B_,k/=q#T$[4!tC9BR(Wa8=of\`pK:sR%.]!LE&mQAP\'VKa!b@?)CHi!<1q$9/-ijF@liI5"fBN[HoI+5c!=YM]/_lpM</JDdlaEQVE,<UT6_5DW0oXW(+onl"P_FqLPX&17%1L=2<e?_cU-L/s21#Vg`EclYn0Q<#u;]u3T`H)7CMb_,$kVB<nk@Q%H*L9h\H3gnH`ZT$.K-Z*i[0Dd=/cgbu**i;+@gaX4ES.=$%%A&)TaZr)3iAcE0hl'hr'1cq+dH[Fu92_Xg`P?+-K\/A`cNKK737)',j%`0G%0ChfQc)3rWCNTfVj6T/H%egH!ps7_*%U0r#m-"F%";Zh6hi^!g!,M$MT(_pf"-7d+"jMt,b$La)$35B9LI'ALpkrVm(i6!NeWU='a)!rMapl/%iDYF1F$#sPNBGlK+:aQuMGTYNE%+_)%<%aRdn9ehCN00:C_"as4Ve-8<UQ?\5?Uue?E9&K&$fa496XMs[1EJJ1$&FDRWcCBKN$qLmTJ)7>dsDS?aQL>d0]".bEl2#Bh#J.?%i3E,,87:ghKF>X&^/7A.T'BHg/dKEX&3unF%[6uO'=^f-P>Ibl1*.PrBR+Eqe%-NLK:$H.]O.oMa?`7:;+=qhT8EM#X5WrPE?]B>%0`odJ@HAI$8j3L@-M/'f\P=#*/Xueu@@jb\#+YNpK5>)XI#E\mfg(B;0;_Ri(si7F[dh6b[3Heq"soO\e-#c+jAB+fcJ&Ae('A$1%8-5gJ0eM0#P9O,+iiTdj&=h;`;b7+bLO:;a83Hr"]NE4BNlQi""_RM/7#%W$6T+pCe.B-5N2H1j!-42'o,:(6!sFAc,?"sp<Qg5N%.H<r$4jRXX-6*.BX!cMkYa*DTKP^kQ'LW2PI!]Z:'S`g*.FCd<TG%l$7QMUt+]uc4^b!J*J0+$cMq'ci$5:l]3a\ZhY_$`%*E-r3%cp>8F$=1"J!cn\ql.DRS5Y:.`euT@[BgQaGAtWaj2Y%H$!&IEk\1ief&L]Yp(&G]RJ=arL%&7&52&/6[fBH*WMSe<PFkYn0+U=bB%(1*fu*LKR.L*iG9!7Q$MNL9dJEbEX!)=UbSdm-^tCIfg[['/U#%#5a.)=)qfJ3iB;`t@p=@;JOj`^C%T7JCDr!tDX`"2-jK_$('X%Cd?%,$HQAVcrpFP.h$](Bs\hp&J&Hj).;'mZ)0/LC'4mqp+e`r+Ch!Eqc!R$.?WcV3/B0+We4`K!0:8VE[u6H#uI=VF"KgGbKW*:%#q[.%WEJ;Zjk(Mccq/q5N-%ZjNs?fZI!'h6-3/!)F*PZ\^\#_fS>9UN!A/%`;eQ44l`::&;sh(#p9E2g4/V=;0K(gI+pc:[83@l6%H/=XDk&:CDaec2!:D-S0_$2@\)!LgZ,=J[=!)s[NF_F&AXi(ka_#gdcPlMY1k*8i['6'<gWBd@/crD)Xko^",<2U09kKF4_Og`4t%@F"0="3OW>YQurGpAe44C<c47DcaQ@,s[i<X0.9K"KCO0e1aR(5+YH5'T"]T,,lf8`7<ttIp0D'j^LE4<K.hX0*Jh5Au9D`cHBic%qD9(.Q[IAYR\cIrDo\.R%`8Di[A\Y:8T$tSPrd57$7OV)U`+TWP=V[u_cXTWY%l(opf,@8GDSHu/=K&`?m3k7Q?_E3lc5m$-s8;,%duBP,p*:]-0rCpK<!\.(\L$j.@i_2L94q6[Y\\kE+cO?!NT47#0b^bsnjsFRF'Vg@T0:&sg[UtE]p(]hQ[q/HP4fAn%`(W'K5QPF%.rm4H$0\pYQ7AHR"O\998ons&ZUVrrkQ2f#@'S'Q-ZHtj]qR\B"/$&C@n?BD#Z_dn<!K-)JhV2@_]&`Ug9%\)!!YUlh4F0&'$4Pa%kN[AV%*aorXQeJ,l5N:uPAXI@::;"prrGs9M,aO3?$>jfFp:4h.MBa59(&sGgj+Xi=A*e0Ns$%?fW_m@_o'G7?$q`r.BQ/kp_2!f%/.H@GGi:XE\3oQQ>AIY"G"Fb*88BuKgO5\q!e[FqJh&=,PK2+ASfAkTYbaj2E1in=Pg60K&mI-n9bf&H#W-=nLGB-Y\T'@RFY*_'%Adb*"a;i?t:$9LrM-2Oq.8f@^+_VG"GK(t"jJV[r;dBf$JqPljF!dJ;QBM25b]+;T<fI<PMqVITe7ar#HZ3<Om9ESi#;@!!<_8'=%8.lF]%DC14VV3OXAK7?C37P'XP4C((8iLm;JVJ/m5[('#33>aP!au\,AgUcH=)7WB-r4;e.1Iu^G_M.mVK'pJW4V+J?=&m%qKaB_%ID7.tY#(JG6[TN">mk:G32n@s$I3#ZRL1&WcJbQR#Dqa,KReV.$E8R9"@cq34rHC^poI[lUX5jDGTt\%.0`hu0)8ls7Q]$D[ogs9%i6eF@N^Gaq)&pW;k:s\'F_F3C8S%RI@mdD`Hb(U.5i6\Iq77RYJAO5c#=cXOhM=f8Z1N9maQ7AuO4s[P\j;Qu,MhgVRZOpeSe^7`%C+B=qY*KZfZrAY,$mhPTfHA8N&K8`G@=WmKBfh>4>Gc.uHEi".4P!7\`%F*r>156`R_W#Th0K]#p`&etZAugnF[?Y-`.B@mI$ael%CWMcTPufmG,$Mht*mBHnNg1ei-GZl=f9s0uN_>e?^&l^c^/[kgL)'cdmEm*=SHs;I//G-]!+<i8DnaEmNdYWa.?o,<8c`SMBS-#.%iL9XR3kPmg:.@Dg$SeY?EJ$9R!&1n^831&-5f$2h\"+oaS([Eb&#XR'dAir=JHc@B/N'uP)_eb@8ucjp.J+K5nR%Zi2;Lu&.ga[j%Mf+Aa`85'K+IlNlN%sLh'V^8J'li<tR@[-_SU&'n*1-D/.r*II8*p4Sc-i9GEAY`gqM:7dHqETle<@m!d>?kI-I3A>N7l4i6;s\R%oCl).nKhn"kr0-,.Hj=OT,QuYc)_*T939QmPV=5s1L<'M9R0rkHNM?OR4:r(%)HiHH0AcgPk7LO`q,l%jo+dEPT4.t36L"N^cFRi%\tXncC:1k+*U]4lA%CYPFm0.N6C_s$W%$(50VeptU!DBulpZJ6(SC`k0H4FtX9Vp0#^^,W'=dH`$3LqSVbM#:@(`jqDLs=q5VR'R%_?nX+#$q3qT\pRib6eEk3<K'fmoS3j`n`,<Zm$pKPX#nTn<h]%8=M/%Xd[ra3kR7g@.HY5+r*^rU/Pt37=:f)C1LA,+g)?CZ)KYi%/N9de+9G_(qb[0Qd.053"Z-Y48Yi0E1BMm*EH.,a';QqZ^m)cVJr&NMO/-`rma4Yu<<U==P_1<>-O?HRb!`0%Li!jh9mLDP_3ND+%(^+*UE[BVhe]+sB!.caEo;eWm\j)ofm)Uf*KV<*!9q,""Ueq9@F@ClZ\SWp=g@;#-K5!U[A(.'FcO/oc/F'JOq"fXgE_'7f5nsBR%jA(Q=%Lq@g4IQKZ5&5_=hAlskGB)9#7TfLCrQ)S.JG2];6dEMfUeqrc`9*1&5q2t*%sPQb9]`lshuF$bRsnmGDZIr4S4.M\%Yoc^%[qV>P2K5nb"EG]X2/QX]")7s2VG#GWGhTNEb0`*cJ5O*VYH\SZE2;F[mjR>N-c5k"mdZS=J0MiD(4PsH25LtJO.:@i3)/>!B:Ulf%#9'+UT)!tA%3qM!(25>]PQ2B6K[@^W,1u)AaAb=e5_Duq<.ttf2D*&K":tPX@=%-[2\Q1"GF:;(65s>8+LB9N9m$GZ"+E!Sd$7<*%#3JK2D,CmNQQOq;bQDH:Xm)D9G210FMJCpU$UCqr4FuOi'<n<&f,siL2Q"f0+KE"'5sM*c'6&F03^^3/Lk.`)_JX;:0'miAL[7u@%bkoQmQ\%jfLk'Y6Jr7_i-s\V_NmmmMdj45J6;'f[C'6Zc<?iWY]*kZgUn4jPmWK>NC124pKj7VB=@2gD`Umk,":#@D(/(8;j2Y"n%)'%LN$Nkb\MAP<eMT@[$QO.tC6JE3f"m/B&)!F"Y=JA5LfKkL\eBRr*,@#[5,OJUPZ/uoiQ.'K@AA(uKSD$NuF#=s%qPd3]I,8c.%J^MaLo,*!K%;!?$%=4m\VX1MUXK=Y4?r&`QMUX!,5aH<W$*e@Q&9c83)^d1qV$eNsS"B^2(J2D!jM@$7<^i9g+0Z:*]rZ[OI\L?6%B/d>\$:*2[%WsVKJW.PQiL/%mL]9OU=98[]o2]ugE\nWOr4!G"pgEgSRL.t1f+)B1\FKq?AsrbT5>V-e-UFT/XGpguO/.K<LP+cs%K3M0U2p[t.*hTP80]fJ26<IC;?<BDu_Z^E#P7)F?LLh$F<We"pK]SSg_l(#hP^%9tOH5ruYpmYjLQ`HT2j%M4.jTc*EruW4oQ4lA%jrmgU4L5k`L1!a&iQ'Esn]X03'a(n.l!k+$2!X\F]$D.BJJW&]iiZ`AfXd7116#(3o$p_^hit:JI''#._n?Sk?EAH%oW73%1,+97%:O2(dS]cgS1)"/=i2=cU4uKd;_a,<Tq@oo-<RETC-U&QEmaDKADB&.<JG7U)CTJ$XI$O*g@B-(I(S?R(I*0X3W,Hu5nN]&H4u:%8%Bu0$([&/#$B?C8H;'!@<X4-62BK4GXF)$J17$rT=!-@<9Sq)tK7\DA"qKs!6Vt*`#I\gX^2%b'Om)Q]N-8]_6IKk.+2^Wd<<n2i<%r<iI-NDJ`'#9'[7fC\>aHiuob?Hro[IDS`EF68-='0<)`WG8rHRPn'WO]lb0P=%R1k,/G(JUX8Wmamk;+A<[)9A::klh!QK\mL_,%=d3OH[/*/kJ>(!h\@Op85cGiI"SX!!^6ucZGQL&Q</iiAcf1c?KKPG8ps]F4'6ki__+GhQE3&LV4+SW8FKqB84[q!ql4@@fXOsZ!%];W<tBEH4:PjTE)+#oQr@HgToENFAUBf-:CdB.?H"/5TN1_6S;%Kf2O!u!PJoH=hFhLG\;(Ac-gcSPV-hpdR4H9D<1KogV4[#<<j%WN:"Z5SWI`%FjFe)Q%\1ei1\o2Gji_%nAkKJN_d399D9OfN7Io+J_J]fZk[#B'"!BJ_2hsI6Mq#%1L.9[FXh)m6gWI2/6K@[rV^3%Ptc)+f51s\-)*5I"*THB7\0Gh&E4?4j<J(9ROnqAq]!g"n@YHqTAGCK1JC"*GnNsMm-m^[KTD2"70ZA\5m3'EN:d9<YrTDgl.p25%6"D#rp![PR6@.F<fVKO'n@=u%/*![X@B$poNs5'+aOmggSd$9:Ot9"PH&2R:"GR%S4&uK1*`J`l>jDtMh^VO^qqlL<'aZ*p#!dW*%&>B^f7_Z,#+FU[5T=<7(&UsRuOt`HAIepPaL+-q`eO_\oi1$l%T8tr$af^.W0R%m@^3N;,?Sg$\,?19\k\u*EW_!^1HocE)=&7Xl%#3;7U++W-;DeV?uW>W!bW&F9rHKJ9NN9fD=?TfLU-\.f],SiRgY+L=JYW`B/(CfRL6I21[\`om5*^/SX-?*DbK8BK(INB)P%eJ'=%"M[rf+7Agd$#?-JF,YsN]EDZB(^fk8##D`'qGu[9e*<[4a*jo]ZA4f9Mc0Z[lAdXGHLM!n@hFm1pWV<ll^7)Oca<%#Z$D5LZPpfR%fL36@H,'E2]',Uf;)gjPN2c>Qpl5oVb'R*H3+/t`K[HRd%gI@jmfU>""+X.^pkHBEd>?-4JS,/9Nc&i8?k-ZdFR4VXZAtjQeMt-a%bHi7rE#`pKk#89Pn(-I7PfKV&Hk29!UXZs,:'KPN_^,AV4#cZr5S-G"k(NYUT_*q1g.'El^,[o*)1','LON(',Js0hGujINoCP\=%"GJ<^?GBhPD40<0d$=RW,CP"Q7+s&aOp%-#HthH%j@,Y8&6YbE0q^HO@6,9!di"-7oRao1H"'0cW2ocuBhm6X+Y_io(ahIW%;@^%%F'1Q+hklB<#aF+<ka3-F0R[85RR0uPg/5@q4Q\1T7fef#9c>2>AUbL)%f&*(+<dld#Z!CHj#MY14U8]2:@&eZ4jXQDM\W6IH(i'J%C$,p-5*?3SDB2VN0^\1Y,#9tU4\$no>URcP=R&S8O0?(>D%V>r_2OR5h3Z!GE>2oo+L)Dag3NXY4Cs>CaN(^QZZpRG`Q&C7LagP0%?DMo4X`/\X%%Kr.%D?K]/f<q1@\L\&#+j`d;ffJ3RP%'P@`fR<HBMug10f.T,GO$9_(?#)jY^A4G*RT>65X5n)WmEG5B[H3#L1mh%';QYj*(++V^bi(pgn>G26PY8*Vu5dXrn&@4V=,C)>3sbFK3Vhc2XWnaK@i:Y&P:kB-CDMN5ue1#MC6fXqi5s,=$SLiKa+kt:S6[c%pCN]51u5g$0Xot;=GNV!Xn=`NZl`K5j1Ie`oH&:loj"$pbV'eQRs.B\ZO-pGNjs,-IQJsL"R1A1Dt[rWH^XX)^!$9R?&($QrG]O#%+2B^u>NXQ&mE2Q'*Z[?aob.&mg6i"KYMM=/_&P,/fA9a@L2^uO^YoP(Y?,XCMQab^%d*&^>J9]K36PWu]cF.h\*B/KpMGB,jOnp$%1*7dZe)Xk<qG)A8oXmEP9p23]hWg`YqP.JCP/iVq\Fk7%56]+XoWHGT6<;lL0_X?B`mu8oPtD!d5"hb4$ndnb/ZL/>F?Z(/6!($6%@dLEXSTLc$B9N0MLE1WO+_d=2QAW$h&QoHro8=uoZgMTK]b,NrWG&WccOr.,ok12cch`9R.3";-e30WP0LNk)<C:]eCg_=+0cj'd%ZVm7-d5[P9B;<S'>LO[[C/\$sZV9fuf4[["m@Q^.:X+X4*0'*Ee)^M(4$N,*QAhiO9!bqhrn[%ff%:8G):rm%9#V@$I!2:2PQ&bs%9g*^b87Lq(('L4Zj_Rle5<ATr3Lr#so3i.62+DLV7:h4F/?'Qn-KWsjKhu:h_okZmRg$FW>N9_,eK5ja#NPFDZ!/\M&Fl%:nl@8$%X5;N@HiI'RG;e\P0KXMAl;)X"hM7<`PtR%mDn7;g7GBHNgSK8srhf&1]aQX-FROk(NHXRC0&8#a7D!ZFHX*^]l9e;?mW[jCBtl`G%%-IT0i`gbgXV.BB,,.1t;4JJ?)&t&E0,7V()ItXY?7U<Wn)F9fA29Aq@&mgh4tukd=.YNuU[aJG;!CZjU@.Y3%78460ti8`Upk%P%;DLSqCoQnoj5b;GkY;UAGR!O7Ff0XIl47M43q4Vhe_*olpE:PtS5P3\43,nK6.ne3#d+,F;c:9VD9Msms%:41Y&OdUs(&iUoZf,(%n!I"Bg#cs-STT],(Kj@!efk\d,3P/rmV-]`g)Y!UYZ7i\\1@["44o!<*Y"=XGHb?'B9A(!mdkV^]c60s@K1F+(enoJI84D`,pJY2%fq"Fn@lp!IQ@-(-CXYYDns2c%r@Fn+qm=0gd)To1\s*-[r$%Polt#Ot(kk8*G1c2co>r)A<@FaLICuJq2Gp[U%l-C?Zu^o%.8Qdq%C#pO,/.f+Adq'iD>p*ZVr@aRPH!C-j8'0iR^Yq*Z<lI;Hkcm')PpJT-fK+KX3-M']dDc"JB_i6dU.!*A38R"u<7selmYTZm:r=e$%3U_Em;)V&'X]_Tb]M8Z$kM>"Yn(eX$mjDEY9uc@k_<C"81:jD9;uBsOcn/B,p:[9rjf42d14<!A,^jq76`)7VCu&EI^1mJJ>:\<`%$lJg-!q2[_/&,4;f7P031i"DD!UjpMb-``]A+n=BUn3f$@_Za*9rWrZN4tWo>8@s&j-JEtP-q$uh,;RC:[A&0>B8u+ohS3B:>Y$;%qW4I<rB@8hXtI=^m90C3o<0H]9:'V%jjL6<Q--aDCA"Lb62*4H8;=H@h/O<\drmWs9lEBJD#!.011_-&96A7&6on[-)-[NLVd&el%Q]%/D;02T'k';/19En#/+?A8jZM(Y)PV!N1419Mq,3u'LEfl/04&Q<YaeLHsH;d:'Zpg."_*jN#D_@Y'Pq)sOCl,&pL@6ncW*K5*%k`->YS)uh.Q+s=,^Ufh?91:_e\<Xc)QXAuc0A[`C0=p7]rBKTY"rl0gP2uYc<J;X`(X26I45%+e@.8C7m2C-CpMDJoOJT#4lh+oh%f:+h?8YT,-;GiaCOAjHHki.52AL>@%`'@.IqInC5FIrd9@F?`/F)FT9Xr<0>aKhdX.@3eDe8rYRl^FQsWb8l@;2FD:"-7`/E8Krd%TT.i(oP`K@/29.W:J^-ioC[MO<ag2S1,ET@OJQePqB3uNM"Z>p-An"-n`-q.;TWs<94U]Wg6[ENh=`L8.oukZHU6D#\Me!M$rb;c%\P+eQ<%:L`bqL5H1X'RD:*+U$<4HWn:p.CnXrZX,FA/$?Z/r80T6r`EBt7!L0&$k72Y"@H43U3joAu.?bI,6P/$Rm<_sH)cG3q!`%aPL/c5q5r-oTDY7Z5N1*\>+*3bPQ14EHge(+%G<sXs1bpbsTU;l4W6Q>l1fgs4P(dDl(k7>X_:4f^H3A+8daUm<JHUgk@MtYN,2e%..=X7AZN9X\g;^@gaD\O_qc]Q/eGO"[[k%KB2OqPOEZ%i@rjIF1s4F+^O'\Tmd4UTEj>OPm5Lj*6[I;_<q"Ke<s`i`[qT\$6uHJ_%>"W[nbJfU77GCtPSOM;QU<-:F;[/.\/ro9L=pZ``1)[3@1iR*S8n-/i'p/?k#-Eko]8P$Zp2"Bf5$WG8Y&L0>p8hL-q,$H]ffMd^%iJbNV%2`<?nc(EA@dii,\[\tES'n60==V-8S(a*b4!1?RHlR(QRNr]EFY@bb_4.g?lCE'umN'WQ\cI2&WpoHer!ks[^kHO&857iM%GHVH+&BtaK[:*:RBkocLGAWV&ZJD"Y(<f=kaE^Rbg*12*FIb;F]k?ZEP.1'H>@?QUm]<h$<;)*\jK(T4Qg?9O,3..#p>_rbT5D=>%<6s!2d<g-MUg3`N,p!2'N\8>HBtp0PeX#A1ldW!]LCr9(h8]?`AA72lP$#:ih_7piPEnjhp.FSNh5>'#\s*-[r$%Po9YfMs@49`;%M=8J?PVEHT`(OddC;q&7]2rc/4\GQ)/>A[[ABe7W>"'kV+_$"a24Q9L+moCTS!nkjM3bWI&)BBSI>Ol&9C(3Pq/kjKo\AFqa0(3r%2p'usd!^7G1?hpi4)A"8:>bs;<.f3oG`.10EUnH5QCmqlZ4_7A;"gD@jV.LH&b;iFKY72dVVMjTmKe)^KY0B5hAmd>_iAtcKO!ps%g)V>L?fcc\2P2<$pf8[`A!b1QepQ1cgtQ?n)#\mGjWmEPG<gqI45^A@01U4mpIBjHG%[!1mYiLKiQH8h^!#kfq-?Q?gZ<Veq;'*e%BtOQ8482P@P6acLi@`7L1m>RQ+8j)sG+dab=h<N@)8HS`K\Ne;<FcL9S4``es'i_<qdQ=@O_(bHhiD#[Q.,IU,:O@?0)O>+V9=GI%4eFCfp(X=po>ql'\jotPVH(058Y.59+e8XJgkN7XSYg&hc]Y_2/="CY91<<]Na0Y!3n,,YQ(.aq2fXD'XTF`^EH2D;gLOB0g=;bb%JN-\uW:$I>:oaH#X#p8=Q?lVVg=;bnCQ`j`Vd8,X<93H3:;pXIg$;BPB=WZfT98`;kIA,J>'3n7>JcZ)cEGCa`7i7=87Tq`S(s?'%MAN8%FFDF4E!gDTIJ_8+6BBCcY[eG#;"5TAD3076MTEb'gD8bja7Qn>a8#Xm&'^#\aq)U\Fg#uWd.g/hTeYcW%_M[^cM7RK%&H'l%]nBB6o8A4k6uDkiN,jX;]6@nPm:c,)n'3?7NbnU\N1KG8Y^C)oo]EI)Zb.IF]0"A;7QJ*T:6j+&n(p-+2UU6lGO"(4mo2=Gg$YD0%+4`NOeejkUr4mONcD`?BrcM_]H[!>V&cR:L7J/c7n*n&BEg`dt]Pl`Mg"A22AT,pratlq+TH0CF^%0;#a5:LVHb1FQjnd1o6p!o[%RV8_&KY6!72ud'-;fZZ[ob$N1Yq'BMgY*sFj\@q!cF^d;hkb_LnLc]RV.R?hCr<^X;N\=Zbt9$.m8>`-92mB-/s2TfN0%=[[S+kg%WS&m]gRPNupNrAoE$q0h;R'1GT9\L/AGm13.7o!187LqDcMp(b"FAN.@c%X;[;u^A`257WkpUguRA*0]cDs.YU;jP8jCCGFL8Y&p%FLHN\dQ_C8(>b+ZHV9IWXUjSH6"cD/`MW$f[;nDF9W2UGq067m[/!@H50e?TSTLc$B9N0M#:Hf(VV8^-ke3.goG'ZudDhKI>b<d'%M!$qQ-hb!DXeQUtFsH.>9tI7/mbmW6?aAiZc&D*pOZtF!2GdY0hni9Wf!jgUa:^J&?T\>iHbFFrE62EXA)j1G[-Q%5c_'k8)j<0"%*N=BX7::k/G<?p-/Qk$K_Vrk]DdY)`d9'U>a;<8hVFP&ZOE\lqg+Qh_S&2h9K8ra7!5;U@Fk//!j6=0RlT\g][n%`U2Bh1EMb>E0%86;c=HCno)o.fD?jm%m%eC'.YaBF<mfnHLLKMDIoK%@&MCRgPFU:c9<R^/'_l`Jhs/1K2b]lRg\almuY^7$lC3F;<WV-Ut4BdJ-K%n$u<[_LqTNns/N\me<4@Q&E(V`ja.drr#REAUGSQ8`+*,]8UZpnWbn/g1>Xmj"&aG^k\BKm9UCpn)m.^bnHT8eAG7s9j2qBkW?HH%U0QC-mY)H'Ig#`1J)SAdp0bf?=!DAp/Agi"MZ5CSgV1Cs1Dl,&"dJ,X@cdIuo-K-,is+Yo&QIiiherAfX_0%ooJ)iE:BoY(=*LYI%)NDA,rRor[AZKN\icYLQEbrdCq;@tX1tL?ejBHZq0%HP"5'-MeJ_X5<je>mAP.#d2V+%"8H([Ajq-U>I[/0(J`=I'9\TB0B@u4$S%6X?uF0G`Gl1&r<&H*q4oScH.EcdLAB^])3"o-5'd>kM'KrVJd6g<-afnWRU0V1VZa:I.0!T:C%"PG?Up`b@lPF>6ER;4tK0D<6'\%2hQUG["7rNq\qq;L:Y.GbP!-84;k\U&?/KI1fQ3M#J#Tt1i*oo*U+)*h1^4E-/:#9AF-&(?*q(dZrbh>9)eT153DbJm=lC5pk7Wl%-GKFj4;oQ9mpN]MlQR(984^6P%4K-.]U.)t&'^#\b+7F$h5dYB+lQod$Je:'G(,R<m3OOV`Am@"_O$.cb?BWuQ2rXI'gAG%cW=m'%]M7/,919,\SKhZ>T12ri&IX8nabi]Z4X&N>68mBoP3n(7o:7u#q4[T/nj];@mQX@T;3u6m,r=%4f3(!uhVE=?9XM6NS\#DH>Wf.C%e4Q%@Xn#b.iIg$Q')SiTT?M/WS%CTkrR76^kr02;/*BQJhr"<e541AVQL*i&;gT\8,q=NhJ[8BQ#s@LiTJmt&ID9/6b-N%R[d<_h%Om2^#Ki/c]NHM.pmV9!ZTFfc.MH:hs<V2c3P_ruuE%?k:;8&p(Zru"-H!s;?a=?C5gV)V,6W^!0jXsqG;O'jIf:jm7r,RbpEog5d%GWWoo\W"AUYK-F*c5]'g-9g3,ZiJFpp1hstSi;tjBOBoSZ(+tGeuAI8'kl?J<3?JR0,Ygqej-m7:tmSTB*_igfN+RZT-\_?kmjV(%s1p3L47hFqdkY\/(0.eGpS;>C[A_0DYl%q!nr6^&<u!nd_0.J:""CjsPHn(Y=Y6^9eT0&[.6221jK+klk'k,.m%4eVIff)rktfI0%o9YD'5E_gT<t?a04bO:]4r=IWm^^>X54.t0`K8O%]6EQkh"@&KZP8X'D?#I=382NNW?&,P#,U<OC<YNfB=@[/Vk@QB<V%7qrMaTY%m6:J_dt9inA39P2TDqkO9&AqKTRIl?H7pZ%Op/CcIf.Z$rLrNs[td-<0i/,_&9@\n1ctn-e;IK'$/A'Xp4r?qb2]aq6dV[)[hgEe%!UsYU)?"usi`,75n#*oNF7nWoT2_=a'Y7$jW_P/8I,RSq+7)uRm1T<\/c>,jr:24criV.DUZsMI3Ro1roX(nGe3`-+ZKg"m8Aqf[%Ob1H=P^t'Z#8PRc7;s+[E?#kl&jU'YIQB$6nSA3cH])8I.$)D7jfGb3$p-GlCsq21[=,sps0JN#dAW\/c7bcLAu:<tG7<5G>^9Y4%X4OLUJ,1nk>N*dW9#,rV&2lM9%.QbPPM%`D:OC-uifL(B;:F2dXd]fBWj`nAd3(O(&Bbg_kPZGnNQ.'b8nEd$rETORU+;"O3IH=N%N&O:'Dfh.A)jC*i]_\Qgm(Q.?eL-Pe1:b-q>*U]u]7WEL-06e+j>.qG<]-h9B=2Jed%0"@6\2.2L-Y,dN4WEPY?X^*2p]+"dnt=.%l[#s.Qi^t>4Pqs.9@*mS;S92CK4P$iW$nqI?[r#Y=P=b$:h4HLa!67Ae`T:VOZbi3L0)?r.Y".lhl=OPpo8U?Ijk;mG(II/"D';n%!@j-!K.!O]>Mfl[Ih1'OB_(IVFXHl#YXa%ee@uh2'#'7s$ZN5%$G2`G<NdFo+$Y,C\6\bOVqScni&;TZ1*$$eYB!9!?3R4YHm2o5%UEfFIHOH`4fRVQXVd$0!"Q>C:&3ns.rieus3r2eQ&=m$OLs!S`kYM)Kgc49P$qIYll)QCJBQU0N;u?:1kZ+qarLUSSGV[Z*jr>D'%5+4W/:.Lu>4gceTR-$YV.DK.9cYuB/>d:hCWEupn@AaCSWi\8I:1aZo2+PR@]Kb/(.!q9'mnjQ*AChT@YMuE6r6M94qfOZAd\D#N%iY!\uT2\o7=1INaL:^TCRlNE<2jp2eA2LHp)S!u4]S6N&>cla&K?B:dJC03SSnjb)DE[=3eh\_)"eR,Ii)$U=H%hW<"UGs"T;to7%YF68`(sIXL8KWCL&1q9PJq%'\LXX_'.U@?X#X1'XYER)PY-+9i-OQi$HdMS%np^q02%_R%?H&>hGVU-0o\Uo.j)0@PA@%/Cc#7$#%O:6L)8Q9W-agTdtP]uBj951E]C;3>8kD7#rS,<XZ]CWl*\!=,5esN?MIMCeRN?*\a`'Ge1#(A4J@V\-c@<[eu8>hP/4Adopf<nuP%@.6,1R@g@A4LB-RC=.(h8+l`"'^-aFJY+frJZb^XJB^S;^8jFlH=jAjIut-DQm9Bm2g=Nc,_:>uY;k*uk1_LqE&/:KQsK7Qp4Z!J%+V&-j\lNkS]Ndh3<+n5Z!p%a7f5[fDmQrW#*W4(4W_lWdkIM$fKd0pZ"jhI;dnp^;b`%G/AD'h2+]&USE!WU]O7@jV"TainYi_n:%%rn@ALqZ0H#C.(Pms:!8P$+t(fOKNm0k"Zj(_dHHN,*/mR&:Pde;Rq0.ZX@o?T"G[a,3X01-`+RrfLJM[.t<5AY#8Dj!'7[(\YYK%Wj^e>e#?cshZ[Jj;2Q'q>NmQ&.<*M"8EV3Ci5ONf)M]QNJA,1H8DH<IkliNHY(^+1Q.\=,`WT&q(nX4O&(:FGe(OZ7h@IKMU;Dis%ZD+>>oeNOt[!EU`$^b++6k:+-E29^.$GBe(bsXEii2e-\[=_FPeN[bf0eb(&*Lhfb&!V_N%7V>5)N;%]%(\b9[a5b$W8X[E+gbBe%:^AisobiJ)_Ug^p6lCAtFj^Ye%l.OXp?f\ihQM$/Qtfc3Bss2u8Gu4B()dTJ)VR0%d/2N_J!b=*@!'#o5+"ri2NJ<Z>>63sF/t:e%+:F/uV;MhH)gdF]3DTJd/jk`*`Pd[Y/4\1D)GP-+1tPO9GR%!F>KNp9J'GThA6RMPPj=aJkj'%#inpcrV73b<OfD#S$\Y'iHCSs:%@!pGg/2[[-S*]PL[sEl&^8tR,nMV-blWB=CYu)ft\K1brUBrp.-X^UE++Z-IALanKD^3$F>/R:SBWY]j6tEFY)(/prOa<TA]q%"F%Y[PBqNfLQI*#q4oA-[]5;-sUTeAuh`W]G<#'rUkWVQuYk^!Xg\MeM0UUXT#B88P=glXEGJs&R[g>Ij$n<=.PE^@lhJO'PZsh`G.c%!k`^sYGcuP3[`Ino,(^XZYg9b^H;Ru%\ZrHn@C^G@mT`8;9)Q63>2?P%f[jlQCNa^MXAhJ&%m"*Od=bN/gbJ7'*%OBDG3qDA%ZG;%Rb+\PVoP_,l"kH]B?=Nhk>d:8s1gNH%?&u70&1oh)0m?[e$9UA1u-kS*8aU##,BXKah%(8(cNEDQaQ2XLFcp$$hU\c!B#8+#ZsUO%8RJ%Z]B,g6VW+54Jh:e)R?_>N-=pn`T)JV[H,/[;J,3$P5=Gj#`2TW%;UUduR9R.$UZkB8o!utM&m7/A>BuB*n(*7a;qeaH-gL)&%HM561Q6i<hD.-DL!@^k[P`1hc7AQH4Ae5Rr,\OG2PQ"5*[BrEepaE'd<%S_Z&dJgDkQCR_n'B+g-fhD(6f&jHS#kn=fu^0SknUm8%/<.QCMa]@sVMCrGE:u++4<$F05sjIPm1:ANJU,dGcY*=CojRf5:+%)XH!O\]8saSj7^r6CnY#dQOZkk`4'%XK/72fDU"4ZR+!_M(%W1@Z?HQ-J\ju.`E;bYBoe=;K;oh!T.<g"FsonT\S4e*eHAF_d\5"jbVWpO,Beii7.qQnsFC94BY6-),0<tDm[Qh0XgUj>!=cc6pL%V=3@^Rbcrgme!IXJ)%-f#qn'/ibFhS<.-<&eZ6D`#D8M*4]r%](5HI$'!KXNU%iVOJo<K"jnc[Ue=^H^aMl\LGFV@bil-:QFn!Kq%n:Th)\^_"!4_mPk[/,es6,90ik-OT*<di\mcB:d!s4$ViVoa$;R&?=]60=b/an0u**DT'(=S&P@(tG0'^s>D[>:Trn)F@ml!p!Z_%7_JKIIX.1MqXY)1_;?#NZq-@aj)((jJ^6q.B@Ttno(p\6"R\u8VC>VcgoohDmLK*BSCgWXUKMKa7<bbSei.$[\D-<eqc&&IXj:W)%_q8M;]hN'ZXV`".nYG=T4n::pi9+XDo%jTh4[s@7hi\d/Pi7e!S\\trBr&=KJsQ>MAhk2[+XPK/nPXYTO*iV_dRV1[<[8MM91L50%m5Hh2e<eL^:jk+eSf4pK\ZlN#;7Lo#=gZ9/TK>i=NQ,]IUD6;e$6H'l=j+[[]Itd+I>SH<BiXpu@Qj]\e.ukomOUZDEZ,ID^#[F8%E]P+ReA;c=9!,W)]7/rRqpTW57;L;1q5l%s@(9=aS0.ULhln#If_F\8CfbCS;SFkANA*1gkkGW]mIVc)I1,ge=OlTCWXVut7=$=)%8=<Y7\1t`nouu&[0YN,<0WE@5C[9M]\=!c(eV]#F/2\%)Q;702W=N>GdY;f]I"*h2kmj:3j8!(tqj?IpV+=Ug?n0Si*Cs5gApCu=%>q'+gDd.+@<7540,H&*p36k^Q-5[r>:)&gZ*;5`%LpD)4#9^&uV1+=Lm9(,UEu&MpV+3&hPZgK0W>,n#(3-n#+9V6+ZJ'V:f^1;R%qU7`[$k<r3ESc5`HjSf0]mFEUs'X_=;%@sQ2(Su=(?@;06,N343WQtrjnj<>jeR3a]M8[3d:">kWqKn]M/*(G`,;C!R5Z,;gn<fZ%m&*B\eK8tsK)pa%5JU5`4'Z'Ni0]/odHb<u`e3:8C/Mbof!;Q$IRO#T$-L?sFZ!(&OEY>8hkO`OTK<7m%S!AP!QKOd/!!gg()BUk%%pS`uqslO*Zc#k346t]VJ$M%/FN`r;c(UbJ<8B`(Z42,AhJh+sP7.GlZ\5U?E8=`42LXo`U;f8YR[kh*E3't'HL^]/G0=q/JS0hE%@+V"%Nb[)dPETa&"GX9brUnmlO&$78]j?+mnCiGI,tDVH6*_-*Mc"DdrbN+5oHr$**Hu7W<\LMnGDF(u&I**+('_%t9QN8#3,h&D%>r*a'%oi51ac#LGhMc6fL&+,R^hDMmY8K$"2oFlnq-Li:1q0LjN/#uI:A/Vf>'a]tY,J_8BI'CkflT*rmrBX#q2rZ'j9B5?I\?b#%C&:tM4q%M-RiQ-Qm.m@<h-Mj.<mN^Dd@58k.gH+DB'O>Zjd6ETkf!NQ2f>"qm&$VP-%ethBQZ._9+Xn4A'lQ7_c^h;5FJYs%#=HZ%j2ouqGblT5ULC-%OG3%MH1@nXd@Iq=Nm>pb<&i`Zpa"*r2]+[sX\]<]'GNdriR%BW!W1`h5GoIH560<'$NcZu?rOYQE/W-R7N4rY%(n8@QQn>>`ERLDZ;@"7$YoZJ=1NX&>[6HbmX]p'[;6jZWoGHrW>t/cd3Q$[!3o;HVo$>\ikg8[j43h'/29ngr!I)lZEM^qK+Es3a%etlnPq2(IR@kt3fE9g:I]c%*>KC68CHGa_Q\:qh4OIL7/YqRk^1"4V#i@9IHA&a.":*PQi1C\tUO)\MgmX-%7PF(V2!+X;Ki`q<:%=P*=L;[DqQjp/PbNuC`s?[7V@SIQu(P8KggkB^0hAT'dSjjT%`aOFIu&RX%PeWC?%:^D6BUf&-?[A(m>R+@3Xd>\^<-L<&-rla7]%:6*AYRQ=;J,mH?mHt4PlbD6&0feE:sI`5is[CXp]cG4o%W[D_cXU2oH"g<*m=9Q,sh4HCj$8!J2l<f&ncM4.W(97[EhT1[W%o&V_%RXqF[1'_QP6Z'!b3T6-0(>B1E4UgT&=l9XF$A5cX<i33S*^1Y>Q7n68o[7@,"uF/!<6To9S@ua5W$ob5djD:3+WA[pO7iG3Wn_PM%(aLTcc#hCu"%nrb>3E`P1p:8M+`Cb7p^dWdpZ2bQ;B%G0n1AG"##_g)T?Ih75S-)H-6r1aMj:>=?hMHITnfg06ZQ0.XiB>S1fBdK%XT!BbndpC&Mp[r&8Jp&C4K@Bs2u&DhC3S=*Zf?al8\6a0[lhbITe\!^HAm.!#,e<(b[jA;\VC[VDZ)gX^4r3FAPXro'"V]L/BpSL%N]FE2HAf\0=H..^C?/=*)S%-RcQ%Mq$nKUd/ado7qSNL!AbSS%fjII)Kq#M\\@Q6=IM:Ecfps"dPhTs&AXKSH=O$1(]RMn5X/4AG%:mIOC$X,JD3kmcs%-B$h!T(K$od_d8-oQj_cLE&kmmE<4'\NO/WH(cGM_qYBFEO"Vce-Xf'slo+A'MC;n6LOr>D]_B2a*c[b.Ki@%'BtuTE3$d+5!,BDS.*%._$Yh<pZO2XB!lf`?cXYHqYAZSLGhg5lNQUaKV,fD3Rq7nqUqZoJXo0/WUsk;G<B3"TOkUiKLB]d+cQ^K%btgST3ht[#.7Uogljs`\)Z;gpa(eL$.&n,\*5lSn^So$u2gk:,kA&SKIEM,0'd8W-_pR`EA9<qJO],M`bUf%9[`etoTLSe5C#sbY%&"f/P,<'Nf=s8*F<5!c@49YhbH56^5<j9HXQI.CObB/9Ni10cf9jT]Y1gs+C`etN(Gj[AXBgf%7^NCJpBWX2Nnac:k<K&u-JM2]g%;2_GUPjg>gT8/fQe5&Q;=&h>Ko(C\9g8+6[qV7ut3Z4K1B*[8%#ob_+OcgD6F#B4c;irGJ't3r*b@o"@gj,?#I9R!u^'[IIAfgY2%q"eWO'<JCE$sB%jMRNJO:sR0k@tBMIX=tu'Wr*fX"`DBprPk56l*=bE)c1F\hKlS-/"+]Z6erfKR[UY4;Im^IL/X>AUA%@m[oX`]%`"m3?Uh>N@f$a,$[."'2o8\RbPHn2+DB")EL;O@;Z!A1lV:ckfdr7NSFjRBm1CmNYH"=c0gNT_7"gT$=$1%MqF25Nt@:=;%SlBjC%U'd81$.J1skK0qhmCl'3mgcCA(lpa`m7n6e0.MSX9Ijq]$DB%H$/`(Q]cG@uA([A&BNmfn;G5J\0Cc_prQISeX0@u%FU6JtB-Wr+%1o^1K1=E97\o4k@(.(7t)q*g3r:CuVHT5i@@V%S0XYp<:c2kQ)=h9!1>+H12iOc7-S*<(0I6-VR\$d)5)nK>r_8+]Sn<27fI,+X0%ZF+halq8\o=sJPn1F:Z7\Ho.uO3%\d5FNc(^r^1I9uaZ(2BR'K-]^MHqk0MQCotfsDpNQpN4VIC30r]1k]&U)rV`DHgFSC;j9$Zj%KB]HA5Fbo$0KU:K`!WZDUO>;Zhe9B`*A%Wm5;PE=16ZK.3L_:Dc-sn@BFF4<Z^KdPWSK,ZKl%%YBMjCi@_+<$ZDRp(0MW]2.PC)@%]7X`QBq%`B+\7'*WsH7RH8dd2OVtTiflDC'2uRLJ3'#isP5of2$-5kKPhbCk>I:E>nuNFVN$bYoh^^sAPNfJSk$J\,Ah/OWpp1Gd%OiM:G=GU.1R^Sfi7jKSul\pG"NC$K=AIm&Sf`o>mJLJ[/18F4QDm(.[O&n7s+1/0<AurGC(qqV;UUe(_p>+CsU&;%fk8,OG@;KXn%8B.s<P:UY"g2,c=gpNl!RQaVj%C1XcLdeB:o$$b2E:o@'NK(&.l^Z%b.VHbug/>P>CNm8IT!oTS)3$=D<3HL3mfGH0Tt`Tpr%(>'%N0%NgTlh?a2q"g^laWOI*]AjK2VTI+Rlte.k,l'YXsI%Z0DVHHlU-]kl4AB+>%-dR)M@!d`CqpHrAkg8D&G$<lW<)K[nW>!Z'1Hs%%AW[B"N"FULe[$o=MH37\2%]d8D),6\N1Z#/W![P!dbluBg6NU2rTJ"RB61QgC&3E2#OGrnnJ-AiN"HB:9\It.BtFJ*-1)iS]+hg%I8P.\[=bsr]oEY"J,*8:V8tOto?[81oARS8BI0%Rj/b3-"b21a^A6aKQ?2B3URO3V3M6-BRjYrLrjH_tHuFI4([h(U4I\33BCYq%%%mGJh\(`rb?JI><]c20fb4@.8r<IPMm,.[1Bk?bUNI.kC^2j2Bcgd9ikC'l4a'%fPNVVt:.lSRKe@MsS4S#"HG@+TRb6M+;f=r,#%Du'a$CV:A<4Se$/hh_2$r[]^Ord+U*c7&V<GC&LRkJ;/dXR&Y.p[4X&DiPohqnMUZl+Q;sf0@hIUS#L9mE)Or40>,:0:m=Sf'f3A%?e*&f?H)s(q]!fYYF`UW#BC]m6r;,mLq`qM/IX\-:*t1^cX;m)&"QqaLr`+ARmrt%&)QcM='(sL<EH=#,b9,LRkt!]k)SR_mbPWu%<=uD-V=gj3CDu"Fd9h+sKKno9i9hD`m%V6iIXC_QpVi'I%t>+-5Q&2q\ENBg4?f_1jd&UWQ2U1>mhIMPop'<VWOk)<?M)VC<IErb%r[M3\ZBm1*rUT*Gr?[@+kL[:P^1\<9.^&etj(n*p0r:LbIM\9_c_$7'#=Z!\S]5mR>I(4*r/9OpqV<HU^A-OKS39&.(Bn!DAaa"%%qPsG[n[$)$mm$<5/S2-[o=\ddW'ruf:YOJbr=L=NfD3)^>k\$RY$QJ6s"\Ps_kLVI+A)l66SEc\jd3MHKAba6S1^7&1+di8q<`S)%CrrFOlcQI'Kj2(Nn)+'5FP3B!.XPOtfC&Q?9^C;3I[be8SieT2o_[eDH[gH`EDX%+NB;dIpX2K=?a?EueMf_mmn*&Dil);''0D6_%(]CH,1Ap.rL%hBVdE8'0q<bZ:&mFD[H`r0bR`cK63qmRlnO)i@pRV/IagLVl>-tT%BCP9ZS)<Eu?gM.C1&.6YiiZm3qq"o?bb@=O%m2UfV/h[!#DUHV`oWneE83ZG/Ha%<GcHG[m00aZI/1Njp?hHIp03bgF4Sn?P==oCcQD=-3?ap(0kN)0^_F9ORI-E:ioXj2*GD[/)%b:e=tGE.]eIo\u'oX"!-,`dHNq>.M97=Y)Qpi>Vn8*Ae0EM=5Nln-Z^bC/Q/n&A]N07)RF4n&=;lat,oNkbOoBMl"U\EjaHpHP-!%@IPpGS0,NAY#W-uUO2CghnT3Y\&(R`Hh-Hq=qpqY,-?@/#^W$fMuFVT^J+t1`JZqZF+!L'Nr7\,Y_lWXpu23k.>'!p7lRS%=nK[S%Vqo,_[W'XXnc!0&rqG/2fJ-M%p0W*AR3.4)HI3E+H;81Ws*W2l8hK=VH10I>/>WTs+(*j,j.\K]7:?p9(8h'%0/iZN-i$3/UT8V3%U9ecUj=%_4C\O1]ZtSKRq_2dkDbd1Ump1KE@+j8.<I20YBSAmEZNX;&i%mr_IcGmdT/2-Za5Sh!)ZP`Mc0s/V\;FVdMohcA1;lVP%gnL!(4W1O&IX<BMkVW)+[e;Q8h#>$RA++'*jH!pg*Bth*A!odN_=O_BO)?VaqVlkrieM)Hc^b;jm*4"[$^Ml.DsQ\O]3u5QhInZN%IjSUlWf5`nBDUoc<OAEaEd7T::IWmW-ltRbrThn4On[DT5F,Y>n,E<_iRm/_\p*i1e"p+VD@F;MQ<ue#EcrhDRcBe5r5iTL-P)Nu%*Bgq/i9TQ)\pF)3?ZGMjk;W5WS=[9`h-T$lo94*RL.0_9b-c-"ROl/Kj5.n[/'G-qg:D^!3EC+tO1jGg0:#rCF*9NlYk74]+2#Vf%l.#rt?+fIXqgI/RJC=19Ju)P`ou+P9Q?-m2FEhhJYjCeY=0=aborFojg\"&aajR6IHJa,40'?@8MYG*_gIn[R&"N@LYF+J,fC%_&%hK\bmoG`4d=o17`Pn0JbEW<(cH<j4`c)95'XQfAkr2$C[cQ@K9]K4X.B]h>te'f..+4G-G46Ff%^^RPpAcLN["_=!M5/V:rKQXHQ%CcuXp[i\WLB!OA$&UM.Ydfs$ja_0IsG7XGU4bl-I'9CuHh#A")r:WJA#%fo^7bi;(%DRQYp89p<f$CM9H=pTSofg.@^O'uAXOChL%ao%4RI`C/<5-+%HbGn6KaeJ?Ib]A4^?<"T4H0M']7/h:LnX*%Ob&iq%MD"@>fqLWV;/l_!ZF+N@\8c%2g:M\(o5mhErL67S*.'F:%2jE/@A/;lX6=m@oZ5El(op.51UAlNt69Y\&s6o3H5YHj_hj,l%%%`@<Mdl=nFOA5P`rG5@[!mG"[VF3B0:+;k@Z#8)eG[Us(fNQ?%ltR1)o'/0I&_EL:pF\?Ap\XktB^>Y\On/+YIW,8YAF6nb>g&\H((Hr4f=JDV$`a*E[0u'@;l`0)Y;;eaj)XhVIlWM'ec5R@c1Kc(%n[740SZJS\U4!!tq"iTP1ZL>M`P)&_(Omncm`"pMBn>7.[W,kC2,/DmHgNupmH11+?9j4[]RYhj!?WHPm[+4?W_[$r)Rn"Uet2^2%e;fo=c0U9)gqm(ZgZ8A(m5MVR"=QK!"Me"GB]i_WG:7@\k1HEdn7n8?VW%dc45U6hHg2OWjH%tFW<fJ)n\Z>E2G2$]00s\%h=SGZ%`j+fB\T4?P3EXJ^k)Ji\0ce#Cj=-KMT^U&S9BiMDV%fqJ96ZKln*%+NqtIXpmjfu"7205#qKrIQ2W)93P#'4O2ItBrakX'<Is.,Q%<S9dqR9=b-\!!glXth&d,jYH5Ir3O-6G>g+o<XbD968s*r#C3uRdZO'bfZBGl\hY'pNG-[pe+=WAY&%nIsj;])/)jl0^pQ[SmpRT%hSpC%1O'3i2qp:US*$8'/EYcHr@:Ocp+iaLosd?:?@91EBsngV`;/<gnEeO`<o<rFW]j-*7&4rM8!WJ\/?4lNg/Yi`$YHaTX8F[*%MP).$"0r$ngeS](N>gMkrl=]4JD<r&-/3N_lup/=nq"Z/lMU+l(h^CG4s/UjbE?@,Z7>,R:ZcOU=j^3+n(&r6=,VCVm;/eHX0iFb%AbWO'jt$2sF8+g<pEk@djb@nKYojfi)6^H_/)!bVR(]3g%5p$p6nc[ectBH<U22sfhOnE<V.c:Q0?!56rKHJ$,6-gOZfee5U9MTg%8Me(N2\rluGCNm4[]/M:'hp3*9-)Ic0k36]U7#A#9ANKWDk$^=O$%]lIIpL7qn;l04'fY'8#+T(Y!?^pc*p>ojccS\T1qX55\YL/%a'2WugM@*<b?l,hXGcm14#l#")-C^[J+jI,d]#d#0/;/-E!*a<.lWnJlVP%/MbeTjA1pt21#!7R7s10\f^]!FmE=,@`goPjJ9QMH%"pgp-/]gZZY\#'U#2+P]a\5#6QJ?Q-5PNj7C6;J9\)$I`^>F.sU^LCm8l__AFZ)[I`=d%+H2Wd%0V=905/['Qf(k]eE>3o-o=6g$%(i3)`#9M7FqVJ]l+`^7)fRpa*iqB4JETR&Rl254L1<!c#G4H]-9QgMU^_._048YBDl=t]kh6N'3>Nbuf*pQ33X;Kfp$&*s.145R/%S[Y)5[>?R`pJ5@V'^.B9RVk,,:56!dQjDBd.h,"uf6cGeIQ)jQ:-lu]aiNZ=A09)-HbuIns)fDsIVXTI1cR@o-90VO_[I5$%1I9l%?1""^(hHU3`tSNYZil]lE3[c=/9_g/pO`J0C@=*bDm9DeB=]6LdM7N61[:EVnFca,++efWVEn1N([9M+o:7!AU0P3ZL/3FrDJB-?%l:RZgZ"cX,G8>*RHdGBja;U2[,@l'8a#DLqomJE(n-?1`R)K;6h8?p!Q>/'qo8p?T&g#P.ZLunX\R]IsP*6-U#2`f&%sQ.LV$TWN%h&k<Enc84n*d)UDGUoaWPm;fu@sJLWL8BOO$l=Sb.XeqZIBRBuC4kDVAtdIBGOb`c]DE9;I/kk:I=3tMd,;).m,X]c=iek/e*oFs%V=4>]X4!:DR[o9dP<12AJE;Q/<I,A7OZnNk=_OF'=9!l`rMiu$;1u0m7QLesehl@UpuU59jn>M[Vt5]&nFPhd(uFK6&*rCbdt20I%=t&4T:428b,62Vr=tha"p:M>R4q2M[cd[ud-=,23VfpDr4,9Ua95>,0*<`DYAc;n8b/1_$6R11h9&?fDl&FismU,SBMa=7H*#7i\%K!^.fq-+)L>KO0ao!cJD,;A"_Hc\%fbeh:a$J`&_,B'IN33aVeg2&_q:?,$jJM`7n-Gq6,-BBq-ki\PHpBM*B70lCF7-"(#,&.oq%QXYqq"4L5I&n0G.jO9NNiG@0*\:MK%hT.Fc"sj=k3NmNkV,0C[SOTMZ?)!m>?ga+kkMPS+]FGQkTSI'q,3I28U_<&pOD)pc*CYUa%%lR[ec#eme_-l:r1s_FKYCB84U=ifk,gf*DI65a<'!9K(6/tWkd9r3\A$7je9/PktqN?p!XN`:)dKZF5kk2,;$X/8p#O<f7lLR!m%db6g3^2\Zt)LutnbMS5Uc!mWHB!u.Dr5lo#AgS&dBO]O&p3LU%+Zm$W-t^NDIYaEf2;6K@,sI?@@X"r?eC5aPL6'eX[;R#gr@iDb%a\s=$PQlcO(3puc:)nBEk[#;A9u+TBiN&i^d&q9j[#=]9[*[>poQrm"#FD$S:MfRg^$4h,'#':De*tUQqL,sd('^75^OL_okU[_H%'SB[1h5/YOMSV99kkAO#Ihn&oMW$Mso_UqLGjDbGS?AbuqcS^fk5FP_VdXZ_I]CGFnLGA9Q#n:556LM]poKF;Va;:kUFu'#XCY$M%.^+#O^?t;^iiB6Xq<_RREjqFf!8_V>[;Nf_-["&.,^cH1,-lRKlbqs<dF/P_cduqaSuW@cFL<PT;?Z.U$tZX=_6hTom5pUlH>B)<%apnYT[_DL40g2^#F03:8[kl4=Ts=cA*M-%[gXZkc(q]=pSurCmFtbe'rSd0$4<t\P`Fp_j6Ok=,jJQ<3+"RlP_!Ls#agXYM1X:L-%Bi5s#U5uk[6mgIokLhHYkiY4SK(f8Gjj(WdXo<_AC$t9PO'?\+GL]3^S(ei\5t@JM-Ej,,Vc\EP?*.RLll*J/$9FEn;lHC*r$YUm%2-(*F=@:\H5pr]:-`NeTYFpf\^'SQ<g+2B]C;C3kkh7QN>,h`rWhF43TYkN\.Fc_P5KC1^'A(V(0lBrVk:MSuCZsJ&kYN???:,MT%,e$a?4^HhaUhr'R^c,<reWO3!9PL/tGB8#gp6BOg;VO&JH0f(oc+<U1^cBcle,+#=54(kp3YCE,X=%hCNMl)D,'&ZY7K"+=e>4#K%ptt,`_ji,pN3@*&p,oEolU,%:YfaN%l`5<6qY?sLdaps\;FBR+&C4A2PQmDs_-0;XRd257[VDca+h)*k!ih0@;F)^\Cg]$>k\fE-%V_N?!S(M)U^O!G=Bepcfh;V,L;&t9[a`buXob^W4>>s0$[ZZ@[]/A?@m/[G8/[noI5pFd"Ql320X(I/;Kt@d0VdQA"&Y$])FBIX7%2jnfm4d+3N>hNZ]*ie?:b)o:iZ1dQ^a/[&9[_5,\TNJYSa80(S_]4HhbMP09M1,-K^nfX<,$$dbC0+m[R*_)_F^RSeY0M0;Itm(#%O&3l@33<,@EoaTB/kp+6Jn\;_qfC[3Dgo=R1oWQh8i3%3DeKW.k:D3<40]$3i;Rl$j"&H1e\ng,6_'\WK2&I7oINBoROV6*)/M:O%GK3hP@%@j=6d%m00/?)*YqQqTI^A^\rREmTl!>sHIR#2\2dNl<kM'oeGufDYfPfGL039*e@=[g5iY-UQ&>-:i.K&@M.sKn:@-i/s%Dht[moj29@YA&N5NoCmC$u:i3pXsc@kZ0/ledd+#L7^+oV&@Jm:uXCgaY;3/P(p!D"s^:3m+Z:9AqlO1G6iKRK%aG#bk.<)/UHKc%o=e3'V9Oo.-l8#.-;+:3rb1_j!N$KD8j`sHqP6l-7F];ldsMRPm!`#r&,b:_O8XET2"sadR9_t.BP]eZ)rbS!WL4CD,VYr_-CRh3%O)-2/NT0qNR8V8Q_b[NQ4R'"IC<oWs?52!LV0_Tj?HrLC,tZSTa?2_Kb_0,6<YM(ni/ut8hiRE!q.m[Y-Lo._HiLqC*Z7&T;G22R%#\@]0G\$ZN"Xj&c5T*bM,L]VS3ikM@O5uE@ki[HBTff5WE=S5s=b[kjakbD>i2Ve_<gFg3A[sg>]Sj(sDSKAcgjp<rCD)+]S5(C5%m)ueLMpl\2fVMkX)NrS(V$q4b"Eo()5QP#oGA2a$Z+e_AJ^o@ilKUi6RdJEt`O`X@q0K/cFeWubV,DQJ'D,^KP:FD^6FUc*eU-$-%M\KP>%m!e`hNXBaSU*9jau"/(g?[]emlr^*4ku\]kbffWY(rL>c=2HQ\@)grl.*\&f6Tanlqe3OTHe,[&_HgNE)ANXHY7?Pol0T<%UJqgam<Z:9>lpm$%i7[93i#r><tABA`L=Y):rtV@AN_#P;p1$)6cD'J9tFo&SB0<s3ora>j8JT<C/Qos!tuq,Y=?QPXq'4bNoP5\%,AA-OoJ%=u$C+kER1(Z-nA?Oj'\>3(`;9(r`EbA2):+5==8F\D(Jfg&7#_Kl]fg_G-XjnhHmH?3PHpl&XL51S+?A#oLAS`tZ=/YL%%eq*i?5uLLe*.'qj,CuA%J@ecS>d2hDQ\+D`J0E%g_.,jRoWIVFam'BU#"()YB6mNj7:`L*u5Q_[5W7IC/FebeF_2!#pNj'9oXkI%W^o:_oVk1iBuc+\K1gu*>R!PfrMEJTqYkRt'r`n41b)Cs?>T1i<#B0b'r`l^[l2SjPB]o1+#6B.e'sMDN0[OjpL?,:S!XY#V/V(K%fX+<10V?*;ULtLAE!,iGlD8I[q^l<:[G1*ofTd,7_T<ie=:FqrPemn!.f9OJE.e+!*UU332T8LM!nffKXmkRZA$0R5Nps;;[a?%'%(3N@DJtYjcO(&>!1(;ahfks1uVQ\,2W5/X7NP=:)K[\MCf8B,b7pbu5nD`SV?/>CtFu]04_0JNU*"RUMiRYN>K>,BQJ6-"4HLbq9%a6S@RS!Unfg"NUkmsNo>H0a_GS[FAE/,?Y]hCeNlg@3@r>A&0JhTK7ifN@S_D/?;W4bQH6?MnuedDCrhb3X,*CU"(DSUm'E2+m>+%ld!Xcf:GV*MMp;n+$FlpS^6;jk1c/T)frc_.dZg,?<a\hQaOho-JL3*gFDP*T)A3DT]r5D><]X)>)A<kCU(%ES-puT^"?'JIG=ER%'@odk/hOIG];<3p8)sLAY+IONf]AGQTB:X[2\is<CTBKXBs4c<p$u\S8,q:+rq<2QUW;crnNGWBrohqnG<:fJSc>[lIqniDZadj^%GL\H"Y8[G[FFL@PF4UX[7p^o58c=+Idti>G.6Y^AkAEIK&Uj#IUg)T'IaenX2W&M0PhT;m?27'-M./kKs8"UDd[oD8WcbL:o0$-P%*Mt+A@P*c^QCKuec\&=NC#1*okh;."4]OOfQeH>?)p&K^DR4DAjH++Ilj5[=?Jht[jBD0O]$o,i9B7#C2sB,-@@)sq?/P.`#!*uW%fKCIe?>://+4m&jG)i%F,&0eqm<Se=];KkCC:`s50V_[t%C-)k?(BBEVX)kVB#8;o5sE+G^J%s.2lN$[grd\"C:Z^Fpq`BlP>p""%BORJQfRI_3C:Z\u%I"EZ7Q'"h-h<)DFG&R0riDVn2;Op/3be%YVj_L"/R?EPSe8!e#5R!/%IDQEVAlnSkinXQ2;KD:7co_+Vj_L"%/R:`Qq$F(cqPWuQEjMW"DDg5mj`G*Cg=::tp2<2Se:c@ooq@,s.6LWg?'B.dh.jOh(n7=iXu96B-9e8@]!3qIE]%-<NRcOYkm#a?%:V3'5ciEbi;m)u:'J6<G^e^YmDNK+!Xk.8ddg_.m9W=Iuq"Z\)C:Z^P#ho'\Wp,7<E_WI#DGVojj*c<=)h>!*!0$=^)l[sYo.=;I%QW2Q)k3,qBF?5*.,NS/t9m>9LIpZL=PV+*$1[Y))R^J&kGe.![*!oCA92R#]e79%h/38qZ<1qT7p"VC'g6B1+Je#95`IY"nV?@aB%P8`]>jgHTI:8DQf0J.Na\TYMLAATc2>=>sL#Nmt&8Bk5NLKnZPm[<[UA[Pfc2t8bLU<ch0Q$f*;mM^#1He>;uWT,j[9pJu>$L'St%8@7P-LPtRIgT-nDhd(,fC%YAH]&mn/7hH:gnMPNl_mEcm2t8bL<;ST7U:Y<ZUYcT[d-"$WI[.?[@eVpALJpiCqY`+Hgget,fVRD/%mRj+2;'*6?DJ8Is0`$GX3\[.04n,!Ll+1C^cO@!2Cej!R>[M0ZdZSc564t/DVpY/R;f]>d[d9>60@oHGTP80$RKrM?C5VcP4?XRg%YUdkNZ:$Pq+1uYQPT=LPr`J?"-p(P?N:-DXAs@^BWI13u'EU3#[^6/"h=!<uVn64>N?U-i?;,tREKn10p48LG_e[qFYYKn[9m8kP%$Ys,Iln>GgnT0"^!F`43>\&dMAnTjeR)u\8&X>!STlT@FYAH;L=8G:q:l3er6/?:42s!jXT7<J*AW#r(4Lule5Lf+nC#*01s7!BU%7,44)?]B/)F]7oA/mb#LSY/j6Z8tJmB*qoGBUhY4X/8`6'+X;H3*NKMWt'gl,=QjD<sGnflOJUWSNQBThf.cD/">t:)hSS),ZfqO%DtRd&gpL-G:;DUEd.i@-WSE^s[%=5N9mMrR'D\-g->15^)t)^sUb;<`j4nV*G2Fh*EB!_'G?qhL6hSphKsgAFK::8"]ll$0[=\oi%F(W!33cm=:G_NQub""7ers7lt*t9cV*j*a'N\cFFm->5aj%Q;@o23r\()o;0F"M41LhUI'RgH_[Dj:+l5t+I&.LH7:C*+C$>8jdZ%*W0+/hRAMV9O3OC(2nZ'>GC*klVb_:062m;1^rL?V6Q!Dg/=gUoiAETF60g+/mR)+LhZDAcar[1Y$JRs;@ui+"qfX]fQ,E#VAS`@%%IXF*q.klHJ7aXbqfE(]1hp8SHHfa7^j[0o7_4_bHULgklXTh@CJD3tdC1RT\F);aVA``q3BSDJ]#PsQjfOMFj!siQVdX\GH6-DQ%C8]RllFF%:Ps%C:&\H$?mlAo/.c0ULI(B&9h,n$2n7M:_nUhW6$_+V,?G*rHlgm_ds0_G4X8B@"hJ[nc(2mL4Uk8nX]>Ad9s,)^'%*oDE!58r(ibq,AlI_Gb\\uOb:fWK)(gMa$G>Ac(148\XF=rPTF=rCXeV5a/A^H>jc?iJDOK_N4NUNS5U[XY?t[3du%hnEk'ki2QY%hUeWOfTsEFI3hr[n5GO-O2e#1kDR;di>t9bX)_HO])D';TT@AL!.sN\c:);h#PHe8M;F"HSi1sQ^V$3]Dgi0[fQp!AVj<D3bid4m%h0F2>m@]O"]l3#GW3il0dH>B@#X3Xlr6_XK=5-SaQi685r;EYq(DgNZ\T2aChYi2le4.m]S?/nf5$tjD\&4"Pf7%"AKk&Q6H!f0g%:*6QGDbkb*DRB1qrB]$iD:0WY/7ULb]#AK1iadhNfoCKe?J%*a6df5&e=Tpp3$k6Yk"0E3.;]u0fQ9<ZRp"+3461">Y+DH6p=-+^%Xm<Te`I?aa-n/hH<HkjrP7pol%EZsB/Br:3VcqG_eFe*j2:UHAI*6!:Pkq\mlMT'Jkp'bRbq-4rWnC01g6A\GCsLMhq=Ndgf#6+i%qcd.]i:U.NSLNTe&pEX=*Ele\n\K\0RTB%"rRJGr*=b/1,IP+L]1.'0DGAQ92Uj#G[>Z'*fPPTKHDJ:++1K8^/B;$QTaGbe-FADO%`AQ5)%C977Hc<B05_K#FERMpY&F71+8G=,]9:5+GfuOEQFU9jAe=-g5ReR^E<l;,EMe6#ao+-&uiI-*5?57nBQU(&R4<%QJBt4%S%n`F/!E,`0NZG-2e-FfAD]om**)QRVK4pPOh[JH4C4)M^lU"X`J-'>4Rd;$M*,F/C[TC5V!.JmAXPQD?,dWik4Kuj.XS`,8`SVa%`%YOTD4Ak!VRfI].Bp$17s_.omjA/H7hbL:m%ETD.,N"*HrB-`H'lLta?op#mqdLI.)@o`VRXT@eDLSUn7XA]R996PW:._r2EJGoK.%;5sW.ec<i&LSIoOG-(d5YP$OJJ.\cf=IAbDf[6]!]@Hr``l>1`%/=Y*)f^kfW)\@RCB2&-4B<2)_j("4!+ig+k0q)FaY2cAIO!Sm%Qh$!@r.gX0om%;OP=t_+h8hLF9DPMuUg69Sr)17sK`PB9e1]qL^E<9d\<O2mIcP3Lb1GnWb"45IP?nE[<8KS`7a\Hgi9"8B-LVE:%?lH_P3o92SWAi>Fp\K`C9qaLFe%L4*jXH19Y@%1/IUi&*)K;le]2r[M,sM1=IY3K\[5ZSPp\G>sjD!E8f:El>4]`<RlSko.CJ#)m%em&)b(.N?.2W!cO^9j?t@dJI?U5ANul8Q]l+9V**CL>G]%+T@coc%"nf[eTc4(:6Paq!bA4iY0am@D">9RO^(rE9`C%6VV,E3EW\%>BlqR<%[k@[@=`0Z_5@Kf5FKRA73*mmc0d'c21'+qR)@cIf=':ldm1SRHZiZ,_b^[MUZY7oc'Q=MHg&?m0q)>p\NFm0Ss`@MgBQ+%>b7,RHi8]M]h[Zq^\1n14=*dJY?uXn[AZWek[)##^GUf_CONA*^=TP/JZ-C[iEj87?9A1iVK<p;Q1e'9ho@\:3k<Q1nP+,/T-%Ve%qi"_'d<Dd$9ARM4CtmuIn+CJJjItVM2"($P3l>>!7hWkChs-l[]1Cp82B6nD?[KFGc6=,*?G@?3F_c!PqtNWRdV-@UD[PjkDtTUt%5/&X<9Z+G#o]KtJFqnAt,'C2<r?B:*hlV?,0f8^>I_Jd]m9\1sn+CHtEuJ_.jEpjZDtTU0CD5Uk2kdFYj1Tm^l<^B-Y@%1/IO!aj%2c^Z29j78JlSj8I]XZKfHtB%!rVBgAnlEN&/n^s9ldq`b<BJ1>^=TPOdAc8,)Z*jU!W+'YokX"(fDT$jnbnb.`^[.WC9T39\CWA>%Y!KPnNL`47]@X6O,/ap5PMPQVXr*>p3r-I<m00bB,#<Ti?bFJVXaY]p=Q`F[n\'Cr8eC5@6TS@m][s?N%Q!XgIW?h5"#qm_[13$o%pg1`/_kFJqF(tl`FRH=A3$-qbl"Ek!%F4aIpQbSE*>N@&V1gh>G2!]!CLrD92)uQ_d@4?!J'0ltnkJYPQD,%upF@@5=aP1ZH[J#;%/CE9pW-uk7^WkGAjh]`p]>sNbg>;RU*eJ^<\bSb)me;m@T6"d<ms]%pp?f]iXWJXbB<SHhXe%'sY+MjEpV&i*Hhm<[H9V*&i/=o@%qKuqlPh5C&p#sN^F*%2+s4tmc@=%dKI'gT=He:EL1V5aFoD8(IYASi8nL/nYmH*kJF8C4Iq!\#;GF/!b^R&7jJ,&urNuNG\Nc-TL%4T/6L/tCbnR6R9ioD&%=]NX%2(]Jl-s8MS]DjTAG?gj&Z1%/UhkH.f=?bDurXaIc;Q[M#F]lHIlhFY0-+0I!GIiggEG4ND>T:LD5%QHme!2ttWOJ'8GLc/H:4^=)T6b0@?E2a+QQ?#jLps/qo`^]+J(buL+0[^oh#7.mD.hsPrnmN+Og%0j5T!YXpbr:;pS\8q>hmXmgH%6=ea1?Mk!(U?:VWf8:<&9*^Bq:G9J3qsr>9ca1%H^G>c\cfH6Uk.X),klY!,3qqh&DuCODeK4\-R`)bKgFlnd,kK&`d,'9K.ot>Q%f@\+rmHK?RRLB*qYr!u^#3"NA^9I-?Amt;up@021TXjT$kP8H`GiQuD4)5Wk*o'm[s)NP"]);NkesebdUIEq`><>&Un%HJ_0:t>5%j1IQu_p\4G9BjUn!_O@)5Mirb4*QF[\pNuU./E;K2fCm^Cq\];#QM(;IeofE7CuXCXM8??cd6])eh372)r]6L8`DVV>BKm;QdBqm%0iIqV5Dq$ookO`VrSR>3c)W7$/hbpWm+n'5D"QM@gM>PJfqZt*HS8OT]XmTFHg0DcqruYMDkGfQ+"k`$<#5f=%kI2]].6B-$iWr&%nkU?cA,h<Aq1miH?i;'EnV<\.;lD<nHptnY/KNig\GM>jb!1=)?edW%H[*;6H>idX!_:+TH>dq1_&lQ*M10kKn(iF&5G-'&&&57I%AtNA*7ul_iCHa@_73RcEH?urE1PLV8TPj!>4h?%`d.WER4aQf/LP;JR)j^T[.o9H/a3o@D]W+9pIjra-/`49`S\B+b!oD8TJ+UH]%\bl$_n(l6DpZGicP4[k')mS?_aQd$VQLA\JW"!KUD";#,mG@KQY+(?Io>`p7hNhO;^A'Macdpi(:D;NMQYE,Rm),HVG;fF\=A+jc%rK#)5g.O#ZY^*i?Ea/9M'iCB9521UonBID3J2`<bVEVdID/W;ojY:]CAG??.;Z:$lL=j(dP1uUIH,NKK8-3_]gq.J<s"?Z^O<FEr%TWtsurb;!$r799idjeMtri^<WH-7"@-Hl!lP5TX1Y][?W[Oe#_SsN3AcV#6^V$4F0L`StN\[uE:oYO,K?cu4XJD'th^KH/<V>ahi%I.#B`%59qQ2V&Yurqq(l@rnJOhVR+8oX^9u![$\H;A$An9:j$+Ve+mKCes#J^ZLi#4Ou:rF/s)7YMhn+S=ACeDt)G-lhbPo_h5M#%Vn\k>+7.=clH@u57sk!mY+/f^'.5a*Q'GipIf]Et\K-"gPD.PNj!uq0:Q%/=>[\LaR2lpR<e6bS*(&J1ZZWMNC&&eC+U5s#[tHjO%qB,LLmTlM^J`eN;>^a)51=?QI<UN&+JeI^W4hkRO*6>L-F0Mc\mO+[:4_&,Yo2m8R\+C<oU%a^'92!lu.DUDCFUa\BP\to^G(WrZ%et&iIZ\s3[C4G)I9?c?^i7Wn!=El0^%rV;;lm#;(4A14j4q`Lsf'V8"(pft+hch3'=)d%fR-f:fJO"NT%$L&V^'6._f`%dnI;e0;%pUeH]WF*s<&C8>JlLq9h5D(@3A.Q\eF0Ti3DXH%'r3J&P_![H`NO3q_p!'mo^!:RM3PK%TUfRSjd&,`(nn$eCVLAAY7Hu`i`/WM)%`";\#?gYf7I(T(:dhP]1T3m+4q$K1l"?dXequ!aRQ@DH-r9J4n5j6dpBAIeFL3OKAT"kC+6j)6AlQ.7+/IT?#[6T7*[j(8*isb3U%mCli=[fZTpH.\R@=ZX=oiY9ad7PZDqlFlj]r@=gM1CJ.np1L:%h9;BMA[Sb[q<.4KL7ibUQUJ0iJd(E#O.\Y]nR^+;k:bcanN$B^%5,sn'+_9^2O&qC=d/i#,qa+A$LUJ5L:U6&Sb$AaPZ(=/tI(-J`1aG6[gQctql>TQ)&Q\rk@,BSgkX+`r>GjkG<f9s.c1d'!(-(Z7%+hXiR+_]PR6TKt"9+E=YhS$-*dB)f8R>%jWd,<qO_a\#ir9bM$gBQ1'?iT[a]U(uj5C)[PfP;IYq@U:>4q&?[qN*P[K)Dp<c/I+h%H@$tVipaS_.e0D)`Z`&Rm"W/?*GGKOmrgJY]&hC:%0TlWn^pWds)!!5mbn5nrL+,Sd96b5WGSi1SmCoZ3YA!qpLsRt5.CQ`kR)N`%s1OrPLO6<+iTWr+o>T&>kOD"5o>b)mS(Bl?(u,'*rVc4:qY;]]m-47/d?HloNd`%@7R)s[U<MS#qqo\oTAQEKpOC1mT1/A.s)Ud2%I!b[0ba!s=d8UU:UT#5^McOuq4dsINcY+MXVgk64$Ymu+m1m86??gh\4@kJcmZ]-d_Kdc`M1bVfpS]lN[:A*UQF4I$$!!*fVhi)P%LS%n2^:+rdEVMG^i`=%0'!#-5EF%[u)a2]kHN(<0D_Jb)[pT/AG=ms'o$dL:&RM@mU!=AO<)]=(+0rl?]=6Q;[X7!E_CE+(S&heS%$1(o$`Y2L(H0<IF^n(DocLu#J"(%C1@Cp<V\*c@M5WN+Io@:qdaK_:;)2rE4^OqH%LNpD8!Y8RJ'E77p<N!q9\\afPe(l'/Jq_kN%kOSfdW0A%)VgC8![Ej<qS=[AUhcj^U_>\l<9Db!6oX_BOT(MM&C;!U.p#D+VIrB_X\"Bc%-ngob4i>b(Wb4.f4gV1)f<rL[?^kTY%_-$nafN1W]2Lfl@g;_rMIpN)enZ@'2qsMY>5MlJ"=5!G^.j'V2Q]Lk>EQ7*5'b"$Oc\K,6KcfHmRNF\nr#@mJ(CUH+Qg%i^QX6lT%^Ol!<XhRm1^tlP>M<`*/r"j7V*T3tac=%71pK'L>^lHt@m1,G,h8ZH8qsG*qlX52%-I:lP60:c'd!jp'D>/ghg0:,fYN=-2jP*KA%p=]EgJ%N;&G&Y@QQ.NbL>^Wr-@nZhP4CI4lWu3;1FR]js)j2[(hQ=U&JaVr4TmppmJ$=P)JmJRghA9N66F6@`Q*&bfo!^"@IVf"s%E;oFRNSAgVm_ca!1@OK$-duu13>r"cn%Z4-XGuSK^]2UQl]YiYM='L%`EIckNU?K+s4s+mb0nM"VCZ?2T)\V+I.lXfT<J:mS@pt)%I:hm7rA8rqo?4?)ZfC)4a8bmCo@MB^PN/8OZe&g@m_7>`J%mh0a%*nY*7&(Rg3bM8Q!WR_Z]L87M9'9S2q7!Ie^!o9Q_3.tf_dha%^EmCu)I(DMhG%rQ4J,aV8&UCtL#_gagsp?C^4;j1UpEmB@\?dBC&#j4c/Z/'5?fY!G2Le3BP:G8+,='uRr>d\4Y&keR;:05n_:\K%c]>CK`PXdHYM,U=X3SQaO)u*9&`/RLpI]D-fX8qAQ>:PCQg`]QccXD:9987:Nd?`k]2uZFL06'3+hss8#IZjBDsu.^a9aX:!D'DC%rH\kMfmJ[)^XU018^(>DEt*U#ZRt^^r]N^S@%$h,nJ!SV\@9=>Y:Zk3QeA!m*k87rLqd;&]3l/=jeQiJ96kW[=;GPa=M_,//)h(+%0&>5`[JLS3Ij%Z@GD/8[q<MDV\j+\h$7*,m-?8a;0CN_u"6?6Tp<NUX\E0nrk'rFIF4i>"^OM?Mn0ddk4hC*8Ys2Y\TS76X,e.=F%mI<58)[,4o1f&<gH^Hq#>Pn'7)JK??H`-K/kGshH!'5b(^/Jg.?@2tcpZ79O9@FK^^Dh9\cgE;7[:^7OD@\m!]_q(W74LC:T,Y1Z%TJdjf3HlOl[5>i7QQMI<WcDbLcJnB;c21jcc8cnR0D0d+nrR&&:@@ftT.VpFm2p#VoE.ZkLJR,iB-lp6eJaYMiEhZgmbV<Zs*C%&%JTUZA]2d\5ls:\R5hM;#rC,`X]X?XhYEBq,\IeJtSl6!2^J!@s5,R>X(M`:101u0$j.,sVf7Jn)k=;EXc5D%nGLEmhLQ*&`r^3[\%6$KrnlNr##@UcnCR%uh.SL+0:K@Kkc9@-XupqXK9=80tZ>eJq-Z@(tanTslVU[?Bg(+Pq#'^?eFKoA%9]^A`+#^X,HT(MU0/f(Yh%odeKqDq7]khc[S$ZFNk9XTB_i1CJEXc@=`[IsU`po?Y8%-h^=pDf8_KcbF:DG]<K8Xjd*0h0QD4<^*V'VB)s5-]r[nklGOO/++!"%(G1:6d*_E'8Q\O?W3JRF1Q9[h]ER%s7M33JR`40lV,Jc@m]9l=;\4t-XZH$A!e?Yi>217(X-K">#,W(6rUJ21>+>Wn!&;0p!TC\V%=sOX4s6Qni;@j?RKWAHuXuU>d>#JDFI/gJNj3l9@FERT^2]mTTQFb*(V&l[?ep;pRH\>N(f_XpZ0/T4j1(jV=e\iBPj+IMXq/.$2%X.@kEPXB.u];G"6Xp[$U<-Y"<gjHC"`VGaZrp'5,5C=,lb1XeX6f$pk^3lCLH/s_T]MK^0cf*@%G+\?\gs,e]<k#HmIk$4-^UEGq%W;H&#&22*ZaVe1r,D]KcEnd3%ZfRDD!`\M4].Z5f^F#V>/2QqVoErLM?WmJg1KY`+,0Y[_6!i)WWUQqEH#r)_DYD5]r<"O@:OfW"%2em2gW?G?0UfWT4XWOCOouF,R:%$RY[kH5PqCrmmfE_4f;Tgl\j@q_Co"<(=/5$t]Tl9tDCMg#R2L'ji54!(JK,gG*pUe!tl-A8h%o>Zj^7\i3&LtXb+Gn\_8O1u9b'O#BpSD14UFe(1?d(l#i^fG_B.hfG](ZiXp$ilu^efh9le-*qp+hQkj((Kf-7f<ta/S)B@K\6n"%0U>Lhos]ZgQ>hin1[J=V#T#lrG`k_fD8&"%TDBEi[nI#`:$LcNhidpK?GLE."g[9M@,FM%'^MZtmDEhM0s.(N[a317,h>amgF%A[%*:'N'm=XiQZ)sY$[L[asI-[]2m5$P\p!_Ib+WY0"l_gfN!uN!7qWVblG\>l8ek]B%B4bQbl_gfN,H[chXWL0+X[Qn/,<,?gQCr_p%')/OgHfN(`Id#](":8ZElD9R[ke3@A']ld_BSFD;pcsNmgAf]uPeb7"F!'&;K^d2c'`.%>?MeC(U.<=5s'37GJuZ6o'jD1QFX9no%?U'!A6SJAr'cTD=G"Fn,do]=`@Ci1u=l][mWoeL\0;8ll`;;!ue,hOA?4ajcG4Wk@n@8()WMD'ZbSqh*k>r*0K5<i\1$7pa'5-K"%6IJFbKIC5\cF`]JGAH?P?-3%%rNu7hMf`m_/1aoEMrT^[^Yo4bC&Rhm5<j?&rqH2(-Cq"5-2)iXhkHQ6ZZ7r[`r7Xlh*%92_ImN1%jk8I^1CKi+m[d^#rc<2Oc``rGBE(&?%7#9$G$j(_S@pgRc[N1G?CtN/ZUm@6VsU+B_5I.OcLB:V14.XPhqnCWr0b+da8YC]SOLsW%171H_/SCEAhL5=malBMVXA!4bQ7_n3c6PMBqqhA,*tR^&rjAF!RFSX)B&A#-B"u-CcY#"soQ3ruffUj4Gu5?`-Sq0nH=`fYKGg$j%ZN/Ba6;M/m?6LREFG5fEA]="uIBW!;-Hdtln!RG*!^I\.!7T+ID#s>TGldur.gf;8>BqmF1AG&$;lYMKZ<if024GtnQXg7.PkK3:%e?#Y9B2a1.m:Bjs,:(BrZ-O]/ZEX47.Q`X,U^5@JSd,P6B2M^.;EUd*qmEF8,?[R"W*F_p6<'@P#cU](ce-iLA_3P"Fr\;[Kp].G%8D5RD>+7!fb%Q^B7,'r+fj,!.H^2UiR@_MUMb40*9&ZJVVd\B]aXS8[n!.'$E\/h>W^)s"-F6KNUm=T',NYrJ&X$.Z_U"K]5uUU'%`YD4KZkL;:.+iX3HYGq(/-,%:8qbjQKY]H+\3M^+PZ_b"(nJ1rbe@(h#Um"l-=E0Xd2O4t>1uo?`Bj,qQBk,OA8u8h/cM3p]M`I6%&s6F22^,H`c]\cVD`8giHR_J.R9lmlgoAT$XYNRk7Np'`b\egAVVR;2gBCf;V:8,!GaA&^.Hm0dfepQI$(rh:(a<]2@AYU7c-fLQ%>s1I>NrgInY&f7q3i-Jh1da+P03VO3&QW(5L5BMf6Ef?LZ:t!"4*H.iCNeH,;Tbnp?<S4,OMc\JRO(F?BEh"d!6K<C`R<a*@I+_#%*``O7fmi9d&JhBOj,,G:*%37M!f=f8&8hVJ-KfqB.+M=O%i#riK;,"F.:<:?"fX,B<fG$-[;mV#,OH].WE^%QkQDY0ZjH:,aLiq%%'^7PJR.(b>6AY&0T(55U+":VKJQYlQL=/5UQGds3@Qq8KP9^LM?^/bc`f:M,9Zg[R!0n=_QM(K4PZ8Se/--QA(fnF-"4@]&R6lEQ%R"KZt.rk0d?nSe(A5J(+0C0<TdSpQa@&bKu!jr*EUh)t#0+G4KAXKdG9h`9$c\b^HQ8Ad#!Q9F\P)9upV2iY6GZGVpTK:_k.a&!(%=q'Sjc6MoQ8-i!Og#`MhL`W=p'm=LpoGV\O,-"EQmU&9X-cssMSei+bWlXe%"g6#=,+NU+.=6/IJq,/#$!;f-/BMno8YS*19E@cd%88=:p+droY=:VToV(Z]K[u7Jl6>e%m"G!bAK7L>Q%72U(!"2'I"d+Dm,!:SpS@'8r(p+Gm#Da<AKu,k'""#HhI]Yq'YgcZeU1&Ct%j6%uae"i]_Y"FO-OpX\l&<!]]O$+$&798>FH(gKkSYbaBk5i7Q!sM2S,Wo1&>*-6eWeBM0bB%,+QBsA3GY53Xk9tqM>jMKodRjj7%V[>u+ZRUW/=qZot<oOM`e_7a6Zfkm7Al9\,V?E!TOAaOoS2=b7dr=<B=hqg*ID<o3JN4+[8j6U4`,OE7(Le,1MWiYEc5=KVrCVc3%B6cI084k4NaP4C-'i@S(j:u/R/IXaQ%q%BS'_=(.<@@qnLfN4=murO#$iih4,r7l0Bf(8ka\%8K,kXco:4W#=R'`b)T!<H!W>4G=%VA6+<<bc2"3\*Dpa=H1D$a@rXN''ap)M^(:R3I6*M*-`3JmF<n,\@'-AWeOo)Uh)!ne=W2!9@-PgfYB%G94Un/%t(R-:*pHC1!s6%I5)HB()U5SE8\QJG"j8(hLV=Ob_gOD">lVM(8B5N;NKYe,-TC]s.1H'9/RG:`KR;b]Se&d"0B4RM+*;+d+ibDKRo*$<tTr+Junr'%#oXqsd6dh:LrpAOf![<K.ekaipWSn(@"2_,%V7,a2*>kR,g::A?GPnYUb#Gr,krClJeEbD6gX_k9+dsG0[/N6=+L9J]P/P#b\;0_%_CBR[+-:]p?=aWg*6ThC=^D:=$=d4*;fLf$=:(l?5chUM,fGS^<"UD%8gG)I<+Sn)fa1!"$pl^:F3'WS\cN"po99`E!4*:LKQ%dM%d^RbMPk^hKpZXi0<<BO/A[>h-!!,\&lN76^d"^.GGXt*U.Q-7IY\!!*V&A6Q0Ufd8J]Zm@mN=bFDLWXBG:)[NJ(*jC5X:kR&C;FR%>YflQ3G)pa`ZgdMhlD@cZkf-#87G2c&M&8<)Crf=NE@#IC]MA:eS<@B1acc:FjqtgM")H-_Pht*8s*?p_Wo5NVK+cA/4oBqZ7mfJ%1^U8m%c+dnEuZ;`!SXsnPNVR3@S#5]:P!'XdLJapMS;S!Y_@U4!@u3^!(:Ln$g2&&C(S1(.A5JVD[hjlLEds>!<O[S$Ac!rObWs`%%@t&g9k0Fk0R!BH#)G:_UBt%i2)+8<CFs,(*eK-5.TL^(+D<sTHO@,Y"JI.E1XPdGJ8u#PW7lMA3C'[O=>8\oQkf(8Ap>^.3IcZ'%g`NJ4#/X\&Q4C2MNPr2X-+Pqn":%K:-\%g`M%E\<7Aj_!]G(^*7BfboV+P1*_4Eko,cC&/Q!2=JP!\lLPEoNm=h%@=E!n'$XeQb9%=ICR`9nPG4"@Qis$9BcE[cMk"ZbhgQ@0KFU`.B:2"cNYXb8%"G'i7"XOs2&$eXjUFUIAIMJX.$"Ef<nNe6@:j952Be*b$tfN""-u%XgmmK.W(G>8lF_:)^;^C19mHL6A.Lf&8U5t#btd;^kj=3X!/pd&LA$&'.4FT*!mC4^)2qd<brG&I8HTU</B2D&n;6GWL$!g;PmVo%Hso_s;j^)iQ1eH[M0u>1,2/hj'U<&RJT2*ma=;$$ScJpnkYGd8KF<qk#Jr(/QpUUeO,K6Ea:^C(dHXD^T/.UZUa35WU^S[Y?rCPS%UdYSN+\N1U-j:I'\r&mQ@F:N8nRVC!Y\;93.>eIj7&rEW0kZ2dR:`]TKYJ6g''8UAp/>OqRH:(EAS!-C$B*E0,)i:69G=Wg,"\[V%Z#jLW`4H>&Acs@b+qFccb&/F7`NXs<a=t,*)#Y/=eObZJ9q`e/"Ok\^'L`X$U*p6O@iejl"\<1#K<tU]Vl<W"h)7f$<*4Up.O1Pe%f286[5i<>3[BJ85-EN9VS0WdM*Sq14[iN+RR%p5>%=D0]!D2FJkIlCA%q2PX%,b=*d?Tu*Gud?R*FOo&.rYWfWSltIQmU8o7pB)p%OeWmd='"Gu=XofHZ;XQj<3ik47OlAKVr7N<.1Qralq@bW(6YEn<Y\&B#:go\PGu@F!%CXA,tA'=!3=ps1dI4WcY2BQ(`JMa(^_Vo%#D)'LatdqU>Xs`eQWp?06nDW?<\5i&LnuWF>Zi6&gb-_65#j5rKp@\l:lAmW:/:Mudf<guLFc`J!QH>5Z#j-##9o.0\chE-e:FGJ%!%jYTdK't_g;=%d#FH`%5Ib??56\mO-(I7JG,N1KZW-c+,_XeThCI53k*QR]Q\b7ji`G<.:aQ#l8<1,hSs?-O5q6gk)^-+LLo/Zc%AmsO4N&)(HRWNd)n?XDMSL7FUc]ojK,k//'4HI\d$2iT!Z[n_`QrnV_c,frpCD$X_qYJhk[-E*9>B(mi8Hg1]`PYoD$G<<@aVR89%1+!j%!'qQ"(m=s+a)NDb8Hl7P<#aM2"G#TG*CHhXXe[NTYS-odcB^j(MK:[%4Wmji!Q9_'(rdGViFB]c$r_2$Un>'$,K%r]*>qZb%m)X]*B1I8Q3b'id4ID7>@tGR9[P,;847'&i!:WHg!-oM=JCoMX5Z*t$R#pfcCL%b)KERZB?VM+'$G:(A.>586V)M&#_&-V05?1&*%;@>LWJ_V^_Bg`"RB;pnLUrlT^A9>%!!MTsc9,gbk`AStO7(SnPo+mMR/5i!G;E6_!SLB6#Pe]4a>/PZ;j+Wl0gsF7'Bd)URKK)pX%$qllHj<F5+_jW-C`!;:!M0guG+l8%Img2:`&n?uXXH6JYK#g`ajO%.]BIn`I.3MsD#FIFo"c/./5IRmO_?>H&#r$-b8%q0S][`L)%R"qT&,SNKZhlH;rC'*&2M`erC!5WA[1;YplN<hNTqc=':NFYhV(#h&H.7?P0i;NgD?H0Pr^l"@hM'aK5.PrWFr<*h"O@RZeOSBN9%1RnaXO:2HQR?0[V(&8-K$&Om[d#]Rf&ce=WFb0oK`1\t1!G&H:";;CnNR"?-&#,pNF0Tr-eiC$^YT^p3iEm9!YTO%`)j#J<O>rdd%&5\&eq#^87Js`XIHNVKtN$W]1V8A)l$W0/)_uN@t=LGB?-s4Cf[4)AT@pmAuHtd!M!<T98RIY\r6D;R2'RB`j=TQJ1kH%+6ibOgr%\-,JtA)Nuc-t(o1A0MCbUO3hXa6,3Flta`f6#$-/KHsPe*]Qh:&.kn)5_KF"o.X[Z=b5(Tb_hX4qh\lrr*HBQnqN<"lu7fDdhF2>%0LlnF`DV7bcpJKo,nN\9Z+qZ[.U3sK;^u0qM^=XuBF[CCEU6<k:M%iM%P\[p-O#Xl4Eg$=V*k%,c3<'WZ]E#u\[G!T5a\iM8eHUJ%+9ko0@V&8X4&66h3]X`Id(0r'%f4P!bVtO__tP]-!ORM?Bb1G):PJ<\N3S"F!1'N'hs^d8[MEQq+@eua<i(o,KV1Q8(2*nD-3/4$%BhE;(&4[sR(kY;E;h*_8M(XXm&?3#AQ#l,`-F/R$/e`?/E$S[SC_`!89/9mi#!ei#&$cG<4V_u&XJqLXcE-X+;;c:caTB>@$m;u'%!FS^r/D-'b!S^>9OT;[WQ#KSN#T-Q6\>0jmGuPjN(C$,P+r=#mbC!G=;KJ)-P//R\cAi%ZB9a:LNWa!+OVqRt)A(AC*nc\6&6:2)%S/l;eBdOfen?i=Flgf.Q3S@Jc$D=Lr$9lb.-.q>5e`N!CTb1^qHD.H%UC1LI.L]RJ72R!'r"+jN'7c0*"L<Z+JO+If&Aa;.5ZY+e%fkD66Ke=8'CdomJm4,da$,7(shMN#/TNl_DYTa70%3IgC1Es^>Je8;&2+g@f76#S;JO@j<,_WN4Gd$-)#C!`]o!1)SOape6.r\Yn%Dh8[7&?a%2D0X,/Xs+\"5_`G/>7e4oW`7256>4s/4`<ajA["_p<[@5MjZ0R\l.OABdK@,kfuL5SONpc@C^`44J2nk&6HZ[^_A:?O%#V?@=ST&K>7qIS!Ls2ukag4s\R0QZSX@W!7Q[*+1>$/bK7V>,@_`h]F8N*>tP[ol%8EgRXB11I/.^Bq_&IB#D;di+@LbL%Ubh8,-%,]?2acNuDUccMZ=IbrqAFGgfEUrS$?,<_p:)<nEjX[/"h@7U1-&U'u-_=2%d!gI@h#"YsD""]h&!Tn2i$`RB5J8@e=#9m,U9>\>`%,(]e%_Q-Z_AN^/kZkG5HlN9cX;ij/>NKEge-)RIh,?keNb?Cg\QiqVP;&Wk:JpSMlK.nXi;pLb`Odtf2d_5_4W7c2FX$d>PC_p$8%de*hQ7a@@K*l9qg6A`XoYr$*hF4#HS$5=4;P#arYk=o.!kD`bJ_5@EmHNsl.UjGn[HNW5h[#D(XitBJN$0tKm]K$iP6/m5n0IHtD%R?N)=Df#1t#^[0cZ_iU(!<>c_1agsj3&f3B=(;e/;?fM@f3+IhW"#-[\a]I52WS$LgC\VY=RkgLNGMC"E*A]o&:DSt0fB.g>kHE<%!+6e%+D\8R>c?%QP6H3NNJX`.GUd??:<G+UFt/abCXPOO;%D/f%aLAF#A_`h'PZ^TRLF5a>E]WKce(&sCD'$s<gD;bMiop=F_"3M%`\*3,*Mni'Db:;hP5u:)b.[sL**+@6FHqYESOf,H6V=E=To[c=.]'"Pb\K"Xb,+?bE+^NM78Uh?)_+>T47Elt,8ndU.p"2G$G^c3%9'-qgda#_pp^t[c'aT9Y&4V0WTdU\"S(uWO`sP2&FdS;Dpc5t<,]c?:WaJKM.<@oaWSXVYV]dZmYZN#1#"W.i!9:HV>m[hA%j[qo%KESup?6S$,'U1IbcRYeL#eZE?=^2fRJ[#pNLSAbq#.+Ql;LSPI.]cHAQm<(%&r;\4Z/;NOakQ!b[1H63K#%J>@4f<n&0Jh/"38W>%G"J\4/P?nj.O%/ef>lR"r[A-D81.=Bp08?5L*^A@EXW"tKa9+qNYqgFb>2f+G3h'I9ZgUARWlT4&YA>)].=J%2[T#m+^f]'fn!hr%3Q03"/gW(^8rH\Pj^rDO3mB@M[u6o:iX23(W(P-&0.9=Bd;T)P.E=fXU8?9@<M'o"#<OL[]+ULR'Wf8fa?0nO$pr8c)0<#71Ql+%%[1SNcbDK#6nn^i&,pu2*6Bm1+U<`p"iH))%#4'1DE)De<lpTMHkKI[o(rNpK7*>#43$B8SSn6os.!&H7jJ\u0aiSK:]N0'k1HZsm%i&D:d_GVDN!<]FE?"P_;R"Sj20gIjf3?j)X?bqRe-mEgH`l=96'faPXSJi=M+?h6;bF;m"<@5&c!Kp@#4/QbS[.P$)S>Y<:p/imo%S>WnA[5A,kJ2dSr'Tu-]#fQ88-FY_fm,2sHeI7aiI@82iQ^2:YhGC1R3kO(M>RWq081Xs%ADdrR_?"j_?8i`I-_ZdK$qH]pCps:'%qY3>#1mf1lQNZ^sFSV:D&qPTO+g9Wcf\&PKAcrP5J2CgF-nG<LV[S=M]0Bm]1BhM14NsD.0LIQ&b`snZqaE<s^h@tMDu&L&,hPBQ%Rp.bJT0aU*<ML^W$pU+`c3M1!l'0ZEncUhD0E]ZMo"rI*66]I,j\rc((=m/9qZ7*t#/^j_*Z8V\A"aFKX8n$Dl&$+X@GsY/q<?gg%L(KB!TM#DckKm^O5SJkG2^lTS5%P3'82EpZXmF&=G%q'_6&cM)^]lbc+mi`Xb:Z7J#";Ud<Cds?`u5Q3TDa=e&V_k8jNsDh1>4ah%2]=ds'ekiI(-'Y`)]`?0A9K9C@h!f)762">G6#8ig5eZ:"cg)JL"li-Z]HP?'k5A&l_R6G(e4\\B%QT`@bD4nP9=sU7,4ILN2WI*%mU6r-"D-1M6>h@*;+#UrJ@,_HL`9e:^u(OmR9#(%"TCDS$l.8d<amnAf:uaF?aLbB`diga%@HIaP:@<*P>uE4W51J!AVDKf,mX_T%HZs)dnac#]pD@_CSWS8VJ%CE"4f,CAi!KC([4#u_4G'k^!CbRs*!CSZ_rpCNSrsXic)hFE0f8XM^^AgBaC*>9U6fNE?<j$!oCM;7%de`grUSC%$c[T4?^n[XB<nS.JE]!/t!WFB<OXG<-3\)?AV6lks_!bN;%;4F.=##iTb4\TfKgZNm"oL0r"U%F;U8n&38#QU:+S^jY%<B+`q35D^((aenV`$E,7QA8>k!<b8fKBF3h]>.>k_lO>9mpYU?J^b_M3@G_L#GD:HPR1rAK.dVfpb4a@_dl#T<^bCF15&d.hbG=[%m!IYJ6>lHl5tu.shWM2;(l*W,frMrbb5ek"C1[DrNg/Kn$.Tg.p[!`;":37.V)A.J5gJ;hTU6psor/R*SC%YbGTlFi67]n\7Q_5k%kp]!-%i9%>6B1+05%O/(.HK42/l_UH!bF2XIa(@q@89ojBSq[2!n]>kJ-HR[&<_PW8jEZO-'We3Vn`](+=373"6M9U$fA9<)L`2A%O+sNGVhC'X.#/#/(W',Q@O4c9U_7&q0*U\oW*%'AF.8SoORHMm4qjn\PeP)<ZXtJ9<H-Y@'*^iDEG[[N"oq7t.1a`Q9$'H#GOumH%6&5\UTR:KZ[AI4n6!1#RZeFeol))Xl0+fJ/W"pMk;@6Fk8f25Apn#M]<OIFe96A2I'T?#%)$=Xke0*2^E?LK3^d9'7i**DT=olc2%@X(e\0aNECj,>J?(fK:f$Jlj0JbO1W!u"HJ8k0R?C#JnErgr4?A?IU:#OrIOYIW3"CF7t.!<_d7XJu]2R&].D9OAUgoY4<@*#,W/%>kGW@#,XhPc&/bdT2Eh*K'H+UMrC():je6+DdbY,16oq#!eMn"oH#&,[)/?#TVBMK5]MY2Q)3+=#D)X)G(ljLQA1Np>*;tI^B_F[%i`QQncWn,<lQ_"d<iWq;;6e.NA#g"HbS^!a`d>W9C`r,b0RN*6HC3U*6oQq<F!X2HWnD8Ep4@6;.e"gt`4m0UE-)D+`#W6:7KUf9%#b)"%pqbHuQp[iTra<#7btD\,)M*jM,f6pAcu-r!gn&([3!j;31T0X:h8cT&hD7YHORf*/kUA$&Q%RFSLA3M"T&g%R*mI;BGin!K%7jDCP3m9Q%a`P<mU-V.s^'5JWa8r%W&niQ+K%(2_iq"k43uu3IK%,IAQ8PWJGpWh^LVh(6]R9:R#q>#ak@G[0qG`U,oG\sL->]$2%0\k+#a]9;d*.C!Ps1K*bNG(=&#OrIOY6h0GkV5WQ5da@%#0LOoqVOSR"rNtF].o7>]a3UWK"7$f)["AbOi7jQ3Qap0393j\$u4W-%2$V/Y\)6+!_o;q\>EpCd!P4:>M%OKj^krl%%02KO'ekQj8nt7>F<X9r%!N$S.MRmEBI>=QZ&&)m%(UVt$U.\0I^9e1m5N[\VNUiD%+F_)]CN@/tW8A"SfYn_9O+Dg2kjMB[m7)1%#U>mPcEMoei`ulN&>^573dKd]pgpf9@?NtPq3?1:+s8FK`-Yf-(#_\qOl`ed`1#E_%+oM75q57UZZUjip;@24gUuGu4+Z+99SeHR('H%Fn1P0#8=[C@DN<-o;hAF$7JkNJY7PYVkerpA-FrLFsi!=LqKd[Ag$G-c$%tLMu%lo#:]!U`*h[qSqie9;529rCBf_/@`#H`+3d,(kU`Bl(4D!fN2%(iJ9mNOAfn7U(C'UCEZ>PSI%QR:Fn*Jr^%IZpF#U`!@3g)UQoE%Zg5ZIKs]M7k+'\n1WntQ2OfI$O,FH*)a'?/.bSD9gmY5WVc*:nYh>],K;o8eZXGL:>mb?UROu>;8=L&EL=k);V]]$uX?X)F']^Vt%;Oku9.<SWWdkoPu-YEOHCpj<M2Ht\lRgk,"L5p#Sfc\V':8D:(.75p+Cc5tcJu(]W*eUlZXFnb%q+A3#_DAE5L_4R3eN#m^CsY-m%_(R4$PUG+IJL=)5"=0qQ-rNkAJcR$I^2u]HKr'Og/u8nc$XuLh%k-3bG)cU!8?fpaJ68q:8+Id]:#ae/TAO2C5tY+qcaY2n6YSu2%J706$GOEr(F3_[UD$M'ohf;3$4&N4^Kom8]Uj&L75sd>:FEE+cUD*lb5J]$N9^5!L)2(*I4lE7%>Qm[d<%VZp'A<0pN\Kjk6pYC8%0.J;YV=@7pNclmte]K>X.<WWk_S.Ui;]TqrQ"G5rh.;gO!5Zrt#)dD`N3R9F*YO?te3nQ-dmUd`/>T@@+Emr*Q@K9WY8Z,]3:.Pd%&4%*C8%D%BV'E92s,\@eUsV!^IKfcZBC#dg-WA0p=uqKc5/]9aZI#VA8$8MUTK<*(eTAs,q74])5o`=[$!6ud7L1c%>-$9fWj4:X%LfPZh[9tGCFt5gSdgoCYD\XhW*:6!;^0s;sPR5ftW=W6qj>tl#+NBO)MC)N/l?^$3V5.+l`=t&/QL7lIZjKN`h"frC[</-"kZcC6%;6bWoobns<XsEHDL_C=$6n/L:SW5ZVBFO/;nYTVHCUEb+C/nda!GNr0gV=(0F*HWI@+Ju+7_dFUD$'inphZDG+#![C-l*t^/3:"<%K.)Rl!.m*@nNfGD@u-1hM)T*2\^O[g1=cG'&pp@n,E$]1K$8(Zb2Bh!'C"WHR*Vb$%=HEkQQRV*SeY^eR$n:4bh\1Y?<cjq\+k<F%%j+(fKD5q`1dF28p..Q&cA@3#e-#gqG+qAaL)Q=2-5)2G;9&t&"JJRFQC*6;:*bYMBE?$R!+:d*L8KM8lm2nIOVnZs:'qA[?@#0/%]K6\56pgSk*>6@)L6-QZh%]FKhq/WZLPMdPirFZs!pG^(Q*A1u*A,Q1E%mua+OqAkFKqcPLo(;:&e#2l=e.7(fEHpJ7Xs?CRM<SG%L7$cTf9lUmo1Z/--E%l:&/'6c=2:4CPS=Z7=V_W:\5-!D1^+(PLgh5qVZm]b-YPph*<8R7g\%Mf;jLqoU#17on;27?9p2_-!"Y_2%gBM&KSQ*F6e#HQMJK$58(XEr]<%:H&#mb'lduJ]Mjs\0$"'6Fh%Hbg58Q"`0.3pS&6'7o"/qra4\^aXhD*`;'/fs8L_I0uS$rF/4%84r]-7l(44OVP;T@>aO_UI0mLrLIqP+jK#oq2,S&lDPIDA@TM#;q;XZNXGiXb4;YAW0gUP-AS<\"AFS62r'2oG;<b&[,b]j*;pN@%+YOB(5`3c?q)&FN-bL4`PD%;ija4Kq,!i[-'HQDL,YC\#(8VEB8`h]E+H5cK!A[LF?.#Gn")20JcA@4J78c*,apXIS%`_-0jEW_i%q&(R_?udN*<.JZ1rf1RnX<;WlHf-0dr4mJ#:=irh:nZr#KLM8J5t5Vh\rPSA#s#-55Dfkn1.*(Z,"Bg_p&XAhntu\i8'5UZ(n]fL%H`nVgb.3/'j<VegPg;T97DeT8<#[&*RU2m<1Q99eN5L7jcagcqU\HCAPd?f1K7a<)NZ;@nToKNmp&U@1"L8b?;QC2Cm5Q5F:<9sq%,>(G)Wpr$.Nt.&)A8qcAdi://4oj!&4(A8E1Uru3<ZuNOHiVVlF?#F]ccU;O1iR[fH0-,eB8VLUiAet^c1D)a)(W;tCCn*d"Z\lC%"hI[7/!+f^>XF1A@o^mIK&W!a*hk6pMm,<T(i%k,6,`kM)Vla5+?>H?gn>/Q!bm)jRg).p+?nL7EqX,u1kK%sN6ZD+($,!#oXqsZ%['R(PW_*DMQiEkCPV*a10QVp9T`@S"FM7p7GHV(5J;D[Ug=&?"+_[C%-V+mV@joopjHl+[0GB]LE1EaUWsglNaIFHE;;j?N6ff;I%I#RM<N8j%d7Ymn8$IK`cm@pC7*)[S%8gjUj9,'E8jig:')LE^)E,co>g]rXriA_W"FPr!]U-Msd'Fgku1(=f16L%<6s&A:IcA`P-%&AAB95%A#Xb_2)+W>"J.L%gfDl_Eog'Hk>Hi/<kQ&O3/<!TN*Q!Q(p1@sJn/CF'e\"<GilpF$Sn3mlnO1i2@lL8d%O<6ZY%Lq.L0%#MK:@!t2u/Lp\WOo+f?RQ5).r#cF*$GU%SEo5BIoS>i214:/Gm7VW]6"SjT[k9nG$$$"T3Y_$g(Z"#tG0SMIp%2B?MII0EU:`BQq%!@c`r4CpE#PU+q@NuROi+C#+>QYG+Jc&d\M9QW1lTGDJk-8h5imc=#)Vt%8-[)n5`.+mRq5NQIG*s]A.QoLg3-=ctBa+->#$poh8%!lf%R+4_`XWtL2uZD*JEJg\@plQLk-"Ukd=:]N!m?g?5R9+e=LHA`<;JtrCkTW$Kp%j%Rk3UDb&9BI5f!+@f8oj^;ol%^QqqG`_>%kqPDlo<b`##/*G0;*jIVof/sL[QjPCKrUu,!ZTJk>Q2VeM2k1=6i-m-C!?;?OapU2]S_<boR1mg<USf)V)aYED`O!Q"Ah(]QmWQ=%^7Yd5![PHZmO\#A<SYL7%objJS1^P^6.1)$Y&'O@A1p"#+c-No'g/qf0Xadp"dG7QNJj)9i[VP0_35[14D!S#DSO$EU:nJ^48]Bt%ZX%/f@\dHWEIMQQ!Gq!*jQcSCYmsHj,m(Tt8H_\R!a-a*BIb5LQ0\cK*HFesLaXJ=?%e>I&>Y+kD9_R\N&jbs&d_Ao=/=aVl>n1d%,&X*nq&L2.csja.RfK68Ar`.li!"YIdW1]ZR_'2aMCQ<Z0H(ao*:b$u$j6o]!7=.KkCQeAl[T^cBpJ;0"I_nbGEe=<^;ol4oj$:7%8@6O\2'E::o#@;O8l;aF(^P)Yj)cGXS<l;iTh/rF,U`'>26jTL!>^4Pf2jr%ZZ:=(_\@FjWe)kt#T5a)6.\HEgn1UBl5H)f"*J/H%D?"3:r>:Y41E_+eH7%G15,SdkEhUIYbhU1OIb80O?ob.d!7@dK6V=.1E#DOU#_8>#QjlJ'68["04\>dM8Y5L"%]6K19,L5tcD10+%Ebm7<V.^CXbS@bJ_tnto,N+-<BYkj$MuBIRUFs/'i12#]1LbhN[Q>^WdD+pig?">cLst#Y$sXBn/;C"^(W=]1"a-djG(n0T.)Q(.%5+Yd\ahc17_NYEN<PYDHM]j@_BB&bA->YJ!$O>re(^I,r;hr=IYK32iMCA+*bd:sfm@THZB4NJi,=m85Fo.bNZXt#0!(cOP_]6IB%=](j2LH-iu%3U<jTZL[^KhEn5NT4GH59L&YfEi4()+IYKQ\GpA!2&H@od*>d6[\+<^F'(2'mFRcT3e,!)'nWEhAP?)<+cjL8B=U7%YThGbLO&??+5NK^@1L+C"4<Fajg;n"5oeWOLhY'DJ_+?5%JhdD=@k2AP@Wnc@>V!2UT:%!+H/]bXJK=`;WYoMYlUTA.[&NdZhbkY%9p\Cq.ENse0,&f\EZJk<*3_^GZkYj0Yi>CTg;&;&MV(HVA&!q"Se?+i0e%/`*.$.LqA]hC+j3L@9u,&R"[>FjEQ,mX@]/-+<=p@t%f!JtB72!JP.3[oUQ4QI$`de^o<+eQ3N0K_M!Z!-b`1@&6'^WlY1D]l#j\33%q4ZY`N$/g&d!ZC`$6`r-_Q+5:Q.%VG;g@g:$RZQU%C#X0h+nK618pHM`KbNirRQ@!!,D#t&.nCO('$tuI3>VsqU8#qlS>P6J&[Z8(mRg@g_470`Sei1M$T4`AJb<L4"!NPpP_gU@5nlV+%^"h^,n=(mqO*UB!=4K]I`\&YeM@bs9O?&(L.2QnF8H_De2W[<:0S.aLY#+p!8ETLhr@]gV4N(kAHO+8oMD87,'OUPo_q<!gO6$nt%g0#OHJ0G7++F#P6@f%'*#CBlG@RAQ(6Bmk!E54dGkVO]8"o!CTlb\].Z5``95f'X_S<\Wob[jfXRFoRb"UdXTZJg^-V^DAa0qCh5%"#/"ZqKZ(!Pr3u+lp6Yk!Dr8/9Pg5fIQ#2PRa0H?h-9J3)lH+h)ab.G)B2b+Cg>ND(j[pVC^f]"@lDVqIPuqY@Q&t'C2@,a@,n94%`bA:_A*d,q@q03?TrU:bj&FR^36g`)$q33gSFR(BaqFE,%$4GD>]"j_`VDmRe$[KB=Gk+u#;Iu=SX!9rZZ>g]QoVq`3sV.J^G**+%kV.Y)ctVX4jaj+6p+\p-#dFlP=4L(<1oiDhTK$Os^Cc'k;\S</:PmSL*\$PjBPd>X0slW'bk$:<#)9'4FDC(LmFff1eFYJ;SSMdY%:/+F`KG>B@d#(4^<f&jKKbX]9<Z$rq`/[:Y_MEm5Ok:"+]Ek2IIL=*u#kk817O5?+UrmXb6paYTJMLJK11o>6/V7As&SXYM;qP-m%)j(,oR'JLl"!e_G&k9l/(s*YXiHrCs%'stDA=,@rO^`aqL_P+'7\mg8)j(2sC^LN^HQt:^O1-:O*r6]O5-k\96.go+0Q0;c(u(,X%EC-;oQt6gdess-XI-]:FfSYAHeq$4U+8Ut/<@mbE7f?8^F'Uf"D]t'n?q+b,n;;$NBWIeH/]-lTd@$`YA7nAdVjnWm<R`iNLjd@8%YN!2VKc0U$MM/qc,NUp:R.@tFeB]ZTi5G[_l=X7*l=\cLY*>\/Pk,ni+UQ^G8UV+hQ=P59Ljc@Ri<?M5$$-A]T?s/9Z#:0_=hil*%YTcnN('Hj*P%&OA1;k0F,mgdiHM'kG&(eTt>'PSV.;s-fLs91G9d,>!1dkG:>[tI,'_AgNfWd[IIb;U>+A&Ag4>--'=Dd-?V)&b'%pIf-33`?[ZC8KH@;\I/$d1gkIVBe:#ft8S/'$Ea:1*"E#KFYdC(;)(&e6'![8u<k='jG?Dp**Ej8@2bsB#:oB;\Gpg<i+TOS/MnE%;\GIeg*?f";@!X0VM#e(o'@N99(j?"ilH^VHG_?M9GTV(hRD@@K.uMN94p%c*L(!5cQm0^lqRaeQ9#X[L:S=F/<]U4"=/$p$NT5B%0i$m5#R`o#"2OA*m%EA-3R5brPSg'HR?po"&koO_/mb@pP#/A1E@DQ"!)g=[=%j\IOHd$Xl+Oqo!"%D!Rk0D-`Pef4DM\DqcHN\;%k'@&f@4PSg`DHla$l+kUC,0IFN.]R;+EcS>bTHUBh-j9oll_Z?B48Aa9Q778mh3-n]83"?!-A,bbhGs=O"@UW*\Pgj_l6e/@L+[]%UiO`i5_tgW)(kdKJ.KC_/hY1piEI9i$e$P0/fi4uA`c<o;-6VgUTZ1<&3^=)2?`Ki&l3)a>2]TE!@atCLYhVVN'uYr::3E.KT3&h%VeiVs<IBiGDD'a]MfX*")[=)da\J]%3$<_oD[/l_"H5LRdn33GXE1R]*1]-m4.)?8k3PaNZp*S>,dK(s]Hq"(`n?\TF@@C:<=PlI%at"c51UnYef>:I4K\^TA(-_u1k*=$0J_n"ViP[@qVV,Vp>(^EH/>/PZWOWD<1bYQ-055XU]S)F<;S&p&Y/\s$H.NioVuh2OY85,'%/3!1s#qHoT@4<B7%H[Lsr_9o'<_Jc:1eFiH)N-U@,Gg!9Q4sdEXYf@'9=T88'XFBCW04jZ_RP8:bGgV1,/!b3A9Wsh6,s88?sEo'%Z\?9KcF=9=#f`]p-!p%J*<Ybif$ZsM&CN;k4]cpjc?MT\X9elYF"J)^YRNpfkqpV8T1YYVFsH6&kXY&f3o`=;2^nd#H-<[eBaN<s%.8(Lj=oqngb`J5,=O5q^5_="/a0aj)L.:NuUQ<^3PVBBq!<N`0K99giX^/pkO0DnN2GTP"V#esgX\5UIan[*c0!SkTPP++?97T=O%+_b4kmrq33Rq,/1BPUMs+P?0_>*f4^'j7Pi2L)DL0/si9*Y<-\!?qUj%-(%)n?HA)L+,.31/-GjQ=4dLZj]J2VI`#X1G(aJSUhVS%*\>L=28QX.)sH2OS*WgA$#uhRJ-FCW^mo*FPtIiR3n)M&F:j0_/R_t^(B-]`H0gP1,e;%njaFqCInF_D4YQ8`G%_/YV9s+=H.*B]%r4U0I\b@e'pk3?!SoU\SN9"LnM0s!R$pD.s\:n)%9bK`?)bAu=_NKQeB=O^7jB$/c#a#W$:6h!V8<%o%=ro)R`8qICGO.SLXHk'f%6bI:#h\/mp(IIDnD2C,F3]^oIFWTu]fp2XOjF2U_gG6R7D&GfeAk/4UYUsu`=4g-UDs(J=Q09cN&C%MD7;Uq-:<;D2W>f/IQd0=(%,s(+r8f:EpM)U)Yo@!'7WhL0E:nQ)g3-=T.G)'N6!+W'oX@p4n=-Lm'C5ILrn0LM*S95-6_3J:l\V749(V3$#da0!8_RK_p9M<\+%6/rUGb"+L]%;j92dXl=M@<`B,YV!,/Z'&;peVb^JJo(gR"=":2Oqdmi#si>s6C_oGG::QP%hcpA9QDKn7d<O9Z?+nR/5U2J-rJ$0%KPdn-#n:7f#r'"9_Ws`6i&Srp-MT2hW<%2#::Rqtk$Y:bM1Z*=EeUoa&!a5K"sHmk%;q<,!SSqj2.qHLH2H1rQ^]b'`T_QcHS_1;%D7Ion6Y?*6GW`c$K7$b;PSf5_`u220(V_Ns7*CuIEpdWK2Ai:1!K8g)8r"63!G=&!#*V;IZd6VRSma9tjY@iY?@_Zka_*%4`RiHE%ju&65&B=p4pXskQcCH'*^B[=pAK6>QcLdNj%P(Jhj5,hrZ#1^K=)fVYOu%q,P-Y[Y-XJgV-g6Ch=lshCJor]i=d#_8f#,f%6X1u^%RWU4`A#_$7;8FtMr1%B.<pB&5WLOmNq8p5Sj!,I@&qM&YVtFIB,=#?pqCWTbU\e+u_BglO+3&RJ-i7pe]WIo)1s_,K[cD^tQU=)!%:KbIQSq+4OA0W_3CMTW<DH?h]li,0lV<]Z$9ZjW@J')E=9.%UO*5/phcS6A2&fFZJ6-mnC5.RC<Sg9H[MRm2RVmOo`r(,Q3U\LDj%lQIaA&54fZfT'!h1RHtI\b,de,)f^e#Ac]Z?HGS=g^T?3o=<2D:3_O`>-bps&FELQer"8ZPVBU)R8`c]0?a/p&$McBh@idC2*6*#%;8C_5!lBr82?k-Fid`HbC9NU\.;D!Z_6Aq=46!.h[Er-0G6$h^WoM*s8j:M)qALKF>SEXM%M4LLK\eM(%fl'U_blO$Tg^$#_J07O%'V;<LljW7FJtGZ+)joC+#Y8@9!9<c/30KFgcU'\o'muTl=g`=`n5I]MP5Q\;B37]23@>Mf+Tq;Fr=!eMB9+M[`sV-d=JP'Q1\d%\%aij`2LTXoZ8fV0rCZ4hM43J6h.e)h<i!Oui/OaM&Y"hX2&RK'72fsbO_!/uQCd/"<I,la&JD8DcKc\m+SVfT#/e?Vi1]VppR/l7'%1O(>TSJg40#&hT)<7H7!02<ou'VU-pkF>SHNY<4`;\%[>!r=#FLG'2]@`(37qcVi*]#96a&NkREjue0j1K9nIYk1OuDu]r,&s]dh%#k`IHRX]R'J1BTD<B*mH0#pcLG_Jhq#EdipdN\u><fiQQ%A[^ujj]1Z<DcY%-@\T^6K\=O=Mic&3<3J5c*Ja4&6RUiI]T8Pa\+'g%FBIC!a`q7Y/6ee\@]=VmBIo];+'s'214J_e@R2E>!2Xa+Mj.4pAB_ri-,OGdFZlWK6@GCLBr<8oT1ekldP2/[/BXV3L>P9i%'\Xj%$o$kL$=c..@$j5>FUND!SiCj#Qc%i85m\]-&1SHZp^i*t;ll%R1Yb:c3-Esuc<MJ!2ZnL7C>g.c##^$,guk@,bM/RI-OHJlbP0e[%$d@Pui]M`6*?Ab5PndEIj3pAI#I'8'jfLYAo.ok--PGQ3Kj/"W5=H?,.^e"Q/2\RgOqGeM_5U"`"a5>FjlX?OVP\QiEEYmr##u-b%d9\h+1MdPc*#24Qa/?-u`K`FA5Ysi8b^K4C-n$fBc:L?9hX\>gj_g?0A@Q)ER"<-]m0iuBYSD-p+MRTJJ8#A=m7J3c#iL>WK7idA%5d,E4.ZmdBA!p`Onl*Qm+(2@shnEa0J/Og=Y(T[2*<OU'Fd83la`Bl^0(oJd?FUab5Y+\S8p9YjSqX1t>3^nK'@`HJM0^]uF!hM+%+b[dM,iA1i.DEj7DX%ROPri2QcqdEGB8EICT[NF&-/G(4IBO&k.F5"&1Z4[ZpR$C:\h,V1*scI>".(\F0gb&#+`,k8Ea$(F\VoYH%IEC`V]<HE!_#$cC0oSJR]+W,k_>n"OPZ-^p$rWriDTd_^7tq&T8otQVDbADm*E\,"<iB)"b+=CX<5Ni;'G^9g792(Odo8VG9'&0^%i8[+'_ojP'i<kC8hE)YYUg0"3)D^o*/c9B3'#l7D6JQaG%hkssP+!>kK)(\+#Oj>Y8JPB(#]\s=QrOF\E<9=_%C=uFJ`8s9d89f"%e9duVSHsqABi;i+%asmGnU>Z\4t:dWiG`IaM?(;S>8*XR1=S&Z_WPH$Q/MdB:gFODk9;c?/h%X-"UP`$8<(6f$:*r8iU@IFGk$Lk%?4:i>&hpD_^kF3aD;9FWgLW?b<B./*E/Xq;VAbW(a`QN5#=8bd+ucFf6O52FV*VD;OdLr,%>+&2,n]JQ^qY*cJT@V$earasJ?3bB%PR[\<.H<Pu&#FBOVcW`q65i/:(P,+jEF(YY9"-Y"D"dKKPf'L0*6I"(+Oi>::i4PgTkqcG_Jg#+QpFW[e@uXDP_:Fpd'<YUEk!iS%l!-;.6j7k,Hq6#E+WV^oekp1pm(H9t_Q8hk(dJGk:r;9O!V,lmJ<fPDasAP.q$n)-4Hr\+/PJc!PW96m$HEF8&LQf/"\]1M#HK%"%Ui]ZC5eJ"cNK.D@9^R[PIAF-n`7\/_Pi7Hc5Un2cJ3,q+^Lc1R$/:QW0J4W.N>`AiNfU\mK:&E`8j^[rL`qTFN</?^]&7@JI:hI+%IIh1=kEk"Ws#iPM?(G,#G^AlPpuU2F5<k1SB"jiYr1E$&K:bBeesYRUp+NaZc]6=)I[qM*Sq$Y156.sl\AoC$[[q<]r.!K%'b1~>%AI9_PrivateDataEnd