%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Central New York Wellesley Club logo 2011 v1-o.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Cicia Lee
%%CreationDate: 2/13/12
%%BoundingBox: 0 0 226 132
%%HiResBoundingBox: 0 0 225.3564 131.0811
%%CropBox: 0 0 225.3564 131.0811
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 76 8%%BeginData: 9070 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0FFF7EFD042FA92F2F2F5A7E2F2F5A7E2F2F5A7E2F2F542F532F%2F2FFF7E2F2F530D84FD04FF7E2F2F542F84FD04FF7E2F2F532F5A2F2F2F%FFFFFF592F2F2F0784FF532F5A2F53FD05FF542F532F5A2F2F0DA9592F2F%542FFFFF7E2F2F2FFD20FF7E07067EFFA8060759FF072FA8FF072FA8FF59%07067EA8A82F0DFFFF5907067EFD06FF5907067EFD06FF5907067EA8A953%07A8FF530753FFA92F29FFA80D062FA9FD05FFA82F062F84A97E0753FF53%07067EFFFFA90D2FAFFD21FF2F2F2FFFFF5A0653840DA8FF840D84FFFFA9%070D7EFFFFFF2FFFFFA9060D84FD06FFA9070D84FD06FFA9060D84FFFFFF%53FFFF2F07A9FFFFA85AFFFF2F072FFD07FF2F2F2FFFFFFF7E7EFFFF0D0D%2FFFFF8406FD23FF8406077EFF7E07060D53FFFF5306FFFFFF7E0D06A8FF%FFA8FFFFFF7E0706A8FD06FF7E0D0684FD06FF7E0706A8FFFF7EFFFFFF06%072FFD06FF53062FFD07FF2F0653FFFFA8FD04FF7E06077EFF075AFD24FF%2F0753FFFF2F0D07FFFFFF0784FFFFFFA9070D7EFF7E53FFFFFFA9070D84%FD06FFA9070D7EFD06FFA9072F7EFF7E54FFFFFF5A070D077EFD04FF2F2F%2FFD07FF2F2F2FFFFF5A7EFD04FF2F065A7E2FFD25FF7E0D06A8FF7E060D%A8FF5A0DA8FFFFFF7E0D060D070D2FFFFFFF7E0706A8FD06FF7E0D0684FD%06FF7E07060D07072FFFFFFFA82F0607062FA8FFFF53062FFD07FF2F060D%070D06A8FD04FF5307060D5AFD26FF072F53FF592F075AFF2F53FD04FFA8%060D7EFF5A53FFFFFFA9070D7EFD06FFA8060D7EFD06FFA9070D7EFF7E2F%FD05FF7E070D0654FFFF2F2F2FFD07FF2F072FFFA92F7EFD05FF070D07FD%27FF7E060D842F290D067E06A9FD04FF7E0706A8FFFF7EFFFFFF7E0D0684%FD06FF7E0706A8FD06FF7E0D06A8FFFF7EFD06FFA9070706A9FF2F0653FD%07FF53062FFFFFA8A9FD05FF2F062FFD27FFA92F070D2FFF0D0D065AFD05%FFA9070D84FD04FF84FFA9070D84FD04FF84FFA9070D84FD04FF7EFFA907%0D7EFD04FFA95A7EFFFFFF84060DA8FF2F2F2FFD04FFA8A8FF2F2F2FFD04%FFA9A8FFFFFF2F2F2FFD28FF530D067EFF5A06077EFD05FF7E070684FFFF%FF5A2FFF7E0D067EFFFFFF5307FF7E070684FFFFFF5A2FFF7E0D067EFFFF%FF5A2F7E06A9FFFF7E0706FFFF2F062FFFFFFFA906A8FF53062FFFFFFFA9%0684FFFFFF530653FD28FFA9062FFFFFA82F2FFD05FF7E2F070D075A532F%067EA82F062F075A5353067EA82F070D075A532F067E842F062F075A5353%067EA80D077E5A2F07A9AF7E070D0654535A062FA85A062F072F535A070D%FFFFA95A062F077EA8FD27FF5A7DFFFFFF53A8FD05FF7E537E7E7E537E59%7EA884537E597E535A537EA87E537E7E7E537E597EA87E537E597E535A53%7EA8FF7E5A2F5353FFFFA9537E7E7E537E537E7EA9537E597E595A537E7E%FFFFA9537E597E53A9FDFCFFFDDEFFA9FD13FFA9FD25FF847EA8A9A97EA9%7EFF7EA9FFFF7EA984847EA97E8484A97EA9FD04FFA8FFFFA97EA9FD04FF%A984A8FFA9847EA984FFA884A9FF7EA9A8A8A8A9A8A97EA97E84A8FF7EA8%A9FFA9A87EFFFFFF7EA97E84FFFF7E7EA8FF7EA9FFFFA9A87E8484A97EAF%FFA884FFFFFFA9847EA8A9A97EAFFFFF7EA8FFFF7EA984A97EA9FF7E2F53%A82F8453077E5A7E5A067EFF592F5A5953067E2F7E065A2F53FFFF7E0784%FFA8072FFD05FF0707A8FF2F7E2F0DA97E29FFA90D2F7E065A2F842F7E06%5A7E53A82F2FFFFFFF2F2FA8FFFF5306842FA82F5A7E5AA80D2FFFFFFF07%2F7E53590753FF077EFFFF7E2F59A92FA82F0DA8FFA82F2FFFA82F7E7E06%7E075A0D2FFD04FF7E0DFF7EFFA82F06A9A87EFFFF592FFFFFA80DFF7E07%FFFF7E077EFFFF075AFD05FF7E072FFF7EA8FF067E53A9FFFF7E0DA95407%AF7E7EFF2F7EFF84FF2F5AFFFFFF5A2FFFFFFF592FFFA9A92F07FFFFFF07%7EFFFFFF2F59FF7EFF2F2F7E7EFFFFFF0D53FD04FF7E07FFFFFF2F5AFFFF%53FF840DFF542F067EFD04FF590D2F2FFF847E53067E59FFFF5A29FFFFA9%0653067EFFAF2F2F07FFFF0D53FD05FF53A9065353A8FF59065AFD04FF06%7E7E07A853A8FF072F0684FF2F2FFFFFFF2F2FFFFFFF5A062F2FFF7E0706%A8FF0D53FFFFFF292F077EFFA9062FA8FFFFA8067EFD04FF530DA8FFFF2F%2FFFFF5AA8A80653067E0D53FD04FF840DFF84FF7E84FF2F067EFFFF592F%FFFFA82F530D7EFF7E54530DA8FF0D7EFD05FF7EFFA9072FA8FF842FA8FD%04FF7E075A072F5AFFFF2F7EFFA9FF2F5AFFFFFF5A2FFFFFFF5A2FA9A9AF%FFFF2F0DFF077EFFFFFF2F53FFA8FFFF2F2FFFFFFFA92F5AFD04FF7E07FF%FFFF2F5AFFFF53FF842FFF7E0759077EFF537E5307A8A8535A53FFA80D53%FFFF5307FFFFA806A8530D7E2F7EFF0653A80D2FFF53A8FFFF29A8FF7E06%A9FF7E0684FD04FFA9072F7E06A9FFAF0653FF5A7E2F07FF537E2F0DA87E%595A06A97E532FFF2F2FA8072FFF537E072FFF5A7EFF072FFD04FF530D7E%FF2F845307A87E595A06A97E53FF7E06A82F0DFF7E5A597EA87E537E59A8%7E7EA9FF7EA8FFAF537EA8FF7E5A7EFF597E59A9AF7E5A84597E5A7EA9FF%A85A7EFFFF7EA8FF7E5A7EFD05FF7EA9FF7EFFFF7E7E5A7E59A95A7E597E%847E537E5A84597E5A5A847E537EA9A9597E597E7E7E597E5AFFA87E5AAF%FD04FF7E5A5A7EA87E597E53A9FF7E537EA9FF5A7E5A7EA8FD28FFA9FD07%FFA9FDFCFFFDEDFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA9FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD36FFFD102F0784FF%FF59FD232F0784FFFF59FD102FFD33FF0D06070607060D0607060D060706%0D062853FFFF5306070607060D0607060D0607060D0607060D0607060D06%07060D0607060D0607060D062853FFFF5306070607060D0607060D060706%07060784FD32FF59532F2F070D060D070D070D070D2F5A53A8FFFF7E5A2F%2F070D070D070D070D070D07FD092F070D070D070D070D070D2F5A53A8FF%FF7E5A532F070D070D070D060D072F2F5453FD38FF7E2F060D0607060D2F%FD0AFF7E0607060D0607060D59FD05FFA8FFFFFFA85A0607060D0607062F%7EFD09FFA82F0607060D06072FA8A9FD3DFF54070D070D075AFD0BFFA807%0D070D072F53FD0CFF2F060D070D072FA8FD0BFF2F0D070D070D53FD40FF%A80D060D060D07FD0CFF59060D060D067EFD0CFF2F07060D060759FD0BFF%A80D060D060D2FFD42FF592F070D060D7EFD0BFFA92F060D070D2FFD0CFF%2F070D070D2FFD0CFF5A060D070D06A9FD43FF060D0607062FFD0CFF5307%060D060DA8FD0AFF84060D06070684FD0BFFAF0607060D062FFD44FF7E07%0D070D0784FD0CFF070D070D067EFD0AFF2F2F070D0654FD0CFF590D070D%070D7EFD44FFA92F060D060D2FFD0CFF5A060D060706FD09FF7E07060D06%077EFD0BFFA80D060D060D2FFD46FF5A2F070D060D7EFD0BFFAF2F060D07%0D53FD08FF54070D070D2FFD0CFF5A060D070D06A9FD47FF07070607062F%FD0CFF5307060D0607A8FD06FF84060D06070684FD0BFFAF0607060D062F%FD48FF84070D070D0784FD0CFF070D070D065AFD06FF2F2F070D0630FD0C%FF590D070D070DA8FD49FF2F060D060D2FFD0CFF7E060D060706A9FD04FF%7E07060D06077EFD0BFFA80D060D060D2FFD4AFF7E0D070D060D7EFD0CFF%2F060D070D53FD04FF2F070D070D2FFD0CFF5A060D070D06A9FD4BFF0707%0607062FFD0CFF5907060D0607A8FFFF7E060D060706A8FD0BFFAF060706%0D0653FD4CFF84070D070D0784FD0CFF0D0D070D065AFFFF2F2F070D065A%FD0CFF590D070D070DA8FD4DFF2F060D060D2FFD0CFF7E060D060706FF7E%07060D06077EFD0BFFA80D060D060D2FFD4EFF7E0D070D060D7EFD0CFF2F%060D070D5354070D070D2FFD0CFF5A060D070D06A9FD4FFF07070607062F%FD0CFF5907060D0607060D060706A8FD0BFFAF0607060D0653FD50FF8407%0D070D077EFD0CFF0D0D070D070D070D065AFD0CFF590D070D070DA8FD51%FF2F060D060D07FD0CFF7E060D060D060D06077EFD0BFFA80D060D060D2F%FD52FF7E0D070D072F7EFD0CFF2F060D070D070D2FFD0CFF5A060D070D06%AFFD53FF29070607062FA9FD0BFF7E07060D060706A8FD0BFFA90607060D%0653FD54FFA9070D070D077EFD0CFF070D070D0654FD0CFF530D070D070D%A8FD55FF2F060D060D07FD0BFF7E07060D060706A9FD0AFFA80D060D060D%53FD56FF7E0D070D072F7EFD0AFF2F070D070D070D2FFD0AFF5A060D070D%06AFFD57FF29070607062FA9FD08FF7E060D0607060D06077EFD08FFA906%07060D0653FD58FFA9070D070D077EFD08FF2F2F070D070D070D065AFD08%FF530D070D070DA8FD59FF2F060D060D07FD07FF7E07060D0607060D0607%06A9FD06FFA80D060D060D53FD5AFF7E0D070D072F7EFD06FF2F070D070D%2F2F060D070D2FFD06FF5A060D070D07AFFD5BFF2F070607062FA9FD04FF%7E060D060706A97E07060D06077EFD04FFA90607060D065AFD5CFFA9070D%070D077EFD04FF2F2F070D065AFFFF2F2F070D065AFD04FF530D070D070D%A9FD5DFF53060D060D07FFFFFF7E07060D060784FFFF7E060D060706A9FF%FFA80D060D060D53FD5EFF7E0D070D072F7EFFFF2F070D072F53FD04FF2F%060D070D2FFFFF5A060D070D07FD60FF2F070607062FFF7E060D060706A9%FD04FF7E07060D06077EFF0607060D065AFD60FFA9070D070D075A2F0D07%0D065AFD06FF2F2F070D065A530D070D070DA9FD61FF53060D060D060706%0D060DA8FD06FF7E060D060D060D060D060D53FD62FF7E0D070D070D070D%072F53FD08FF2F060D070D060D070D07FD64FF2F070607060D060706A9FD%08FF7E07060D0607060D065AFD64FFA9070D070D070D065AFD0AFF2F2F07%0D070D072FA9FD65FF53060D060D060DA8FD0AFF7E060D060D060D53FD66%FF840D070D072F53FD0CFF53060D070D07FD68FF2F07060706AFFD0CFF7E%07060D065AFD68FFA9070D067EFD0EFF2F2F072FA9FD69FF530607A8FD0E%FFA8062953FD6AFFA85A7EFD10FF7E53FDB5FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: 
%%DocumentCustomColors: (PANTONE 280 C)
%%CMYKCustomColor: 1 0.7200 0 0.1800 (PANTONE 280 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic CMYK</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2012-02-13T13:42:31-05:00</xmp:CreateDate>
         <xmp:ModifyDate>2012-02-13T13:42:31-05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2012-02-13T13:42:31-05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>152</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAmAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYqpXdrBd2s1pc&#xA;Lzt7iNopkqRyRwVYVBBFQe2EGjYQRb5Q/M3y+3kb8wYLaU3F35WneK7gsWnmo1sHHqwc+fKqlSAa&#xA;1pQ50elyeNivYTdDqonFlG54PeWXfn/5XS3sbPzv5buJks9RZTqLQyy+m5nXnBcAFvhDD4TTb7OY&#xA;3Z2WyccxuOX6nJ7QgQBkgT5pTpVrpXnybyPoWgevZ3dpYufMt3FNNyigjmJZaszDlJKzuvhzUdNh&#xA;ZMnDxyluCfT+PxyYQIzcEY2NvVuWQ/mD5S0u78+eUvIvlv1rJ4IJX1K4jnmZks3lMxDMzt8VfUb4&#xA;u7KOlMo02YjHPJPfu97bnxg5IY42O/c8kT+evknQvL/kOyv9HWe0vNOkjs4ZluJmZoJXlldX5OeV&#xA;ZJC1evbptkdBnlPIRLcHfky12IQx3GwR5lD/AJL/AJe6F5q8lLqusTX0t6bmaLml5PGOKcePwq1O&#xA;+S12pljycMaqu5GjwieMGRN+8su/Lv8ALw6TP5rsLid9T8r6x9X/AEbdPceo8sRSRZkZo2DDjyC8&#xA;tuWY2p1PFwkbTjz2cjBgMTIE3E8t3if6Gg/5XR/hL17n9A/pT6r9U+sS/wBxyr6fLlypTata+9c2&#xA;vH+449uLh7nWcP8AhHBZ4b7y+srGytrGyt7G1T07W1iSGCOpbjHGoVRViWNAOpOc5KRJsu9AoU8g&#xA;/wCcj9BsIfLS+Zrb1bfWo54bY3UUsq8oWD/AUDcOu9aVzZ9mZCZ8B+lwO0Y1DiGxX/8AONujWUnl&#xA;iTzHMZZ9YuJZrR7mWWR6QKUYRqpbiPiWtaV98Haczx8H8K9nRuHEdyXrl9ZW19ZXFjdJ6lrdRPDP&#xA;HUryjkUqwqpDCoPUHNbGRBsOeRYp8nDSIl/On/CiXN2mifpM2q263EoKw12QPy5bdK9c6Pj/AMH4&#xA;6HFXc6Lh/wAI4LPDfeXqnnz8k9OGkU8r3t1Fr4YPZ2VxesyXIRgZEpM37K/FUfTmv0+uPF6wOH3c&#xA;nPzaT0+gni95b/5yS86a3oOiaXpulTvaNq7z/WbmIlZBFbhKxqw3XmZhWm+1PHB2ZgjORMt+Fh2l&#xA;nlCIEdrQ2lfkx+X/AJk/Lq1vdEZm1ue1WaPWBPIzm848mWVSxQD1PhZeNR88lPW5YZSJfTfLyWOj&#xA;xzxgx59/mq+ePKF0n5KW95riyR+adAskSK6S4flHSVVYExuUflGKb1wYMw/MVH6JFlmxHwN/qiO9&#xA;Jf8AnGbSrTU31LXdQMt1qemypFYzSTSkRrLE4konLgeQP7QPtlvakzGojkWrswcQMjZIL6AzTO1f&#xA;JP5o6TB5f/M39BaRNc2mlSG1ItluJiF9YLzCszM25qeudJpJ8eHilRO7odUODMIgmjXUvX/Nn5Ie&#xA;W20O4j0m+vbLVpFZdPMt9IySz8SyQssrUPOlNtx17ZrMOvlxeoAjrs7HLpImJ4SQfeUp/Mv8s7xv&#xA;y6tNctfWtfNelWFp+lBDPIRLHbwKkycQxSsdCwZetD1rlml1Q8UxP0EmmvU4JHHxDaYHeh/+cYNV&#xA;026tdZgl5NryMjy3EksjmW1OyAKzFR6b1qQP2hku1YEEH+H9LDszIJA39Sh5P8j6P5589+YdZjE8&#xA;Xku1uWht7aO4nCXlzsZZK8uXAn46Aj7Sgd8ObPLFjjH/ACld3IJxYhlySlvwe87l72qhVCitAKCp&#xA;JO3iTuc07s28VdirsVdirsVdirsVeZ/85AeTP8Q+Rpb23TlqGiFruCnVoaAXCf8AADn81GZ/Z2fg&#xA;yUeUtnC1+Hjx7cxu8/8AI/nnSdQ/IvzHoevESNo1s0UCMfidJz/olK947ig9gFzN1GnlHURlH+I/&#xA;2/Y4mnzxlp5CX8I/sSf/AJx28zW3lzzhf6TqyC1/SUHH1pl4tHJbBpOJLU4qyFq+JC5Z2liM4CUd&#xA;6/S1dmz4JmMtr/Q9Q/Ju0m1zVvMH5i3iEPrdw1tpIcbpYwNxFNh14Kp90zA1p4IxxD+Hn73P0g4j&#xA;LIf4uXuDv+clP/Jat/zG2/8Axtj2Z/e/Be0f7k/BhP5Q+VvzC1L8ubmby75r/RdtLNcIultaRShn&#xA;4qrEXLkvHy/yRt1zK1mXFHL6o353+hxdHiyHFcZ0O6nr35U6ffaf+Xeh2V9A9rdwW5WaCVSjoebG&#xA;jKdxmt1chLLIjk7HTRIxxB508D/9eV/7fWbj/kJ/muq/5F/H9D6oznnePK/+clP/ACWrf8xtv/xt&#xA;mx7M/vfg4PaP9yfg7/nGv/yWq/8AMbcf8a49p/3vwXs7+5HxeqZrnOfJOt2moXn/ADkBc22nXh0+&#xA;+l1elvehBL6TVB5+mxAen8p2OdJjkBpgSLHC6DJEnVUDRv8AQ9hsPKfn+x/NHQNQ17V38x2Edtex&#xA;xXiWiWq2rtGKiRYqovqdFatTSmayWbGcMhEcJsdbt2MMWQZQZHiFHpVMp/Mn8u9M886ENOupDbXU&#xA;DerY3ijkY5KUIK7ckYfaFf1Zj6XUnFKw3anTjLGi+a7/AE78zfyg1uORJ2t4Z2JimhYyWV0F6q6G&#xA;grTswDDqPHN7GWLUx/Fh0so5dNLy+x7X5m83Q+bvyD1LXUi9B7m0KzwbkJLHMEcAnqKio9s1WLD4&#xA;epEfN2mTKMmnMu8JB/zip/xxdf8A+YmD/k22Xdr/AFR9zT2V9B973TNQ7R8pfn3HLL+cBiik9KV0&#xA;s1jlH7LFQA30HOi7PP7j5uh14vOK8nqGreS/zLi80+U7vVPMD+ZdLtNSR5Y0so7UwEo375xDy5KA&#xA;KcmO1ffNfDPiMJgR4SR3255w5ROJMuIA91dHrjojoyOoZGBDKRUEHYgg5rXPfHnmvTNW8h/mTquk&#xA;aHcfVxdh7a2YH/j1v1HFCT3TkBXxWudPhnHNiEpdPvDzuWMsOYiPX9L6t8o+WbHyz5dsdEsh+5s4&#xA;wrPShkkO8kh93Yk5zubKckjI9XfYsYhERHRN8qbHYq7FXYq7FXYq7FXYq06I6MjqGRgQykVBB2II&#xA;OKvmPS/yXv0/OSTRntZT5Yt5vrrTsrejJaKRLHCX+FWJYiNgPc9s389cPA4r9fL4ukhoiM9fwc/2&#xA;Jr+e/wCVusX/AJ30/VNAspZxrnGC8aFGZYrhKJ6khUURGjoST/KxOV9n6uIxkSP0s9fpZSyAxH1c&#xA;3vOg6NZ6JotlpFmvG2sYUgj2oSEFORp3Y7n3zT5JmcjI9XbQgIgAdHl35+3Gt61ojeWNI8v6nezr&#xA;cQzvfRW5a14KhaiSKSWarAfZ8c2HZ4jGXHKQH3uFr+KUOCMSUn/KPzF5r8m+WX0XU/JetTkTyTxT&#xA;21sTUSKtFZXKftL1HbLNZjhlnxCcWrSTnjhwmEmQaP5r8+at51uNb1DQ9W0ryzpFhJ9X0kRuZbue&#xA;R1UFozwWRwpJA/Zp7nKZ4sccfCJRMyefc3wyZJTsgiIHLveWXWl+fB+aj+c7Xylqr2o1H65HbSW7&#xA;pI0Yb7LEBwrFfnT3zYCePwfDM43VOAYZPG8QRNW9Y8w/mp5yk0eeLQfI+txapLGUinubakcTtUcw&#xA;F5l+I3AIG+a7HpMfF6pxpz8mpnw+mErYt+Ydt5xu/wAsdI8o/ofWNX1xRbXWoai0Uk8fJlaR0MxL&#xA;Ozoz8KU2pmRpjjGYzuIjvQaNTGZwiFEy2tU/KPzF5r8m+WX0XU/JetTkTyTxT21sTUSKtFZXKftL&#xA;1HbBrMcMs+ITiuknPHDhMJJ5pvmvz7qnnaXXb/QdY0zyzo9k/wBX0lI3Mt3PK6xgtFWNJGAYsBuF&#xA;C+OVSw444+ESiZyPPuboZMksnEQREDl3vL7rS/Pv/K02852vlLVTbDURepayW7rI0YYEoSA6qxX5&#xA;0zYCePwfDM48qcAwyeN4giat6z5g/NXzjJpE0eheR9bj1SWMrFNdW1IomNRzohcvxG4FBvmtx6TH&#xA;xeqcadhk1M69MJWkF3a/mf5U1Dyp5mgsr3zCRpCWPmG1Beecu0rzsGHxyckMtA1D9mh2y4HDkEoW&#xA;I+qw1SGXGYyoy9NSW/mf5g1b8xtAtfL3lzyvqpuHuY557m+tvq0UHBWHH1HPHl8W5qNvGuHS444J&#xA;GU5R5dCjVTOaPDGJ+IqkV5i8vat5W/KBfIen6Xf6zqt7CWmu7KAy2ySSTiSUM1eQovwr8O+x2yOP&#xA;LHJn8QkRA72U8Rx4fDAMjTH/AMl73zf5Fh1G11PybrNzBfSRyLLbWzF1KBlIKvwB6/zZdrowzEET&#xA;js06LjxAgwky2XzZ5/8AMXnPSDHoGsaD5a0v1r2/5I6TXbRRMyQlV4qwZgFWPka1qe2Yww4oYz6o&#xA;ymdh5OT4mScx6TGI5+bzT8zNK87+ZvPz+YtM8qatHbJ6AhS4tXDsYAN2C8gKkeOZ+lnjx4+Ayj83&#xA;B1MMk8vGInZ67c/m15m/RzNa+QdcOpFTxilgpAHoKVkWrkV/yB/TWjRwvfJGnYnUyraErTj8sl8z&#xA;2vkdb3zObqfWbmS4vLi2l5NNGGdikKIx+H4VHFNgK0yrVcByVCuHYM9NxiFz+p4Z+Y+ledPMv5ht&#xA;5jsPKmrpYobcRxzWrrIwgC1JC8wKkGm+bfTTx48XAZRvfq6zUwyTyiQiaFPpXQNa/TGni9NheaaS&#xA;xX6tfxejMKU3KBm2PY1zQ5IcJqwfc7mEuIXVJjkGTsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVeSfl5qOv/mUdU8wahql3puiQ&#xA;3T2mlaXp8ptiAqqxeaVAHdqOvela7U2zZamMcFRABlVklwdNOWa5E1G9gl/5qR+b/J/ke3uk8zXz&#xA;3MeqmGK7ElXaynVmVZvhHKROH2h/tT0nBlyVwj6ftY6ozx474jz+xMtNu01SHzXLoHmnVbqw06xK&#xA;GS4ajx3ir66PA5VG40Ti4ZfkaZXIcPDxRjZP2NsTxcXDI7fekXk7z55kOmXPk3zffz2ms39mt/5d&#xA;1tH4PMkqevHH6tPtV2HjunWlbs2nhYyQFxBohow5p/RM+oiwe9OhpHmRvy5fzVJ5n1MSr5cS/giS&#xA;elbv6vJdSPLVSGWrKigU+Eb1O+VccPF4OEfXXwumfq8Lj4j9F/Grd5P0XzLq/k3R/MkvmfU+Utld&#xA;S6hCZ9mkKssLR0Wi8CK71xzThHIYcI5imeGMpQjIyPJgWh+ffN/6A8u3+l+ZLnVvNt7qL29z5ekZ&#xA;LhXthX4miC84x8A+LwYkEUzMyaeHFIGIEAOfm4WPUTMYkSuZPLyepfnf5p13SPLiWXl2V4tYuxNc&#xA;PLHTnFZWaercSA9v2RWnc5r9BijKdy+kfeeTnazJKMPT9X6BzQ3nPzXean+Si+btKvp7G+FvBcLJ&#xA;avwpKZFhmjbY8lViw+jJYMIjqOCQsWjLlJwccTRq2Yfl89zL5I0K6urmW7uryxt7q4nnfm7STxLI&#xA;+/hVth4Zi6mhkkAKolvwEnHEnmQGJfnKPOaTaG3lLULi31O5lnjFnG9Iphb28l1TiQauREVHj0zJ&#xA;0Xh+rjG37aaNWZiuA73+i0oh86t53i8r31jqt5pF5LqK6V5g0m1l9Pixgmn5UILAMYKK3hUdVy04&#xA;PC4gQJCrB+TCOfxOEgkb0R8ClU3mbzP5R82+ZPLGr6lqGqT39oo8oM0rcpJbiQRwqCoHx82oz7U4&#xA;N45YMUMkIziAKPqa/FljnKMjdj0vRr3yl5mj/L+TTLbXr2TzJHEZ01L1Rye6VP7sEgUhZtgO3Xrm&#xA;DHNDxLMRw93l+tzDjl4dA+rveNXPn3zZF5Q0LzXFq9/MtrcSaV5k05p+FLhQzRSA/bHNDU9qimbQ&#xA;aeBnKFDfeJdcdRMQjOzttIM/8v6T5jvvMFlok3mXUZ49L05LzzDeQ3G0l5e0MFvGwFAiIjOCK1B9&#xA;8wsk4CJlwjc0PcHMhGRkImR2G/vLDPJHmy91fS4rW8836qnmu61U2enQqxe34KEYGcFVHA/EG4vy&#xA;6UGZWfCImxCPBw2XHwZTIUZHi4qZlbahrZ/P240JtWvDpEdn9eWyMv7v1CFPGlPsfF9nMYxj+W4q&#xA;HFdN4nL8xw36eG1T8+NW1vSIdAudJ1O6sHu75bO4W3k4q0bgsSRT7Xvg7PhGXEJAGha6yco8NGrl&#xA;TMvPiXNr5B1mS0vLi2utP0+a4t7uOSk3qW0RkUs5BryKfF45i6ejkFjmfvb85IxkjmA8y/LDzFPr&#xA;r+WkXzTqdx5hcTXmrWUzc7NraGVo2RqqpDsCvHiT0Ne2Z+qxcHF6Rw8h3uJpsvGI+o8XMoPy35z1&#xA;TUvNN9pPmXXr7y/5ri1SI2FszldPktxKtbX0QvCrIDxZj8dV3O9Z5cAjAShEShw79/vY485MzGRM&#xA;ZcW3dXcyXQb3Wm/PnWdCl1e9l0ixsRfwWTzVj9ST0AVIpug9dqD5Zj5Ix/LiVDiJr722E5fmDG/T&#xA;w23+d2sajo+p+VZrfWLzS7K+vVtdTNs5Ci35qXkChWPNVY9B9GOhgJCVgEgbJ1kzExo1cqKAe113&#xA;XfLPmTVvJ3mzVrhLCXjpqzt8bTWqM1zEKKC8ciunp1UNyG+3WYMYTjGcY78/jyYkSlGRhI+Xw5rv&#xA;IHmPU/Ph8vR2Wp31tBo1mZfM06SlWnuncpFASRvy9JpSR+wQvXHUYhh4rA9R9PuXT5TlEaJ2G/v7&#xA;v0p9+bPnXW9Lv/L/AJY0GVbXVfMdyIP0i6h/q8XNELKrfCWPqfQAe9Mp0eCMhKcuUejPVZpRMYR5&#xA;y+xNR5G1azvdNudO8x6lL6EtNSivrlpo7iBlYPROPFJAxBXjQe2V+PEggxHlQbvCIIonz82N/k9q&#xA;GtXvmvzrbajqt3fwaLfNY2MVzLzVYxNKvIigq9IV3+eX62MRCBAA4hbj6ScpSnZupUp22o62fz9u&#xA;NCbVbxtHjs/ry2JlPp+oyqeNKfYBb7OExj+W4qHFdJE5fmOG/Tw2jbi31dtf8+r+m9QS3sLKGfT4&#xA;lnAEMtxHJO5QceimJQvgCRkAY8MPSNzuzqXFLc1TzPy9+YvmL6p5RnsfM11eeYNQvpINY06/Zfqf&#xA;oiaiDnKqKCY+P2XLfFtQ7Zn5NNG5gxAiBsRzcDFqZEQPF6id+56X5U8j+bvIN9qdv5ejtdX8t6hM&#xA;bmCyuJ3tZ7aQimzCOZHXiAp77DMDNnhmAMrjIfG3NxYJYiRGjE/CkH538hfmd5r8tDTrm50xbuTU&#xA;/wBJc2nn9O3iSL04rWJRbsXpXmzkjeu2+TwajDjnYuqr3+fNhnw5Zxra7v8AZyT/AFLR/wAxL4ag&#xA;Y7XRtO+u2MsE6wzyytc3UirFHJPM1mjqkMRcqoBJNFrTpRGeIVvI0fkPn1biMhvaI27/ANiXeY/y&#xA;rufMv5d2Gjaottb+Y9GgSLTb22keSMNCioKu8cThZQnxLTY770yzFqxjymQvhlzYZdN4mMA7SHJO&#xA;rzyz5gH5WQ+VbIWj6m2kx6VPJPLJHAtbb0JZFZIpHan7IKivtlUcsfG4zdcV/azOKXg8Aq+GvsW+&#xA;T/LnmbRPy8Ty9cx2Umo2lvJb2zx3Epgk51IZ2aAPHTl0Ctjmywnl4hdH8d6cMJRx8JqwPx0YBYfk&#xA;Z5rtfLWkxwXGnWfmjQLxrrTtRikmeOaOR+bRz1gRl4sBx+1UVG1czZa+BmdiYSG4/BcSOimIAbCc&#xA;TsWWt+X+reYPMt1q3nfTdKvrcWCWmmWcNxPIkUisXkY+pBHT1Wb7YNVAAo3XMb8xGEBHGZDff8W5&#xA;HgGcryCJFbdf0Mb078q/zFtPyz1XyO76VLFezCS0ujd3P7lDIkjIU+q/F8Ue243Y5fLV4jlGT1be&#xA;Q/W0R02QYjj28tz+pmXlzSfzHsNP8uaPN+jLTTtJjhg1G6tp5ria4ht4fTREilto1j5lV5nmT4Uz&#xA;FyzxEyl6iTy/FuRijkiIxNUPP9iM816P5qvPMXl7UNIjsXtNHmluLhbueaKSQzQvblUEcMwHFJC1&#xA;Sdz28Y4ZwEZCV3L+3vZ5YSMokVsf0V3JDq35SqfzQ0nznpDR28aytLrNsxKh39NlWWMKCC7cvirT&#xA;x6k5bDWfuTjl8GqWl/eiY+K7zn5F806v+YmheZrCHTmtNDFBFc3E0csxNTvwt5VTgx+Hc44NRCOK&#xA;UDdy/HeubDOWSMhVR/Hc9HzBcx5Bqv5ErqXm7zBcyXAj8vatC1zbWiMfg1N0aP1mSnEiP1Hce7e2&#xA;bOGv4YRH8Q+5wJaISnI/wy6efeyr8uPJ+r+UvJgtZvSvfMMx9W6eSZ1jd1URRRmb05HCRwxqo+A/&#xA;LMfU5o5Ml8ot+nxHHCjvJi/k78v/AMyvLPle80aOHQry7lu3v9Pv5p5yLWd0VA6xNZvyZONVPIdf&#xA;DL82oxZJiXqAqjy3+1ow4csIkekm75nb7EYPIvn+2/M+TzlCNMu4Taix9Ca6nhllVUCiVjHaOkbM&#xA;VDFVBA6V75H8xjOHw/UN75ftZHDkGXjFcq5/sQvnjyB+Z/mzT7GK7n0lbm01FtQT99OIo4woSK3T&#xA;jbcnGxZnY1qaUpTJYNRhxk1xbiv282OfDlmB9NiV/jZP/MWmfmhrVjqViY9JtbG+064sVtVu55Kz&#xA;XICGd5TZq1I05cUUCpO56ZTjnhgQfUSDfLu+LbkjlkCPSLFc+/4Jb5W8mfmHovlzRtCWPR4ZNOkM&#xA;cmuRzTTXS2ks/qzpBFJaqqu6/DUyU/Ck8ufFKRl6t+nS/mww4skYiPp26+XyS/Xvy387+bLPQ9N8&#xA;wxaclzpMyNdeZYZpHuJ4I6jgkRiQqz1q3J+PIVGWY9TjxmRjfq/hYz085iIlXpPNMoPJnn2z/NLV&#xA;POttBpU1vf2oslspLy4jcRqIqOZFtHAYmAGnE9aV75Wc+M4RjPFsb5D9bLwcgymY4eVcz+pBea/I&#xA;v5p+YX0K6uJ9I+vaPqDakp9acRCkimK3RRa1KosYq7mpJO1Bk8Ooww4gOKpCv282ObDlnw/TYN/j&#xA;ZmWj2fnKLVL+7ubXTLKylhLwabZzO/rXzEcp7m4a1hcVVVWoRtuoNBmLM4yAAZE957vIW5MBOySA&#xA;P1/JIvyg8heY/JsWq22qCxeHULg3UUlnNK5UkBfSKSQxfCB+1y+jLtZqI5aIvYdf7WrSYZY7utze&#xA;39iN/Mz8u5/NQ0zUdLvF0/zDoc31jTbmRaxk8lYpJQFqckBB3pvtvkNLqfDsEXGXNlqNPx0QalHk&#xA;qs35o302nxyW2naXDbTJLqU0V1JMblY9/ShUwD00kI+IsSQMH7kXuT3bcvtZfvDXId+/7GPeUPJn&#xA;5k+WtW80alDBo1w/mO6a8jR7y6UW7s8rgNS0PqKPV/yemXZs+LJGI9XpFch+tx8OHLAyPp9Rvmf1&#xA;NzeQvPWn+cNL852U9pq2rCwSz121nc2yzScaM8DpEyqteNKp298RqMZgcZsRux1ZHBMTExRNUeie&#xA;QeWfNLWPme/uRZ/p3zFGkMNks0gtbeGOIwxq0/pM7sBIzMfToTsKDfKjlhcQL4Y/NuEJ0TtxH8fj&#xA;Zg5/JrzvfeRdF8k6jNpUFhpl49zJqdvLPNcGN3kcokTwRqD++bfnvtmX+dxjIcg4rI5fguGNHM4x&#xA;jNUDz/Ae3ZqXZuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV4F+bf5QfmD5h87Xms6L6T2NwkKxobj02BjiVGqrUH2ge+b&#xA;nR6zFDGIy5+51er0mWc7idve8t8xfln+Z3l62e71PTrlbSMcpLmGRZ41XxcxM/Ef61M2GLVYZmgR&#xA;br8mnzwFm697Efrt5/v+T/g2/rmTwjucXxJd5TPy1o/mXzJq8OkaP6lxez8iqepwUKoqzMzEAADK&#xA;8s4Y48UuTZiGTJLhiTb6B/JX8qvO3lLzRdanrskLWk1i9uixzNKwkaaJxUEAfZjbfNNrtXjyQAjz&#xA;t3Gj0uTHK5HakP8AnL+U3nrzR5s/S2hvEbQW0UPptOYnLozctiOP7Xjh0Wsx44cMudo1mlyZJ3E7&#xA;V3vD/NXlbzp5UukttegntGlBMMnqc4pAKV4SIzIaVFRWo75tsOXHkFx3dVmx5cZ9VpH9dvP9/wAn&#xA;/Bt/XLuEdzT4ku8pz5Y8t+cvNF41poMFxezRgNKVfgiA9C8jsqLWm1TvlWXJjxi5UG3FDLkNRssu&#xA;/wCVEfnD/wAsX/T5B/1UzG/lDB3/AGOV+Rz9/wBrv+VEfnD/AMsX/T5B/wBVMf5Qwd/2L+Rz9/2s&#xA;O8yaB5u8s3wsdcguLG4YckDvyV16VR1LIw/1TmViyQyC40XFyxy4zUrCU/Xbz/f8n/Bt/XLOEdzV&#xA;4ku8p/5S8oed/NtxJDoUE90IaevMZPTijr05SOVWppsOuU5s2PGPU34ceXJ9NvdPyT/Kvzt5T8zX&#xA;Op688X1Waxkt0jScysJGmicVFKfZjO9c1Gu1ePJACPO3a6PS5McrkdqUfzi/KTzz5p82/pXRJIRZ&#xA;i1ji4STtGxdCxPwgEd/HDotZjxw4Zc7RrNLkyTuJ2rveBeYNN8xeX9XuNI1Uy29/asFljMhYfEAy&#xA;kMpIIZSCDm5xyhOPFHk6jL4kJcMibS/67ef7/k/4Nv65PhHc1+JLvLM/L/5Vfmnr1sl3Y6dcLaOA&#xA;UnuJVt1ZW6MolZWYe4GYuTV4YGiRbl49LnnuL+b238jPy384eUbvVbjzAYwl5HEkCJN6rAozE17D&#xA;r45qdfqceQAR6O00WnyY74jzeu5rXPdirsVdirsVdirsVdirsVdirsVdirsVcyhgVYVU7EHoRir5&#xA;H/Pf8vIvKfmgXenxeno2rBprZAPhilUj1Yh4Acgy+xp2zpOz9T4kKP1B57tDT+HKx9JSP8pfNUPl&#xA;jz7pmp3LcbJnNveN2EU44Fj7ISG+jLtZh8TGQObTo8vh5ATy5PtQEEVG4PQ5yr07sVY9598m2Hm/&#xA;yzd6NdgB5F52k56xTqD6cg+nZvFajL9PnOOYkGrPhGSJiXxLqOn3enX9zYXkZiu7SV4Z4z1V42Ks&#xA;PvGdXGQkARyLys4GJIPMPon/AJxW1KybQNa0wBRfRXa3Lnbk0UsYRfmFaJvly980na0TxA9Kd12V&#xA;IcBHW3uWah2rsVeAf85V6jZGHQNNHFr4NPcH+ZIiFQfQ7A/8Dm57IibkejqO1ZCojq8H0XSL7WdW&#xA;tNKsE9S8vZVhgXoOTmlSewHUnwzcTmIxMjyDqMcDOQiOZfbvk3yppvlXy7Z6JYKPTt1/ey0AaWU/&#xA;3kr+7H7hQdBnJ58xySMi9VixDHERHROsqbFskkccbSSMEjQFndiAoUCpJJ6AYgK+I/zJ80J5n876&#xA;trUX+81xLwtaih9GJRFGSOxZUBPvnWaXF4eMReW1WXxMhl0Zl/zj5+XcPmTzFJrGpQiXSNHKt6Ti&#xA;qTXLbxoQeqoPjYfIHY5i9o6ngjwj6pfc5XZ2n45cR5D731ZnOu/dirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirEPzW8kr5w8mXmmRqDqEX+k6ax2pcRg8Vr2DqSh+eZOkz+FkB6dXH1WDxIGPXo+L&#xA;JI3jkaORSkiEq6sKEEbEEZ1QLy5FPrf8g/O/+JPJUdncyctT0Xja3FT8TRU/cSfSo4/NSc5vtDBw&#xA;ZLHKT0egz+Jj35h6XmA5rsVfNf8Azkz5H+paxbea7SOltqNIL/iNluUX4HP/ABkjX71983vZee48&#xA;B6cnSdp4KImOvN55+V3nSTyf5ystVZj9RY/V9RQVPK3kIDmg6lCA4HiMztXg8XGY9ejhaTP4cwen&#xA;V9qwzRTRJNC4kikUPHIpqrKwqCCOxGcqRT1C26ube1tpbq4cRW8CNLNK2wVEHJmPsAMQCTQQTT4i&#xA;/MLzdcebfNt/rUlRFM/C0iP7FvH8Ma/PjufcnOs02EY4CLy+pzeJMyes/wDOMXkj1Lm784XcfwQc&#xA;rTTK/wA7D99IPkp4D5t4Zre1c+wgPeXYdl4Ocz8H0Rmkdy7FXlH/ADkT54/QXlD9DWsnHUdc5Qni&#xA;fiS1WnrNt/PUJ7gnwzY9m4OOfEeUfvcDtDPwQoc5Pla3t5rieO3gQyzzOscUairM7GiqB4knOiJo&#xA;WXngCTQfbX5ceT4fKPk+w0ZQDcovq30g/buJN5DXuB9kewGcpqc3iTMnqtPhGOAiybMdudirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVfKX/ORHkj9Beb/0xax8dO1zlNsNkuVp6y/7Kof6T4Z0&#xA;XZufjhwnnH7nQdpYOGfEOUvvY/8Ak953PlLztaXcz8dNu/8ARNRB6CKQikh/4xtRvlUd8v1uDxMZ&#xA;HUcmnRZ/Dyb8i+zQQRUbg9DnLPSuxVJvOPlix80eW77Q7wD07uMrHJSpjlHxRyD3RwD+GW4cpxzE&#xA;h0a8uMTiYnq+HtU0280vUrrTb2P0ruzleCeM9njYqf1Z1sJCQBHIvKTgYkg8w+n/APnHPzx+mvKj&#xA;aFdSctQ0SiR8ju9q390f9gap7DjnP9p4OCfEOUvvd/2dn44cJ5xQf/OSvng6Z5fg8sWknG81f95d&#xA;0O62iN0/56uKfJWHfJdl4OKXGeUfvY9pZ+GHCOcvufOOg6Le65rVlpFivO6vpVhiHYFjux9lG59s&#xA;3uSYhEyPIOkxYzOQiOr7i8s+X7Hy9oFjotiKW1jEsSsdix6u593Ylj7nOSy5DORker1WPGIRER0T&#xA;PK2a2SSOONpJGCRoCzuxAUKBUkk9AMQFfFX5o+dJPN/nO91VWJskP1fTkNfht4iQhoehc1c+5zq9&#xA;Jg8LGB16vL6vP4mQnp0Zv/zjb5H/AEr5ll8yXcfKx0ba2qNnu3Hw/wDItPi9iVzE7Tz8MOAc5fc5&#xA;fZmDilxnkPvfUGc+712KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsT/NLyWnm/yZe6Wq&#xA;g3qD6xpzHtcRAlRXtzBKH2OZOkz+HkB6dWjU4fEgYvimSN45GjkUpIhKurChBGxBGdUC8sRT63/I&#xA;Pzv/AIk8lR2dzJy1PReNrcVPxNFT9xJ9Kjj81Jzm+0MHBkscpPR6DP4mPfmHpeYDmuxV83/85N+S&#xA;Pqup2vm20jpBfUttRoOk6L+6c/68a8f9j75vey89gwPTk6XtTBREx8Xmn5Z+cpfKHnGx1ep+qBvR&#xA;1CNanlbSUD7DqV2ce4GZ2qweLAx69HB0ufw5g9OqG8++bLnzX5r1DW5qqlxJS2iP+64E+GJNu4Ub&#xA;+9TktPhGOAix1ObxJmT2D/nGLyRye784XceycrTTKjuf7+UfR8AP+tms7Vz8oD3l2XZeDnM/B9CZ&#xA;pXcOxV5R/wA5E+eP0F5Q/Q1rJx1HXOUJ4n4ktVp6zbfz1Ce4J8M2PZuDjnxHlH73A7Qz8EKHOT5X&#xA;trae6uYra3jMtxO6xQxKKszueKqB4knOiJAFl56IJNB9ufl75Qg8peUbDRY6GaJOd5Kv7dxJ8UrV&#xA;8K7L7AZyepzHJMyeqwYhjgIsjyhudirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVfK3&#xA;/ORfkcaH5sXXLSPjp2ucpHCj4Uulp6o/2dQ/uS3hnRdm5+OHCecfudB2lg4Z8Q5S+9jH5R+dm8oe&#xA;dLO+lcrptyfqupDt6MhHx/8APNqP9FO+X6zB4mMjr0aNFn8PID0PN9oKwYBlNVO4I6EZyz0zsVSf&#xA;zf5as/M3lq/0O72jvYiiyUrwkHxRyD/UcA5bhynHMSHRry4xOJier4f1fSr3SdUu9Mvk9O8spXgn&#xA;TsGQ0ND3Hgc6yExIAjkXlckDGRieYVNA0S/13WrLR7BOd3eyrFEOwr1Y/wCSoqzHwGDJkEImR5BO&#xA;LGZyER1fcflzQrLQNCsdGsVpbWMSxIehYj7Tn3dqsfc5yWXIZyMj1eqhARiAOQTHIM1s00UMTzTO&#xA;I4o1LySMaKqqKkknsBhAtXxR+Z3nWbzh5wvNWJIs1PoafGa/DbRk8Nj0LVLt7k51WlweFAR69Xl9&#xA;Xn8SZPTozv8A5xs8ijVfME3ma8j5WWjnjaVGz3bjY+/pIeXzKnMPtPUcMeAc5fc5nZmC5cZ6fe+n&#xA;s0DvHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqxb8zPJsXm/ydfaRQfW+Pr6e5&#xA;/ZuYgTHuegbdCfAnMjS5/DyCXTq0anD4kDF8TyxSwyvFKpSWNikiMKFWU0II8Qc6sG3liKNF9Zf8&#xA;4/ed/wDEXkxNPuZOWp6Jxtpan4mgp+4f/gQU/wBj75znaODgyWOUnotBn48dHnF6fmvc5Qv761sL&#xA;K4vruQRWtrG808p6KkalmP0AYYxJNBBIAsvh7zt5mn8z+atR12VeBvZS0ce3wxKAkSmnUqigE51u&#xA;DF4cBHueV1GXxJmSI/LvzY3lTzjput8ecEEnC6SlSYJQUl4/5QVqj3yOpw+JAxZaXN4cxLo+3bee&#xA;G4gjuIHEkMyrJFIpqrKwqrA+BBzlCK2epBX4FeSf85GeeP0L5UXQrWTjqGt1STid0tV/vT/szRPc&#xA;cs2XZmDjnxHlH73X9o5+CHCOcny5Z2lzeXcNpaxmW5uJFigiXdmdyFVR8yc6CUgBZdBGJJoPt7yD&#xA;5StvKflSw0SGheCPldSj/dk7/FK//BGg9qZyeozHJMyeqwYhjgIjoyDKW12KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV8s/85G+Rf0L5pXX7RKafrZZ5QBsl2u8g/wCeg+P58s6H&#xA;szUcUOE84/c6HtLBwy4xyl97Ffyj87Hyj51s7+V+OnXH+i6kO3oyEfH/AM82Af6Kd8yNZg8TGR16&#xA;OPos/h5Aeh5vtBWDAMpqp3BHQjOWemeJ/wDOTHnf9H6Hb+VrSSl1qlJr2h3W2jb4V/56SL9ynxza&#xA;9l4OKXGeQ+91naWfhjwDmfufPHl3Qr7X9cstGsV5XV9KsUdei1+07U/ZRasfYZu8uQQiZHo6XFjM&#xA;5CI6qWr6Ve6Tql3pl6np3dlK8E6eDIaGniPA4YTEgCORRkgYyMTzD6Z/5xv88fpjyu/l67k5X+i0&#xA;ENTu9o5+D/kW1U9hxzQ9p4OGfEOUvvd72dn4ocJ5x+567NNFDE80ziOKNS8kjGiqqipJJ7AZrQLd&#xA;i+JvzM85S+b/ADjfavU/VOXo2EZ/Zt4yQm3Ytu59yc6rS4PDgI9ery+rz+JMnp0egf8AONfkU6lr&#xA;0vmm8jrY6UTHZ8hs92y9R/xjRq/MrmH2pqOGPAOZ+5zOzMFy4z0fTeaB3jsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVYz+Y/k+Hzd5Pv9GYAXLr6tjIf2LiPeM17A/ZPsTmRp&#xA;s3hzEmnUYRkgYviWeCa3nkgnQxzRMUljYUKspowI8Qc6sGxbypBBovqn8jfzHtNT8gSx6rcBLry1&#xA;EVvJHO5tI1LRSn5IpQ/6vvnO6/TGOTblL73odDqBLHvzjzfN/njzVdeavNOoa5cVX61IfQiP+64V&#xA;+GJP9igFfffN7gwjHARDo9RmOSZk9q/5xk8ihIbnzjeR/HJytNLDD9kGk0o+Z+AH2bNV2rqOWMfF&#xA;2vZmChxnryQf/OTnkYQ3Nr5ws46JcFbTVOI/3YB+5lP+so4H5L45LsrUWDA/Bh2pg5THxeVflx5w&#xA;m8o+b7DWVJNujelfRr+3bybSCncgfEvuBmx1OHxIGLr9Lm8OYl06vfv+cg/zBt9P8lwaZpk4e48x&#xA;oCssZ/48iAzuPaWoUeI5ZpuztMZZLP8AD97uO0NRw46HOX3PmKxsrq/vbextIzNdXUiQwRL1Z5GC&#xA;qo+ZOb+UgBZ5OhjEyIA5l9weR/Ktr5V8rafodvRjaxj6xKP92TN8Ur9ju5NK9qDOTz5jkmZF6rDi&#xA;GOAiOie5S2uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kvlv/nI/yMdH&#xA;80J5htI6afrVTOQPhS7UfGD/AMZF+P3PLOg7Mz8UOE84/c6HtPBwy4xyP3vKLXUb60iuobad4Yr2&#xA;L0LpENBJHzWTi3tyQHNkYg1fR10ZkAgHmi/LPl+98w6/Y6LZCtxfSrErUqFU7u5p2RQWPsMjlyCE&#xA;TI9GWHGZyER1fceiaPZaLpFnpNinC0solhhXvRBSpp3PUnxzkskzKRkeZerhERAA5BR8zeX7LzDo&#xA;F/ot6P8ARr6JomalSrdUcDxRwGHuMOLIYSEh0RkxicTE9Xw3rekXujaveaVfJwu7KV4Jl7ckNKg9&#xA;weoPhnW45iURIci8pkgYSMT0U7zUr+9W3W7necWkK29sHNfThQkqi+wLHDGIHLqiUzKr6PY/+caP&#xA;I/6Q1y4803cdbTS6w2XIbNdSL8TCu37uM/ewPbNX2pn4Y8A5n7nZ9mYLJmenJ9MZoXeOxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVjn5heUIPNvlG/0WSgmlTnZyt+xc&#xA;R/FE1fCuzexOX6bMccxJpz4hkgYviO5tp7W5ltriMxXEDtFNEwoyuh4spHiCM6wEEWHlZAg0X0J/&#xA;zjJ5FaK3ufOF7FRrgNa6XyH+6waTSj5sOAPs2aTtXUWRAfF3XZmCgZnrye95p3bOxV88/wDOTnkU&#xA;pNbecbNPhl42mqAD9sCkMp+ajgfkvjm77K1HPGfg6ftPB/GPi8K07T7vUb+2sLOMy3d3KkMEY6s8&#xA;jBVH3nNvKQiCTyDqIQMiAOZfcHkvyvZ+VvLFhodrQraRgTSgU9SZvikkP+s5P0bZyWfKckzI9Xq8&#xA;OMQiIjoneVNjsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirw78z&#xA;f+cfdT8yecX1rRLq0tLW9CNqEc5kVxMDxd41SN1PJQDuR8VfHNtpe0RjhwyBJHJ1eq7POSfFEgXz&#xA;ezaRpVlpGlWml2KenaWUSQQJ34oKCtOpPUnuc1c5mRJPMuyjERAA5BF5Fk7FUu8x6FZa/oV9o18t&#xA;ba+iaJz1Kk/Zce6NRh7jJ4shhISHRhOAlEg8i8l/Kb8hdT8q+aDrevXFpd/Vo2GnR2zSPSV/hMj+&#xA;pHHSiVpSu59s2Ws7QGSHDGx3uv0mgOOfFKj3Pa81Ts3Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FX//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:EE7F117407206811B699D2F41FF0AFD9</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:EE7F117407206811B699D2F41FF0AFD9</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:ED7F117407206811B699D2F41FF0AFD9</stRef:instanceID>
            <stRef:documentID>xmp.did:ED7F117407206811B699D2F41FF0AFD9</stRef:documentID>
            <stRef:originalDocumentID>uuid:E3B705F59336E0118987E9F32614B546</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:20:43-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:20:57-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:10-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:28-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:24:53-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:25:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:17-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF7F11740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:45-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:008011740720681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:26:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EC80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:14-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ED80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:22-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EE80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:27:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EF80265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F080265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:30-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F180265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:28:41-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F280265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F380265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:10-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F480265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F580265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:29:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F680265D0820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:30:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1405FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1505FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:26-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1605FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:34-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1705FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:31:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1805FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:11-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1905FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:33-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1A05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1B05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:32:58-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1C05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1D05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:24-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1E05FEE70820681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:30-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C62CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:45-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C72CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:33:51-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C82CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:15-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C92CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:23-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CA2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:41-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CB2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:34:46-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CC2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:03-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CD2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:08-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CE2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CF2CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D02CDF450920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:35:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B44FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:36:05-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B54FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:36:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B64FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:36:39-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B74FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:01-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B84FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:06-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B94FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:30-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BA4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:40-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BB4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:37:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BC4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:38:09-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BD4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:38:28-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BE4FCA990920681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:38:38-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:929C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:39-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:939C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:39:09-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:949C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:39:25-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:959C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:39:32-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:969C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:40:15-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:979C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:40:23-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:989C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:41:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:999C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:41:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9A9C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:41:49-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9B9C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:42:12-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9C9C0E020A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:42:44-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7C65C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:42:53-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7D65C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:43:08-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7E65C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:43:13-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7F65C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:43:29-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8065C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:43:34-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8165C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:43:52-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8265C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:43:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8365C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:44:14-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8465C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:44:18-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8565C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:44:36-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8665C18C0A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:44:41-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:889836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:45-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:899836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:45:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8A9836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:45:20-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8B9836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:45:24-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8C9836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:45:49-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8D9836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:45:55-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8E9836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:46:14-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8F9836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:46:19-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:909836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:46:38-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:919836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:46:42-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:929836D80A20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:46:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2E27A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:47:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2F27A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:47:23-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3027A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:47:32-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3127A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:47:49-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3227A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:48-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3327A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:48:16-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3427A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:48:20-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3527A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:48:35-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3627A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:48:39-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3727A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:48:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3827A3220B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:49:03-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:947C85750B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:49:24-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:957C85750B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:49:29-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:967C85750B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:49:45-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:977C85750B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:49:52-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:987C85750B20681188C6AF33B70074B5</stEvt:instanceID>
                  <stEvt:when>2011-03-16T10:50:13-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ED7F117407206811B699D2F41FF0AFD9</stEvt:instanceID>
                  <stEvt:when>2012-02-13T13:41:56-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EE7F117407206811B699D2F41FF0AFD9</stEvt:instanceID>
                  <stEvt:when>2012-02-13T13:42:31-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>uuid:E3B705F59336E0118987E9F32614B546</xmpMM:OriginalDocumentID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>8.500000</stDim:w>
            <stDim:h>11.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>PANTONE 280 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Red</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Yellow</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Green</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Cyan</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Blue</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Magenta</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=90 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>14.999998</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=90 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=80 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>80.000000</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=35 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>35.000004</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=5 M=0 Y=90 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>5.000001</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>19.999998</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=90 M=30 Y=95 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>90.000000</xmpG:cyan>
                           <xmpG:magenta>30.000002</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>30.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=75 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=10 Y=45 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>80.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>45.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=70 M=15 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>70.000000</xmpG:cyan>
                           <xmpG:magenta>14.999998</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=95 Y=5 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>5.000001</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=25 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>25.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=100 Y=35 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>35.000004</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=100 Y=50 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=95 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>19.999998</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=25 Y=40 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>25.000000</xmpG:magenta>
                           <xmpG:yellow>39.999996</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=45 Y=50 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>45.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>5.000001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=50 Y=60 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>60.000004</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=55 M=60 Y=65 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>55.000000</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>39.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=40 Y=65 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>39.999996</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=30 M=50 Y=75 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>30.000002</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=60 Y=80 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=65 Y=90 K=35</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>65.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>35.000004</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=70 Y=80 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>70.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 282 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>68.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>53.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 280 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>72.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>18.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grayscale</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=100</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>255</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=90</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>229</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=80</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>203</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=70</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>178</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=60</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>152</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=50</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>127</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=40</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>101</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=30</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>76</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=20</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>50</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=10</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>25</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=5</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>12</xmpG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -131.081 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 131.081 li
225.356 131.081 li
225.356 0 li
cp
clp
[1 0 0 1 0 0 ]ct
57.1709 1.61475 mo
56.4961 1.76172 56.1719 1.99658 55.9663 2.26074 cv
55.644 2.73047 55.145 3.66943 54.3521 5.51953 cv
52.9141 8.95508 49.5957 16.2661 48.1567 20.0835 cv
47.98 20.23 47.5693 20.3184 47.188 20.3184 cv
46.8652 20.3184 46.6011 20.23 46.395 20.0835 cv
46.0723 19.3779 45.6313 18.3218 45.2793 17.4995 cv
44.0459 14.7104 li
43.6357 13.7705 43.2529 12.8892 42.9893 12.4487 cv
42.7251 12.9482 42.3721 13.6538 41.9907 14.4756 cv
40.6113 17.4697 li
40.1704 18.4097 39.8472 19.2612 39.3774 20.23 cv
39.231 20.3765 38.8496 20.4648 38.4087 20.4648 cv
38.0859 20.4648 37.9097 20.3765 37.6445 20.23 cv
37.1748 18.9966 36.001 16.354 35.0029 14.1523 cv
30.187 3.64014 li
29.394 1.90869 29.2183 1.76172 28.249 1.55615 cv
27.5146 1.40967 li
27.2803 1.11523 27.3101 .528809 27.6333 .380859 cv
28.7192 .44043 29.9521 .470215 31.4502 .470215 cv
32.7422 .470215 33.8872 .44043 35.0029 .380859 cv
35.2373 .499512 35.355 1.23291 35.062 1.40967 cv
34.5327 1.49707 li
34.0044 1.58545 33.7983 1.73193 33.7983 1.9375 cv
33.7983 2.14355 34.415 3.52344 35.3257 5.57861 cv
38.2329 12.0679 li
39.0547 13.8882 39.3477 14.5044 39.7007 15.2095 cv
40.0527 14.5635 40.5234 13.6826 41.1099 12.3613 cv
41.4917 11.5098 li
41.6973 11.0396 41.8735 10.3945 41.8735 10.2178 cv
41.8735 10.041 41.8145 9.71826 41.6973 9.4248 cv
38.8789 3.22998 li
38.2031 1.76172 37.9976 1.55615 36.8813 1.43848 cv
36.5879 1.40967 li
36.2949 1.17432 36.353 .499512 36.6763 .380859 cv
37.9385 .44043 39.084 .470215 40.376 .470215 cv
41.8735 .470215 42.9893 .44043 43.752 .380859 cv
44.1045 .470215 44.0752 1.2627 43.8696 1.40967 cv
43.3711 1.52686 li
43.0181 1.61475 42.5776 1.73193 42.5776 1.9375 cv
42.5776 2.17285 42.6958 2.49561 42.8423 2.81836 cv
43.7227 4.84521 li
43.9873 5.46143 44.2813 6.10693 44.5449 6.63574 cv
44.8384 6.01904 45.1323 5.43213 45.4258 4.78564 cv
45.6904 4.19873 li
46.1895 3.08252 46.4829 2.20215 46.4829 2.02588 cv
46.4829 1.8208 46.3657 1.73193 45.896 1.61475 cv
45.0151 1.40967 li
44.8091 1.20313 44.8384 .528809 45.1035 .380859 cv
45.9546 .44043 47.0112 .470215 47.98 .470215 cv
49.1255 .470215 50.2124 .44043 50.9756 .380859 cv
51.21 .528809 51.269 1.23291 51.0044 1.43848 cv
50.1826 1.61475 li
49.1841 1.8208 48.979 1.9375 47.9512 3.69971 cv
47.2461 4.90283 46.5117 6.25391 46.1309 7.0166 cv
45.8667 7.54541 45.4854 8.39697 45.4854 8.54395 cv
45.4854 8.63184 45.5142 8.80811 45.7197 9.27832 cv
47.0996 12.2432 li
47.8628 13.8584 48.2153 14.7104 48.3911 15.1216 cv
49.8008 11.7153 51.1812 8.07471 52.5903 4.49219 cv
52.7954 3.99316 53.3828 2.31885 53.3828 1.99658 cv
53.3828 1.79102 53.207 1.70264 52.8247 1.58545 cv
52.1792 1.40967 li
51.9443 1.14453 52.0034 .528809 52.2676 .380859 cv
53.207 .44043 54.3818 .470215 55.2622 .470215 cv
56.29 .470215 57.1411 .44043 57.9634 .380859 cv
58.228 .528809 58.2568 1.17432 58.0518 1.40967 cv
57.1709 1.61475 li
cp
false sop
/0 
<<
/Name (PANTONE 280 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 1 .72 0 .18 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
65.4507 8.10352 mo
65.4507 8.92627 65.4795 8.98438 66.2729 8.98438 cv
68.2983 8.98438 li
69.8252 8.98438 70.1777 8.77881 70.4712 7.37012 cv
70.6182 6.63574 li
70.8237 6.40088 71.5571 6.40088 71.7051 6.66455 cv
71.646 7.60498 71.6167 8.66162 71.6167 9.77783 cv
71.6167 10.8936 71.646 11.9502 71.7051 12.8892 cv
71.5571 13.1543 70.8237 13.1831 70.6182 12.9189 cv
70.4712 12.1851 li
70.1777 10.7754 69.8252 10.5405 68.2983 10.5405 cv
66.2729 10.5405 li
65.4795 10.5405 65.4507 10.5698 65.4507 11.4512 cv
65.4507 14.9448 li
65.4507 16.2959 65.5688 17.2354 65.9199 17.7344 cv
66.3022 18.2622 66.8594 18.4971 69.0034 18.4971 cv
71.5571 18.4971 72.5562 18.4097 74.1709 15.0918 cv
74.4058 14.769 75.1396 14.8862 75.2578 15.2378 cv
75.1396 16.7651 74.4351 19.1436 74.0244 19.9365 cv
72.4683 19.8774 69.6494 19.8486 67.2417 19.8486 cv
63.4248 19.8486 li
62.0151 19.8486 60.5762 19.8774 58.374 19.9365 cv
58.1392 19.7603 58.1392 19.0552 58.374 18.9087 cv
59.7544 18.7036 li
61.0762 18.4971 61.252 18.3218 61.252 15.6206 cv
61.252 4.66846 li
61.252 1.99658 61.0762 1.8208 59.7544 1.55615 cv
59.0205 1.40967 li
58.7559 1.23291 58.7856 .557617 59.0786 .380859 cv
60.4595 .44043 61.8975 .470215 63.3066 .470215 cv
69.5322 .470215 li
71.4111 .470215 73.0845 .44043 73.4658 .380859 cv
73.4951 .851563 73.7007 2.96533 73.8481 4.93262 cv
73.7305 5.25586 73.0552 5.31396 72.7617 5.05029 cv
72.439 4.02246 72.0273 3.1416 71.646 2.73047 cv
71.0879 2.17285 70.207 1.8208 68.7681 1.8208 cv
66.4194 1.8208 li
65.4507 1.8208 65.4507 1.87939 65.4507 2.96533 cv
65.4507 8.10352 li
cp
f
83.0967 14.9746 mo
83.0967 16.354 83.2144 17.2939 83.5957 17.7637 cv
83.978 18.2622 84.5054 18.4971 86.6489 18.4971 cv
89.3218 18.4971 90.1431 18.4097 91.875 15.0039 cv
92.1104 14.7104 92.7856 14.8276 92.9912 15.1797 cv
92.8447 16.707 92.1401 19.1436 91.729 19.9365 cv
90.1724 19.8774 87.354 19.8486 84.9463 19.8486 cv
81.0117 19.8486 li
79.6611 19.8486 78.1929 19.8774 76.3726 19.9365 cv
76.1084 19.7603 76.0493 19.0854 76.2842 18.9087 cv
77.4009 18.7617 li
78.7217 18.5864 78.8975 18.3516 78.8975 15.6206 cv
78.8975 4.69775 li
78.8975 1.9668 78.7217 1.70264 77.4009 1.52686 cv
76.5488 1.40967 li
76.2549 1.23291 76.2549 .557617 76.6079 .380859 cv
78.1348 .44043 79.603 .470215 81.0117 .470215 cv
82.4209 .470215 83.8887 .44043 85.3569 .380859 cv
85.5918 .557617 85.5918 1.23291 85.3569 1.40967 cv
84.5942 1.52686 li
83.2729 1.73193 83.0967 1.9668 83.0967 4.69775 cv
83.0967 14.9746 li
cp
f
100.654 14.9746 mo
100.654 16.354 100.772 17.2939 101.154 17.7637 cv
101.536 18.2622 102.063 18.4971 104.208 18.4971 cv
106.879 18.4971 107.702 18.4097 109.433 15.0039 cv
109.669 14.7104 110.344 14.8276 110.55 15.1797 cv
110.402 16.707 109.699 19.1436 109.287 19.9365 cv
107.73 19.8774 104.913 19.8486 102.505 19.8486 cv
98.5703 19.8486 li
97.2188 19.8486 95.751 19.8774 93.9307 19.9365 cv
93.6665 19.7603 93.6084 19.0854 93.8428 18.9087 cv
94.9585 18.7617 li
96.2798 18.5864 96.4561 18.3516 96.4561 15.6206 cv
96.4561 4.69775 li
96.4561 1.9668 96.2798 1.70264 94.9585 1.52686 cv
94.1069 1.40967 li
93.813 1.23291 93.813 .557617 94.166 .380859 cv
95.6924 .44043 97.1606 .470215 98.5703 .470215 cv
99.9795 .470215 101.447 .44043 102.916 .380859 cv
103.15 .557617 103.15 1.23291 102.916 1.40967 cv
102.152 1.52686 li
100.831 1.73193 100.654 1.9668 100.654 4.69775 cv
100.654 14.9746 li
cp
f
118.359 8.10352 mo
118.359 8.92627 118.39 8.98438 119.182 8.98438 cv
121.207 8.98438 li
122.734 8.98438 123.087 8.77881 123.38 7.37012 cv
123.528 6.63574 li
123.733 6.40088 124.467 6.40088 124.613 6.66455 cv
124.555 7.60498 124.525 8.66162 124.525 9.77783 cv
124.525 10.8936 124.555 11.9502 124.613 12.8892 cv
124.467 13.1543 123.733 13.1831 123.528 12.9189 cv
123.38 12.1851 li
123.087 10.7754 122.734 10.5405 121.207 10.5405 cv
119.182 10.5405 li
118.39 10.5405 118.359 10.5698 118.359 11.4512 cv
118.359 14.9448 li
118.359 16.2959 118.477 17.2354 118.829 17.7344 cv
119.211 18.2622 119.77 18.4971 121.912 18.4971 cv
124.467 18.4971 125.465 18.4097 127.08 15.0918 cv
127.314 14.769 128.049 14.8862 128.167 15.2378 cv
128.049 16.7651 127.345 19.1436 126.934 19.9365 cv
125.378 19.8774 122.559 19.8486 120.15 19.8486 cv
116.333 19.8486 li
114.924 19.8486 113.485 19.8774 111.284 19.9365 cv
111.049 19.7603 111.049 19.0552 111.284 18.9087 cv
112.664 18.7036 li
113.984 18.4971 114.161 18.3218 114.161 15.6206 cv
114.161 4.66846 li
114.161 1.99658 113.984 1.8208 112.664 1.55615 cv
111.929 1.40967 li
111.665 1.23291 111.694 .557617 111.988 .380859 cv
113.368 .44043 114.807 .470215 116.216 .470215 cv
122.441 .470215 li
124.319 .470215 125.994 .44043 126.377 .380859 cv
126.404 .851563 126.61 2.96533 126.757 4.93262 cv
126.64 5.25586 125.965 5.31396 125.671 5.05029 cv
125.349 4.02246 124.937 3.1416 124.555 2.73047 cv
123.997 2.17285 123.116 1.8208 121.678 1.8208 cv
119.329 1.8208 li
118.359 1.8208 118.359 1.87939 118.359 2.96533 cv
118.359 8.10352 li
cp
f
135.419 20.3184 mo
132.718 20.3184 131.043 19.5547 130.427 19.2026 cv
129.869 18.5562 129.487 16.4429 129.487 14.4453 cv
129.693 14.064 130.368 14.0347 130.603 14.3579 cv
131.19 16.2661 133.157 18.9673 135.654 18.9673 cv
137.826 18.9673 138.824 17.4697 138.824 16.002 cv
138.824 13.624 136.593 12.2139 134.831 11.3335 cv
132.718 10.2759 130.397 8.51514 130.397 5.60742 cv
130.368 2.28955 132.951 0 137.21 0 cv
138.178 0 139.382 .117188 140.557 .470215 cv
140.938 .586914 141.202 .64502 141.555 .70459 cv
141.791 1.35059 142.083 2.93555 142.083 4.90283 cv
141.937 5.25586 141.202 5.28516 140.938 4.99121 cv
140.439 3.49365 139.178 1.35059 137.063 1.35059 cv
135.125 1.35059 134.068 2.61328 134.068 4.08154 cv
134.068 5.43213 135.272 6.66455 136.74 7.42822 cv
138.678 8.45654 li
140.498 9.4248 142.818 11.1279 142.818 14.3579 cv
142.818 17.9692 139.853 20.3184 135.419 20.3184 cv
cp
f
150.775 14.9746 mo
150.775 16.354 150.893 17.2939 151.274 17.7637 cv
151.656 18.2622 152.185 18.4971 154.328 18.4971 cv
156.999 18.4971 157.821 18.4097 159.554 15.0039 cv
159.788 14.7104 160.464 14.8276 160.668 15.1797 cv
160.522 16.707 159.818 19.1436 159.408 19.9365 cv
157.852 19.8774 155.032 19.8486 152.624 19.8486 cv
148.69 19.8486 li
147.339 19.8486 145.87 19.8774 144.052 19.9365 cv
143.786 19.7603 143.729 19.0854 143.962 18.9087 cv
145.078 18.7617 li
146.399 18.5864 146.575 18.3516 146.575 15.6206 cv
146.575 4.69775 li
146.575 1.9668 146.399 1.70264 145.078 1.52686 cv
144.226 1.40967 li
143.933 1.23291 143.933 .557617 144.285 .380859 cv
145.813 .44043 147.281 .470215 148.69 .470215 cv
150.1 .470215 151.567 .44043 153.035 .380859 cv
153.271 .557617 153.271 1.23291 153.035 1.40967 cv
152.272 1.52686 li
150.95 1.73193 150.775 1.9668 150.775 4.69775 cv
150.775 14.9746 li
cp
f
168.479 8.10352 mo
168.479 8.92627 168.509 8.98438 169.302 8.98438 cv
171.327 8.98438 li
172.854 8.98438 173.207 8.77881 173.5 7.37012 cv
173.648 6.63574 li
173.853 6.40088 174.587 6.40088 174.733 6.66455 cv
174.675 7.60498 174.646 8.66162 174.646 9.77783 cv
174.646 10.8936 174.675 11.9502 174.733 12.8892 cv
174.587 13.1543 173.853 13.1831 173.648 12.9189 cv
173.5 12.1851 li
173.207 10.7754 172.854 10.5405 171.327 10.5405 cv
169.302 10.5405 li
168.509 10.5405 168.479 10.5698 168.479 11.4512 cv
168.479 14.9448 li
168.479 16.2959 168.597 17.2354 168.95 17.7344 cv
169.332 18.2622 169.891 18.4971 172.032 18.4971 cv
174.587 18.4971 175.586 18.4097 177.2 15.0918 cv
177.436 14.769 178.17 14.8862 178.285 15.2378 cv
178.17 16.7651 177.465 19.1436 177.054 19.9365 cv
175.496 19.8774 172.679 19.8486 170.271 19.8486 cv
166.454 19.8486 li
165.045 19.8486 163.604 19.8774 161.403 19.9365 cv
161.169 19.7603 161.169 19.0552 161.403 18.9087 cv
162.783 18.7036 li
164.104 18.4971 164.281 18.3218 164.281 15.6206 cv
164.281 4.66846 li
164.281 1.99658 164.104 1.8208 162.783 1.55615 cv
162.051 1.40967 li
161.785 1.23291 161.814 .557617 162.107 .380859 cv
163.488 .44043 164.928 .470215 166.336 .470215 cv
172.562 .470215 li
174.44 .470215 176.113 .44043 176.495 .380859 cv
176.525 .851563 176.73 2.96533 176.877 4.93262 cv
176.76 5.25586 176.085 5.31396 175.791 5.05029 cv
175.468 4.02246 175.057 3.1416 174.675 2.73047 cv
174.118 2.17285 173.235 1.8208 171.798 1.8208 cv
169.448 1.8208 li
168.479 1.8208 168.479 1.87939 168.479 2.96533 cv
168.479 8.10352 li
cp
f
189.561 15.6206 mo
189.561 18.3516 189.737 18.5864 191.059 18.7617 cv
192.232 18.9087 li
192.439 19.0854 192.439 19.7603 192.232 19.9365 cv
190.325 19.8774 188.885 19.8486 187.478 19.8486 cv
186.065 19.8486 184.599 19.8774 182.866 19.9365 cv
182.631 19.7603 182.631 19.0854 182.866 18.9087 cv
183.864 18.7617 li
185.187 18.5562 185.363 18.3516 185.363 15.6206 cv
185.363 14.1523 li
185.363 12.6841 185.332 12.2139 184.569 10.6582 cv
181.074 3.43506 li
180.489 2.23145 180.225 1.76172 179.195 1.58545 cv
178.198 1.40967 li
177.934 1.17432 177.963 .470215 178.315 .380859 cv
179.636 .44043 180.723 .470215 182.455 .470215 cv
184.246 .470215 185.744 .44043 186.741 .380859 cv
187.007 .499512 187.065 1.17432 186.801 1.40967 cv
185.803 1.64404 li
185.273 1.76172 185.098 1.87939 185.098 1.90869 cv
185.098 2.14355 185.244 2.58301 185.862 3.96387 cv
187.24 7.10547 li
187.682 8.07471 188.239 9.24902 188.592 9.98291 cv
189.442 8.54395 190.266 6.84131 191.059 5.34326 cv
192.174 3.25879 192.585 2.28955 192.585 1.9375 cv
192.585 1.76172 192.292 1.64404 191.587 1.52686 cv
190.91 1.40967 li
190.678 1.2627 190.646 .528809 190.94 .380859 cv
192.114 .44043 193.172 .470215 194.229 .470215 cv
195.344 .470215 196.255 .44043 197.105 .380859 cv
197.46 .499512 197.46 1.20313 197.225 1.40967 cv
196.462 1.55615 li
195.933 1.64404 195.375 1.84912 195.052 2.26074 cv
194.612 2.81836 193.876 3.87549 192.467 6.42969 cv
190.618 9.77783 li
189.854 11.1567 189.561 11.8911 189.561 13.5649 cv
189.561 15.6206 li
cp
f
118.458 54.2432 mo
123.646 54.2432 125.435 57.6206 122.549 63.3003 cv
112.518 83.1738 li
102.487 63.3003 li
99.6006 57.6206 101.375 54.2432 106.562 54.2432 cv
118.458 54.2432 li
cp
128.587 114.964 mo
117.241 92.5225 li
132.287 62.8135 li
136.67 54.3403 137.74 53.8535 145.143 53.8535 cv
145.143 49.5688 li
79.8936 49.5688 li
79.8936 53.8535 li
87.2949 53.8535 88.4629 54.3403 92.748 62.8135 cv
107.795 92.5225 li
96.4492 114.964 li
69.8628 62.2285 li
66.7461 55.9966 67.5254 53.8535 71.8589 53.8535 cv
74.6348 53.8535 li
74.6348 49.5688 li
44.4453 49.5688 li
44.4453 53.8213 li
46.0029 53.9185 li
55.7417 54.5029 56.4238 55.0229 60.9033 63.9819 cv
94.8916 131.081 li
97.7148 131.081 li
112.518 101.857 li
127.321 131.081 li
130.146 131.081 li
164.133 63.9819 li
168.613 55.0229 169.294 54.438 179.033 53.8535 cv
179.677 53.813 li
179.677 49.5688 li
150.401 49.5688 li
150.401 53.8535 li
153.177 53.8535 li
157.511 53.8535 158.289 55.9966 155.173 62.2285 cv
128.587 114.964 li
cp
f
9.05957 29.7681 mo
9.05957 30.0386 9.10449 31.2388 9.23926 32.1079 cv
9.17969 32.2886 8.77441 32.3481 8.66943 32.2134 cv
8.26465 30.8188 7.30469 30.0688 5.84961 30.0688 cv
4.18457 30.0688 2.3999 31.4937 2.3999 34.478 cv
2.3999 37.4634 4.12451 39.0679 5.9248 39.0679 cv
7.73975 39.0679 8.57959 37.7632 8.98438 36.7437 cv
9.10449 36.6235 9.46436 36.6685 9.55469 36.8481 cv
9.44971 37.9585 9.19434 38.8579 8.98438 39.2026 cv
8.17432 39.4282 7.10938 39.7583 5.93945 39.7583 cv
4.46973 39.7583 2.96973 39.4126 1.90479 38.6177 cv
.824707 37.7935 0 36.5483 0 34.688 cv
0 32.8579 .779785 31.5688 1.81494 30.7134 cv
2.87988 29.8286 4.40967 29.3784 5.96973 29.3784 cv
7.49951 29.3784 8.60938 29.7388 9.05957 29.7681 cv
cp
f
13.8149 33.5181 mo
13.8149 33.938 13.8296 33.9683 14.2349 33.9683 cv
15.2695 33.9683 li
16.0498 33.9683 16.2295 33.8638 16.3799 33.1431 cv
16.4546 32.7681 li
16.5596 32.6479 16.9346 32.6479 17.0098 32.7837 cv
16.9795 33.2632 16.9648 33.8032 16.9648 34.3735 cv
16.9648 34.9429 16.9795 35.4829 17.0098 35.9634 cv
16.9346 36.0981 16.5596 36.1128 16.4546 35.978 cv
16.3799 35.603 li
16.2295 34.8833 16.0498 34.7632 15.2695 34.7632 cv
14.2349 34.7632 li
13.8296 34.7632 13.8149 34.7778 13.8149 35.228 cv
13.8149 37.0132 li
13.8149 37.7036 13.875 38.1831 14.0547 38.438 cv
14.25 38.7085 14.5347 38.8276 15.6299 38.8276 cv
16.9346 38.8276 17.4448 38.7827 18.2695 37.0884 cv
18.3896 36.9233 18.7646 36.9829 18.8247 37.1636 cv
18.7646 37.9429 18.4048 39.1577 18.1948 39.563 cv
17.3994 39.5327 15.96 39.5181 14.73 39.5181 cv
12.7798 39.5181 li
12.0601 39.5181 11.3247 39.5327 10.2002 39.563 cv
10.0801 39.4731 10.0801 39.1128 10.2002 39.0376 cv
10.9048 38.9331 li
11.5801 38.8276 11.6699 38.7378 11.6699 37.3579 cv
11.6699 31.7632 li
11.6699 30.3989 11.5801 30.3081 10.9048 30.1733 cv
10.5298 30.0981 li
10.395 30.0083 10.4102 29.6636 10.5601 29.5737 cv
11.2651 29.603 12 29.6187 12.7197 29.6187 cv
15.8999 29.6187 li
16.8599 29.6187 17.7148 29.603 17.9097 29.5737 cv
17.9248 29.813 18.0298 30.8931 18.1045 31.8979 cv
18.0444 32.063 17.6997 32.0933 17.5498 31.9585 cv
17.3848 31.4331 17.1748 30.9839 16.9795 30.7729 cv
16.6948 30.4888 16.2446 30.3081 15.5098 30.3081 cv
14.3096 30.3081 li
13.8149 30.3081 13.8149 30.3384 13.8149 30.8931 cv
13.8149 33.5181 li
cp
f
28.8594 36.9683 mo
28.8594 37.9429 28.8594 38.8882 28.8892 39.3833 cv
28.7842 39.563 28.3643 39.728 28.0044 39.728 cv
27.9893 39.728 27.4941 38.9634 26.7891 38.0933 cv
23.3242 33.8032 li
22.4546 32.7388 21.9595 32.1079 21.6895 31.8833 cv
21.6143 32.0337 21.6143 32.2886 21.6143 32.8433 cv
21.6143 35.7534 li
21.6143 36.9683 21.6743 38.0933 21.8394 38.4985 cv
21.9746 38.813 22.3193 38.9185 22.7095 38.978 cv
23.1294 39.0376 li
23.2495 39.1577 23.2192 39.4731 23.1294 39.563 cv
22.3193 39.5327 21.7197 39.5181 21.1196 39.5181 cv
20.5645 39.5181 20.0098 39.5327 19.4395 39.563 cv
19.3496 39.4731 19.3193 39.1577 19.4395 39.0376 cv
19.6943 38.9927 li
20.0996 38.9185 20.3994 38.813 20.5195 38.4985 cv
20.6846 38.0933 20.7295 36.9683 20.7295 35.7534 cv
20.7295 31.9438 li
20.7295 31.1187 20.7144 30.8784 20.6245 30.6685 cv
20.5044 30.4136 20.2944 30.2339 19.7695 30.1587 cv
19.3496 30.0981 li
19.2446 29.978 19.2598 29.6187 19.4097 29.5737 cv
20.1147 29.603 20.8647 29.6187 21.4795 29.6187 cv
21.9893 29.6187 22.4243 29.603 22.7393 29.5737 cv
22.8896 30.2485 23.8643 31.3882 25.2144 32.9937 cv
26.4741 34.478 li
27.1343 35.2583 27.5693 35.7837 27.9141 36.1284 cv
27.9741 35.978 27.9741 35.7231 27.9741 35.4536 cv
27.9741 33.3833 li
27.9741 32.1685 27.9141 31.0435 27.749 30.6382 cv
27.6143 30.3237 27.2842 30.2183 26.8794 30.1587 cv
26.4741 30.0981 li
26.3545 29.978 26.3843 29.6636 26.4741 29.5737 cv
27.2842 29.603 27.8691 29.6187 28.4844 29.6187 cv
29.0391 29.6187 29.5791 29.603 30.1641 29.5737 cv
30.2539 29.6636 30.2842 29.978 30.1641 30.0981 cv
29.894 30.1431 li
29.5044 30.2036 29.2192 30.3237 29.084 30.6382 cv
28.9189 31.0435 28.8594 32.1685 28.8594 33.3833 cv
28.8594 36.9683 li
cp
f
34.3491 30.7437 mo
34.3491 30.3833 34.3491 30.3081 33.9893 30.3081 cv
33.0591 30.3081 li
31.9644 30.3081 31.6494 30.9087 31.1992 32.0034 cv
31.0195 32.0933 30.7344 32.063 30.6445 31.8687 cv
30.9595 30.8335 31.0342 29.9038 31.1392 29.3188 cv
31.1992 29.2739 31.2744 29.2437 31.3496 29.2437 cv
31.4243 29.2437 31.4995 29.2583 31.5596 29.3032 cv
31.6343 29.5581 31.6792 29.6187 32.8193 29.6187 cv
38.3989 29.6187 li
39.3892 29.6187 39.6143 29.603 39.749 29.2886 cv
39.8091 29.2583 39.854 29.2437 39.9438 29.2437 cv
40.0342 29.2437 40.1392 29.3032 40.1689 29.3481 cv
40.019 29.8589 39.9141 31.0737 39.9438 31.9282 cv
39.8691 32.063 39.4639 32.0933 39.3892 31.9731 cv
39.1343 31.0132 38.9238 30.3081 37.7993 30.3081 cv
36.8989 30.3081 li
36.5391 30.3081 36.4941 30.353 36.4941 30.7437 cv
36.4941 37.3579 li
36.4941 38.7534 36.584 38.8735 37.2593 38.9634 cv
37.8589 39.0376 li
37.9639 39.1284 37.9639 39.4731 37.8589 39.563 cv
36.8843 39.5327 36.1343 39.5181 35.459 39.5181 cv
34.7393 39.5181 33.9595 39.5327 32.9092 39.563 cv
32.7896 39.4731 32.7896 39.1284 32.9092 39.0376 cv
33.5845 38.9634 li
34.2593 38.8882 34.3491 38.7534 34.3491 37.3579 cv
34.3491 30.7437 li
cp
f
44.189 33.9536 mo
44.189 34.478 44.2344 34.5229 45.1191 34.5229 cv
45.6592 34.5229 45.9741 34.3882 46.2593 34.103 cv
46.5142 33.8481 46.7988 33.3687 46.7988 32.4829 cv
46.7988 31.1333 46.0039 30.2632 44.834 30.2632 cv
44.2192 30.2632 44.189 30.3081 44.189 31.0288 cv
44.189 33.9536 li
cp
42.1343 32.0483 mo
42.1343 30.5483 42.1045 30.3833 41.4741 30.2935 cv
41.0693 30.2339 li
40.9194 30.1587 40.9194 29.7837 41.0991 29.7085 cv
42.2241 29.6333 43.394 29.5737 44.8193 29.5737 cv
46.0942 29.5737 47.189 29.7681 47.7588 30.1138 cv
48.6289 30.6235 49.0791 31.3735 49.0791 32.3335 cv
49.0791 33.6685 48.1792 34.2388 47.4893 34.5835 cv
47.3389 34.6587 47.3389 34.7485 47.4141 34.9136 cv
48.4038 36.9233 49.019 38.0483 49.7388 38.6636 cv
50.1289 38.978 50.519 39.0679 50.7441 39.0835 cv
50.8789 39.1577 50.8789 39.3833 50.8037 39.4731 cv
50.564 39.5776 50.084 39.6079 49.6191 39.6079 cv
48.2388 39.6079 47.3691 39.1128 46.709 38.0327 cv
46.229 37.2378 45.8843 36.5034 45.5391 35.7085 cv
45.3589 35.3032 45.1191 35.1831 44.7441 35.1831 cv
44.2192 35.1831 44.189 35.2134 44.189 35.5132 cv
44.189 37.3579 li
44.189 38.7378 44.2793 38.8433 44.9541 38.9634 cv
45.3589 39.0376 li
45.4639 39.1128 45.4639 39.4731 45.3589 39.563 cv
44.564 39.5327 43.874 39.5181 43.1543 39.5181 cv
42.4043 39.5181 41.7441 39.5327 40.9644 39.563 cv
40.8442 39.4731 40.8442 39.1128 40.9644 39.0376 cv
41.3691 38.9634 li
42.0444 38.8433 42.1343 38.7378 42.1343 37.3579 cv
42.1343 32.0483 li
cp
f
55.3936 35.3335 mo
55.7388 35.3335 55.8135 35.2886 55.6938 34.8979 cv
55.3037 33.6831 li
55.0938 33.0386 54.8989 32.4233 54.7637 32.1079 cv
54.6138 32.438 54.3735 33.0679 54.1489 33.7583 cv
53.7739 34.8833 li
53.6387 35.2886 53.7139 35.3335 54.0889 35.3335 cv
55.3936 35.3335 li
cp
53.7886 36.1284 mo
53.4287 36.1284 53.3838 36.1431 53.2939 36.4282 cv
52.7388 38.1685 li
52.6489 38.4683 52.6338 38.5884 52.6338 38.7085 cv
52.6338 38.7983 52.7539 38.8882 53.1738 38.9634 cv
53.6235 39.0376 li
53.7139 39.1431 53.7437 39.4878 53.5938 39.563 cv
53.0688 39.5327 52.4688 39.5327 51.8389 39.5181 cv
51.3291 39.5181 50.9839 39.563 50.2939 39.563 cv
50.1289 39.4731 50.144 39.1577 50.249 39.0376 cv
50.6538 38.9927 li
51.0137 38.9478 51.314 38.8276 51.5688 38.2427 cv
51.8237 37.6431 52.0938 36.9233 52.499 35.8433 cv
53.8486 32.1831 li
54.1938 31.2388 54.4785 30.7134 54.4336 30.2788 cv
55.1538 30.1138 55.7085 29.3784 55.7388 29.3784 cv
55.9336 29.3784 56.0234 29.4536 56.0835 29.6782 cv
56.2036 30.1138 56.3838 30.6685 56.7588 31.7329 cv
58.7983 37.6128 li
59.1138 38.5132 59.2485 38.8579 59.8037 38.9478 cv
60.3735 39.0376 li
60.4634 39.1128 60.4937 39.4731 60.3584 39.563 cv
59.6387 39.5327 58.8286 39.5181 58.0488 39.5181 cv
57.2988 39.5181 56.7139 39.5327 56.0234 39.563 cv
55.8589 39.4731 55.8286 39.1577 55.9937 39.0376 cv
56.4736 38.9634 li
56.8188 38.9028 56.8784 38.7983 56.8784 38.7085 cv
56.8784 38.603 56.7734 38.2427 56.5938 37.688 cv
56.1885 36.3979 li
56.1138 36.1587 55.9937 36.1284 55.4688 36.1284 cv
53.7886 36.1284 li
cp
f
64.0488 37.0278 mo
64.0488 37.7329 64.1089 38.2134 64.3037 38.4526 cv
64.4985 38.7085 64.7686 38.8276 65.8638 38.8276 cv
67.2285 38.8276 67.6484 38.7827 68.5337 37.0435 cv
68.6533 36.8931 68.9985 36.9536 69.1035 37.1333 cv
69.0283 37.9136 68.6685 39.1577 68.4585 39.563 cv
67.6636 39.5327 66.2236 39.5181 64.9937 39.5181 cv
62.9839 39.5181 li
62.2939 39.5181 61.5439 39.5327 60.6138 39.563 cv
60.479 39.4731 60.4487 39.1284 60.5688 39.0376 cv
61.1387 38.9634 li
61.814 38.8735 61.9038 38.7534 61.9038 37.3579 cv
61.9038 31.7788 li
61.9038 30.3833 61.814 30.2485 61.1387 30.1587 cv
60.7036 30.0981 li
60.5537 30.0083 60.5537 29.6636 60.7339 29.5737 cv
61.5137 29.603 62.2637 29.6187 62.9839 29.6187 cv
63.7036 29.6187 64.4536 29.603 65.2036 29.5737 cv
65.3237 29.6636 65.3237 30.0083 65.2036 30.0981 cv
64.8135 30.1587 li
64.1387 30.2632 64.0488 30.3833 64.0488 31.7788 cv
64.0488 37.0278 li
cp
f
82.7983 36.9683 mo
82.7983 37.9429 82.7983 38.8882 82.8281 39.3833 cv
82.7231 39.563 82.3032 39.728 81.9434 39.728 cv
81.9282 39.728 81.4331 38.9634 80.728 38.0933 cv
77.2632 33.8032 li
76.3936 32.7388 75.8984 32.1079 75.6284 31.8833 cv
75.5532 32.0337 75.5532 32.2886 75.5532 32.8433 cv
75.5532 35.7534 li
75.5532 36.9683 75.6133 38.0933 75.7783 38.4985 cv
75.9136 38.813 76.2583 38.9185 76.6484 38.978 cv
77.0684 39.0376 li
77.1885 39.1577 77.1582 39.4731 77.0684 39.563 cv
76.2583 39.5327 75.6582 39.5181 75.0586 39.5181 cv
74.5034 39.5181 73.9487 39.5327 73.3784 39.563 cv
73.2886 39.4731 73.2588 39.1577 73.3784 39.0376 cv
73.6333 38.9927 li
74.0386 38.9185 74.3384 38.813 74.4585 38.4985 cv
74.6235 38.0933 74.6685 36.9683 74.6685 35.7534 cv
74.6685 31.9438 li
74.6685 31.1187 74.6533 30.8784 74.5635 30.6685 cv
74.4434 30.4136 74.2334 30.2339 73.7085 30.1587 cv
73.2886 30.0981 li
73.1836 29.978 73.1987 29.6187 73.3486 29.5737 cv
74.0537 29.603 74.8037 29.6187 75.4185 29.6187 cv
75.9282 29.6187 76.3633 29.603 76.6782 29.5737 cv
76.8286 30.2485 77.8032 31.3882 79.1533 32.9937 cv
80.4131 34.478 li
81.0732 35.2583 81.5083 35.7837 81.853 36.1284 cv
81.9131 35.978 81.9131 35.7231 81.9131 35.4536 cv
81.9131 33.3833 li
81.9131 32.1685 81.853 31.0435 81.688 30.6382 cv
81.5532 30.3237 81.2231 30.2183 80.8184 30.1587 cv
80.4131 30.0981 li
80.2935 29.978 80.3232 29.6636 80.4131 29.5737 cv
81.2231 29.603 81.8081 29.6187 82.4233 29.6187 cv
82.978 29.6187 83.5181 29.603 84.103 29.5737 cv
84.1929 29.6636 84.2231 29.978 84.103 30.0981 cv
83.833 30.1431 li
83.4434 30.2036 83.1582 30.3237 83.0229 30.6382 cv
82.8584 31.0435 82.7983 32.1685 82.7983 33.3833 cv
82.7983 36.9683 li
cp
f
89.9683 37.3579 mo
89.9683 38.7534 90.0581 38.8735 90.7329 38.9634 cv
91.333 39.0376 li
91.438 39.1284 91.438 39.4731 91.333 39.563 cv
90.3579 39.5327 89.623 39.5181 88.9033 39.5181 cv
88.1831 39.5181 87.4331 39.5327 86.5483 39.563 cv
86.4282 39.4731 86.4282 39.1284 86.5483 39.0376 cv
87.0581 38.9634 li
87.7334 38.8579 87.8232 38.7534 87.8232 37.3579 cv
87.8232 36.6079 li
87.8232 35.8579 87.8081 35.6187 87.4185 34.8237 cv
85.6333 31.1333 li
85.3335 30.5181 85.1982 30.2788 84.6733 30.188 cv
84.1636 30.0981 li
84.0283 29.978 84.0435 29.6187 84.2236 29.5737 cv
84.8984 29.603 85.4531 29.6187 86.3384 29.6187 cv
87.2534 29.6187 88.0181 29.603 88.5283 29.5737 cv
88.6631 29.6333 88.6934 29.978 88.5581 30.0981 cv
88.0483 30.2183 li
87.7783 30.2788 87.6885 30.3384 87.6885 30.353 cv
87.6885 30.4731 87.7632 30.6987 88.0781 31.4038 cv
88.7832 33.0083 li
89.0083 33.5034 89.293 34.103 89.4731 34.478 cv
89.9082 33.7437 90.3281 32.8735 90.7329 32.1079 cv
91.3032 31.0435 91.5132 30.5483 91.5132 30.3687 cv
91.5132 30.2788 91.3633 30.2183 91.0029 30.1587 cv
90.6582 30.0981 li
90.5381 30.0239 90.5229 29.6489 90.6733 29.5737 cv
91.2729 29.603 91.813 29.6187 92.353 29.6187 cv
92.9229 29.6187 93.3882 29.603 93.8232 29.5737 cv
94.0029 29.6333 94.0029 29.9937 93.8828 30.0981 cv
93.4932 30.1733 li
93.2231 30.2183 92.938 30.3237 92.7729 30.5337 cv
92.5479 30.8188 92.1729 31.3579 91.4531 32.6636 cv
90.5083 34.3735 li
90.1182 35.0786 89.9683 35.4536 89.9683 36.3081 cv
89.9683 37.3579 li
cp
f
111.313 30.2036 mo
110.968 30.2788 110.803 30.3989 110.698 30.5337 cv
110.533 30.7729 110.277 31.2534 109.873 32.1987 cv
109.138 33.9536 107.443 37.688 106.708 39.6382 cv
106.618 39.7134 106.408 39.7583 106.213 39.7583 cv
106.048 39.7583 105.913 39.7134 105.808 39.6382 cv
105.643 39.2778 105.418 38.7378 105.238 38.3179 cv
104.608 36.8931 li
104.398 36.4136 104.203 35.9634 104.068 35.7378 cv
103.933 35.9937 103.753 36.353 103.558 36.7729 cv
102.853 38.3032 li
102.628 38.7827 102.463 39.2183 102.223 39.7134 cv
102.148 39.7876 101.953 39.8335 101.728 39.8335 cv
101.563 39.8335 101.473 39.7876 101.338 39.7134 cv
101.098 39.0835 100.498 37.7329 99.9878 36.6079 cv
97.5283 31.2388 li
97.123 30.353 97.0332 30.2788 96.5381 30.1733 cv
96.1631 30.0981 li
96.043 29.9487 96.0581 29.6489 96.2231 29.5737 cv
96.7783 29.603 97.4082 29.6187 98.1729 29.6187 cv
98.833 29.6187 99.418 29.603 99.9878 29.5737 cv
100.108 29.6333 100.168 30.0083 100.018 30.0981 cv
99.748 30.1431 li
99.478 30.188 99.373 30.2632 99.373 30.3687 cv
99.373 30.4731 99.688 31.1782 100.153 32.228 cv
101.638 35.5435 li
102.058 36.4731 102.208 36.7886 102.388 37.1479 cv
102.568 36.8179 102.808 36.3687 103.108 35.6929 cv
103.303 35.2583 li
103.408 35.0181 103.498 34.688 103.498 34.5981 cv
103.498 34.5083 103.468 34.3433 103.408 34.1929 cv
101.968 31.0288 li
101.623 30.2788 101.518 30.1733 100.948 30.1138 cv
100.798 30.0981 li
100.648 29.978 100.678 29.6333 100.843 29.5737 cv
101.488 29.603 102.073 29.6187 102.733 29.6187 cv
103.498 29.6187 104.068 29.603 104.458 29.5737 cv
104.638 29.6187 104.623 30.0239 104.518 30.0981 cv
104.263 30.1587 li
104.083 30.2036 103.858 30.2632 103.858 30.3687 cv
103.858 30.4888 103.918 30.6538 103.993 30.8188 cv
104.443 31.853 li
104.578 32.1685 104.728 32.4985 104.863 32.7681 cv
105.013 32.4536 105.163 32.1538 105.313 31.8237 cv
105.448 31.5229 li
105.703 30.9536 105.853 30.5034 105.853 30.4136 cv
105.853 30.3081 105.793 30.2632 105.553 30.2036 cv
105.103 30.0981 li
104.998 29.9937 105.013 29.6489 105.148 29.5737 cv
105.583 29.603 106.123 29.6187 106.618 29.6187 cv
107.203 29.6187 107.758 29.603 108.147 29.5737 cv
108.268 29.6489 108.298 30.0083 108.163 30.1138 cv
107.743 30.2036 li
107.233 30.3081 107.128 30.3687 106.603 31.2681 cv
106.243 31.8833 105.868 32.5737 105.673 32.9634 cv
105.538 33.2329 105.343 33.6685 105.343 33.7437 cv
105.343 33.7886 105.358 33.8784 105.463 34.1187 cv
106.168 35.6333 li
106.558 36.4585 106.738 36.8931 106.828 37.103 cv
107.548 35.3628 108.252 33.5034 108.973 31.6733 cv
109.078 31.4185 109.377 30.563 109.377 30.3989 cv
109.377 30.2935 109.288 30.2485 109.093 30.188 cv
108.763 30.0981 li
108.643 29.9634 108.673 29.6489 108.808 29.5737 cv
109.288 29.603 109.888 29.6187 110.337 29.6187 cv
110.863 29.6187 111.297 29.603 111.718 29.5737 cv
111.853 29.6489 111.868 29.978 111.763 30.0981 cv
111.313 30.2036 li
cp
f
115.078 33.5181 mo
115.078 33.938 115.093 33.9683 115.498 33.9683 cv
116.533 33.9683 li
117.313 33.9683 117.492 33.8638 117.643 33.1431 cv
117.718 32.7681 li
117.822 32.6479 118.197 32.6479 118.273 32.7837 cv
118.242 33.2632 118.229 33.8032 118.229 34.3735 cv
118.229 34.9429 118.242 35.4829 118.273 35.9634 cv
118.197 36.0981 117.822 36.1128 117.718 35.978 cv
117.643 35.603 li
117.492 34.8833 117.313 34.7632 116.533 34.7632 cv
115.498 34.7632 li
115.093 34.7632 115.078 34.7778 115.078 35.228 cv
115.078 37.0132 li
115.078 37.7036 115.139 38.1831 115.318 38.438 cv
115.514 38.7085 115.798 38.8276 116.893 38.8276 cv
118.197 38.8276 118.708 38.7827 119.533 37.0884 cv
119.652 36.9233 120.027 36.9829 120.088 37.1636 cv
120.027 37.9429 119.668 39.1577 119.458 39.563 cv
118.663 39.5327 117.223 39.5181 115.993 39.5181 cv
114.043 39.5181 li
113.323 39.5181 112.588 39.5327 111.463 39.563 cv
111.343 39.4731 111.343 39.1128 111.463 39.0376 cv
112.168 38.9331 li
112.843 38.8276 112.933 38.7378 112.933 37.3579 cv
112.933 31.7632 li
112.933 30.3989 112.843 30.3081 112.168 30.1733 cv
111.793 30.0981 li
111.658 30.0083 111.673 29.6636 111.823 29.5737 cv
112.528 29.603 113.263 29.6187 113.982 29.6187 cv
117.163 29.6187 li
118.123 29.6187 118.979 29.603 119.173 29.5737 cv
119.188 29.813 119.293 30.8931 119.367 31.8979 cv
119.308 32.063 118.963 32.0933 118.813 31.9585 cv
118.648 31.4331 118.438 30.9839 118.242 30.7729 cv
117.958 30.4888 117.508 30.3081 116.773 30.3081 cv
115.572 30.3081 li
115.078 30.3081 115.078 30.3384 115.078 30.8931 cv
115.078 33.5181 li
cp
f
124.197 37.0278 mo
124.197 37.7329 124.258 38.2134 124.453 38.4526 cv
124.647 38.7085 124.918 38.8276 126.013 38.8276 cv
127.377 38.8276 127.797 38.7827 128.683 37.0435 cv
128.803 36.8931 129.147 36.9536 129.252 37.1333 cv
129.178 37.9136 128.817 39.1577 128.607 39.563 cv
127.813 39.5327 126.373 39.5181 125.143 39.5181 cv
123.133 39.5181 li
122.443 39.5181 121.693 39.5327 120.763 39.563 cv
120.628 39.4731 120.598 39.1284 120.718 39.0376 cv
121.287 38.9634 li
121.963 38.8735 122.053 38.7534 122.053 37.3579 cv
122.053 31.7788 li
122.053 30.3833 121.963 30.2485 121.287 30.1587 cv
120.853 30.0981 li
120.703 30.0083 120.703 29.6636 120.883 29.5737 cv
121.662 29.603 122.412 29.6187 123.133 29.6187 cv
123.853 29.6187 124.603 29.603 125.353 29.5737 cv
125.473 29.6636 125.473 30.0083 125.353 30.0981 cv
124.963 30.1587 li
124.287 30.2632 124.197 30.3833 124.197 31.7788 cv
124.197 37.0278 li
cp
f
133.197 37.0278 mo
133.197 37.7329 133.258 38.2134 133.453 38.4526 cv
133.647 38.7085 133.918 38.8276 135.013 38.8276 cv
136.377 38.8276 136.797 38.7827 137.683 37.0435 cv
137.803 36.8931 138.147 36.9536 138.252 37.1333 cv
138.178 37.9136 137.817 39.1577 137.607 39.563 cv
136.813 39.5327 135.373 39.5181 134.143 39.5181 cv
132.133 39.5181 li
131.443 39.5181 130.693 39.5327 129.763 39.563 cv
129.628 39.4731 129.598 39.1284 129.718 39.0376 cv
130.287 38.9634 li
130.963 38.8735 131.053 38.7534 131.053 37.3579 cv
131.053 31.7788 li
131.053 30.3833 130.963 30.2485 130.287 30.1587 cv
129.853 30.0981 li
129.703 30.0083 129.703 29.6636 129.883 29.5737 cv
130.662 29.603 131.412 29.6187 132.133 29.6187 cv
132.853 29.6187 133.603 29.603 134.353 29.5737 cv
134.473 29.6636 134.473 30.0083 134.353 30.0981 cv
133.963 30.1587 li
133.287 30.2632 133.197 30.3833 133.197 31.7788 cv
133.197 37.0278 li
cp
f
142.197 33.5181 mo
142.197 33.938 142.213 33.9683 142.617 33.9683 cv
143.652 33.9683 li
144.433 33.9683 144.612 33.8638 144.763 33.1431 cv
144.838 32.7681 li
144.942 32.6479 145.317 32.6479 145.393 32.7837 cv
145.362 33.2632 145.348 33.8032 145.348 34.3735 cv
145.348 34.9429 145.362 35.4829 145.393 35.9634 cv
145.317 36.0981 144.942 36.1128 144.838 35.978 cv
144.763 35.603 li
144.612 34.8833 144.433 34.7632 143.652 34.7632 cv
142.617 34.7632 li
142.213 34.7632 142.197 34.7778 142.197 35.228 cv
142.197 37.0132 li
142.197 37.7036 142.258 38.1831 142.438 38.438 cv
142.633 38.7085 142.918 38.8276 144.013 38.8276 cv
145.317 38.8276 145.828 38.7827 146.652 37.0884 cv
146.772 36.9233 147.147 36.9829 147.207 37.1636 cv
147.147 37.9429 146.787 39.1577 146.578 39.563 cv
145.782 39.5327 144.343 39.5181 143.113 39.5181 cv
141.162 39.5181 li
140.443 39.5181 139.707 39.5327 138.583 39.563 cv
138.463 39.4731 138.463 39.1128 138.583 39.0376 cv
139.287 38.9331 li
139.963 38.8276 140.053 38.7378 140.053 37.3579 cv
140.053 31.7632 li
140.053 30.3989 139.963 30.3081 139.287 30.1733 cv
138.912 30.0981 li
138.777 30.0083 138.793 29.6636 138.943 29.5737 cv
139.648 29.603 140.383 29.6187 141.103 29.6187 cv
144.283 29.6187 li
145.242 29.6187 146.098 29.603 146.293 29.5737 cv
146.308 29.813 146.412 30.8931 146.487 31.8979 cv
146.428 32.063 146.082 32.0933 145.933 31.9585 cv
145.768 31.4331 145.558 30.9839 145.362 30.7729 cv
145.078 30.4888 144.627 30.3081 143.893 30.3081 cv
142.692 30.3081 li
142.197 30.3081 142.197 30.3384 142.197 30.8931 cv
142.197 33.5181 li
cp
f
150.838 39.7583 mo
149.457 39.7583 148.603 39.3677 148.287 39.188 cv
148.002 38.8579 147.808 37.7778 147.808 36.7583 cv
147.912 36.563 148.258 36.5483 148.377 36.7134 cv
148.678 37.688 149.682 39.0679 150.957 39.0679 cv
152.067 39.0679 152.577 38.3032 152.577 37.5532 cv
152.577 36.3384 151.438 35.6187 150.537 35.1685 cv
149.457 34.6284 148.272 33.728 148.272 32.2437 cv
148.258 30.5483 149.577 29.3784 151.752 29.3784 cv
152.247 29.3784 152.862 29.438 153.462 29.6187 cv
153.657 29.6782 153.792 29.7085 153.973 29.7388 cv
154.092 30.0688 154.242 30.8784 154.242 31.8833 cv
154.167 32.063 153.792 32.0786 153.657 31.9282 cv
153.402 31.1636 152.758 30.0688 151.678 30.0688 cv
150.688 30.0688 150.147 30.7134 150.147 31.4634 cv
150.147 32.1538 150.762 32.7837 151.512 33.1733 cv
152.502 33.6987 li
153.432 34.1929 154.617 35.063 154.617 36.7134 cv
154.617 38.5581 153.102 39.7583 150.838 39.7583 cv
cp
f
159.133 37.0278 mo
159.133 37.7329 159.192 38.2134 159.387 38.4526 cv
159.582 38.7085 159.852 38.8276 160.947 38.8276 cv
162.313 38.8276 162.732 38.7827 163.617 37.0435 cv
163.736 36.8931 164.082 36.9536 164.188 37.1333 cv
164.111 37.9136 163.752 39.1577 163.542 39.563 cv
162.747 39.5327 161.307 39.5181 160.077 39.5181 cv
158.067 39.5181 li
157.377 39.5181 156.627 39.5327 155.697 39.563 cv
155.563 39.4731 155.532 39.1284 155.652 39.0376 cv
156.223 38.9634 li
156.897 38.8735 156.987 38.7534 156.987 37.3579 cv
156.987 31.7788 li
156.987 30.3833 156.897 30.2485 156.223 30.1587 cv
155.787 30.0981 li
155.637 30.0083 155.637 29.6636 155.817 29.5737 cv
156.598 29.603 157.348 29.6187 158.067 29.6187 cv
158.787 29.6187 159.537 29.603 160.287 29.5737 cv
160.407 29.6636 160.407 30.0083 160.287 30.0981 cv
159.896 30.1587 li
159.223 30.2632 159.133 30.3833 159.133 31.7788 cv
159.133 37.0278 li
cp
f
168.133 33.5181 mo
168.133 33.938 168.146 33.9683 168.553 33.9683 cv
169.587 33.9683 li
170.367 33.9683 170.547 33.8638 170.697 33.1431 cv
170.771 32.7681 li
170.877 32.6479 171.252 32.6479 171.327 32.7837 cv
171.297 33.2632 171.282 33.8032 171.282 34.3735 cv
171.282 34.9429 171.297 35.4829 171.327 35.9634 cv
171.252 36.0981 170.877 36.1128 170.771 35.978 cv
170.697 35.603 li
170.547 34.8833 170.367 34.7632 169.587 34.7632 cv
168.553 34.7632 li
168.146 34.7632 168.133 34.7778 168.133 35.228 cv
168.133 37.0132 li
168.133 37.7036 168.192 38.1831 168.372 38.438 cv
168.567 38.7085 168.852 38.8276 169.947 38.8276 cv
171.252 38.8276 171.762 38.7827 172.587 37.0884 cv
172.707 36.9233 173.082 36.9829 173.143 37.1636 cv
173.082 37.9429 172.723 39.1577 172.512 39.563 cv
171.717 39.5327 170.277 39.5181 169.047 39.5181 cv
167.098 39.5181 li
166.377 39.5181 165.643 39.5327 164.518 39.563 cv
164.397 39.4731 164.397 39.1128 164.518 39.0376 cv
165.223 38.9331 li
165.897 38.8276 165.987 38.7378 165.987 37.3579 cv
165.987 31.7632 li
165.987 30.3989 165.897 30.3081 165.223 30.1733 cv
164.848 30.0981 li
164.713 30.0083 164.728 29.6636 164.877 29.5737 cv
165.582 29.603 166.317 29.6187 167.037 29.6187 cv
170.217 29.6187 li
171.178 29.6187 172.032 29.603 172.227 29.5737 cv
172.242 29.813 172.348 30.8931 172.422 31.8979 cv
172.361 32.063 172.018 32.0933 171.867 31.9585 cv
171.702 31.4331 171.492 30.9839 171.297 30.7729 cv
171.012 30.4888 170.563 30.3081 169.827 30.3081 cv
168.627 30.3081 li
168.133 30.3081 168.133 30.3384 168.133 30.8931 cv
168.133 33.5181 li
cp
f
178.723 37.3579 mo
178.723 38.7534 178.813 38.8735 179.486 38.9634 cv
180.087 39.0376 li
180.191 39.1284 180.191 39.4731 180.087 39.563 cv
179.111 39.5327 178.377 39.5181 177.657 39.5181 cv
176.938 39.5181 176.188 39.5327 175.303 39.563 cv
175.182 39.4731 175.182 39.1284 175.303 39.0376 cv
175.813 38.9634 li
176.487 38.8579 176.577 38.7534 176.577 37.3579 cv
176.577 36.6079 li
176.577 35.8579 176.563 35.6187 176.172 34.8237 cv
174.387 31.1333 li
174.088 30.5181 173.952 30.2788 173.428 30.188 cv
172.918 30.0981 li
172.782 29.978 172.797 29.6187 172.978 29.5737 cv
173.652 29.603 174.207 29.6187 175.092 29.6187 cv
176.008 29.6187 176.771 29.603 177.282 29.5737 cv
177.417 29.6333 177.447 29.978 177.313 30.0981 cv
176.803 30.2183 li
176.532 30.2788 176.442 30.3384 176.442 30.353 cv
176.442 30.4731 176.518 30.6987 176.832 31.4038 cv
177.537 33.0083 li
177.762 33.5034 178.047 34.103 178.227 34.478 cv
178.662 33.7437 179.082 32.8735 179.486 32.1079 cv
180.057 31.0435 180.268 30.5483 180.268 30.3687 cv
180.268 30.2788 180.117 30.2183 179.757 30.1587 cv
179.412 30.0981 li
179.292 30.0239 179.277 29.6489 179.428 29.5737 cv
180.027 29.603 180.566 29.6187 181.107 29.6187 cv
181.677 29.6187 182.143 29.603 182.577 29.5737 cv
182.757 29.6333 182.757 29.9937 182.637 30.0981 cv
182.247 30.1733 li
181.977 30.2183 181.691 30.3237 181.527 30.5337 cv
181.302 30.8188 180.927 31.3579 180.207 32.6636 cv
179.262 34.3735 li
178.872 35.0786 178.723 35.4536 178.723 36.3081 cv
178.723 37.3579 li
cp
f
195.552 29.7681 mo
195.552 30.0386 195.597 31.2388 195.731 32.1079 cv
195.672 32.2886 195.267 32.3481 195.162 32.2134 cv
194.757 30.8188 193.797 30.0688 192.342 30.0688 cv
190.677 30.0688 188.893 31.4937 188.893 34.478 cv
188.893 37.4634 190.617 39.0679 192.417 39.0679 cv
194.232 39.0679 195.071 37.7632 195.477 36.7437 cv
195.597 36.6235 195.957 36.6685 196.047 36.8481 cv
195.941 37.9585 195.687 38.8579 195.477 39.2026 cv
194.667 39.4282 193.602 39.7583 192.432 39.7583 cv
190.962 39.7583 189.462 39.4126 188.396 38.6177 cv
187.316 37.7935 186.492 36.5483 186.492 34.688 cv
186.492 32.8579 187.271 31.5688 188.307 30.7134 cv
189.372 29.8286 190.902 29.3784 192.462 29.3784 cv
193.992 29.3784 195.102 29.7388 195.552 29.7681 cv
cp
f
200.307 37.0278 mo
200.307 37.7329 200.367 38.2134 200.562 38.4526 cv
200.757 38.7085 201.027 38.8276 202.122 38.8276 cv
203.487 38.8276 203.907 38.7827 204.792 37.0435 cv
204.912 36.8931 205.257 36.9536 205.361 37.1333 cv
205.287 37.9136 204.927 39.1577 204.717 39.563 cv
203.922 39.5327 202.481 39.5181 201.252 39.5181 cv
199.242 39.5181 li
198.552 39.5181 197.802 39.5327 196.872 39.563 cv
196.737 39.4731 196.707 39.1284 196.827 39.0376 cv
197.397 38.9634 li
198.072 38.8735 198.162 38.7534 198.162 37.3579 cv
198.162 31.7788 li
198.162 30.3833 198.072 30.2485 197.397 30.1587 cv
196.962 30.0981 li
196.813 30.0083 196.813 29.6636 196.992 29.5737 cv
197.772 29.603 198.522 29.6187 199.242 29.6187 cv
199.962 29.6187 200.712 29.603 201.462 29.5737 cv
201.582 29.6636 201.582 30.0083 201.462 30.0981 cv
201.072 30.1587 li
200.397 30.2632 200.307 30.3833 200.307 31.7788 cv
200.307 37.0278 li
cp
f
206.547 31.7788 mo
206.547 30.3833 206.457 30.2935 205.782 30.1587 cv
205.407 30.0835 li
205.287 29.9937 205.272 29.6636 205.438 29.5737 cv
206.157 29.603 206.907 29.6187 207.627 29.6187 cv
208.362 29.6187 209.097 29.603 209.817 29.5737 cv
209.937 29.6636 209.937 29.9937 209.817 30.0835 cv
209.457 30.1431 li
208.782 30.2632 208.692 30.3833 208.692 31.7788 cv
208.692 35.2437 li
208.692 36.9985 208.887 38.9331 211.167 38.9331 cv
213.087 38.9331 213.672 37.2534 213.672 35.1978 cv
213.672 33.3833 li
213.672 32.1685 213.611 31.0288 213.446 30.6382 cv
213.312 30.3237 212.981 30.2339 212.577 30.1587 cv
212.172 30.0835 li
212.052 29.9634 212.082 29.6636 212.172 29.5737 cv
212.981 29.603 213.566 29.6187 214.182 29.6187 cv
214.736 29.6187 215.292 29.603 215.861 29.5737 cv
215.952 29.6636 215.981 29.9634 215.861 30.0835 cv
215.592 30.1431 li
215.202 30.2339 214.917 30.3237 214.781 30.6382 cv
214.617 31.0288 214.557 32.1685 214.557 33.3833 cv
214.557 35.063 li
214.557 36.4731 214.422 37.7632 213.597 38.6782 cv
212.937 39.3833 211.842 39.7583 210.627 39.7583 cv
209.487 39.7583 208.467 39.5776 207.657 38.9185 cv
206.877 38.2729 206.547 37.1636 206.547 35.5278 cv
206.547 31.7788 li
cp
f
220.018 36.9829 mo
220.018 38.1528 220.167 38.8882 221.337 38.8882 cv
222.447 38.8882 223.032 38.0327 223.032 36.8179 cv
223.032 35.5132 222.282 34.5981 220.842 34.5981 cv
220.018 34.5981 220.018 34.6128 220.018 35.2134 cv
220.018 36.9829 li
cp
220.018 33.5181 mo
220.018 33.9087 220.032 33.938 220.813 33.938 cv
222.103 33.938 222.582 33.1138 222.582 32.2134 cv
222.582 30.9087 221.772 30.2632 220.737 30.2632 cv
220.032 30.2632 220.018 30.3833 220.018 31.0435 cv
220.018 33.5181 li
cp
217.947 32.063 mo
217.947 30.5483 217.917 30.3989 217.287 30.3081 cv
216.882 30.2485 li
216.747 30.1733 216.718 29.7231 216.942 29.7085 cv
218.082 29.6333 219.177 29.5737 220.677 29.5737 cv
222.117 29.5737 223.077 29.7388 223.737 30.1284 cv
224.382 30.5181 224.771 31.1479 224.771 32.0337 cv
224.771 33.2935 223.707 33.7886 223.242 33.9087 cv
223.092 33.938 222.942 33.9985 222.942 34.0737 cv
222.942 34.1187 223.017 34.1636 223.152 34.1929 cv
224.337 34.4487 225.342 35.228 225.356 36.6831 cv
225.372 38.063 224.547 38.8735 223.602 39.2026 cv
222.657 39.5327 221.532 39.5776 220.617 39.5776 cv
220.077 39.5776 219.507 39.5181 219.072 39.5181 cv
218.337 39.5181 217.603 39.5327 216.747 39.563 cv
216.627 39.4731 216.627 39.0835 216.747 39.0376 cv
217.183 38.9478 li
217.857 38.813 217.947 38.7085 217.947 37.3579 cv
217.947 32.063 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Cicia Lee) ()%%Title: (Central New York Wellesley Club logo 2011 v1-o.eps)%%CreationDate: 2/13/12 1:42 PM%%Canvassize: 16383%AI9_DataStream%Gb",KM.4rRoC2JUIKr4Z$AB<;X-EgArd4caJ2DhcPg\'<(#n6*Xq-Qmdsj/840+Vu?R0IlR'\kCX502s\T]=fm*l6gI](qM>oUGk%;g)Zc/>B'ogpemuVmNf%Y^;IjB?*u!-^$HnijkY2d8<?TTIep/il-?H[l"@;e+9A"fcLYuP4?%GkRC#A4/JM5UYr*$m3SmNke'&-%]5GSRT^*WKVVPSAan5Kj);Qb=EK"<*8DX&ggjYgL.BD>4r2>+nRs'tn?Mc#44?A8@A%W?oWS\5MaTSgg"0NChp$$]V37jO^YO>Pb%4F?q#=nX&;>e^="lAo<MBT7S4b>'AUaq">gURW9@WY%!a,6D;7nBrb&%cElLFoCDfo"$oSN7sK`T`=;3VKOd5T!q4.!'chaq!"']%fV<6.P4N+c4\=-Epl;EY^nh%GVn_P[^gGeEfLVn[`1e6+K!(sIP.^0/n*ZD^-LFP`U5c.4-AUFW"&?Hp3"CA7.gOO014%gG:(T2a%`O%F^#G%Z7VsKiK>J9`GNP0u2iU8V]=aTd%R=IO3H;gX::-%;K@-@:<+-I4Q)D:N$R.R![ITBR^NaJ+#/UQS=#!)9dfop/[O?+1[%moV*OoUVku8T5$.4+pnm#8)5BlFu][mqBq^UBdQ3-P[TQon^=2j=?AcJ'@p+Q9aqMP4UW_+NO/qkrau)H$i-j4?EYmm^KgD/_>Ws%AN9fkC*3ZX7XNRt;i[EqJ_bQXY'l\11ct3Qp[Pk[pcXZ-HbI^$hoDA'O&p`OYPLFgD7/kN\k>X8,piO:-'"-$7nMBKnXOTXA)\?G%`%c!JrkqZRN2,l$r/RQ;FW=Dbj.5j(?E)Or9WNkK>:h;omT'_![p!ka@8-G/5-uM>`B3n,n!A4e4,uXrn2lXsR[@!aL(rTj*.nsa%GGL]g62)Qtp`9B$MXW^Q7!t_sOWs^`FQ6/M,#,QoEKeto;+MLPa"a\3_K^PAF5eooOgp)%kt[tCYUA342d.4Vk<7f:oFFG8IJ=gq%U)bMZko/q+rkqZ)+7Cn'L$hD+n2pW'eC"9UGJY=Cp`2jJIJB@VOed[*9'bMp/-C\gb7F%ZiC@.n;8bEU$W0[O,NaXqX\1JAIaJH#%LLZE,Q;"(amj>(!.aj+0E>6MRdRQEnHgs1X60_'(/D7*d`&V"PUmkq_AVHri0dfO9=^\r$4XIfUG/SN,QhZ<&o8YMAKKG4ReS03<%T<?X-_ONHHUm^qHGXF9oe3B,R<86Z/dLL&.W`dQD<;&np=mf5a_n/hb@SKXBRCSjU"(K3=`4Jrc0Wp?fY=nK8SZ_:WJ,#5/U9"<>%*aM?edQ_hXpb2S;s%5@=5`kUcr<l!h48hbNU58f/,$m@Zs/K)1P5_8,[2T"7rhP%?SOS5Skth0-Csq5*:\s7AIq6lFn*iF+/,d_B%d8-F]'6Ono)@-V<n5FS6C@&@t/#\3Ign-8In3+9#s2+XIe9;gn^_mO``m$brS:tRqIDp\e?HidbX;MWFE*psICXHE_UDhU+^g)-L%I[V.'Dg2ck"\qnr-*:qC81+gBJjZ1[8q.'/YLKLc</kit_F*56E9*b.@!ishGdj-^L\X78'Ye+b,)f"j&ajCOM*.`VL_l)J]*Uj;%dqQUB`8,:<1`_BFeWGD)$(r*c_4Sdf*3\dJd+p9:)J5,#pJUr)B)[s@\(YbmmK3f\[T'#paq3X-'A@[R5A;^BXF^8.rr=,I)#NqE%LjkQ`mPJU+i/HaoOXE['mPk-pcqm"CN\lJF2V1JD8R=,@+T*M0T&PWt,"btc(an6d(%;nh-)nh4FbdP,bo8ENLhfBbNCu8<Qs6(l%RD?SMQG,`4!rEbmm%d3)/a)_Q78;bRJA9M_^bi:kV<@oN.nQe),buF!<D[k)o+SV\e%L>$+l>SkM/Z8Zat-V6D+0FpcD%tP4[uSH%dO-?iYt)HEBtY6@5H[^#%B<Qk)@f5_7$bGWUD;)WNB:Am%^W$J*#1?0I;4cB0iE@VOr?(\,D"R*F5YqJ2atHF1#I5jo=/Q'89#-i%X=T3cCPJ=9dqfQ9)?B4m_O>Z[FUP#G7k$#]2-?N3XbJ6N#7t"L_3+tfWlgPT4]N,*32lO!$_at2cAYaL9@k;UKpG<R2t)bP*Q#G9%8i*AiD3ULUaLlM?\)&>Sdop7XOkZ8s+Q]f8MWrn[m/u@-UNmY4Pl\uC8IA':ar8rV>)/b1MhY@Z&VfjeO5miDmu[g]X]8#7@8rNa%N.-rHOKBWYLjMQlE$g_ZfY%JfUgu/%gOp?1I\Iq%nWBKZ&;iFjCj'=r9?5H9C0'G9[2k5_GH0O,VXBCWKs58F2fk^`[kKFe&>c59%T^1'&ZttjIs,"IoW\DJYH*=8g,h.Ve3D:KXFd46#L4E9WnQ!!7FI1F4#k+PA:q"nh&`&5K'!5i8E"lVO24m@bn&uO6+k8Q)PP/Lc%hoO0`ZUH<C)K-pEaE*RpgbFs-r*O5?N):)S=%OHIJrYMk2FO@7OnOH=mm>H2-.<<.91:$SY2C0o@e"[3r`-@%;<m'/\((E;8A%Q>%ThP&;Zn7l45E(:--h=O2Xr-OD`DUGPoEt@,q2&mf#cOb8A..2>Q:kpu\f]!"dTIK>CGQKC1_PtZ,a`4hNgs$gW3$FuVnfpF3fYA5%*@\`rE=^fuFPU\*[Q10GNOFG+0_S\AM2]f1Ze%Q\bh+Du[=I84#0!l/VA(MWC_2q0JnWbg=CW&CG)`Z??TLff<Xb40LiJBZ&ND06%&OA.8i]Tg<>t%MNS]pLdo)UG)B.P])*ZWSDaOnsg:0(A1ARn[!F-NDo*]5J5+]FMDMDu4tSjb[M8p=XsQADgRNj3hXmGifJmh%H'%]ugHC]g*O[45oGO$hh="WL^6X[4*V6H..mMMlB?4O.+8GHbPtMTY5!0U?3ju=*>>Q"a>]q,F%l:Vn:&\&oVamdS&4;+'C+.:N9`$%=sU_7^N!Mo0e3"KWfE>nhP;PggPlL+H(_fH<S;E=fETbW*3"Fg;JaU(9_]dnCtFoLZ0!7#37C4;P4_=YOibeN*`lS,`Fq)27l=3?%eY!98`,l1O5tU0?-ZbW?O_W)pT(6VrRYcJ;k+mM#]_EG^:aTjmm1\#mg`'fJ.8CVHWiDqR]jZi^BPEC)]mE.ROmH9:24KR^6X'7@%:B+oX=`MK6T;:ANF"[7@n1bPk\.7]d.UGKgmX$:=_S:'nN:p7NX7?XhHXqS7S-h/"9!cK*,P-@^#+]sLSJh+VLiW[;*'GoWehjSi%s-6+JfpearTM.+&MR*d?cG,[jJm;6;im3Q_lVbt1/YjKQ.+Q1@k<r=qE:%FlWAsC-;4O5<_7Pt%`-1Q==$<+LprZ+'GU^g:UPM;)%=@cOD)d_\YOeF6oX`8eas5QZ/OK<.GV<1dK]G3dKDD\9-92S]Y]c6'+Garmh9\j"'=]Ln0Wu::FA!l89jucNo:gP_[ku#0h>Hb*k%X)]g],F+h%O_$C*M"h::>F64AAA+8r3`0.![8PZcK],RVEWaUQKs56SF*+@gBl?_KYN4L.AX7h/4Ph(Xbap$@C7c_T-5Q/*Uf]I=%[?Q<&+m77Rq1j/%WdBGXq5:#egALO_*(-#@PsJYV`(!o^mSSC_<_bH/P_2X(=4Q!)bs.LOREE7Hn>tVUNOYlsc'H+(_nFV0`_i%G%A5ec5eJI_X@I^LcOh@^IZ!#@0<cJWLZ7YW6Si-+b7eo"7C^jN_/W_iJ>Dp&14:3(f;6$=KO5Wu;dW0RG\.nV[g,6d=`c@Xnk(./b%-.J3]);CV+$d<?h.Q[=`PT*V>1MnSL\.CG4.'nI$9eC(6$Rtbckd&#p`=@kMR%o+Zjd<->9tAE')M-,+]P?bjTtG,=NgM?>_]6go%XDD(qf@?Nn;AB[=%eYs\)-Ii5P\m]#TXYQZE?Uk6!rZ)ca/8QEpn9C@k&<]Agn<,^N-CI'M$OhtC;u%+>[b6VmE1ra'=Muo]g84"%UFX0K](R=@P%Fl`ZiCk-6cWc^Vj=c)"qRlOA>D`I>@tCqSE!X#j],K<[V\Z`ZGQ@D)Uc`JCNfA-]$G>rQ/r\)@S;jSXP/Hlq'h:&%//\NG82nF*bF\%06fqJc_[W$=+\#+l%oL?8f[L:uH<Xn<mO1kc't#h5_pE(+)*:kue-.YXR91q3PG1M*IUdLCZ^5ej"61HU\6"Ys%ZLkb$UGT+fD`&D&NEOK9K#4IcAPIKU_PKke1u@IXqIHO%$RgAUC%aX@LI8i,#Ns_b2<GC>rR%8sGYQf6n*8&(178WOeO]XeoOIrs%]7"Jq.QpX1U8.\D'J;Nc%Aq$5rR4'sHF5Og:<LmPm1U=;IX:onE\b1&^9.M$Dhlg0,cS/__])5rCA$;UUeDT`B([PO>^^f@3?=((%e(Y2_m(Z8@K:t0)J[G<Fnh9CXE:q`X]lq.R.P&#sH*@)\Y-`aMl.d_(NCf>]GR+^V\#:H+$S30'?!:a3p>i;[lQuMTfZ['>Ae?EC%lM1ocYZ5L=Y)T==ZgtH=TP(.H?8Aj&Y_(m0@]Zi<DWj=P'8,FKdK=)_WfAE[>6RJL?3)YoH1lQrfB^-l[>/DNPIq'>Y+(^?g*VFE%iV[rIl]0:iH*SRimEq_VdRt'7N$laCZIt<YVqle,"Ar=2'\gJ"&DN/eLM-!_U?7u9[FE8b1LY5*(>-(#]=U^pY:/$!f&[.3G,G^[%r=5iE5>d/l+D(::.0imsb$MX0.D79\<rt&&<2I8HA05eAC5"7m$<j1cK*QF$i/=&KAtrLIesb-$gl.\1;`99*B_kH,l/LquUY0<;%lA\uBg5$\FW=_$6KMeK&2nXm'%^4`j2sU'^X^8-Mor&q_ANcuM\mP3sDB4?!>-leYeSDQr[2.Ag>$-urTI+E&c)\B4Vc7M5S(1!9%?EI5.lDQ88b%a`f<PRg!h5V-tib$u%lZ"MZ`c3!;@4^F](9ns.Yo?&h&2g4P<0(ck22\0-'SV[.Jk/:Yj@*qhN]M!2NNaJT_J0pC%;&G$C$pkR&Tbk;-4NaO;aL\IpWf1L76RcRhL%M2h?0RT*<mV6t&.NC>BIjM-5R)d#;Y:)MJCmOP"XLaT-E890'1=!4+GB6<-X>X*%/\gO/r468,X+'D*,sV$u+8E_IIF!+c#GQdHfC8'3c)Z/q(O;]%]tb;Qms1Mj3H!#W\dc.:f%d8E]9+&DdLBI?qQB"mY#B@K,9a]"%DEGWf-W8n.+QgJp%Q:!900/-bUY5uaK)1I<3Ii33Jf^5$Nb4rlEQLouAlJs=@qlGth(4'A$*KU>\/kupQkA,N&mc8Z'OVV`'Ohbd%'P%nh'P8%l'PLj-<A'.dI];(k9"[I*91m3>9$U;^;:_Khe^L@XH'EWK,TgS>V'!GlV#r<G#>NbE<``Y9&uYp_"f_`TJII-JKM"J)%dLjtATes_ig>XQ@_(S=C9hX_G;s=g?Q'<3;Pq(=K3`VG;d9!-X6N&5'=.m<]rpo`KLL2A#_mR2uqlA;B0+a048s'4U!g3d\,=$N"%-rC-$<!BD("(f`U'g&(**b_)Em?=2s&SPYh['HjuDoSoZ"8_;6hMQ&E![S?Ll$!kA]+0d7<a.GC:saM!ZsS=u!0mY5&:n,cWcl9@%Yd@PK.K!Gdh$9+)4BW1fMZ+GP;H#\m!8E$T^e.Z_ed"Yhb9^s)DFLY8VPZ?-^f-4^$hb3We5JF[9!HisgA4X&!fBBG#mbE?6V1#\%dk(8\R6oRn)+.OoR7#Xp)+7UqR>ad24GfuC]-K@1rMBOf0#ErJqWJ"LYr<Bhe-CC2<%8K2%Te3[Fc_e6XH'EX*[nW#V3dkQ&K$'K%(^&RB#*@@**&&$IQjWq,6^GN:6srNb?r-('RjK6fZ\,+E^u>X(4;'2A"K&+)-4/e1!?>e[#E4oQ7SA:%!qQY//-9ln't"[1<^S<+%.r`;`Guu8CY5mos#keha0reV%l`^Ca`>]$jV[!D?k6\qoL1"%,0WnF2EEOrGJi"2E*O*>00%aW8%]lt3#$.tW0j&3&%OLQQV5MCN%-d+\"\1"p>]I:KB^aR&J`1^pmNKkoe0\;O123^Wje^c`QYYhc)\G[&]2bH'P3(c3RH)*L3X%M)]8f^L_S%.o0odKP_q'c+gr;tXQ%$@jT;QF%FGe7bn)!OVt$TrB;lF98iOo`?uQFb@((o`I&SF[Tq88XY?g;O+*l2Gt>mWOo?uL=JaCCI+C&.sk/MqU89<#K4!&p.3j_%;C#UP/Q*pp//frOWt['a6^^>?/64@!>U<rO"/B22K%VW^[ZZo7QEc=PH>1>r;R)4)[a>RT4/me(/pq5=dDhoG76=/.(2YX+>I(_K%ES9K;eRc@n/T8`JhhEl"[eU(/XR33.J]S,&"jYcY''fCb&S<h8N3KV(N>W\*COo+r"3fnoN,P7<YI;'WZ+6"*[q'9rc@/h]<r"?G%e^Rq?cZ#hV/=*IJT-(*e[)/O5P3OPo?V$>e;@cEG8e1>`m>'usCatid.(MUbW%$u0.P@HSTTl+>80oc7/LW9$8O#;qU>RHIBi3N[%2Q*^2#fR&Q.9=<=iY8EK%$XQp_?;7%%54EN;#$uBX?iPC&iCB3=:#D,r(&,'MFU;24=+U"&jSAj5t?4"2=tpCB%i,FqA@JI7r+C'%>\Gj)D5Ob1,r1r>&sbTXeX"[iSSUIBI^0.MFgObA<8#Z^2PjqXadeM[-'RUCa6B6u:j07?S81i'=),MZQ&R(?.nWE34_8G8[A>Hd%Egt4Jf9P<s.9BkV:-VW'3)jKlWj"ae09UGhbn:=`9X:AiPR9"2.`c:"fWG::>,;$]<B(W_,<75ETe@-+Q'=Gp04DSBlcYdnEp(0,%oW)O&Z03\g)iu@H_SA8>X&H_lY(Vf[:!0tV#j%,4^q/gO'aJii*!+]Q@On9[3_X1\kl;<[V,m]BZ)>[X%enE4Y)T1^/(,#,9#e^[%GX%ka"nlM1!EBbD5>0#=EI+e3&@V^!6^1kZ&MeIqWKmul1V)':%p0%a=14:fr6(R?lj*#a]9b*,c,7]l[a_Yn^)!!&egVcE>E8Pn%_=_gOf0dC)V5C@:h"niUI^#K=gGZ%a-8kgC;R7sfD$t::_V7!B>?H.)*c,*N?t4N`\ig&l!Y.J&?D*[*R0AjK/G!,NjE-N)fB!b'%/m\N_R'CSX$`2_Z8'S-b2[:6"e'lcc1+==E4`-7C0fRTJR_Rd4_Cu6F:)LP,BB6RQr_s7AEV%cmlH^R1f=q=\Xt7_Vb:d3_jc4rm%HD%;OkN\t:V7[%_c-2]/3U/7fs6QfDT5"Y7rT4`)4b`pNSZ5t4W*OC2L`6cJ'jpkd_7d]V>ff?AojOK*M@ZjsXi`=o/E&[aRaJ=3%:X'"3SU3B'0eSJQ_ZO.,.6o40Y32j^Jk?_=Os,0$`:k`*Q:)tTQNskb<(&ss;P'HZ4TEF6q/aoMa0fhVEue_E0>J?V&Zm<.Y4"jb%[V*EE<:QeXZgbYR0`0]je#2:2OS/e39n@6W`-lbJ5Gh]i[%5:U.DqP:L<5u/AB8'aJL+h@#DA\_0+V[N3@A.9';u^=H84Cl.IdIJ%Ml"8pUd<!%KLZ$2!Qc1rg^6HfRQ"(ip4FIu`-:Y2ba+MK1n"tTPl^1nU8>X84+V$0HPT.Oidc]Mn!f)7\)g2KXgU#9.6:me@eecJ%KgFs$oB>8nC_h4OdtR5poM/3>EO@h0d__"(ZKHhpB_&io#N7=gp+2<,"HF9S[HbaOOEKU=`^@t/Fp5U\\''s(L#=[p\'.(_/QgRt%3G-KAc@'cR!sloUV1OO)&#X"CDZe'9B[6`[>T(S`h/m-:aLX+<\%!*Ep:p\64S_":!UbVqm%k8)4[N$TI9R3&]!#J`PG4s*lng:0%J5#fM?M)/SZ=*>F*4%HG0\NH#;&&#UqiJXoF^R-Pf/957'Z<IUcaknCB&B%LE@#f,:s#ns,>G![FU(PABcF;t!](pCU-X,A#RH:b%OEOU\QijX3S<Mf#),N5]KYjgS4h"h"Um6F:jg7s@.n9og"Z?DPs+p%W,d[c_Q\*j0mTFbr_<bCtCt?f;k6l1P>9X<9*.1]*W#TL/%QJ%pFRg9mZ$JVmpCj#KRHh1Y=]h9*_$dhIjNcL3_eDBn_Z^@79=M\AHA;@K.kJ6G2BC.Sqm+=nS-2:XL/&9^4'o^e1C.%?I#]%eY%"Ti!u!CS)Xet%(?lW-F3H)XAT1HtM$1%7[:h@X$j:L!<Nf:Vg7mIR-k%q`0rAT7h#V^hWElatTPP_l@1j(T6&mm;IT.T,:(APBSL%RK]X>]-5*5BGk:f]Jfrd3,$B.Z2e\fl'G4CcliX-[G[CuNKh@P++D2%-<.rHfIE=VJl0N:+>=0*U!S^lJ0;Q+ZVA>*"K#B(e\p/&%"kgjUA*"@532I;PZ!lk\=ks?g<USl>d]$[XMub]uJe5*39FK3c.kKU;#95T&,t)o1+-#rAWIQ*VTqc7\dHB-3";/]pfOb0iT$(Vl%Tbi>`ThGPo&SZQf",PG)0gqC(6jU<<@ALb[/$98ZJJoJAL,n1U?i]d&P$Z*H!"3.IA3D@fD'XW4gG$ek#@tZ/1jal%o/4m=>t3BS%V4JL>4u:ED"$P3;1SKAu6Q-e5k'7rdkld)To*,Gk*XeM-H%Lj'Z-2\=s6KPN"cJUkB^F,CJKZg*!<cU/>q$Tk#PcOWW!&#*OE%3Z%K5r2Hc#Eu_E<JV8j#L;[KGP3?-"+NAKgEM-!>nD+SW%ug+;Ot[0jrGFQk;st"3iTaYKS0ln\Z*;QD5kZ=FkF9/0#/<o5oHjOtAPo%Z-YT9T[-/_./<Xf/R54jOguRh;SXLBo)1>@q_8TO!Y(*NnH;5jXX8#7K(B+R'V`er:rK^s!@YK#Bj`2sW-KD/dS'WRa]m]CA?$jO%G_j_ub6^s?!P/ht5#Y,0#,#o:NNN&!MRoB%OHJ++*D$fE7ZPJT`(D*`)#GjUOUMO%!H?uf"JO>.KO>r[D([6?Seldh&/nn/La,':%^ceA?!^G1"M((#Ni;$tgR9bfL"YG]8@53al^+k2]0Pd<t\f(UTFp&#-YL.LJ888iJLH!ip88;P./(0t&9J9QSh?^=p1`"#9">L:Z%VA<Wa0Qg'kjGe\'6qA(J0+@O+0Q<E>B\YI!$<bEF2*pT8To".`+JKF8@&V`]'EQsK3+gu:Yj5uYO!?56;$@g"cV5NF2H(`dJXJcs%8?*>cq#_`Bj=\W,8"1'Rbt5H?'?%D=]OBkh'Mu%!Wg)"le/3jHOj!sBD]Fc?0EG_rL<Na%N((h!CKLR5a"rUJ2`sQI1:pd\.MD)i%,F>541(tu!1i#c_"MiM^.[*CgQ)nb!KesGGJ/=7miPrf((iSGsSau96=/=>nKqP/6,@166$r*"jfn'n,;M*[MJhW?5!^Zu^D7=LW%QtF=#2;'>j"2HnH(N'$l:%GQdS)QgL!8%``3F)tr&EpC5i7VH4KcV1bcY$%Kk67.BKFuj-_n[D$^7hBs[D5psFl[8]r;eYuj*a&E%K8.e`blk<3Zd+3oW3L:\`nsr&<60\W57I3_^<[u'PPL.;jMnQ-J>paD$No&*aL=hd9`UC!Qk]f74TRpjkdD_4"pua<^N]hE7@Mp1%NR"+"#?V2)0HcAm1&MjpNj)bEDeL=1Q^%[9F]i8.hg<e)b%Z*Road-+%Z_$6-.j4J1d`f.&MS<[Yn*;2+`&TcS7g@+_q[=_Tp&C<%Z(C#a%fBDH'6kLRiAn$3!%b$%?;3iAHN4oL(5$26;fJgs`h26K!63%)GZYR;H/h_7Ab7]i66LrlP/Ub;AGH32ehCRJl7m2X*//rt%(]d"?X9nNRJW4drG$f,(RJT:,R5:Ptqbu,7$BMG!IH*TA]tlhXA%_p*QSf>%4&=cgd#13mP_#5F'lbT2Fl\@4rQl#&E/\145CABG%"I'sG\NjfPdftgOb\U!I74+J=f*2gf!r'UKPT-"sUs!p*d'3`SA)Gg%#muMSX>`-*WUT8F-31:93eA_%RuTb[Q&HLS'[4iI%XD"n%cP$QrCDLlVlXP4*_mrU-i4B^XEuKZ:j%YsB$`1cDco-sW#(TImVI!8X1skuA.A-8;_"\K_)R1\;&j4?=E(CGR5d3tHStgK1lP(L(%Riim_N+6uK(RSkIJM(^>3.G?`:k8t9)p;?E"f%n1$\1_c#\KJZ!!@!`TX(%-O8?QsWaRG49EVt1#j*ZC-NNib<]n?I%J3djU^lm5%esJ<_$4aiP%);*7'JTk-QEaJ9$N\_<#HJ/W!b$Zg^jtE++66Lb14d^B%F>VK#("LE^iGeSg@%06(-Yq4ji.QC$;Nos15Q:#I"1@J%Br+B=R3HTRCpbHBHTnGd$W(NR,p-W6%K_kG&28oMNP-RE\>-6;2%GW%7%B3q29<[PY2fn2-k8Kqi(,oG,aP]j!I=gmqJh+;W>@V*%;%jdT1SGD2V9>?;A5ImS8sTH8&(8DZ!CaI[60,::7QK#R!aqXb"&iP6qL!C#U!3`B3a-$()MoXPG9k]`!X=b6BYi%U"ouKN0EOSP%AccBB>f!6g"=lE,i)!'d8=Q((L=!6S&K2+M=7KF/^#fbb:a=]*`.5X"(i%`(+W,9C7>*G+#_Z/`Ur)AL)TWhp-&Et)9MU8XX\Ai+%*tbi=e<q'PL!dCaj:KRsXW0+I"Vh#,@3g*&:bc37Pd7)C;GA:`aWtBS'=Pb4Kd*:5#]j,]+h%'mqdXdu&oA'Y4em7a6XgQk5A#b/%+u\WjQ<`L$e2,H]_n``u2ZZp49fjh*4Fn6!R(X]D[Ka<pGL7e+7A.sO+_)*r!ackT8q%dg>]PLgPlXb?Tr2FnL0fK"pV?.br>a2$%"C](e7;WV;A+]YE-.gq5%D=e0d<PcnKu^u"C954okY`?paqZ(Na1XsPd)t]hE"p7W4il.\n0l#s''iIF<M5]:g46bgVSs/jH^%Y0%.0-6MNJ^13)!GKH&:h8k:Oo93+gVG^ki?I:p2m!#"=@E`*@6;I6Z*n7"JLZ\UeV[+Li&h:7-pcRRVJJb_V1lY<O+JZLF.r\a/>'#%bHlkQCP88d&ND;41D!o8&ro5DEQ(+#1I:6/b];)uTRAa';;3*:+loRZO;r6H5Wn&aaqkt#0U[s=?578F"QW/ZqEYV3&a]9^m/ikE%@M=W"&$93%11`$A54]o8hD'F*TPVT="q)Gq8ucV;d#5CZ(@"LT!_kYV>URiJ9VN,4kDJG)0lKeu:a@Em8EBQ3bg?PqHT1K%a(H66%eDnkh?=[(0!hE9jd.97+Os\5A+1oR$,L*6[9L(gSo>t!M!!Wq*.Kl-nn[rSsac6CAOIT:']$uF,R=_2SaZP.;1NR#aPV`Ta?c>&`%;]$@*'^>Q_E^>:%=+OKka4VI/idmZj\<0?J6k!+]$OU<1JN<j\@9f;YEr\Zn#<m_/2R/Md`]EPmTEk[]eOMn,CYp>+'1VJN1:$RP%cPgjb37`W\!_md0%&fT0FlF8F`<daK!Fg\Ia2U0Bb5jSY\YdXK'q9^n<(%O6"SVJUfFP;,^0_d+&r.&D+H71<^/;)pF$OV0Dip@O%PgRss#uD;t.6D%TWR!HC7OHEi=I>B`PSit#$H7r)%DZHm5HIaE!chjK;Q3/\!+8>=[?][_*IqiY+@_25T^!QH_TaeaJn6FgW]LC#%BcSpn6i_PS-UNdA"(9!(Fe%]@>Zam3G-=MKGZm:A"#*.QJSW;>3\LOW(F_&A@:V)XE0r=7[4kLdS1'a[N\o,S9X\BH5le6;Er?;K%\\(Vg7R0^7FR[M`a/2+1q!+=]]qb]j!V)pdB-SQ&lhCUM`>AU%A,USU)M^Rd@X:W/M_kH8YRS'O.LlYDBNIHmMmboZ:;J1rgX?9R%l+G]<eH%O%kcNDEeBH9/5%5"0k33^!7Zf>*-0ML!+*[h5F1IHBPRF1^JnOd<*K!6^3#nSdS,=Sn?kgDnMmU,!Z\d8[K[UfHRP(Km%'7a*NX;NMj*p\(ikimL)l/[creXV3L:ua'9SM1+!#[QIM@\,E89e")LkTH\bhQ4,_TpB5^[jNl>i#n!gkh&c63GTC6$c$n=+jVWt%Fos_`Tkl[jm(,%)e0SI]5iLF'L*m7;bk#SA$:$KqdMs84Z,Kgf0ME/<0oJV@Kha3#.eI_`V$LbF=m%rAKd/K5Mj\9>p')FW;B[&*%S^Q$J!Q[-**M9;;!$'$!??+sX4`^fTW>J>pMd"UERK1,aX$O['4"c,5XL7SYkrKK:NK&o'6F%19%gQC32rp_oS3V+8l0I>m`)K%,%5mfaZ]"[52OfJK_<CK@t>#7I7nH;7aJEq8&!/?kdV%iD%*2Z=Xd-1jY<C]qJ83dp?Bu@hK1P0bFD/iF?o/a[;EYU#S!mLI'5ZP'm%o/l*heLkJ@&>n6_.q1V,Wjs0.$ko"h-W;<[@SNsql:<":Fh..:<pjt<Qk*\,,6lI%5q\dtBq'kKnemNQ9ubp6T=(V0WVYW/Z)*)j%0L82\C7o(">ENBkc?"dCMDc0J`h)E?;QB=B<\Kf?=u%cq<H?Vq@ZL\NV@baha>:(IT"+@fYph.pQAiV$j.qAlM+:p3C$HBI!hi2'%ao(1$a(Oef=d9CH>9HTF,;DsRpssZ5">#.P;M=(8QW;LIO0IhkI-=WbV,,`T@*YC?]`XWhY`\(@>GD.T>ROU7H7kth8uFLs1l%[N%**hF'OYJ,mJ;4e?/9K>Igb<?DW)(S:-pu#l'##H>'h0=2!GR-.9O-iO#(`aslYHiWJ^6WkBDf>/EnJ1<\t107F!N"]qY$$I7T.'u%gJtMB/I(s!!0hJ4'u3M0*Bg$c!RS<5KX$r.HRpFdSfof=;B=sG5m.KP/2$\dE3VnL+(SnSCQ]&("S;giKA&1h30$#eOS\n+>*t4R%dZ+FXRS;jehrg9?+R5NUM@/A(Yr&@+#7))]l-UL;BkSE]oBD%Ker2jm`JH\Yc!'A*%"_c&>RYa\$\<o__PS\9L[o--\M6?Y(<h%r%P^5t.)?fN"Z,mURBta+;(P@hmTa\l0M<BkpAA8[sg]XBPUOhR%Fr)kj)J%hKSC`!If9GP$%*"T5d\.;:_uiV!Y;D'7p.A$s#:KQ^%FXs)[]S_6f9c[Q5@9an9enG:_CD)._=G3N=$.n7g>5h3[-S`#n"rM-g6H9G^\E>!a?1JmeYKR)s]ogaWhig`8W(Z\)4pf*/Kek6L%e<G1]B.s<[KoQ],E71,+7!3N:^q^e@<5<JT,;NMr$lpjGeh*^qkgETrOm:%&""S#NI'=-V*GL[@XCpniB[^G2Tc;:9NFV&@(giUj%Zm)LqZ?sEm+]lfL>nd@5D`[N<h2Vb+iL>i0,N:\$`2/5kH9=LSE]D%Ym/RRN+A0,*me9CLaP&Ap$?9%QQ%3+@bD8hq.[Lj(&l8dK%&7j])%HPD\5euEe*QOU#;`..[=MS)]CSqtX(EI.jBph@`?n@R\4UE;0%=*;'a'kc)+c&g$_%T5NbC7JhjN=jPWuD'O/R\tsk!U$+%8hj6k^p,NDRCRd,9:;fo!n%4c<D;M/('(6!d37VB#]mO-(8k%1@)kZR^<?G7I;-hQP^2:]!GB\kK(sfRRepSU]F=1&7Qqk$0rd0P%K/p%60Xq'Q3aL<%_+m\5SL>>Eg%6g+Vfg\?WhTE_"p^;C27C:>0Xo%oWc72OoGKFS?^S/Wh+^Zq$.G2uDM`#EhIUjQS6+[.1$>5E%U4emKETH;NSkZ_cH,:UBQhOr>C=-fem/Bu/d\,Z@1rq9FLlj<;8a8aoPK"rsM;jaHcP.%OfuCut;l$,YpJB6,-#%no2\1TkkXa0p%)X9N2X9Jr'=45Za0He4g?9&EfH!YiE!m6Um.S]RE_/AO`k[Z0-oLN6,o:Z'DrUW^I*+G0mR^M[:Fa,*P713h[C4W9Egb#GDElhPN%dLV:j38YEH;kQ-Y8.S*TS[T3`MZUdK56'#=2Su1j&%&DLp<&gNE8=k8"stTjS(b`pG\R-3"B3*e@+tI2';R2g])7=K_(?(]'afb<%"SNkmYI%)a]2_1378U!5JL3Y@0rOc.2Hc2H275MfG\?$OjFsI".[9QnVqqQ6pd.R&aK-LO>TYY0;f<FTDH^U:"LMq;U%Te+j`SuY%BGd2%84h'="S>sZiZa^:85!EC.>d!d&^)=>8`<e-UQsuB#`MJ,#>Gh,&4C5tM,*LOgF/XNje5ZX=%:qP&9.$ZQ$bet)q1)Q"M0!)%YE!qnreO=S,J3.OL8JfED+;L,7M.c3'bT`o[^F1ja-UBJV?J]59n/0e/#<'IW5h6_lP#<"+^N=q<<*_r4!i<91k='HBHA#cX9EKf%G:9uY`F2gd@Hl,1,O9p`hCi"@3=!Te7U:BTRn%W)W=0J(guV]oQ1'le"!CugqN4@_!@VH!(<r++*#aReVJRC/^qll]aGG/mZuqcI%W"CGG/lcQBC"('N8)%\W7KGH]`]>B_Ob13[UR5P`#lD*Aa&hO.M?m![pt6V:PYOJ-En9X<1kB;2Fjeq1BlMdOjpPo]N-oAEUp6._%!_`k565s]r@%X&9;tZqL%8Q"]'i#1iZm>5V5QHarl(Q_b9E9b%A^U\hD1i@KbVJ'4eH+;3prT<s=#L'rQm]_W77D<(IV9r]&")=_%VK[pPE?idZWc<qK!5Y]+"HJsH^m5mEJ*>4_0msf>;:SqYq@QGnJGWj')3REV%.pM1G'e"J@E/a?A>c_BhHt01'O7Y("LJ7D<*\!>%l'd0CSDJ1U-;fO7=uq73,N*"6)?KZh?!-bEoo(2@\#YTj$_tlsjJr'm'$ANLVGH4q3+/tu=Sg5Y5E:?<i:(no(uR2H]GUBC7':gL%9[Mf4g8='c0Ma175hD.8&hO1%%VhN0DXL"6iUX;lBu_]`29uQ.S5o_<l`KI3e4*'&X5QV$:Mliho6+m[N-7s``rJMB-j+p9cncCm%AUfDHD=*o!Hb,VHUc-U)Z?1^pLike0Y[aQ_3+65H>o9!dr!ZE48-5Y3&"\`b.]QHpO+!\hAbFOE'-/Sf]>8Vh!4p0hW1u?_A1TnM%c\/G^r:e=K&ho-0\#P@KUVS)8a/-;^#I=rm9G",4FsnTTPu"&,dgXn.H.(;-#qAqdD)Cj1,V?Ad*'C,>gk'jcH/;NlphUCi.<i09%_TIK(_YQh@/m*(\>aT"\/;*/m)Bat`/B>[K5/hB9`1oDFI-e5!9drOpS?0N;M$-IY+W1ET)_eLlVcs6\&%SFsRDlZj"D`T!5G"a4%B6L8Q(pKQ)+'VR<;4m%%IC9+a]MQc`G84W(es/pqBmdd\YHI`sVK@ORC],4kmX<1L@b",FB/PI1JI+Gdatn8+>XejZR2DCq5@+9^%WNjtn%dM]sVb!AYMOs&ln`^=%QVL(ogQ524]W9=`@srmcX)*P%;]Qmhpf-&,;dN3fIFD\_#JuVmR0ap1$V$J\2755&;\#1UlKE@l%SN`r<_iZ"3;`h')_AnL7QogZ("I'l\!d+gtkG(R1Q'YD?.lHXmM87SJ5M#3ZTo&C51YB=N0u;>GWZD<2=5`7VHoealdpPVUVH9DK%,;@R;EaB=@'6XGG1FMOWcp=3u<Pr+m[#sX5e;B0T*;Ug95<[p1oE24;^Wn),@EQ)dg;X+sV]UN@rMnYqU,8(2eL(\($p@(qeHKsn%9)YD-\GsqGblk2e'CZU-C:oCO(,+JdjI*s%V^;\<^b`M-<W^Bp>E(l##omBLMs[&"0k.+`LB%]p`GT8D7Fh'#'0,-JFO+(d^p+je%98DeiA%hJ-X''+rDLE0?#i37hGt>Vl(bi6:R&E<H%uKNE#4-'.cqdtpV?&sWVI&W<lOaCNK[^[2?&ZKhAUX.MU.AX.TH9`V0XVk,%^.Ag>M-@-03;Q2Wm,8FWMUVsPY%lPm+Z2$nFr%nK.u2:W`3*h?o?"U[?l4X"[>(l!+1b7M;7ij?SL_4LCgtl,DJS_j&Z#dRYWJpB%lK""V&>*VY*sj1=Cgg`*hf.G&k7(_qoL<Yg@IgDDPCV(oLMqJ]I!h/11/KG0,#G(EX<.G"c-`Xhmr"m,,4iULT0B:gdc1hU0&9of%cdegn).2J59C7FY/;PB9`h#'Y2#+#4A0D<(9+:SA0I1VkYp.QdQi\;k>)trE<fmI@s/)it8/N4#!:h@d&;=dPnqFIVl*IMe]Tk[>%nC+;!K^&F-e&QSb9OYi>::b-@hfO#:I(Y;3Fp75`\_Gm5btC\,ML!2_U&$$#LC<`R9mUL2e#D*)HKpMH+Q(-6!9?Uq9C)+>c&f>#%[A!';1V`co>R,2ZlM5*W!VEH@Z1,SNr>ZN%ogo.tBL);'HKG@V9cms?kTLHoJI@qh7-m/2o8!ZoR"q7\poOo$E3E&5=RuZe@n[m(%,m[/_:me^IGe1lG[j#IT<Yp`YmR+s[4iAmTS.Zr@GEdC(K,=;(MiaIBB?k*pa)m)]VIeYAbu7T5eL9k(-GoH"!sT%\7GfqX_?hDr%9TAMXGD,0ZhP4Pu*eOVBN#nO>0\CGk+8?is!-A:^2q1Q_:2EZ94=d(JFGlUiEu<r1@i+KuFZbYe`mMJ(T(SJ)j-Wb"T2J[8[gj4O%4>+V4H[+$XV<4n'.eq:2/eRm6\UeZ(JiH@Y-fh`=V(Yfr2M*:Fc&&FAcu\&)oWria&\b0aZ\f!ZVdGT4-rco1qY`Hgb61%\Y3_2j%l19fUdRG+>,e0B,9Co#+0Cj4:a;R4&!PKoge&b^\c=f&/k6qjE'-k(U?.FF!F0\7EJH7^L39_T%8@&nqbL1,'2JqMAT]B]Oa0]N5%l1=2g'V[qENl#)^0k\Ta'JO7LU_/brp34g?OH3l['%6'+n8s:CSca5mF5T.B`-uU\4h[Mm=J74.k8G>/G2=q2,FL7Defj\he#kk_%ng"=jF+hEKFj`C)V9X2Xpknt(jq4O2bW%'#I4:*m7kpkK''fOpS_"Co;hc]XHsE.)Man"NI*BB]R)6Mr7B39BEn=sB^o9`Wd&V?J%SA?g&(-:5\i!DS%22?O]l!dU>VO[1S-^ghZ_kfjd,3nP-gnHL/]Z)JNXqD:D#_OZu_]4m1a,U2cTGa54K!Zbj@gK.GQtDV64-X3#%W.L,mPWsT=*uh#coK@hl(-D3U+BOqqNB>bM+?#9Y7++#T$)Xn,:_eSqr(6PI^11L9'i5<]Y/+r.e)r^\4TqVe9fHu7bftDIetFKa%CV:3,m>"a<3,]i=]gnZ44]eN_o5b,Vk1pXEXMQ$2,Hfh$htHUg6+W];S,JfS:?K6=+7jqHf:bim5<ih(HSA1Y[e[=YVf_gfa*USd%SHODTI]@oWb-qm/0ZWMMp%RX_5$Zj]DtlZ8)s(;#r2Xbj]rAU0Q>]"Q:U1ca+,9(7mHSB7r\1rtnn^?JT(\?H8b+McI5eigEn9W#%7S-rmDfec%h*Je=R`1>"\Ga(t4TWVZoWCu+6C-D70_R+.@quXsb,BYLSKq\b"rGLB(0.,?4RGj$TW:m'1%nb=Nn`Ti2+mk>_@Crq%P;Gs,$UrbX&QoJ<e+9IbPP/3#]bYm"TkLd[cOr.-F=/GKcapft.I.KSeNJU10LNj^AOCC\fYI@AHoMse-\XC.K4-NM:BmRO\#.n5%e>B%oB:7WDYL&<hg-:;f/2_2UF#]PI:6GjWp@,/1;D>+O.a>u-ql\\AXKW:k1Tod)'T+%Pq<USC-/I0cl[&!9Oi5o0apC02bK7?X%IrP<eE\aU'VYpu5WX[f$MTQ>j=]3i]9T$5rF.pY^L)6,8pN(MaZbka/Y<G"Ip4d5I,I^L6+Q?%rjm>NX>/%VnpAV%-mr['6@(,f?%clI&r]h^$5/!^rXDRq2&7GB`VgST>trhaM\]aQXMFRPF8NOJ*.2Vfkh7GDpfI8m:Ul;LFO*jhj*EOXc-oqqc/iZ!6'N=r!r,,.%p%Oe3J-(`XrD0,.P')ItXY:*Y&=D<(SeA29Aq@&%7`4tukt=.XseU\:+T:uP*b]^Bmm%75rK0qGitUpFqQ;D:GoDlE/\_rP@^CQJ0C%GR!O7Ff2o;kk6BN3q4VgeQGtDG9IuIS3i(L8&s/l6.&5k$a'GI>uJ>PD9MrbIO/GJf/NtgIl^jiHKuA#4/UM>[Q`o9-ggoe7@$9&%2,D.!Ojh]lq]n0aC%p1AfIBoh>aBp<*GiG3%f4<D4'4'"1Jbu+mdjlS^$FpE@J=<Z)iX3t4/4Td!YJ)DCem]]YoS`t90QSS[I,27%ED%MuIhl#%I9PYFkjpY9m88(JG+MA7Fu"7j7\SG)m'jU-I.AXs'oJtVTC;$K:"1-^P75eMm285kPc)sIZsjUkjp5,+l(SgMc4R@b%rYJ88]FB;Pj(.fYhsd*qX5]a?o[mrKb(:[AC`GZf*kP:jki/m/Rf:3r-rI2QN_ASm.N1nS4],u:C3Tn,kMqU[MFP_.2%.rt[n6&X%XPFc,gHHd$3Usso1cu`L#-U6*d7%o>ichuIG/6eTQ]g2AX"*h^oKapio]b`RRA,YE[6*4/]'[7MV-#B+@,s6S]XMLTph$X1%t7d1%X;/q`I(V0aeuihKfk8ctH<dP-rLuG6Kd,Y'qHg7?R900k>AA?ier'<46Ts<jXoD18ab?A<5;&<b\\r.RMac=\5-&%l0"We(=oFEQ%Y6Au?(N?Utd]A_!b#u4'k`1G3p.9:roI#^S_]nrSc#!04hM+ALnFbOHMC)XGk`GV!FM:j42BPnZ2s=*l(+nRZk4JE@ZZa*UoF@'k%EjC.*m@[:?bnDgQD#&'=<XV@W4:rNUV"P"fa))[c^5.e_K-]]OM($[+>Wb/!<X+$#&l5b@haQ<tZ1_bc*@V-Bc$>g7J!K2GFYgcJ%MJB#.,CB/<^XC#+]\W%J[u8r9J(j;_euhFfao<*V$:WUnRFt/Y[!"f%mp5h.$?c1=D(Q?]V5rG:F=5nRlT3!^U/K6&;3mA!UR\*q%q'Xk<9Sd><JY;l#nY!5V54uMcUg:(agm!DYC++NRbIX:A=?<9UT/dBaeJ+QT4c;ag6@?d6n<bR1kOfl(>5R\Ts0eK>&i2o>aiX1&%]"3s?.dZj:Ad0goZF!=1T4Af\dJcr!6ucH_IU"^6.Th^NJS_;fqiXmjg\_4l`JQph05*EreqS"1@1'Os(MSV\$:W(F)<UO+L,g^6%alE)I$J17@MH(JK[_mKENp-Tt[THSjMf4A2.Fos"7GD7.-=.L%L\ZmN^0!.6Z$)LD"kMFOQu+q/[N4KPfpdmI8B!'8?EhLL1a@GM%G>tYl\a4JVGM<W!Bgggs.Pb8Y4;:Jg/mo`X[4g;+TC$FeQ5Z=e<O?.crD@qAamVRDNgIN)>q"_03\K9IEk1!W)njMC/_D$)^6lAI%DEm*&NkjJFmG%k/MlKm4I,'&fl[qL,<kLp"m7SD-D`>k'Mo?cR^Eu[Id]<@+HCn6C8q:]k9l'>CEZLY#:i^n^/<4Nug=E!8/_VNe%9brVR,$;3]EF`k4$=M8Ed9tM"JQmb-&;+#bJE/pPBMB2qD1o@*B3T`Vl.WIQKd-c*B>n?$VeXP8hF[8MBDf_`^t@k0s.@[TH]O5F%`LX-b'LlrV64$-/e>?@'q)$Xao6?JM-oiBNHBD,,hP@PVn#T`:ms7a^%H+isLB$_Zn*op$>UUDGe?iM)qqA7odJS)m)n+^p[`1[^%f2eRngV.B;cAWHrS4e1Y(-0Qj<Ru9hSukX3DrH&O^rdtj8RlV:m.NN_Bt)tOfNG"=`g?Sha)TKjgO/mtSqZ'r96h)E=S^_U*X&GQ%cA.$l\!Um[L?B/Le>sdJ&Xtr>`r#@L]&K$-=LrY40N$npQ4&*69&Zl-QY[5eU[I404IHmW^b4Fs'^N$BbHVIE%"^,$&t5P`nbL8o%c&,8WJj'U$B[76qiiFW3U(iLs0h9:l:)B0,GE.c-9gHN_bM1C!DP+)G^sghfokVNo](?AVDK2dgfDY.7Upo5sIlJpFoZWR@euT7W%n,7IQ6*VuR7D\[Wq%A\K(OhmU"<A#;4m-_QKRS9$r+-omDa1=;H\B$p6J`b,Di^!h8'(_7,MjIb(OM(K8''@bq4F6Ra2oC:<=-b!%VK%>J?Zm@^+mJY(n*[n2,t\+hk\tPYr*]9li9o@fTU/@?Nfq]D_5Q1>>qERrq;!sD.gT_@r,+.%q`I*&\#4Z;mKn=T6(o^^-@&s1%P1SoL^Z\JeoUA#P(L/7L=CHi$>8F8sCnX(g;ZG?3T<A4.fVhn_)=0$ROir`)q@7'^L#U<F59%%M3Uk)Po0qH+S<SI`3e^E)E.cKD%.b6,lZNSLK1E_[HcrR6soF1_%dPcrYAocEgOZ6"S9ZTmg<$1atS,OZlEK5d5!gLT2EWUgHBNo]7et$CTENComh+8EV<;C64GPZ5/%osX:qXZQL5,]2jBgU^=WaP5::o#&&5f:CL<EdOiO,Nh;;EOSBDo!X@_J1G-#?PVsb[ElUL`gkpC\M'6_cVniBqO7<G'\JfLk5-<T%*p`9'_'khKiY$!COFJ((aSA0W#3!_foXOh^q#64Jc&7"l&'5W1YI<oHpe9S=dHaR$gYGlTq%L(CKfiYSJ5n#gMh5Pt>5R+n`<t/)%n'3?8dHCbjSPcU3g%=)<>Mo6jq9EI6bse19EC8*6GG'YKEjkG-.\*?l^3?SjU:#F<eA(b7WFG_1m5q40X`mOB0Jrh*Ja`<';culn%lc*uBmY(Tar;Yi9lE_aa`;9arAXY7@^4E2[VrOS7]g3SdcTmVDG$pPVMC3J;J"&mi_j[qHlSC1+m285k6rQN#jS_!Mq:F&aJm4_(%O'"W->q,X'ei*%LG2ddlf'Wt'(%P)>gXL&/RVc!02;@C(7FF(O.sS;*:!F(u;5"9+5\a=R6FNlH2Ds6dB%tgOIE'"eG1M0$:,k=h%@];g\/'2GGl6ePiP5Koo`7X7Ds*YIcoXZ3aXrA'jkN7APF^p6E;=a]17?(cI=+.);NG$_fn[+YT:]BbFD#8[WJ'R-"]cUtcQ6<kF%T?^Ym:.Ks.Fk\Ds`Hj#$:sY<rq7cK7rKdY8T'lqGDNC"4./A2s:1Qde[=(KjV38=W'g\&"g6SL9T/)"Sc[)`Ilto637k98Z>0JuI%[8/.:hNL77@*a=k)*bPRIo<@a+MRumJYap!DkE^H9436qrY,M%mFpsF"a_PTNW8@=?$C=0p8m"QS$`1Q:u,%u!]+A7jRLSg_7Bs8%%YrVa"'`U#`l\q2Ca&auH5-&dH+2"ar;r:Z.Ej(YFF9bcnF_[@PBP=p:Z%IArs=%c5oMJ_#q:m>>W@R*\dCmRAYp'bkF>$VX#oH:%9-^kgCCrI9)mXo*2Z96R=uY`KE=19QEXBE:73cO$>I/3L;QP<Dkg#WKdID4)2/.M[[,P(YgP#%=9)(U-F/-U+#FCkL($fl-bK]g>%7GB`\gLbj5rhaKf^/)VAD_o+E`ja4fMO>o11HqB"($fu";pG*GYDDuJF/.(DM9V+H@4L%Zc+d3L,@5UlXR'j%_Ma"1K)YS\n7$6]%0OTG^&2eME@JaZUs-SmB?f08r%0ij7b2QX1idHXY!lMEh"*<E,b4GTSf)GTu;\V%aR*@_5^%TR;]4D$QL@(2mjMRO_e[.2RgOa)n%[c:7L\EFTcFk//?(7`#F[AOhe*.E8X2cak-W#(Mj9qP<td-"-kktb1Uf5!.$Y53D54^DAHSB5&@,1PdP([MHe3Hq+f!/F9TD-<qf%!%miLFLD.PHTka8aMff54k3qig#l0NH.F0go'Ef,;!@;gaX<s\e+Q@RGg]n[XXKJfAdQNd<&^MQ=:aG(nB[9Ke,Fi@N@<%Jp[5+r%063F+A#:;8.T@M^<Qsu)mbo,p)b#+/q?'X)iSLDaH\IWAD7$d3p=>;uMY^2lT7=f"SH#D@co_nI:`RQp2r>,NrFGjI/=(RPVrA'j%$+Hf57G*r"3=Yc5]\&S+q-DL`g@u<o4t!,P*d&iCk=O'-,',3QJNjg^:m>881).#&GQFl7.CFT<=n1Eeg4!?V64iN%6<<_m'U94a%8'$RhW1_fWU-1lb])#d<*V$SPF6bnP(#N0L#k[0UB-B5!!j8k;L3i/HMake.]?Z"beu#Tkq]UsjVfh</ahkMeIZ,h*o".e-hf\IQ%\IE_'q^/%eH;cKp-DG.lI&ZPq]oVCKIKOH'No%LW(D:#H1AD_HC\<q-j#.<ls,#M)F!dV@]5_9&rW!KIYAR8eKOJ4lG7*W<k3E'U%J[MV)g!O/P^DTS987ho^Z5B4aMb4>GF^<,t98Z5?:<2&]'d''Z&j7gi!TSd3<*6`oF_U60A*as]T=Vhm0m8Id$oWPt`ohI+pc18&%iVoJRGZM1QK3n2_Z/A+K,0,__baLFbbs/6ogX`-/4c"R'n=Zuii_i*[[pYgOI">[0H!5T]i7Y'b+.rN;YP;p.q^2V;eDq(=Cm4R4%_<boCO\K9[o-WQ<Y?\.YI"m6t?FU2;p0]C^Kp8l8=E_j+U?b-d<nkc"1$-XXK[&17+,Kn'hS7S]'l2tc(l*Pe8^Fgd;Z(hH*A2^p%$FJK-NQ$;!kMqIDKsc+Hf2oKL1&Yc7.&bl!';'9OO\&J5>j_1k`Ker?>qTbJqXg\Y?lrBi$(q2r1m5;>rj;)ZT3JOjqrl@U.NB`V%pBa[2$jN9SUNXJ*giYj\BrCgKFcMphNqjM?"9f&kH8=^Q"!QsK/@u%f-*Oq/qa0Ph:sC0Idc#uQj$=4N1)^VYh'b;F.fB>4]@'Z,%3T[.bV\4]d'8s.p#s;SiOm30u;bF[?If07rquFM0"e^'N;1;c!q8t.1E2J99DGUXnn&hq?#pKu)np(QL.oHS3..<E`Y7eZ_=N#2i%j@]K@;7l(s'ZRH[N:5#D=eJn[p.D6ZSKle'8S400Niqgp(AQ4=VHU*JE\]dB(edU4J*.*Gj/DU_'UQ#\.0'-:k-s-6=d4I:r]Y.;%1@!nXJjtr:>+TntK)$PpYYjH&8?J?kFNV(.K0_.P=Wbg%&#S.m8WC`OYtAS_G5YnR-_`-g]d\>YWf/l-:M4X:P\[&YpoOD'h/C&'%7cgPC:,9Dcr*#L@f%[lEpGM%cHK6k)m<1K<%k!W_X4NruejG"d:]!EE)2u1)hCW#/#M7;UUQ\!UGPak?6C7gg)*BR?h?@Qp>q+Vh%Ye`)F03"0<rMRF0/M(b!=XZ&7DVu,DmIKj4R`LL1"2i=AG+$*AeSgf5)gkXJX$7<u;S,3PItFtnXoK2lpq[X(dd8.RK6Mb:#FbR*%?_%Ke!US4j*d5kb]nES`r;p4STu*tl7cit5eL/\75&$=ra=5_Z!;QNHQ41h4g*tiYO&pl]2P8'W`TU.3`SSJ2$9$hE_<JD.'LB6=%5/\!+U>%?MJ<p0K5=F\C*hosET=a,9-oXm\5JuHUII_!&)/APYpVado1jG4cJ%qm6oU_*8NAHS)80:M8P*5pFGt77Z)Q#Mk?H@':%R:Wn'(p;Lr/sWVEo<;/HA^siJ[muW%b3FV.BA/oX6^0aW`V4$M%qO8rG;&!R1&TA<8b6fIJ(gT?Pi<<)Mk?;;+.'M&H%rq6L7:3T%A2fpH`b7%WZPp?3ah3W9Bj@Lj*J2Fq\U`(a<hAWF\SaXt:0'/!J-?IH2K5VD*kak`_#a`J_p?lTk?#V16k!\EMkgkJ,)@!g*l5TD%_Sbn8:R*QG$3VFhM7:T?@TQW+`Zp2eY!(ub0`"!:b)1ul7^(fFD`mI\48Nk.MIF+Y>-M0*^Wp_*XdAZAQR&T?eRTWbIEK1ore31o%DE$H#-W@rlYt]ZRd.Xh*H*u.%fG\g-i^Y/@>h_QS$QOh?A)R)Z-aqG:m^INLKQIQXrF7]@IU.G;#D94!B7:kfAtc("'8r1B^SoaS%VEbrK2>jO)%<N>5!3AD6nRMA;l'T:Fr'f'"@?(>SgmLeG7LA-;I)W@ne3C>9Jt';I_sE8I[kBju#dHU.e$Y&Pi8k<GV*_eC%j6r%%\W0U;E=[Z#+5p;@<fMt<4kDh..NJ!<*e8^PQ]?rBA7ef:-HhDV%"W.aJ4"9UH]0&j/I8$9Je^epIY\r&6M(`X4NOiGHI$[)ON`$9%^`F0MNsRUp_B=%6@U)e-_*!^5Ve.4G<,pF>r2TNK3*(,>QMHrVooJJ1U!8Wh/aHAh)&G<G]!)EoA[VJsR8+2Yrlu*cNDcRNh+C2J%9S$^)6olD7!AEjEei4Z6"n^%X8)i[i82!NUFY2ZPWQadu2(!9_a7pq>IZWuQT?cR(p3mR-():FdO;1JYY*VuhUt*Wo?,4qs,C6l(%LEhL9;X"(ZBI9aa!bW5KY8sEJWrA>#(B^F!d]n'7n3BQIcsXdXWkh6<aIk'U?jg7KL)Q(e'LJ:c#)+bK;4g^A/:;ku6Bo<Q=!t\c%q&fc?C#9sOlMX<[L8gIBQ=_X]O4;L?A"g^]UnP2+#edG1Fo+aW"@flVl%5nQBCjc[]B/\T4h"[C%C/g2Q#c<>Za#jqS`.KlE#F7d%%47[]@kjG/`b9\aTt,L/q)`P)h+D!;r-R-=-0)9`U>3i67:.^MM-lO'$ZBTl,?:#1&dUSXoJkg"JalIXZd]j0h.1_*\E/.7pN>^]%MRTi-=N?R-NK#Cgbk25Y),7o/4on$Gq$;oc-rYCkIiJ3Kef%"`6Yd.k,9gn4cSueXNR[P&l0Y9Dq_]$FEHJQZj^8T#,WcPoM>CJ%%VFH#6;:Vq0W]89'1R6LYg)F=&]SK%k0fYSmK>]\%P;\^@q/98-]KK2!Zmt#r8(YN@kclX1i]BX\:4RPKi[#=Y<Tg.rpacX4ae[_n%`%R.dZ:!h%#eY#8\l]M,9[n(3Iu_HsNl/WRK`rhJo4#?$bQBNSR]#8m\;c=aWl2ZbZ"oPf`>J&HNTTnLrUJ:WF?CG2hd%qg_Kjh.%e3C/H9Z-dOW!dh+Y"'PSiOGi)+Utp3&]]rsK&5GH9sX&3'#sSLrC&;"rum:;q]($#O$F/H-j!GsG2-)qr,2&gZ`3^IV-jC0:h4-?%P=\p2a/AD*1ClJ5F\b1/pSS:jN]>QG;b3@_.!+_*E\q(d7m<9M$R4o6DekXae%>;;d?HP,bnB\X,sAkK(s@NYo-$%B=bDqe$498F%q`Ic:#87@LpQF"Ido#kIl<7@7FF4d%&?=k!.#<KZJ+STpf?84jQ\<"OFI73kZV=KNdH#Q!*d.$[/XFCbd`%rJ;UbS1[m)lDHHud#%,Y7.RY4(C<2__GHl5:$R^##q6bim!?0s@Vc60V:-hWRFQ4RBI?4P"/c4%IFkJE7.i4Oi'idp=f8L"[u2Z*uX"m`YkhAr:;*SEclc%YW>D1e4MJ`;tZ:=QM3nk3#TD(b0Q7FPB+"YS[=Hi^$]EC+uRqNOW`_U%a04drp+:qF].'<%&_"%kL0+o%J=oED0pZ_rBG1#o7RpJ%;/s.kH`B7FY3_E\X+S7]`ZEG0,kJpZ.Z)b)pe^mm4i0.H_K+I-H#1j6>3+]6YWYZLE:J>0ZT@kl&GX(NXPEB&Z_!F,/R!SCZln;R%Vpib,3[l/Xa-1&`rBI];q&gOcHIEQA2oseG3#S?j\AQDo!,GoO$_uF>"SeC`Chr:n2gn6`#(YLpd=CujqTHoNV`R&N(48!CUNr#U%*H..;%t%F;3%:cZ266c$9&SRI@[_mkL>Bu\f'Qdf4<sR[iF"DslF]:23pW7hA_?EmN.%]i.T`O3JRNB#k2)u@\PeBG^j+:KKc[ds%N::mD:jF.5N#nZOHsk'S(Wp^5crP'=(tDO?0L<nK^j=GpeKH6c9^u#+RN;3C!2L/%&$8AVL_c"?>at10`i(P^=/#J4fKM$%-ZW]5%Cnbl]9kW<,qn7/;Gr?M>;2eNq\P%17nms*T%sVHIOEuEcZ"[557q+@TLX[)UU$aHs`c;uYqOQ^G@<+-eCXg34F@r[G#.o>%pUfHA%cp_`t[J?pQc!e+abab<;aZEUa5&C.-%CW;p/1FqqR78$..WkRoVRF(2Z+^D>2QZ1b>LaXmU*>#M&>W"E6en&9VgN7G,adFp\"Am4%i3i5m10dTZe7s7q+;UCOF\Ac`P#V=^HYLAX%=ZYC*4L8"a`,rQgHK5S8h!Y</!u2N:^<0F[i$6*FB?W:gtNS`,aEK(p;e]O#*-$Q%ZO)?lD\GQM*f']J/#)AMg&]8M9<$gC8UD5,Mk#J>D!B>F2Ph2:G&"QTNC@)'0Z_%4H!,#J1[K9$8Gu,`3s:=qa#NP(@D2qce)!6p%Sq"!5(b(6Rq\GJ"0+2fhRNQ$a@i^)-JF_0rNH.qR9AV#/jlio]N`CG2`^I4aY%'Cgl'sUNfA3+Z<:$MRhGbT)VS+%+9g?Np5W`4V%No6"Oqn_#t1rP%+nT%LB-e>T.o'D2)5n]EG-0f6@A1m>rUqVUUmpUPEK^B4Dg-(Dl``=.e?n<jtN#jkCOnRmLG\2f513Zd2@K'eW%SERE3M)p:gCnp:X$'K/PKCjosme`db=IgdtopY4'::'3>-g)6$n\O9;8VL[-aHQ3+DmES21D"es(^kNcH0)8.rZsQWf*>\S46>A'%+9(hQs7[Jo[lLW4Qs4TMg?g1Zd5i@kk3C:dOATXIY0_0d`b>1RC4*YN*uJG5<bQ@^X3GlY8*1%Oq^3nK,jKr\c6dh!4idG.V*A$g%Ql.RpG,?boN*"8C10D1*0EBAbnc=A,G,1?#>Ip+AR>*4AD9X"+l#8Od:%PubOe^Tl`X0itbaA?6!>s8Y0Ah-o"F`9kcH=dPLRtn8%aXC:U?dD/Zet+E5"MC5&_qh/!c;C:u"0e25rT&)_/Hm^CFPK<cUBt1UGj6=@-9:Hh.c]d`GR7e<Usg9C:'\chj[g=!9<EfiAbYN^%2jO".kfn?kH<R#Zn_1lNBf<TCkfI4h8uSGVpdk^G:<*[npDX#k?@2Ym\B^KbE:F8nV/$LK-s^>iTlc:!)6EG_U?W`=mEm\C^i:Ub%Ob=H:LYuCKrR8T_Pt)T99D2&?_/A*u"F$#-N;0LG]t>fo)B=A>:!VM2=UVXS=fF::mKl([[/M*,%TCujON]FD&[Q"A`c^B\rQ2!:%_18iC*`h.#3Go/4E7b;61Ti_""pQbnHudYBAl*0bY]mrU7)!B4@1_i]mOQ>KXeKh-H8QdPbaD%mF)`;e)ZOgb62lW:JCidXK+[f-%YL&u,hPalrK4FRZcdK)bm>$>I1h(W=C9CWo05AZ#8-_X5"P[EaWATE6;.a-.CW7C\7YkUhG*6k>Fak,RLVltXSL?$&!uuD@Y`eb"%_qqLSbW_4t10J@oXuDMBY[<slnV;-p"E?]PX5,NH!H(^--OdXmb6Wa3k?s3(r[<TAo"gVNEhh_`;l@6:@-WNkJ_L#uRqm7D\6t]C%[Tm/M6TT<)\AY,YTFI'LnYE(<%u6^p9B._>Zl-?mbV0eIZY(:kYAk4*8i"Pr#qSN$`cL9P4[6J.2]VI9M99utSTO^Y&gf/2H#Pdg%lW7W<CR?/,KE9>G]nF&J#5*:ib6kS,'[>/UB*XD=L`VP>JU4B9dacBV\jN^KrAX$c\L`;4j7$n(.Eu!rs"HE]"@8<lkfg:WN,.i'%QLU@^Hq-T8h=&_Dn_CsV>oCI_T$A%D1+/E7N-WnWVkp`D77j)]LCWE`s%G;aR[reV:G3Fq\n:[fbsWA.3OJ*uo>BiqNNDG\jFLTr%>`eJgN^.T=-0Lj8pUkP>d2_b`H_Q7rYpI6A9q*kBh6JBB$14SUc4!jsD)LT&bZ5B.kB2+-h]JZEdW2h#b0BbdXm6gpQ]HI+WQJRu%2]lu:nk97Fc$lF1Zk(mfaJ:tE[X^lJg_7UM%IE4_?"WFZG-l;3XSD-a4fp[@f^3mK,44>`cc:kt0@*ZeqIU>p.^5SlcDKdFrH>ZZ%`8L2LHAeCuXW=GY15`JcIeDBf23Yn'_(%(rB<GiAFV^!d2X6lDkKn6!4W<#q%[SMUg$L^AOdfQGj2$N"A'g+aTKbHPBQoFV!Wj<n%GC=e=-C'1qMG_M^XEJaX3fI[*00ef.c?clo=l(eVjRJm-3&qoecBCA2ndC_NV:+*6q7nl;8=qsq]l3#kdt2W$qTVE$jDLTipQ,.u%@,P#16EeQ>Q<Vus)Q%PC(,-Sqe%<H[:!H9D<^^Z73+7m255g=-`+o!M[6_@SC(24;5&X]GW5Ar:;@!lBW-W^qrrW"AKNV"AGjolZ%[<!KuT.R*<)XjBGIB"Zi_/Xh-fD^l95ne#_8M2fc;jfKXZU?F`G'<a<>-]#i%aqFs,GE"V6)h`FUCIQ:pU"^foqdrt9Co6ZD13fg%j5dGL5fGHY(_\H"r\_7gfAqd;A'B^M=g=2#-oW)`]iqCtN$mGqDN@Cabt;]l1ZD'F.EYc?qkf/'b7IlcMq1/AZU>^IBsVD.pAf"-%Ne[IqZ=Rok'7[uU_[:@f>o4i`hB#SDE&UpCd'6D'pQhFsAAT5=G:XO6Z5M1)lhn(F^qU:d@<lmZP]aO2%%&.Dj79ggUgG1PhkK2@%qdhjJ`uQeA`sAOYQ,*O!'t."pck`O4n(GfH%&W,0CekqU/KmlgV.mNmpg1IJAt`F?=NoRS#AVGG!D[WtPe/C_BpX26&(l%5+WuRM%C%?LpEe`d@l8M\I17a/#lN9MPJDK-??+rBQ:]#)"?!!<aoH'kn)0L]RgPZpg\lp,j^t=5-K%$+?\G;J%A*\$cQV?8D63%NO-.g,H%#cQu@aY>\<RN`-Ta_'.!`]'5B+1C&RO$PJ3TUjVLXiYI!TBS0M[enWq/Bp'(j)R&&pTWCT09=B>"!j&CnY?4NS4^CP3U)OA'!A(+%I6H:kCUBEK/TUSM1H]M0P:J@J*@622e''La$gkL2RGkHNh(79jD$K6<;1W+a]JKr#V[!#P9HP=u0C7B(K4d#TRnDN\aR&7o&TZFo%m`b<KB%TRb_s.,fl'M"]RGlC?$#hhgJF)oRamJG.McTLOSeZj=dA0e+HTC;n1VK*sfbXdnfEu%-riEt1b[S"c/4?<r:0Z%F,Ee=K%<CT:,7NjF`ZA6`nfc%b,J]Q$&18F4QD_E-1O&spi+1/0<HE=QW(qqV;Xgu.<p>+CqU&9oFkN=6mDJX$&8B.s<Ot:P.g8s>)gm+UV%P!2cb*O:>3LdfMZo$#VgE;>X+NK(&.X.77g.VHbug/>PCCNh_sT!ocX)3$=D<3HL3m/ko$Tt`cur%(=<N0%NgTiE)A2q"g]X11>4%4ff<bXLC_!-@=h+bZet=>YD$>?Lg`n=,.dojWXI_[DLS.'aDS3Lm_RmqGf</g+m'Wf!!"tD4B)k@OE[oCI[dY$%tAf&F7QbZ$o-E%E+R<AOg(1KF*TV)>8"D-"SUDie,HGf?&'6QHEuP6D_Km?d."@cbGY<"qJXOO3l/-#Ur9"_Z-SD2GNX%doL7<`f+-dioK#<$rT.f@%Pp4robWi.`ogb(;TTNX5NjITT+8d#5r;Pm>gWo2UO)NkPrbUTSDk?alV`VW'n<<ZB?+B3Ms(kSKSAl)r4T+L&?Ft4B]XVm_H8k:5%aKmBUr.k$Lm,%a(TX8e%k5@6r?+KLd\+n+JZS#MZo<`Q"k4HsXQ!9<!D-Yb:*dc3"HS;P&jb#)V)aB1a2gu1V2;X/XTDj,nY=3mc%J!9'1ICK)dCCpL)4.Z#DoC+0-QZbinqtH,O[t[\-ptq/&pjVl)]3d%i_/J>rk32QsSAoKL(XH:ZWqT9DDl[;RYMt'1e'7aW[g0.o%Sm4Z9&QJ;piidoCF+a2+UX@of1K`_h,NlKp,Vi9A`_gOBZhMMubr)D?buH8Y9rB#FElR"QgsPcVr<HE,.DjWL1u;2LO.uq(qYT\f%nE5EFh#3t0?1dm=X2i!TPeZF7n;lMQUH^6=MuN8>PJ,Dibd-K-ZMW[7Sbtpk]5i<VG'?FOMse3lMlY^*Dpq-J46a'2Df._p?*J!]%G.mk!Me;s_il:FG^[kdp;gPkELFDP;omGEHbG3U%eUIGRJjnd&?h[&LmO_Q5`?.k@oZ:OQ.*uETqr#V@fA%I.T&hU$i1]m]+a^o[%mQ^SI/IJe.gs#3N0-JBO:[dc2Z8^oip%f'rA^A$jMi,?@..'#P^$,GShomVi"Qr:mFO='NC"]9/X0_f3"cNA`/]6/kDXO6KI/iBG%U.$/iG/![Rhu,^1f'fcS)Llmq*98dL;uO`7^V;tib?OW$h;4_"l(YC8=],%hqqqDI1k/Bmie>j=SL:t+?>[@c^HOXOT&qV.g2U<"%?F:Qq._j\_dskV0ZtS3>E9kiBo+ui5<52#-LG./OV4C`n:VOF5]jC?Mme%G%J,_ple*LrNrhbr`oXF:Z]l;TB7DGBr['VX'qCif.%KD)GQbD*o;q;$Dn>C42\nuM7SVtJ*)72sP4DdUIu;3\='=s*]kkC7u@SfHfDH?f0'J)R+d-AT=![jYF/nT*5A4M#MiO4NjO+!2h*%?N,-.HL@LlJ(&n\E7)S0TDgrRMjAPKBmofmq>&(iGPR0bq)co,s824jrh@:PY3%;C2Aqk[q<5ZFaT;[]I-UY#rJus973CE**rYWX%X&lii^3]Y<O]iItb<2nV]a-[$"cN@$3NpH9h>B^6r&$Td)FseNU9KMYp?9nAIj'G74,5bu/6MP`F/R\SrulU6kfN8C/,st($[)rE%^%;!"dS,_=,JE<GIq(r^DZ$rpr`1W9I<5Gb_^qX2cCa"NWT'Y]dR@RZ>Sa48lYe]XpI;KINX+2(ksZuWhjgD4b4"_a2e^Um$hmNL%&De=bTARBbX2)$+H)pRN=4%A5egGO9nDRA=Mgk-o\3"1+D[jZ!nhg?tGNqDm7<''Um+8"0qm_]F3\u\S7b)%bo)$=iR7504?[&lT%q>SZ8Po9:%*@-+u/*ZgPBckGJ;@fC,qdXSXiRJ`/\`Z11\pEL$r,ZM>?CeG#@!WdD(>K@GE:%8.nbOaBB<KCu4aO!/No*6G=t0>]%=+AK,:.B7'd@K/2?B)U9&,og]orS,42hki6f;mc9hbFqnh7MA?hHPC#q!%&!o]ck*jB#-\SfBt"E-LsDg;EBNO6Pro2h/k(pHH@F%jl#d\]m==OA'^3c3:,g6-S*fYq.@#'l7Y6>\$%?sqKq8J4m#klofm["#es\jorlL:nDV6bDgqCp5G_HE3-P:uFoRLkG6:H%h$k-+%rP90AIpL:'SWj'CiSL<@Y?e^4kkB!3?>W^b+"%H"rnr3SeQpD(l4rdR)g<'&%3@RTHf$U'GHTho\U*l#:ZLp:eU$>h=fm)Hm*>po%<n$AD/8cJ=1U+I>q;u6ogRg]SH?aS2e'Z`D5c1G;(dF_O13Um2I#T"UrQ=O=nI*Dls*BFW.L9fq\^`[<j0rAprarGpZ4VDrp-FZi%hrq*7c+X']D9jBOai%]`^[f-j)h0hK\q-90V%L0Y8,[?KO8X2.VY043=RYlDZeecm]D%>(J9AHW*)6I7lt4K/k\=fZ>ukMt$Po"7%@@m'GIo5aq[tT`l'D]hBM8sF9<Mm*A;07(2M\b^4Mi'mCOf`2i-ac<WdE].8?_r[\khdrVc`e4\Im`IQ?=qS(03%X[0:QD>4`B;R%.f*MV.--!lrVr!4$FF>WIC4#k@.78L?5017Ko;7?0`F;[VtIYPQ">mAIC!li'iUodU@)Z[`L,XfAlk1`QWLrdNOVjcX`M5%\3HkR%I9ZF^N0I]JrC?J2V^odkB3O`1[AX,N^K7hNS5\6.YFd%`%]f`VrRQ(dNQ\`Is356TmI"&"DPc7Y&$L2Kl!tfO''9#bLGupdRMi<0%.IP4e^]$l7EBepAZ2o]\h8GTWe26FOml,I_[p+muH3"`^o)^8I"FPa0HUA].;ge_R=1`mH1j7*P"$9uC27'2mE!'0e@$CKN&)Z]A%&to/M*rsnHTUgPTgnD5`Rq%A.rG,O?RYi%,m/.F]m&4hNOM>>4UcbI0`/eMlZ;EZOIKQ>Apm1[!pPr6DRjeRlQ@lSm26HheMWsn1%,>ZF/%Xm5>=\)n6-`'Xf>I]<uItq*,n)%3$^2LE<j\^iMlglFH>(?PV8j4]1=Hcl\-?Hr(rRG(2<G<InB4fuUh+4hL\]T/-P,no'%s1LGUF86<^c#6dK0?e^Fp07I4Ek[kU1Fm6eDTnTA5FPa(j"E5PV,a8Er;G$aAtVFM_n^%uHLc@U7h]ALc/8d#ghP]?Djklf5G*-Q%G-<GRgP`F:e`1[AHZ=1LdVLS6M"AC]q:Xe.XFB[!21:pTMb)mj$rs_PZ`$Li/(aF]c^E0-XRbsj,D,J;%*/pSF2(nk2/6gJq4BUK%!HPq5(2VI%U"fSCRth=UWq1]cA":MEqJ:-B*_VM>af;;'5FK.OA9h*&^0@Kthp1On]="fu/_<&QQ0kWe:7(D1=733RmOeA1ntpP#%0dd`E)6YuKbhGnNR(]3g%5p$p7*j$\ctBH<]PK_/ae32'V.c8ZaMmNFKB)JG,6-gOPNTF<U9OGF8Me*$2s7ZGo3bQ4[]\k?'9,XH%$Q[\70k36]U7%@3Kl3lsZcW215b:*n4F50!rQ^%sS^(Zpj$DsTQ_622reH3Ao'(_FB:Y+o:g+jcn^`tKf%WL3ns9OrX()(P%eb+4%"r80Ehh1n!F=NI7$VY`r?NVt.b-`S>3g<A/iY,W]fo+r`bU,a3;;HpdFu6cuNb'frL3O06FdPD2d9PZl\Ng)7kW!Y_!r+n%9*Q19%[(-\#X8R?fAVD/2!pk<:S:#hZd^6=Rlec&fQ714-m+b?"`$:JZPW+tdDpFmi=0J`qI$iQ,Q94i]`\"AF,NK)a%qghfY.h!oVYfE8%.GbIW>*A&G=^_Kb6=_FOr&C:L:jWQ^b)pTpE)Ee\@d3aN#!"[a8nOQO9Q-!dC4'9k$JP"(,F&#d"q)t1C-X%hAP!;oCH`L^aJ7j*%7qlTLUqZ[r"-BpVW,f'g43QIN\d%(iC&li0pD;<Qbo/,dXiL'-XK]:-0cS64[D'BsiM#*]QQ]=fM;*D8IZR`f9J9Xgij0aT#MD?5%f9K-[@^V.tl`9ftZq"\!^oRuF4Mr_Fip%$RlhJ`lXFgJ&Zt*0!2sXdU>lq"=\mC)$=Y8Tffok\Q2Tn^u1DQ)E+0lLVJu!X68JXk'%'M7cms0(h%\#[T8I\4FE?j8aG(q)Ltl@pH#9JU%tBjeaO^^N6Zmsb;lB>=:CQ)%=HeD&_jSTSPLbM?p4<&mJWLIlBV0&bC.n4*&5%qGXrp.p'n!#]FrKpf>doW)@2C[ta?O:T$sEqlHmDMUHpaJ`Q7JV;a[(bPYIL:D?KZf)RmU&1&j;R7/%.Au>3S?[Yl,e%tZaU<)Br%`\aoIZYrGhJigE]BKg4<k;+s/:nN7$NqXqgq-j^\_OE\]pgF#?qTk/S9:J`?2j<fjqW._)kcZrBH>hMh<n:kZ\u2*(koE.lS:A%\%<p&cE0Z:Vm';T""WOcfPXN+(3dEU--g6Uj.-rl%5eT"m0JQ7!J&7V$LFc)?krHq(m`Os7Cr8di&D3nm(#H&^C@+4,;PG52G=\Oa_%@^$$'DmI.=R:^#Ikp-H"g2*%`13f>EO^)]\Oq["uQK:@Q-$kbhPTZ/+)/!s&(]F:=K4Pq;`KY&-+$<<L`Q@f.inUCdeO.G4CfBlg%b1_5$*2%1'=>a8Aa#Ctn5V;/U6)[cFkNQoQ(@+W#+!3D\,he:ir<1sWM)I(TZL&6FiS1XNm9u/k_0]J+K's4.?_XY2bTL>uK1iSm%Puf&U3<Y3$GAWL2>F>0`3/^G:Z.K5@Zb/]D.*Ld[Bq-'oTTb_n@hr]mASmSfO=?kn?Y4T13d!F87VPWSbNgancSH=U#Ai&rCsXj8%3W<m,(`I(UD0nI]o5bO#Es-qH1$]'kFCZO<]<X=pbT="b+_Tq-j@a-Wpd#<&^MCNWVJ-ZTr]%ehql->e*6+&GHjKq81<#sTA_uU2%P:,/kL6j8u'54VfLfLc6o]t7bFcgH,%m@=ZIBSJ!ol'SR/FDsjGs!pPV.(6>[Gg/"m/,Hj=:DXNIK/<],[IpY(;m:,*mttY@Mi_q%qd,6pFlC0E(l^>f^7R5SoNnGS1K5==eqGAX?@5s\)eQ\N<Bj8Q?h)K1.7]!fR954j\hYe-8nAi<D1PdGB5EDojiIPV[jOt;M,j<0%r-kk]\Qd<o!cQDf[@VrS60<(;8UP*<8*'Db1l0IjA5BZt4s+XdLg1B;Vs@&k.Rd0NcWp2//#M^]WA1ff4k^h8<t8&#eYOX3Vj?L?%Y?[RVn,&MQ_b`@D\_d6D]P:Y8f[S\NN:mZ3W:tqpa3NJq4cBZ'a-^)T`0aGTLn/oN)AIhc_58p`e!\1a9G&cuIQqLD""@]<\O7Yu%lR%%'cJ87YdBeotTPh:^muEq7r9(+*-Qg%7Eob`hqBc"#Y"\,Rj-*]5n"J36CqPD'f.hC**kL#FF<m%\TndON8#_,YC:E,Q4`n"l%k]F;l1-K`c46SH#Di#OHfc>0;\)7l^FL+'mAonD5e3c1,K9!MH&#"brp2eYd]lXe@(uo3KFO@EsZA3=@#9DK-o6]],K&ddiAp9=)%9X;+)f>(2N"R6`6%%,J]8FP[9L"du0oh4]EI,kAG_d;b8^Cu2$6R0:j0B_&<Z)pqb^<?J,N<A5*b__9`o3ThCj4B&CKC/]Ns(G^M%--u,+)JjR;f!+gEXD_G.gu.ku,$3h&1*#O_Mbe%ZkMr)ReZ:2oC72tC(2B9W,\sRT8jQ?lcXI>_58PdQiVKg9`?:(oNMcr>l"%#p%j&JlN*M'mNQ%@1tGpVOGJO-#@^ZWd0N4IVY>1t=tP3+X6:%qFr-QJAX]J?f1,]c]C\KP%#h$dGan?Bb"'!-+9A+QSo2Qu^lR*9li%Z]NX/>WL'rI8`opTj4P8P^;5)%I?-Gn(W2":!.$;HYbfd2D9%EU&E[QPPB>D:+Vhs5fW*S<3p@T(RVLmqL)amc*"m2I)"go^b='T%pL[b3bL%kS28(kaH5"M=;gQ(\rqP1@8#K)H_P@sll2*EK#(CM+_:u#9"EWT%%IN1k^X)5&R7.O0FZK^gZjtLP.J#9r1M)]bk#;1s%N9()k,r%<e9m$.SP=.JD`q$o`Fm7#s;gG(c[9d;?KMJ[Y[d7,?GMLH#XF>).gi@SQ>]5EI"+9kqf>nV[pq(iTi]hq=jR-dcSA".V%c#NI6>oW.s9cKa4UNh;4jrKH@pGnhF0s"CC5WeV<R'0kK8Mcbdd,HrJaKREU,`St6.8JY8g!ArG>FEt&4<W`W$^uM)ai]ut28bG:%rF;pnJ,Sra!@V$;O_L'Xn+FZ:3tkjF[Zoo2aGic^koEVc-Yi5TfONNgEdZm@WV4uZf,"h`9Q.9'<tHAh:[dI7)HM0e`,lVo0Hu]T%.I0LtPH#B)J'=9XcHPmffF0l"6`2cQ3dlHUgoMstcgDYCikO93F;PUX)\eE;Z:`AG_T)jKA0f2SV`j4ql-\tC6tDOsIq/;1N#uGU%7Wl`QD.j02aGb6L/g$3A)d4m=1T_mE?@Q:f:deo)SH$TZp7,R93G?h3$oafALR%>eWfA8^Q>\*[H$\<A&7`77s)@Sn!+M>OPPFh5%iD_R??V^WHr,@6KIVG_3kLB,6BgXsi!P?o9BHWcc?!<nLCoh_e@^k:.^:K#VB#cE$WNU2I^#$uI3n68PUJlDd&G5,/6`Ljp.beuU%WSZJ$ZUb*9W9?Roqm=59_s)ro<t;"&DK\8"ioc@CU`XJP(%g<XLYWKM7%_F"rG](m<"H/S%T2O<3H.5Jgk6>,V`&N8]H8c,L'mAh%5O<j/rjefZ&U2n+E-"e]30\m%/7UQ1eFI#GE.))0>$;0%Cs.%R6bsdH9r&j\YDJc]>7RWhI.UuH:#nFns7)dhedU3.!f?$Nd:o,7%o6,WA3(*O5VN/Oe(l`SBSQoZi$o;YVk=[Wgf1cd3NRp7m]54?D4<OTH@]\SbppW7&d::%md@M_HQ=7\\I&*JDbHdf`D!%uXPN:@q%2LP@D-l^I9`e!Ttr5FMGFuZB#dl<8jc]ilh5L,rZ6=/LeVT%\X1]9l&.AplS/$g9]&pWhYBR*RgG?X%Hamg2`Ra5Rflnm=fNZG+\%D[.j*;/;bHYjd3);IBItC-WHs^lHpr^V(Kt176PUG:4K20>8H%7k2M=N/gm0M_3hKMGXkY,8K5I3sN:Z&l5On,6jQbB^3H'7N879%pN&6?Z8<No>2^gOZ,:I5UO)p-'g7?"$9)s3%_WVFi,Qp[A$^UX"oQLh>2f)k7+;Y>?YP4`&68KY[),OtNt(a-T$B)"[4'Db-dQOT%H9\f<Fi]F/\NRAaRc>.m/bHnVAl(m85QD[S9g@<K5oXG&OPrWl$`Y0El+e"YXODI..%d=+dT>Qi2u!47?;*KlVlq(,FEE+\8GnBM%j%`AGT'QJ`EI$utql:e\]mb,"khBHGG.M0"?LBp8GPB76Xe3YIjPP6%hE@]N__46do)6GEC\GT(m7X4fmHmPN2fT/?rNAL-XaSEk%/.nem(Mcq#)8%6Z;0kF>n#ZKZoNb0tH*c7n]fW]Fn6(1h]K`[pa,r%(3p`<5:M)Jr^"o.Rd:2:TV-+g^CNocgom5=^s.8c.X/A#O%d=*b"l-1;"$J03>CS&2rNAhOE>/5SkT@N:/Nd;eln)HM$Bj-:_4aQairUjW'ZeP(S?"]dAGM%=hn6kNOJ)B(3s*!*dpLiC(pZIb)%+2)^lq:2J.4ncEMo4luLs3*RkBNI@7b,X]56Kb6O5'LVeEu\3$Snqa"%N;V*\BE3TlJ/c\%+3hG900QRlXO:qcAEVQ.(RSSfZhaT%Q7POJp\-=re(QUm6F@mmR=:4I[fKE*H*J6NRTH"?YKhd6f>G6mDUPp;'@'Pp&7(`IPMAK%\EB1`QUoEdL86UK(T?YhGDY,!]"[.q%2!5L^WU$$qn(YLu7Y\'ar`oVYOZr6*Oks5U9ACUJS6rGe:VV^!C:WZW$g;1mH4SFuGHa'NU>9pTr.&`&kM^R4%6P_Ea_n[]0u6&g%/Dj/\WL*%GSWD73kpFC/-Wf"TdnQ1&7<j"8q.!'?dnL`qc3YX!kb^G77UE<gDGm&QlH2K[VOQ(.Vu?S3l)'s"9/j)`B7Xs38[7u.%"8h&"dnSP%MY%s)2r,b>7b<YA:,h")?FhS`bqII=2a4)48#KQ`#OSCXA=Tg(*HjBtV#?cZ%CK_*?%8f`G7#FjRr4[3H+;[P__JSn%2dL@#ISTg&]'0]XZ%]gSB(f=I=uY9uhWi#HVOKDms2lL/dnRuNoP3:pTpoq_Gf[SM_s!teP8QBVDS#Z?jY4:1-6XU:j+l/Z2m8G2%E4Y9\p!QRJO)K:Kn5OE.Zhq]W3kB&%/RIJ(<;,eC(teWUD%<mbaD\dd]?B?ppXP6tkpNc!LOEOcFR*BQSpkPu?O0F693EPdH8=Y%%('@,NCJ^DHofR(h]dXC*"TrY/b7deZRM%=:-ah=/bHn'&\WC:#KUICh):pK:&Xh!T\OUbU]^_c[&_4q5YB)<ST,j>X[q3gqk\fX#%maO6u"&8?=>]VjsG.F)pHBe\@F#U4bCKMh;TE9u'ouZHm]B/bOlI2q(DOHn1V&FI#h;!f1&@;!dG@JJ6^?BJ!C[S_,D9bRo_idMs%D]ZbU=7uBEjm5\]hIgj"cq9P:hFo9jJU;\?d`u_=V9c,D*aDN#\+Xb^IA2]2cL]6cr1HNj+Vi6Po/dAY(NBlO0D&V>;0KH7&K.f/%2>!56nus(Ar0NHcn+RLSd+#%1Socm?[!^3M]:TScfTfH(H(pa+%mIKAaq$A=IV`s\PTO^D7JH/cAs.RtdeUD#.Kh[;c8Z;=G(8F0%KC3oR1lA="\pkP:8>D,dZ;9g$T&7^dK+2RsSTY6+^TmM3kOHRGqk"Df<'Uk8-l3a7NVV6;&S>3j9h"/r8Z8/+hs7?^l4`2,?$,(c%=&@68`2D-^n,N0%.%MgWjQ"32M=I9_Ii[)LLAh^-Vl,=UoDZX]/ukM/IDa$>9:HSWb,hVg"i`QU;Z_36AT+X3;$%D+3oP%_>1JB1%)As=5n8<&;@)GJ:)Ar`Ji0V1:0(`4?]Ar;ZCcJ,uih6$H06Y7hXNnj4fJ!l*gi.Hc2s&<O-Q7/,hQm)JnYWt\fl4q?GBmQDOT(>o%gi,4<^/s*0\+gDV6VfR0pXA\m[4f6?1M<0N3k2HG%lW=h=W(]4nD/0kCTQoI5+6'C8*DV=26e0JZ#d']S--jWYqmRXcCslOhC=9U%@WTSXh@&(R@To1DbQM4<[n)#GUa@FZ'nq/t3Q?fOfB6tgJ@JXipMF:WduYoRj(D`m4]/&pL9r\sMjtGB9gcmJRG,Z&H@8VFqFn@]%EolQY+^@%'M<Xfgc[FjNTRQ!dKpnC+<=n-W`#5"e0uNL;o^FJQ.Y#buS8_TiPG`d5`*r;JDNCZe.L,oad2V<c]'b\W3Sba'H?_qY%4f.N"+n`?/SU*-Ci\o#M*t)BK39R0OXTS:,.fPB<(^%@@kP)L_.1P]kT%2jN&Kko.Y+,@&@/?SWmFp4uQTp_hQaUco^3k&&`r211%bNChQ5</Q%mnN-JFnIA0p[((gZ1GCbIdX\gXEZ/#X('-?YH/'!pA'(3UKKh:b1_oOO.P4YTrS#3[aX!WT2+X+gR-iNp\i_$Vor<l%pY,+o'@V:-m*T>2hSrpORdaWWrMX)HD`_=lWG=)g*e!a$l:6nBIkuC0m2i]qo[2=5Pn8>p<9g6(CYFj0me:ga@,:-hgfQf@r8XT6%Y,hZ?rB'2J2S@Z?hER"VRt'4ankjaUXgrlUmhCEAGJq1`n^4DXm.??FrU]6Z8KXdUhqDjKCM!O@pL`5+Gk9>TO']BfE$q^Qnt/("%^RpJbOs\C[-dHVk]0GDfHFoR@SF3R3r]Y>uid_V":Oi1c-)jJNk,1r2k`!V%M>$#QF*gBH3%DLjAWn17AqRBTfe$h-$RZ2CAj?"B%IUgj^#g)_)V")m5WD`jE:S6/1OOg<)ND2VIlXgn>kg$`,AS<@Ro'Ff)WEV<)1Q2:KrC'?*Ap)r&:7b^b.rA%8-=^b$(d7PT?Aks>%7]k'^\*tu-;l2BPV:Faq_+7q38o&!Tetf1`M&2YEQ^6+dZt)@1[BVl7FlgTQ'7'0Fb4qMV#BM3hf[g?JI6Aq^qsqm<*T$S`e<+/e%*"M1%RMfEQRcSg?AXS`q;buE*O`:V@G+5#-?KbY[QWFY6=jBgj6l4deLX8dW.rK+:fK??Kr2dCG%aa;3=C*g>+iX;(B;,24VG!;I%6h?FIn+7pM6*oG'E&Wc;.:Y78qRUKTrAaiTO<*/t2`7V`HlFRYps=Isg`Dl(pXAZ=:SoKE(Mb98]?arCCY<<D1+h!ceLbmgJXTK?%s5iXu=g@"tep')!<N7_*C;mRg[K:n;2P?=6T5ulb'l`#p`cLi,A_u<NS_pA%Ql(/D)Ge"WAq@e\h4eu'hd&<RYb"lu%V'R,H%mt-%cWi)ZZ+9Vn/;1:ak/ES$`nH+o=bhU6"*O\Tm/\2S%`u'^YsCO'1TJn/F9)m=!?@.J0@C"`Zj0F"E4C-/i6WN1MHV+3$SWfj)'3D)%%X,*0^nEoA^t?K8!#%P/bDj0TC=+ZLTfmqR7m9`ci05[Mo`49)--p4O<Qeal2uH.RAM3(CC\]Viau:)9podrF2t'5E_mu"mHU_Td%.*Gu?\$@p..Qm>rq8Vknrbl&a2uS3d_n;4Pd/B6Q>frt>$CI'K3[mAB][l$*\,%\+2Um`(3#cVj]mbUZL0FF[5IIjc3#cVd]mbmi%.38%e^Y-*m*U%=<$2=;@NXAMS`#$2?D_gk-4<*Pcp\N.4jMSLZDg#\_N*Ir[YMZufY!WQ[cFh\GASn,kmaQU^AhU8&]/];nIb@-/%DY6*,%3Q>Qop`Xf8JS61\^tb/46!>?c%dNUE2W'@Z_.hJYM\]1^LBrcaa<tu._9KF@Y\p+hs@T:675US\CYZ-X#mQnq>g9d9kokc%XLHu5I#$)?^<jQBZU[<Os"Nm6S"3AY)*H2"NUQh+e:ZWD2o4!C\,,@D)2]a.p$8kkOl,GjS_:DiHV+n=opa_1H78Oac+_^];Y$"F%qTUY&<ZS/4h<UF([jKL3n!pE\hs33?JRlS<_S(CSGjWP,qN1.*4#))H_>!KE\P@&3I=+]DlPE'Za?GN*F,\r@2l#hMDRJm2UA+N/%[cDGf_-u-b2bf&l)UBZMXFG#93?L#5o@S$=]md<Zc$:&?_=.'?Z/,-i%sf>T@RV3an)HJ4p5-9T/Unl"O=$iMV`0RdC+ONC?b[h.%\U4:\_"QE_IbZZbr4RQa<GL*uU.aD02quQE6=UD\lSn]A^SO_CP'd.nN:dXmf5Eq3lQP'L2u?XjL%"%`:`""F>)qM+GOT3hFfV/2%b#8!1NJE\iXa\_o3Eu,^^Y.^S4Y:j8Hi7Om3qZrS#JSf._S2sQrFVZ02uI!sK?#QbN%NoX1rZY'ia0AF\0g%sGMqc&hS"@o.72hj%ZJ<-BZOK:q?C/FYDg"LLB]Q#Youe0)^X[8H*ZKKi<IV./F<cTYQoQNs%D:;2O:APg]mb8T`tLEg\ne55kN%!gAh/Y)?(?]$&BfBL%CP$kW2TnS%o5J`h8,lhnpO&]E:KMl+o[*$m_Y[Zo@Ra(C`_uNmgtAmB&"[90nu;:U6]Sl+`"ZF"p2.b2mE?7"rINh7lGrcH?EN!B%ZMFFlZ"!%@#KI@KTBaM&>N`/MMY5:c[e?;BD<gTYDsX"kpfI4Q_\;@65&D:So^,OrmG7/f8&,#6A<4BJrO2G"qYS-uC!U&]rRRNX%pWU)W:S4hl3AYFDg06X77Q3ipO-nb(c/4lUI<^#9mJU8_nbWRg\';BPlhg]BpA!W:F8=_N*o+C'iUk/TSp]3U^]+&`/,*oJqh<Ai%p6!D)cQ>APY@"\Qs*9(lqSo`58"V_I?L4:"hP]5UEt9AJIro5.q=;CblJ8p>Rt&r.0,-L7DI+f9rj-gD\8$N.p\k!Hh>6jfmGmLs%NkVl=I[E(?n&A,G#FfA8:-BZK]A7D!mHrf5mlt-+_.@]D;=:P-QQ]L]l'Z1rYI]X=It!)=*Nt"3I?MAE0%Wj']Wc`m'!_c\I^q[m%a1g'DN_E_/FYp895/)O@kbDc$c5lf[I;A$?Wd4@)kf:/&hP-5+7VE8po'>Agju2MTDLJCR`$6(B*^!OTNpXS-J,er'ggpH=@irIm%]A'?"0#_&Fd_&\OKSOVlD>Vr-g>us/qbQDWc0`9KhKr^MDnl8<_Ud$tDHtijnb11%GP&f/.uu@500S#QT=asid?>@_YLt.=r&BbO%KjjfRbk6#JK0q0Le!ClrllPstX1J)j$Rki1c,YlPD-hM[j;S$Z(OYu;#YhoYfr[JOSpi'5WS%'XNbX5K5?SV;RF1QoYB$1C`uZJn%ZiB8b:tMle37kqAT4^r_KK4A6CU*'[4^`UN?JO5f\Ph6urNOn2c-%KdIdO4D]7.FUH2RWA0[Z@/q@DE.fC9B@q@C3-HRin%:T*iW%?Fp+1LFrI[YM8O*+%l3]X-^Po]AWAh%=>VaL*!5J^O9#[l!<m=N,s>6pD]FMNa4'+&rr7/:@6R+6g5oEQOi2coCqbG:HeE@GFQD7%T-sGs]jpJPb_paD#kGQ+m[ZCCih7sr/U],Cc<gh1rfgjcrd78SU8dgHUVQRMHAb?H*NM(n26d'%.'uqmk:`@aYFInqqqe01UN\(<%hVJ(TmcBqiO5*MV);?mTF2rEdf6O@L\@2!!Dbs5>b7FL5mb'Sd-1g`rZ2L_Q4_rq\]`7<M5?FGi]j&jt4=Cjh=+C0pH"$TBf3;gk%p%2f9#jjpQODt$.gC%6[p_9F-]):_LFQ)8^^]9E'DbU+`>M:-b1!=&JP@jTAJ(='r%1dI?bU;_+5*HRcm1BXegC!C5/)n;Xh4[+-%T1!28CAk'R+-'X[qs^^<[QaV)_HNPQ7@V99Z*pSphI!m8ZJ4k"?9C9GK/S4_95^"2'`OlQ+Hjh%3V1iNIC0!%j%]WBs3K07lhFO!%s&J=HDS9fcCF79FqdMX:5C0nhH*c>Zfsu.h;6+O;;<loi&GIqQlf$IQg8TDNCZ1o#+5-GLG-eJtjODcN8'o>DNuYderZSlKgkYLr%_i5lg^O<eJ5PUielaKAZhKj50aGFh*^FRQg^%-2[lZ]SZHJ"oqT1)l<ffu_cr,hl'r=^A"4gUp1lP.FNTHWUlO0?4QH+!14c63C%%?X"nLL&Hd/fX2Cj.7C>=bGUqMP)P?On<BG,7tM@ses!UT)j8;7Ec\OiBs&8Vg]!FF7>P%[>N_Gte=hq\\*N@XM(.AtS3'Hg=>-kj%4T1&>b..m-$0E%Ln!j?&IB,&?DLuM>NcO)]>e]aKQbkt-V^,OLY'\8!c<GMcXN-\EL&[`s!8OAu@psQRjTkqP2D[mLp$6=rghm'5%pZU?)h]FK=H_eCSiJ4q@`idWP4S!8#jeV1XS9B@aTCuLdmZ.2b9.<CkV10^Ah-bYSlecA3>V#Mt1Kuo?5YrG!n7V97mIOohq"IL"%f?b(YSA27^\GkLK-m.CG\VI@`^]_CG'DCKS3aj/aa[G#NNd>C9Mp9E%T2dh7D9[7T+*Z-EIqD2HciChd!NuBMN=[A,"`V=K+CNO/%Lc]mo69hO.Q]p#ZnZPfCD+0hio98p`!PRAn-5GjAB+_,X-W=el%@:W**Gha^<A:>`(&$eB]bfNlBWh%^M&()b"Z75P@6GZobG$Zi%\<"hRO5LOEafL^?68m/;I!AjW*T/jB$X^<4NpX@NWI!7dgu[QE0%i=Mn!4HSL286P5OnYurFXIa,,#$T_RupnfnJ9Ic[B;tnQ'J>%3W2-]cN8#SBo$G;s-9[%\tL+<l*l0V2=FDrLhtWYlBSca&NJ_/Y:1DVLZ&d$Lu(%Oc2[!#*9)Yniln<IEJPu@LZ%b0_Z50\)M$-W%R6D"=b:Y`/=5PI\Zciu!ILJIfh=NjQM"ahk6f4RIg4/X82Ao!=o'WP-"PY#<5>M4BZh.LOL'sUME[6XbCRKjR=aP;cqeu"'T@BdA%h0QZ1T6pEdl&'ZakmKYR^TQ\gLV'1aTD(Q_5PKY>5<g42B(P5-%qADMA:K+#4o>%=)sm!J?eLZNIEd5Tq3M!7s.34#T6pG68+uOA%2YPVGq:OT2GsD9#S,W6Mkg>nNhn7(.nn(+Ub+&.YWnr-E-M$;?2N]rUIKfH^B$S`oRre\DMY=8<./&-sBM$i&IBLeNf>g(g+IgKB%*D[,K=dP_m,#dQ%0Z7>r^s?[_?TXj\EI8^/gm_CnEYF?^Y*8EtHURS[.)*,)rIl'\q+"dF"XBsKO44"7);\aYOj0-ie2*WC+0+Aa%GL(t-m#9F9PZMmC\'SL0'=`@7K/Bn5o$n,;$$Z6h=*IE95L>[p*k&[,G3d[?"cUpTqH3LV-fiq1LD@i&VVg^3SIBL^HP6p\'Gpc:%oi&\gq/o"TKtFrAHA!3ArQffo'N?N9g>+,=W;"V%O+Nq8EGW!*_1SZ;BeTEd[`^JC/%[U3YLJom\imD"EoTC=n*SDk9-;o`XZ"Kr%RsXacL[%rap%#\CfR$iG$p2"W^^p=H8Aj/:B2<GQI/*T,^UN+4RpRg4\G5kS#f!Dm4[8J".=#FlaZmVPHr)32<:BFJh30;uo@geu%,B*Lm\]5j1,iUcX?a"s+FGg'_S<)s`ZhbTWSPMCGrGeD-7@WWKG\;hR,QdVsiQ)OKe_C"N#@"cWj-1Y_i]@,*os*nj17o)\X%5j$%r!+:7%tAiU7'G(X[Cl#Vq%!8;rq:iGcV@d&HMrWn.o3qWI/MsK+'4n\<<S9@@m0!#\1TM/qhM&kT?ju#6dXZ.'E#$a05bUS^MjrS%ReP-P2*n99:H,KLk$t$3](Y[bJ(B'2\F@Q7-dBW":PtpQV`V*+Cu6nm(qdW`T'tijjQQR@pO'_13VHhMr?B"$n*e$OqgJ9ik>kjB%RaourDKY:%YE/S<msP/uh*7N5:Tg3jft)FA/0B=iqdnsfrr.QKs82EYQb?aup-8R^4h\FLnc&7Tl`I_1^\?jWr[Ob>c/1-Okt.;T%#RR&daF$Ge6XB[eGP/k]U\E'J^AOV_krC%oaP#:GYFS,OiSM]q!YKo%=kbTJ*]a&qhu!2Z__qn#-RM=%M2"eG]tFCDd]Y0j[rrkf%,&$%<RZDBiI(T;ma'A3[jI/)g1E#(7^\%9flFslUiVZ:IF73)tn.:`-ninW#0f-J*Jh):%a"Fi*7o!r,\A45lbs-]iI:RD;FF/%Q%-,skV`MuXmM^gloo.!4VmsZET=Q'ZRH1Ke'Etlq9/b7l0&\ZFucF]WOoFoHW0)tclT+$5ZiNqS%E!a=f:&0'\rKM8hs,$<^h+!.o%cbn3r-,Se).HtCqO3Y9FV>JdMcCNcjIo(1Mh"E2301l$kM<_W%rLlDuk2"#GLE95WJpV*-\mKm]lF'_90D2fX?6:=AJ&4#A$^-ns%T!A:n7>sZ"M5S#O^6$?`7J20P[R659KU91FQ\a@WODDs$h/0h\\`:0mm[Yr<#VJ:9G0Ku6=L&7K3p?#'HL'/\&+FN[CoX]rX15(>%a_(?1Hpsk)ar8Ch\QU9$^G.=gq&+Y<mcf;ZG[0AnGf4Qs.?1iWU]%N7YO5XT^Am-^os\Rp"<6;k)<8p\+n_S#_sJOQ*>S-kqRVMV%J$$iYboKjT@YDF?\0Y\ck"/FaftG,Ys7O#=L%OM=Ffr>_q7V+G)JN"CpY1FWOKJJ#mhFLWW.j_*T*1qY_t,)MlXd%P^+rnW]WK^+%?66(Qq6c;moCoA*CEXPnaUYVa6A1=7PlARsq8mgWq.-;rAP\-DkKBU4>$b>*s*@t*J%\RBb+:#_TDpfZZS=Zdm@;fgGK)d,p"QU>%^Mg5sYs^#55tjlg9:GZS0I`+U%bWucjZDpkTDnd^eQdBIl._s@><bnghX%mT6(,<L[0p2'^7P(K\om'(YLe!epck<4^XF48pNHG;%)b7*&qf_>TDZ?qG0g<7gjrO"`B9E#d[i8ieDMCZo>kAFgU-QoHFlac8VoJaYh^Lo_q%c$j1<\&#DaaMo?N1eZhh>!N\1**k1N/:9%iWLBhTXm?IlKY5-o82SIs*8nK75)tPIm?bICI1(#Z^8eOnNXXTV`9N'#/\K+B=EK#TfjhXAj1UTo^TE:46<GOfAFUWgkN6pG(1Hf%RH;+0m+O%k)PEk?/pnhoM'XA[&A0?pG]"=\Yd:rUm&HteB2T5+U$\:t\@F9:!`>(Dh`Q8cb1dJ+hYV^`VL7uTMCDW]&)K-Q@HjQE%m&sW%LqhR<6i;7OpY5&%nrY/0T734HQ>W;NeO,]W48g>fld+#kpGjoV'j)M%KNXU]40OZG)kS`CR+U_R?`q+j=26B?&ErFu-Ns/%%[nV+;anp=P@33u'7o`?O.]RgRnVPkHZT!+++3<raqaEi^g!Rf=)KKk(8*)#OqGN)Q5<c_C/_moYp4\Q_^.llgSV-jCkgc(0MPe)W%npFW.=LU9ZJ\L19mN"ZCE_80u(W/H8@oAuKn,C[1-f8&h@G^WRfnaZ:)q!CEBlE#1l[s,oEDA)]$_7*tbRL*b:T8mIc@M"u]=PO@%q#7e[fI6nFoeCLn3dYUuAO+=S"cR"[r7.QkNV"*!\3:A.Io4!`5FL(e1Hi'>F.>#'YskO35rM+V\`2?)qetJl53L7/Y_)!d4h)38%jQU#K^hpskfnrOD4@jf2mq8Tf,@S"_H9XcFT9Zfq]Utn3:\r4"]Utn3%u!4Ym/7@cIINMSHTslGT9Z7cT:rt0gFrm*IYR\_^t?K:%T:rtp%-ASOq\e\rXK4#6r=&@I[$S/0pVWi6]aP?[jQog2,nqH`_S$W!hmi\d*d[boJqPTUS+T_u(o*J=3Qpg/dAD^E`'BSIHMV3k%-%X)i*;N8*8u-)pP0g+Op=;H(IZCoTm%9K>2p'SCU>j=T8Z.a$k9&Nofg@Fln5()I0=u<G7VJkN\>WZ[b:J[)H;jD;],+TR@1hOa%DgMd0E\EeeSDUufA3=1H\DD6@$IoT+d.:NFN1jF:I#MPOJr=^C:;P@M"b\jD6c$AVs6nac)8D@#AbkW6kI3Lb\[&[++nt_\rq_KW%bc=D6n,E-qqtbg:^TWm&r4g,K&-$e.C0@sFPqi8n!He(\auV\t>&LG0IU60([<;$:ccc@TrVYj%kL\VkGP*dX:N#P`]RG/!oI<*&%b!15bFktB@GibRkJ(d.]op)0.X-I/eUAt7Ws&o0*EoNGcf,[)6@cT"4@T9e:lZY#=IW4KDQ.;ld<jt"Mq#@K21.VB$s8!frr'12R%T`8/3<c>*(s/T7MM]qPk<2LKiXu!,eF<g*T\,'g8C:[8H1lbt@0&8!"9j@*c<G+CF<3GHk;Ugt9h=L*CUWuii_sGIsH51tMe,Yku%XVq`>+0btLouO\TUUTTgW[`Cu(tEbeVlETq2"dk#l;:D=$ri6*C[+pKq9PB!<]R26ee4d_[IMQWUXo8>0V+hj1F5>UcIrE;HQHb$%DUh[.kJ,S.23Na)U:0?&*`BI98!'l1GfIL)GCKKZiPttZ4N+T:OE0DC?<ced[:qb[MT5\$?JY8s46d_fS/I`pnu/X@XV)/t;1iun%;KXg\*OSU/aRud3XrY@D``2pdO4:UW1m4t&99?1>CAM1>3hA\*BAE$a>!F1!6]Fg<\[Pn`XTIE^eIogh-3g[Oi!R.7WUeQc#s)e>%Q%,j:#gcU(-K(6Yd@28'XW5l^a$KDu<OT:RaQ(V\>5gCoH#;BaPaLM]^BoVo^+ChmhJYa2Np;c]B1?H2dT0@sD4M9-1H".(Wr.Sa%@J]q9)o#bknW_`V'!KH?0ohlG[9j$U.Y+g^@"bIaJsj'dS#rS6^Nr0C%n@1D)bZ9q.J]C7X9]:7Mk65=K!h271"",Zr#1![Wg](A%@j_Ogo@n/?<^5\8AS:X#!=Sa>SerEa1E^-0`*20>f&O7Om((!1e_r[kc_dc]$_;-J`?&^o<4"c=,2`raRmCe!AY9;YS$&NA>U@8&%3M'%V7Y!$<RoX4A1pir_c;]7g>p?o7f$#gBJH^Za+^[LsY3eiUhkC\!0>%R!]!#s"&(U;CMld,gPZUE2N1.%`[d.\eF3cd6;:G8F%/'MK#fKa#qN[b-1H:Z`c(BA0]2M65UG(pl8_(#QO#=qi.^c::\);7_ggH+:K:J?Lr..P/,USTNL5R(.%[S#$VIOX$3&`+F8+jViZ%B2).8h8kLS-C1q?mJuc!e"kuW>he?#$_D3?RA^VMdT'<[VT5oX)k2t.6pc2LaL4'i@sZA5k5=)cfk]O$R]4$"C&]1ET-do0\9/f:%b#rLKi7=098]+t7??K5)J2K_#=G+brYVbsGBH#SBLEupuR\D#t,74Xu@<V25ebJt-'!1AS)jps40V3:j:q"pd`+&mO!-((I"i!L%%L26#,L/^jq'J^/S)\?*"S@jG&>V!"#6jTBq\qXqOlYlWi7t+T_XQ$gS8YbK_,R*`%ZD.%:XDsN#VlXZKNB0kk7:R!WGm6-*N@$b=%VK=BWMQYmJoC@Lc`:?MDQ:M=2GY95_aMf\!]'Qdh%&SQP4)[GBFe]8AWP-5Oo\25%Xes6)k$b-OOa'KK32`UMLBM<>Ct:l3PZ>T9%/q:X:SALeO<3>@#O;L^HcpGAgcnYLq`>M$&nR(O:kWBAW"\ZshQ+Z"t\mn@3SF$GPV)*A=.q%SM>'LoS(!1t7iXIgkq\3Ha!s!&K%A0sjrRYF"-<,G?kU5VQ@;h4PRR.T*hFKAhEl,>W?l'fgL0=<9g0#eD%[KC`"J:G!@jEZ>nBIMopOq?EU`5?+4pr,(E`@S7A(1f'u%@p(XA]G_D%!8Ed_SXlOhM\%UHq6^Ja"du1CqC2sCMs2?d0Q^SJKnn:XRT`VGM4d#UMfg`W)JB-^WQRn4O5F)QHScMQ(C8De9h.j5%V!=5S.rm_egY8<%[((hOhK1@ZA3@S2r\4rSp9uA^5ce[ar:c<,(/7uep&qSWj2ujP:-=40;&MT_l'U$mj*]9/c^iWqFro)?,sr%9%NaG(F_F,MqIb%F#>6tB&GdTEUhl8UuUhMEADG%"I_L3Q`.7]q14>`?_F=Z)m$&YuMU")uM*nEY^!TN4Cdh"/ZbF0T_C5GX^;k5)*%jsPrl)1khBk?r)oFX7=CH-&Z'_7To(&5FHqqY&K8XhGUqI=@5i<IjeSC,O6U&5[[V*uk:4(g/ZTTn'](2M+05QCierArJsoBRt#P%b7X7c+J>"(5684)P'/Ro)0Zu1Qu`T9gTdLG,aap.IPtUcL3`C(F8Vp0fG]>UVI^\9d`7HU@LU_ALQTCW(hm#h231AQc3i7'Q*$GD%![,BoI)nqmgGn<f==7)9B3>rqW@e_Q;QO<#<C,m'QM!3[9``uA&7[:V;])t:dSoWd+RLj\;tKb9!qm2H'mM`F"#-Fb(:NR32A!ZQ%.5:2SG6:ESTb<5D6%BSdJCNF7MD1^TYg,s])K-n:fnj2X&9DEh$$_h]0_lm\/QJh`6B5.'f',=_aF1pP269^XOX5Vt2#PsYEXsm8%g-mAL6+jJdK^]&eMg&AC)+m.;h@KpQ$8p$mq.n"!6.M6gR.dc$2F_D"5W[<jXu7jtlF&?,4_r_O)%7S&h@.m\L#3*<J#Z1;qu(:L%/\>-mH#9HB4mQ7\X4?,Li*=`A1[qWWW;3h*mN`'oh4,*9/[;bIHXk$&YcOqq<)$KajB7,_n2X^Z\_2Pn!@_9i<iXcf<M7=NZ%H)f%OuT>A%@ah5o4r%e&KYPk3]J!n-[ThH2(EO07nVaAZA+aK?)@6n98Ksq)WEo-%1s:j:XDX)><0l%,=s(]';%*4";3hM@PNs!?>MDc%@Sj:<3^Tq>`7RDG7S2YaD:p=pGM[Htc=EZJom3GeoM_k.dAGEfW.giHk89r7)f5/<JV0uhVq)4665!E4D@:*7jM+b4-/4M52QPuj%R?g$L+If_`ndqN(/I=,1[S5,DKhWuDJd%$a"5J!d-upB2Pnm/E+.Yp&mBe9^*f8`u<+=,\osUrB=bsgQ-&F2P-?6$mQC3F=<4/,:%EZV2K`u$2]Qm^g?7$^TNn9!^lbe&QsAeZKsU'QB-jgS*A&t!/f1(>96`]/\1Fn0!Fj-iXU@J[F`U.@XR'NkPUD=.ip8E@?RdK0\,%95P)lD:##uH%)nWURsm:aOP#J"GKP<C]9r[fV:PV%H2T1pQG"4#O`#Ykhpf?Y?Gogfj0QLQgbk9K(\L;>cTiqo.nNj?,k7u(-&lm%+K-h+7sA@0Wl[6S_qKi).WBLmAY,qp`N5W&H>-$sdPVl@<LU)1qk[+/+f+ffED>[S7g%=&QbpQrLsK%Cib1S\dl*Yi!H[ba,=_i6%'V_@ZUG4SK:GEPX$AosH?0<*8'!>`aoZM*pg12bjQ/4'-]8WRJcWl`6D!mYND4f*'H/YTp=),9>YoI:M4:R*;5%<al$;<j$@-P*g%"JX+B\qP:\2Mn7nJ39:=dKu(=3l2S(-WhM-3-\uu3!I:L/Td)r_eGKe<U0@0L+rM_4XY6S^gt5eU%H+?Ddtk?9#P#^*::k\C0PP,%F9ia',oSgT;gKPWYS[bF)(>P]3k^gRfonm8M_=&QY$q&MnT3d(Ls,unr&i!*M4\Rn=LQcJA-.TH8Uuh1IGtodF+;\aEML4h)BWM-%,C5P2U8Ueg?\IZT9QDH\+WjK?PCRq$ghCE,7];9i7e%H!nD)g[OKL&pm7RN3;Z&TNOouqJ0!8^f,Yp1H`0!a2"@k4q/3/l-9#6XK%ZOVFp>$CJA'+0mER1L,2aGA$t$mpWT2_o5DE[0',V)Mt@K,9pUd>:PikX-\Y\<$^#el9bF`:prhmBd6-QoAAH'([uTBs(H&]nXp=%(!9t/YSj'JOgf.kS?F'E>,Ro^^oU(Lnfd>!KI,(m*tj[T)680Vop#651_AD^6-agJePqsqKLo;LOb5(%>$CDiPh&qi3*qGecOD+W%Vj3XQOlE;ij]L)fjUbi?)f,"LOt2uU-Q^6SKL@1C^8D*^>o9ad.]9u$)O[5#euI7d1qMa9.S(9G#o9(&"VN1<NZJ%U1kF^U!p9IF%/CoTuHb2k+Gs#(@PnL+h?>$UG$*\'59t<;-\BJ2IC]i(@P4R<jVsH=-4goB')q61>TiDI"!FX[;Q35?r1.uX2!U7\)#lYJcWo/\@%F<TltMIlu-&s.tV5IcfJ\rL9Rd=ii<1uq36$OK)[?(L%C.WH;18:Whr>]Lu2BpqY@q[bVjCXq8r>?bS0j?k9E&RSK;G`W4C*QTrM%UpO&(!Td"T(\$\r3EbhF-CAE`:[Z(mcAMc8WBh<D!(Fq1oruk)&M]re)Mr0#%!dkO%9B&C0MU;"hCAq.>uiZC!FW27`5q,S7o7WL%>toSN9WFf)^Jn'<hIL.0$[S^u'rr"]/.hhbm?(4(qC/3cl\Zp+<'m6#hBG7?#k(3Ln_!1Noh\dgEbrM[bY6nEl].a6C_?tX;Wb=h%V#bZ(EHs)qP(F9D;c*Uk6l6:TOh.=,8NN[MPC"k27EFTsKGQ#0jS2[h_XGR>pcm<M'\baO;qF`9J,6_64m5($hqQ/O9L+9:>:pN'%HcX$GCfku7h9XP;]M6Zp'_6,V7$9b3T(#H^_"9c#.=d^@VZrlGk?1a_LN;_e$t+?Ti#A)7hc<gE$*m'#mS+$O9dK[o[9sjdPlg`K%PpO0[5a%,F0SZ+#@/f(o7FO#-&Q3lb\e*.794XCOh%g].O\C"Zga]9-:GQlH'-L.s"F7uN[3BIYGL]=1R=5(j9>')"Z%-j?'1i$l%!5)@9Orju9HoL.V!p!@H$;oDG(j34n8_6N)e2Fch%#e(sePjID?e).(SD&50&<)J(7j@TY=dT%W"=mbhPTOT^VQJ,@8-FT]&e`$A%oT6@VJK]Ec+h"P]46GU28L?^_D,S;3PEk'mlW7jXqk>6eA`cGAc'cR#DmQ=ZAa@dsaR^VqV'geX3YL,f]V$O^G_g;`!N;MVRY,a6%/9EBZ(H8Xsd]PKSOn_XaNaAN5,i^)cOr(**iqUHsK+jY"OISj8eC72n;FH^e,]UoVKncgSJbM4)IgFaKaK*JE70:5%<Y2>8f`WnL%OKPJAD0j82/n`]gW%dOc$Y`8cQ"ic,_R!#+75#:<+X/(UOi11'k9OAEA@mZ@#`(\*(q1t@D9J#W9Km!="Xh_cg<qk$(UOoT9+'Z+%Cq]dL)j`RIf#nq8Q244E>YXo9.9bW_b_u+t:3)?1M+#/9MMPf8d6h)\80apiNb35SrBhV&N5:>R`&+=]+sTLdOU2g$a>d)i,K&]/%)]@fQh8hSEkXUBH.5s$A5e3!h;pgS`fSnZp`4>F`j5)1K1@AOrZW%6'E[2;DH'/K">fd*V^8-O++YCLDUn7`&Wq%GjYGP,fJ/[\&%Y1'ZtM3B9B)3ORuV=?!6O#9DKHKU-aB\Uat6u]\N9'&_j*:-k(S4SCc8N8,21-HAB8W4@2=-iOiXO6Y$0WUpF'%nq8CN\hO$RX0N%dN7Wmn"F:OhKYJF3k4Cgi<;iE,*LeLpA1ZQEdcu7j[;bG\.=\^9nrDL]JiBBP\oPWRSZP@1i+SRMXG#,,`*UOadl+ui(h;.UU(Q1%T_qA,AkeV'!WXa&1hYKUUc'oa=(;M'=p?5=)a$e,e->?P<De6^K5DOg4(:^>([iO"./kJ<VmSUCj@`LQZ&ug-fuGcI^a'H,hP;Yg%W\Ja^%Zta@12de$=cqi_bTaCBeQ-sZ*[6>Zng5r?/[e7-U^,CcR0RXcai3I<,-,(-CV\dP6r6g+C7dU\b/-')2sD47)=9J"+d(X2%&Fq1^,WV*!$:u\I('\'B1/FN!/=7T_2t8:c)_@8_@5Sh&)*d66N**Rt'C6@QM=X2kOo.te,k#E$oA?irSI,NSS[-`;"a0-DiGJLO%j]r,-Y9'DHOAgn.o@jtn*^8]p>LmLX!>=Q8?IR,Xe<L\C2&LD;7B(L1r+Y5gS;7?g@tGug:,"+9hpjFLn=Un`+=u`/pPNdjF'LT_%obC=C&oVX+*Z$,?0NQHkU#_`\JbB(IC96<pSJTG&OJEOB6&sIWE@4h.ZnGHq&]Brl_#^7:QJtj(#H>`d0XGO];/1L%dtOo0-7Jfg%V"uc/Kd;]h1:?W7]%f,Y;3<:f#`9?0`2OY2!4^0I=b_ClZBRsRgN8GAJn[#'q(3(V*mAL?&rAul7'l]?GiBLLZ\FcD\q8+7l`(=K%2sd)9PgA)1:rdhbWBRCfe>,1/;(EP5i3nktW&M*KZ67VoL%LJ""fa)h<5sb0f:_[kEA3';.4X<7VQEsL(#DG+rbOZ9`At5t+^CP-%JJ_6*iecM=CuTMF=!mCR_e;o9`r&6D*LFo`Jf#`@4u-^A?="1<1Tr:)0NoEAKEChRR%-oQiO)]AT'7\h"/g^3$S.^J$lC[26Y.mt%R"eF#0d)V%!g+YXkG42q7)U^o`4:c(63(<<fmn&BM+*QThLt!4Q*0fbUu[DW.b.p@)`'f]V@`(e`%5PkQaUM4[7!tZB`LAOU8g'R%H$jPPD,8M!U/rD=:oi4&'t_&kZ23N9[u-HOQNssW+n\+=@UL@34-5-uGBdFQ'oJ2G8leEebQaR(^J6LIR$i\$KD^lDhP$$lYp]_Z%1SV&,+RL-kgFEVc3hV5."_o^j4f:u.ah&WrW%nN>$k_X0/nV%o6+&HP]jEnND9@U"oN#3,AV(AKhnlCir"O:thMaq_(k'bWcA,g"%F=QBc[NJ3kblAN5F[iPHKihWUTA%i"ZpsN=4#E6sL)F)7PuR9PUCUa=J7E1c`s(*t\Eg(W*>)t\E'/e?+t0"WLn0)CMYFS?`K$=+%K7B+#'omHdj!m8N"[c1_71@h!1MWXi8oFIDkf;%l"fju-?l_1Z8GVUBZAU,B)(.rB<)N22H+VIcC956FRTcB2:lS4(#ans-Mc`>_%_j(lYE<d&OB]<,f;$b+J-#+5?c([tEF)&l1okIZ)(jcqKB%QWaiRs5(P7Y;BO`oq%AQ6bhO"a0R_Up^oaE<^a2-`'CXEB=ADQ?Js%]X)-(m0r.aicC\.3qQ-iC,G#;8[-/eqMeut+@>cKb]Pj8Pto9>.68f[6#[<NKqDCL#_r,$G@gaH`p/EM(q.l=-p/e?_aCi`;KUjT%-i3!Tk@d:>6LF^QcE'#6JSm&'kI#ZY6L^644rEJ0_E/DmCtDP#?8Y0XZ+>)XkP'Hi^KY!YFQqfAhQK`L^ANA<7obIam56$<BR4NH%pl_Pr:OY&nj\Y^"qTj>@41E_W3U=#LW0"p?p-IS)TnqV.s3,J66qKXCfDjk4]tds'H=_gp9rM5K%e)=bUS9q;aI>&YLIp2#6C*ZU%4ibf"GR@OQbhGD\?9nQJ[\<m.O`C_-4OFpD_i=GJ".f=oW><J]T96U8CApDA[If^*h4t(W\)K?"_s$A7"+/_Jk`k%&&2_(hL>IhB%c_+V8YL5s!XfgU-6@>u2,3f0eH$\:H-Q!tC9=$r8"ZXT,(J/.%<E>04'LlA^e/'@KJHH5<M$X/S%KXp5j?(^UL;$]_d$>8Mcs$["%BT2dibT^LchIQ6h\W0T<^a0:\#ER"0BPEG-0IA6:VB3$L":M"oF#1%$Q%BUOb?B4qiFWp1^ON%#eVN^')%Hs&"nAmq+<jZ:bNgRU%*3X4(gVQFG("@42S"Ib);^u#*2X`mTTgI5*<oK>_YBahW!J$75;9(GDL]Du:OF&,2S,lM#W'[GGk97:gV]8_Vg'8.fB`rYkKQN!B%Jk6NtUu`Yp#kNWd5(]Jna#?(<M[c*$SKisPF]1XN<=K`MW"J8uShlGXniFFIg0e5u_9nDSimgZ=mhJNgGcISn>-;-WLoYf%<3Du=%%6'6hHN@.l4fq2R4gPmVp\^o?bjK1G#`Y!@LbhQ=A&2rHp!rCmnsT^m2()s\c%7P>lP>FD_.XKa1?)R^HRii\"Lbq:Ftp]KG?RV,%1'lE!ltLc2'42Z9@3rqt#suec6b$\4+a.JoJrL_;QQb3NP`eV=D<)kCl7R%a!22\$)+qeFn2-,D.qOIKOVcApU1J5m$`-pTePQ2#%4<#"dM_"L-.k6r"fgOL`]GI1i_q(Tl?bTSc>#4$+!-,5'aUb7O'eF[$Q$oh!,QU0G?W^W3CC%.R76Uhk0PnP4:;;WJ6!`g(CQ=eJ%.<l\0A<C9#BU8f(;fB#:+R"fY,pVUp(.ca.0#?92VJK!P%M-pH=M'0L+Z$6./l>u/8`3s8hQe`6k()6Y-r6XU>Ch?pFpZ/Y<'W1H%,ZS79[Oh*m5,\,\IrKI:g[Mkg,%_[3(h&hD27<-eKpFea,D8(`.RZ$*CmVTAZl0.#+:fZU?A>3re/SIhjXDtI!NC?u#is'RU/;q4%+nBsc\eutSQIh!\C_?5M0W!?VR]5U<OHs@D/IIPPCcPW"?_[]LPZ77+Ul'h1'_2qa6q@q.0k+\&r1?TL2aNhGD:tqe10G4He.BQ%%1'liHH\--5Aai\g9lS%i:b/.P.'RLj'QS3q!+_Rm:SfW;KF,"Q<JlKL'F))YA1KnJ!eToM"Q6\NqtS]/d)-Ui$>BQ,$?Dm=N+dio%=0JQ!-58<J.*3lC7iE<YJ(p:2oW1jhf!/6.aNO[b.^i-Pp*YKsFdaGOH1&H1V#Y@/Jd=7@6<7-S3i5l^22kL4_c"oYZOKg#8_J'V%*[/?#i45h'g$fDr%KWA/$(kK))'b3!FLCI],V^'@e)E95/kSNRrE!IZZ.-]X";N=_a]k"r\Eonme9Dn1illuQ)Y2N9P"_iIbEZeb%CJ(gsimA>F4NGlrV$\C)WFj,30NmGGQnl^+c-EKG'h#K!kJ`u*#jj85[m6&GB)am->#$seKP:G,&F]h6=r\a=n:ERf!G$e7N($0=%_;^Hc+f\@@9Z"AQi>L%?"?9#:NHd?L('Lldk!be@anUk4e)RPC^I^gERd'-A^XmGu8IKK6.^<c8arjO1l&eg"/^MB(H&K%n\JG]p%P[n6R:!/f(W-8V37dXl6cO\Ed0G(FHO3VGXH4J"THuojjfn@%jYtAK%UA#3C2*oZt!b,,CLd;ti#&.kE6@p'jG.SXsd;&=Jd+h+*%$QK7:Rr1nZ#,hoo6&f`'#S>,%QHjj9Pm$In[lpHND*&53WCsql^jao?dbFW3YRUG]]NJ7V`M@38.lql(g[toY[/;*9LUKqs!/TIA%roZCM61S_fJ:n6M-E-ZPH2M!&K9cdTfS%*X948F<PNhE[$4oUIb#pJ;d_-)_KmR6<Jh@EM(OjQiDNChdXXtPpi/i\KfD[4Sd1A<k%oQ90rgE[58Tpo(IKgd1Q?$6"gL)[[3AFP^[E^C.J/!=MC)QlI\Yr)%`<8]#8#Bd^Lll`<ak1<![H9l-,V7Ht;K*jn0\>^DgZ"pGR%`LlU<NX),H`PmH4BKD_.bGbL#f2tZ/VqBf0KXnT!c<\K41OcNCKWM-aRNS_+8na@02nP#XEIq<OE^Q$_FL*nh6oZqu0i!6C^;[12%-6.G'8'[ou;LN4ieS74"%VO4*`mIY:;#O?[.(RNCKUU,kPB[SoWuP&f;q$R][?<0#Xn4d?+te\J=YVF^D6GImk=h,&E8\7TF-#f7%o!Du;'G0]iLh)<Vm\34e2=g+Zj94g,HBXPA(X+lMBo3rWKYA'mS=a'r6O&D)A+iBb$IT'Rfeur(&i@Bt.>+@rU7.*!@9?+!fE=IH%5iQS%:;L(8?)=ZtWY8?#K*R+H39Eb979(iF0KnNNf@!2L6HS>4&W54&H&?5L+^sC#2.[SL=PHD@P-D`WX[UHiboVS%?o.ctN,MK'%DbBZP-;]QZRds5meoDUg+<gU)_Q[pP)Bt\0./*(lWO#7%W_uGb"'D,G<2.B)!n!#kqR3@lDcg65O^KeT%ED`%-HQg@'$`WiA8m!T%c?BtOUC\;<(b2U#=5!+j."SLSg,V.IcuBT?D\VJ7&BfJ.$=YuFM^'WQHl36O2[,On^moE'>U6Ij7P'c8U*598-bNH9@8o;u[PS8l%&DMp^%6i+4UuY7f5tRY+,rdD@)O0gD_D83W)]6h[=cEO9.%<*2N,j#P_^EYSRls)i>=]=TUIC(&YI1MGN[YPJnIX:+:3qubkg%>]%"Q@lKRX'2dnR\WY0hoL?+1,AD)/m$Y6OMP)WuC5iX%qG,3e+7@6E?-rKhZ_1653#Y[3SJGD'UZ6[fIcVfqWqq(a\]$(T=Cn4GJH4%?_nJT*+;G<-!1Ebd<TY]X,Y?'ZJ&I,k,ot;)`0iG<J2V0(uE^cd&G86_1hLOg.DV0C@hUBTuc"\*Fn@`,M5U52.Gq9ms2:.8pdTN%P%Gcl;_l_;+t3X4LkZaFCLfkR'bM?-8I1=_3XA%$5c>..M'd';l0Tc%Kf4dHYD-g^1<LaGmnm_O:?8B,\.jqt6QfX"iPs?Icr\6m%X&7NEOb<#5B''YP=,F-mLumPUM\L`MgkERE!+MF=0V8j''DYe\OY2?Zj&9s6d5Fg_$?\Pe'2XrN$1ce0XfU`V"S/[gj+8kLecZO+%Z;ts;J@kl6:mR^\=P2nQC_18+=nI*;)P*HdnT&[4!GO$LHEJANW$&tK)FOa[1q".%@4b)SIsEC1>9aB&C4=(sWk`O8GFWYS8^O4T%EJ_#16oYDI8+2(O3e#L"B'8G!;Ds)%L#8>RHPdF2Tf]!L'K8D'1A:A7K'89n#)EjA9>l/$8(q^,CT%nRn0"tQ*,/MTb]%\L$GfcZ%@\^.don^\,d=JZ`G<2K-0[$s]>eHjHRINf]R2P"&%F0>D)KIBE)=MYg?ckPk3.f[P:mU/q+Op8sRP*9q5ue,m7l3Dp`0=#n!s*)R%.$0Z::9P-PKkG.W`_cG\!*pm*Pg[K+pe#f^IS2)[6UWmn:CIfT-Woc`#ul!\/tiT'OAD_Dh\WjNe(l,hjHpcEpP\18;K'`"SP!JJ%*m&HoQ]e]=o-u41VSd3#AHZO?,FXamU!@ou-`!L<9d"0o=G,T`%APd^JNT@I"e1re]4@cH]lrtW7'@X*0kU&M_2p.q&,q4<3YWL0%;_e@[=W.nQ$6VZ%6.f\cZmDtQ"H?23>@X94';k09+bpl5dV"nT<=j(bji*&]$.oUR$Xe<dE(8rBB;r`W(5nILf7dT=6C=c&:2b/P%)c&/s1bh/Qa0A;jL-'$kR6,Xb<iS9N2Y_`e$\8:,>fB!a;!$)te?KW\6j[h>0/DM>?s%_L_8=oZ.K`jb>Ht`n8B;7gOpEYa50?u1%+*'Irrn\^68P]R/-Y/&rV_s.6"=oo1.dG;uS<d[^c+&:tJe)SMU\?msP`\j_Qrr;K+-PhDi:`gM,TVeAq<I;q>>RC\b/U/YW=`:S%d:6.jfojT]:35CP_Eu>%Zn3DB"to"HD%Y'XX(r:ij>,(Q@?ShrW/nfH24E\^,q!^u=<&Z1Q*GQaUoRYR.LdZF=C[R*i\s`=Qa&]"%:5N_mR";4fDK_75c8aYa@MXbM-gVi*hG=?UcIj6R,?Yia8+Mq](23@/P_i*ga.7Og)A\k!1j0.GV\u:dY(m`h!D#TpZ_nkER#0?)%%\D[n7SL8Kc2rDoV$$MtVo;[tO<6DJ"isMg)!2r:TtWTRGbd5HWq\aL/EF-8&=L(T08+FA)ha:1@@-*fEPoe-@_[`H#SF^f:LMuU%TK^bd.A</;+etGJ_6=$;(>Ta(RLWm]V:'QI$dG!27Z+L:NfNSQ;ORU92LDC]6bH;hP<(.o33&.i7,+:`o9:Ro:^`DPSC4c8Tt;R^%EF``a1E^3bd<oS"M%NZU;aXZ5-:l9m-<S?&-:l49iH%tF)foZU\S>uQdDRT:8nU!FN&n!pR^S-;/gN:$8175<YY&.41hR@sJ68jX%`:04]=lF-nWaO]B23pAS#3KroL%`Ye$T8A$B(h5';$O_;=]G339*l0qFHoLD9h?_>^,BPod)=nGNDg-XMs^YE&a;\OCNR2HK#CB'%6+"[lMia%I9TYLc9X'W*"GG<b,W%*l"L<\-k%(u(JJ4If:9^,<PgI?_U;<?0E\O4^a[$GQ\k4>,nPnJS49I'mbN0B+AhuG\gL0cq%pZN0D4J<'J-"]kIFkjj17`%Ru[`uOA#0#<\KVh,IQEV2fnBNOm``u,LU8b1Co7SGJJ!Cu^hun\M+0A:O3]%&*G#]hF+_Q%uOO2Jg%:2"B588'>P8n]Q=jMfRA3,dqU2du=5)J7+.+_9M9_gOp%U$3_3aR70Y-PW@nGN>7YKI.gaW=+j\HZ:"S#C3X0n^?]--$n)+YbAAi%?F80!XQh6mlM,0@#h7;bhfEf>Bpt;[1Q\$*pO`6/hdI1+P0ro/A>TYN9cR5++tDR#H@8YZ*:)g8:RU@@b/2Fm5Y>aNBgnjQgR?Ig%O4MT(%:b;%'Ln[$[$a1Z9kfb_o.rbDRMVCQ2r\&$[E2+#J1)r.CJ(=qEmn3/'t-(oV:9KTBRabf;=`JFU$70Ok,/R6]l><Ff[r=S%8H6o!8q;SOa4HOYV\24`LE5>$1nsfe!CpOT.9V`MIjahC_(#q4mqPt,7cM+bKkdkR(245M;RXUnY;RT/anFU<Qu,6'1LAG^=GTeK%-jZBVg'XI:ij_%iD*o2E]&6(,MQ]aN"=nO^cZF92=>#`PO?4sK<p`<.,u+WlXL;&9`8uqMebM+!o)Q6PN(j=KK`;F^=R_ceH0#'0%Lb]YN0\Of2^^*lgh'ksZbO.,V_m*AS'2&!D3>%V_8(#]X>0Crq%0ndmh#1#`UQmj4aB"ZH.1;5/;0%&lA0b.26dgjG\Yokc%@#0`%^*5?L<aUoMPMZk1/7kCfo;m/iq)@L41o-=eJcq!VC6C&XFau_E.Io:Y"*2\@&d++Z>rAoH?N1q4H!:NqMmE`R]g/c@gD`=*=:p>I%K2`Qd)8;pmUG@nq]$s_YW.aVk@DF+u^lRc-0!.Xb9L256dsGB"$?,`eD'<CdJaP/,HHHo-C..<l69sX\.gj*1f&u8V2-.k+W@N_W%JP10T3gLa[?o8nPIT1Z43UoZ99?'&aH=3\j[pb.+<?N'1Jk54_p&l\9:+AN>29m"qMXD.o.VG5=.lA>$'oM!IedP*#G&4Qe3nLm(%Vl7NL&5V.6m0Z&+\0Ma%Q/eJ2^uVAt*7LYW#Yn]LVW=Zc"mH"9E'?(S(Icm6R_Hp:_(*EQE%kW:+CqM2r.1k)\kAp[EseB6.6]Li%O5sktQ%'>(Uh&:Y:`D\*PL\q<@#*7EA^@)lgi(\&54(F$KQ[Yk-d5H/O_f&!J\%(H$1^DES@iGo@V4[*MGDHU!fZBQ6_e,4,B3lW%B-B:Gp-06PUZodUo'aMDm;O>'Pp1F0Atc!BM:o[$hAN$`J=/Pa1Y@NW2n7NLONP^ET^^6_s3/7Pp^D%Ag@RcXnh?%(4!T\&^4a?)%)q3M#@@.Od9C]cW)E4.]RJ5n^CJd'SA`0>cRp$54_,;EsW(A%R8ZIKMHkcCdSi$okAOJl89uBIof0NJpo]q[I#gs!47R9tXbX-Z'%RCP7^).Z*tIU/5?;gGAMF;IH)GYm:uEBo;FIXjDY)[as1<V<^MH8CQ*X^QT3=QF"@!+O\\jWbKcBcRXm/W9VYi2TV/-dBek4:KIo%*@f5`a4?dnC)%^i@3gI]gUVFA:t3ENd$@7bZ4Uie_)R#C*-&(iG$61P=WE]4$E)8P$d:>k-(_Vp]*)X>!r5K4)L.5j;B"S98AM0U%3QA\m;f>4<;u/S8NFQa7%OT8*akcOPgh^[p\cm"PRVi/*N0UWE<61`QYHW;)#u9hF66U/fF`L61U7$b^DU0`3iH(;!r>@T:g7@\K%YZqkg7m+_fU5Y!Ta[$]qpKX?qoj5Q<>9G!(rR73uESX`r_Rh@Ekoe:4fQB1Hbj&G[Jga5l0Q%VV/?XTR9t.Q>lpC>O,:/a[NtDc&%Bqk6tCBpV9fX2m\BK9f1#bOp)3WiLceQ'_J*`htT^*DpMj=)5:6d'Puja`e/Ec>:/YY.Tm@!0pj;?A>/Nn&eLn+,A<e1bSRQPTX"%jC4eDK0gf7Gm:h.^!!G_`#u'2XtPT.]GCi1&d'\H1)#,8`%8;4&l"!HHnZ^3_$Z.(:9^1G!V,%tp%N39CCWO'6`(B"XOSRN9(0;g%-&q"q#,C^mbB%>h<Kme\;eo:+\X.p.,4%G'P"ORsmZ6_q+BoM*g;uHkKjoY[%pUuXHZ%mW!/)go/kE6I%hS"h1KYg]a<!S%=2V4u%WF.[uag2]S;R>k#3fD!K>DjfZLrLcWM!irpjUnJf!DKS,oOm)q/8Tt#ITjcn@8s@:`3QZQX:B'#8iHaK.hNJ$(HI#I=FQ)miI26:%_M2Tj(;W(?Y8a\i8ei[bbYDulNfd,!W6(HD.^:E[EN(Su$)3niP:kZ5dUWhbc$(ZrqB>&EX2cr8I^T0D$1&VoA-*X*#,(^reSS+O%&[_Sb"s5k6<bF+$XTh2_-k4UTLb=LceMnnhD'[.GXjoD(7_To"7/pUk81"PCeURr!@r$3]D2M@#:d-hNX:#O6;Bp<Yh6!ObOm[#L%X<s#Xf]=Iu7hErS9/9%(@V9ffUWf#B8NNp$k@.r/RZfR/X*I?J[9?jPXB&GZNR\A;P,h[ZPkJdEp"3BKFsf1KX$)D[`dO/ml3nlF%S:\`"C'Bg@C)WYlNRCo<81:'o^1s*;-t5Le+*/7!7T/k\+._Mp');m0nYllpUj-c'@C-ADLjdg(FgdCI/F"X&`<+k](Ak*<dYWB$%IF[V^12M?W-T/r''-M,SUc9aaa^MFc%Ai*Q6;o4N(KOcWAZOjk\FP/5P*F.f>7#'C*1\e4l)63/RYA8?"*iWmgm7<n":;J+l+IdI%`TU#uTeoe[%V9l`DE^D26uoEjdjdnI[jmb<e/)OJ!YIq`b1%^:V@6)5,Qf>blR'TX7"I9G>"'#?HES,\+q3&VK>SZS.i\^I)Lo%D%(,dm.Oj`ZLX_qn@e:AaB2WVVdE#^@Zk,()p]HS*uAK9rdKL/op<iCO.,Ae]23(0uKF<e2cd.^eEg/$p5'c%7PZ'm)h8-%/ffXQ:\%Z?8K^eOl^X^1tG5/#G$=b9Vm9X.!&h.<Gs*Y]j<M*R,iuggpp\HoH[K>P5L4d^Kh!+:hpuOb-/@JKSbM8o5/G'k;rDV7)14k[D@s%6kXCT#XKUG2I3P&P=WOk>DQ@VVpOa2(_r&3V!CW2N%2R/TaG5<?p%FhYZRa3#S<H>.P@HnfWC@s+rX&)Oj_;@1_7iekTPeX:>GXn%<6B0uRhA5)@AZE.PW5Dl:+H4:iIHCr]+MqJ$cH48<)FJ5_I5r0r6T5EbmKBoE1j^5r7$,,X<>1Bp_9mbb-oBMjEHbT#o3o,'MQYW%eC_TT9J_KeFMOXD'dOB'?]&N)8YdL\M==j'(BZX/6DnT)_(gMY![VZ8(.Cu$JGbW>mRA0&[XOW+5rcb5qY**&"d,4RpV[.]AoKf+%^t7@0gk[s*GqWV`6=OBN37mF7>jOF?-Wo;?5]Vn)0nFb5Y&'/o/(`tJWh$rQ?([n>TpBbA?1^.g0)HVoQ[OmsbAiOPGFTq=`^gt;%j't64`f+quY1c'0=)OP'.l5JuBH#,T)L\_*8)m425"A[ST;)G/3#]!n3LW!mHQ8"\fpnhb,c`pdr@[bs3Fa&"@"J=*fR]gH$kc'3%of,HOp,PWY#kJP_lZ4nOJ9-_TJocs4gRpO;Z@.`;rT5)ZcG;\7=0Bls)Bpt]iuAM?k]8TU.d-$6HP*#rS>4-7<cKrW#l/D\YLG9"%.flVAF[-`c?"K62\OT`BL`N,c8t<T:R?[KD*;u?(9(\3*$+L/RP59,Kf2`-k&q+)@b5g4P7'fp*F+>d`go\L^::sHD)B_LY_!G)K%89-4<N4k-+;K+/8pQAl$-PbFZ3:5X(VR7_R1>s@$PmLC*X%_.S^1"m(ng`,F,d/uj@!jcuEptP9,^>R\QFt?C$XP,%6/o4PM;G^2%UjI&20e_Z>Onc?O9737]fpDIGU%+gOb#FS?mudnn]LoOs[\X7Sng`&I)FZjW+"hiTd^</ESdJdM7LE$jA3Q%LbF:`sULOIk@'6'=%pS."DQXH([leq'-L*VopqRCi$'DcCaVhq:e98V![.?qs%A>pXodA`)n.C!5]9'hI7M<=X_p)38*')U`h-:edI$'q+(":It9)EkSL%Bb&7a6jnGTbsCjN3$Qgn8poX([,?89LrF]fNr\1("/Eha%6hsEHe=.[b^E*p.S)Xm/;D(VMf3cdB"Ano$f7VH65P$ei)AX$,@4aH%.08[$Hj?:LVBRR6Op)uXX-7qR\dJi1kYm'S>mSoB;i)8s%MB#E1.ek6<7]48A#HVu!Xc></jt2P=6XE<fC3OQ1'rj5U5"b.W?K*W%*)fHOZ\uiGR)#l([_6Pij:Uf&(u<_AM?QJT&<KHC+iN0#/-fXP)B]YT/k%088/4`9!#)rF,iXg2Xb>H.3!^)#;lc!nVca1=Op`nh%j4tHuVH)%<)V3:JZ:>]qe[c>5J@:`^d/+0%a8m6`$!%A<RjL[;WL^qpc>@'eJ"(<:LeX[GXXpW?fJ(kH.u4Q\I4,f:!<lKu5'I3?%63UTGTmMmhZng;jQL>RhJ.JnS:TQ(P'IR:Z28XtlmC;2(/g-rp4J3%)(3L)E29.OC_?3<+!YWC#9kcF,[M$r&c</&:l"c;PK[bt?%@3d]$;V6oW923[<2Ocsq;SdBQ0/fX7d3j4>%SB;23#0C%Z+U!@KMe>(0)BTWSI?^RTWAbsOL$&Djo`LIH$ltXd8<T%f@7kgAjsXi%5ST2J=M]dCclqAEGV$_&I3)E*$)3oQNJ-A%-<P4AdG\64Nb/gN<*TX#4\T,Ta'qs5%<R0T63XK2pCSi?D/Z(1MrSmK.8$lrHNSIF%KnV>3TTocm9QDi7TYk+I%OPA-3h,f;n\%G`l:7V3CnZlR^t7d:;m#=>-/tD-&=A24+W1^n7s,`:=W;$AeL.ckdXgd:WT&j"hQ-g4%#,`e>PEcO9&GOb@lD,2I1drl1#!hO\A8F)n`7gK;Bol%#CQX$=5WTR:YLW)PC*ZpP0bZ*_6tu#GA#:+h*to$@k(f<BR!iJOVktVR%C/@-/Y32eY27!L;@?VuV__rp*Au[ZiH)M(U3=_jtj7#)$!1#nbd[W.IkH3VL*i>pi<7W*;fIC9`IAOl.&YBYu4NoOWbqBcq^EjCh%_q;j0`#,%p7*d5"NQK)FdQ+Bl9O!9+I!i84c&k+^gBdU)&(AZu,hg/C%@@)AO4$B@.&7u-_4L?TXct+X*u"*c+aZg"3^JpiWF>./%Ulg7iRD,#8bVZBYA>Yb"0/K^`H'nsLaidB1$=7>]B^c`MhNO:op*Y-RBc#g!EMnGUW?K+$9X*Sh-<TamD&J&A>am-s!,*_ndrJ(C%gSupuE=53BjsPi%VbGI-60R@s[n\Kci+-"AIT^bJ4X>l4hEWTR536=PVh1+H/RL#n`'1n*RTdg<bR1_G,dRrV^JT<P`S"pMNqWnN%:pf$HqJtJHdbCQs6FiF`4cZ_-:3&QcU6cbT;h?)3Yu1"KQYAK,pfZ3l9(8%2R35,oG=qK8nKh<,1=PI's%%3%?7*7(@i:npIWV_o%Tn&\&.+O?C>0OF+jchH:K?4]oFsk[q+P!Ta5bVaR2NbFJ\XB$7Rl41`i@<&.\<Z(UoFq95mO>c9*[9ks\=(q;DJD,Z)EuS")7fNK%'p>!GB&[EoR.@='7@&YQ?/gm-6;2-;1QtX.DPh:Gm(MIl64c._ogZEAZKOr!VCd/?BI54gRi4VrO+md%F%eG?[H4F(O0Kp'_:U/U%0p<R#(0>KaU$;p$NHKAVZD4A^(;"*(nZU#/nHHmRBVQh70s[Z,qs<VUEBt<!4.LFHbUVVG'.YnrOB-+8[@h5:D5CB(8=4OI:%>a\%&k7ImB4FU[GhKV(1:XMCV<GPr%Ss=]%&RF?)Mr/T34)_b?8[Ao)G>&[@P\j/;GbdG`&Kq5NJsKK&$\N/;H]HJ1!:go+M56P*U$,i%neO^jXRoiRX*M',GT.OSKn*]]Y>$Wb'GpP'eZgW0$d-UUN.a[s0W4D'gfdp9d=DOS(o,g;!/X-X_,NgpD]-bc-Y?ErD#K0lNiqbJ%/>iK-(gRFn<7M.@+l-PuYsqu6klq5`/E,4j#5T,>c)$<#'X\ag_<;Y*QB&3h$o#g'80'&5Oi8O!N\PP?"s]_HdbS18b;u%M7lrOq%WgOSQ+N^=daJdRJ!?j6iHR"nD5Odne/t+/QKN`3'pbILh\]tcT"bM`'*il(\C"/nY*t*uW/XsBh$m<7r/3RNq)&(%F.D?J1B%(LJ%`"[k3OQhqVi'g'I;fNrE"Ts]A>N&38556$pChqGmTf'tMHsTT"%0r]/NG8Qj9jo*$D.&#h-DoE"7adj095+K,nmC+d'I:,<NGB#P%@;X1[P(HSZI8gEGK7s<!k5!Y5;j6[=&L=>:;;lVa"X&PHWTEiPRZJZ'=g!ee9XZ0R#_N=a`R-"H/K5]WgQSZiNK.8+)([LT\ir_P%'#Q#_>T^qO3(ej[_jTH@WYb8[@4*cGH)Tg)8\@1n&BFDTYE)S[PO#"-MFoBG3_HXX&4$o3O.qE>&IrC^NRA\eJ=-16]KM-)Z#gV%%VN^doDeGDl]'.FI%GBd26Re[rSuO'Sl/_glgl(G)R=X-8L&4iObgOiaXC>dqOE6#ll_>0<L6WGmX,GS"iEI9^C?+ta2/-?Y5]hDg%hfgQmMB]H=2!*+iR"^5B"b*>6fO"p$NcT`.rH37M8;d?l=GZoud6.rT5;]Ih7=6T[f/8-)`=__BOb:L#5_iVsmUL2=d3$m":EdS*%jN<K*RRRX(nMpBs[4*97(,e2fq=>d+f<rH/:=29geVW8&d6ERh)g,a"+N`^Yl`:a54kXdrLS;$E]&:pb>Hk0H1JghS=3>]^2oWC0%@uFETc(NuV[?H$k'u:V#qlhT&oq(M;[,M7=0A)%#g:nq)a9idOH*0^3@JZP]_ZWWK^B=q\W\el)rhUJXFk[YJO@n>PTnXq@J/Z9G%?rnUo%gik,J$rK_#Z+c=V'Bt)Peok)@@$!t$EaG`7qr[W`U>\,j5a>lLs0,;(DJLS+^cXMs118ML;R,Mq]\KS,_c9<pf;+AXpa27%H2a"^`DO7/F6_sZ1oK@L[48&qACIEC-JK8c[.sp6+lB+-ehLZ)Zo5EE4[r8!H9fEjN#U9>*@W82jJe$_bu,e:rFdlMFF\8!<!K%Q%ldt?&BoF%Y&UHeFMcc[t+\9\a!fI@-W903Ze8V."=+P<4@ai_?A]UE=@)a/O+lO^YN+A+k.o4i+JlJNCGJg+jIS4)=S/hdn^,uI9%&k!Wl!HFuFLbshg7P.0Y!X(nD/thg$RR.mf69'LP5:D36cs:=ZJOftW,ibTbXgjSbCU2VO2kq<s2r,3K:,Qn0$cT$tAB2kYB_Ui(%r*s#Q7V,1tpq0:(]d6Y,nm1Mue[2Eb'TuWXW"^.SDE#_"*Rf7Q9,nm2C"FQEK[\op9QGfu)C@&TJ4TH,9KAht6:aq5La@E^T7k\W%YUd)`BK1Qa@\ucA.q5)F<0KFEZ>Llj##6NM\"_C2<T(8/K_%g%]1Pagi)W-YB$foO!\Oeo"pOkCW0l9d%27'M+CRbgE7pm+V98sJ%J<=%T<S9"@MTfi[8E`PgNs:\<U^\F'MXMj3LF(AF$\VBBP"hq"rBQRVR6C>Jns#CJ@kd?ih!s6W\&h-^!G":^a_2V3>Vk7E-W:,X%K#hAKGV?obO3?+.oL_#`bElaAkZ/P5@RI@fnk+F3P#c%#VZC43#t-qB[&ckJRl6iB%],052GWRQ,Uq/"[.lQS9k&J_7(S[8T8l^?%<f@oj#n/'n,R+fDa*pGI2Lt`?h1KBSb!n]OOfZaa=p52gdog(-WabEJg3eFT0p&J*:^Jd.4]S;P)OWmbZI!D*67t]m'Qsuu5$pWR%D);Y%CHC]-U[\%2boej(OYBh;_`#10`1uY=GqPTs9UOa?;p7XA0VTbC1kDfsL72NF#t0$3e1a/A&4`JWA-IhX[t;$HHR9VhXOkjh%&9pakTNAIW:W8_,orfMRj.a:ti'K^U7?ui*jR=*2d0:^L#P/R[(C74b`FKlOA]%4'q?[=fZQY_!"=Ek-@&0.tV._I>4g:-?nY#"^%T@/h0E&iU@^-,oL+2beY`G2[SjR%hile-J8XfPg@DI-WEr-%i-s6bA$F_YK)mI':aq[^EUro`>@pQ]qe?N6Yre^pEXisPAUYPp2U%n%S8jq"a%Krp#R=?iC9As%7N`D=,K:SX'3c-bE#X~>%AI9_PrivateDataEnd